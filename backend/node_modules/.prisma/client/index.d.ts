
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Company
 * 
 */
export type Company = $Result.DefaultSelection<Prisma.$CompanyPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Rack
 * 
 */
export type Rack = $Result.DefaultSelection<Prisma.$RackPayload>
/**
 * Model RackInventory
 * 
 */
export type RackInventory = $Result.DefaultSelection<Prisma.$RackInventoryPayload>
/**
 * Model RackActivity
 * 
 */
export type RackActivity = $Result.DefaultSelection<Prisma.$RackActivityPayload>
/**
 * Model Shipment
 * 
 */
export type Shipment = $Result.DefaultSelection<Prisma.$ShipmentPayload>
/**
 * Model ShipmentBox
 * 
 */
export type ShipmentBox = $Result.DefaultSelection<Prisma.$ShipmentBoxPayload>
/**
 * Model Withdrawal
 * 
 */
export type Withdrawal = $Result.DefaultSelection<Prisma.$WithdrawalPayload>
/**
 * Model Expense
 * 
 */
export type Expense = $Result.DefaultSelection<Prisma.$ExpensePayload>
/**
 * Model InvoiceSettings
 * 
 */
export type InvoiceSettings = $Result.DefaultSelection<Prisma.$InvoiceSettingsPayload>
/**
 * Model BillingSettings
 * 
 */
export type BillingSettings = $Result.DefaultSelection<Prisma.$BillingSettingsPayload>
/**
 * Model ChargeType
 * 
 */
export type ChargeType = $Result.DefaultSelection<Prisma.$ChargeTypePayload>
/**
 * Model Invoice
 * 
 */
export type Invoice = $Result.DefaultSelection<Prisma.$InvoicePayload>
/**
 * Model InvoiceLineItem
 * 
 */
export type InvoiceLineItem = $Result.DefaultSelection<Prisma.$InvoiceLineItemPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model ShipmentCharges
 * 
 */
export type ShipmentCharges = $Result.DefaultSelection<Prisma.$ShipmentChargesPayload>
/**
 * Model CustomField
 * 
 */
export type CustomField = $Result.DefaultSelection<Prisma.$CustomFieldPayload>
/**
 * Model CustomFieldValue
 * 
 */
export type CustomFieldValue = $Result.DefaultSelection<Prisma.$CustomFieldValuePayload>
/**
 * Model ShipmentSettings
 * 
 */
export type ShipmentSettings = $Result.DefaultSelection<Prisma.$ShipmentSettingsPayload>
/**
 * Model TemplateSettings
 * 
 */
export type TemplateSettings = $Result.DefaultSelection<Prisma.$TemplateSettingsPayload>
/**
 * Model Permission
 * 
 */
export type Permission = $Result.DefaultSelection<Prisma.$PermissionPayload>
/**
 * Model RolePermission
 * 
 */
export type RolePermission = $Result.DefaultSelection<Prisma.$RolePermissionPayload>
/**
 * Model MovingJob
 * 
 */
export type MovingJob = $Result.DefaultSelection<Prisma.$MovingJobPayload>
/**
 * Model JobAssignment
 * 
 */
export type JobAssignment = $Result.DefaultSelection<Prisma.$JobAssignmentPayload>
/**
 * Model PackingMaterial
 * 
 */
export type PackingMaterial = $Result.DefaultSelection<Prisma.$PackingMaterialPayload>
/**
 * Model Vendor
 * 
 */
export type Vendor = $Result.DefaultSelection<Prisma.$VendorPayload>
/**
 * Model StockBatch
 * 
 */
export type StockBatch = $Result.DefaultSelection<Prisma.$StockBatchPayload>
/**
 * Model RackStockLevel
 * 
 */
export type RackStockLevel = $Result.DefaultSelection<Prisma.$RackStockLevelPayload>
/**
 * Model MaterialIssue
 * 
 */
export type MaterialIssue = $Result.DefaultSelection<Prisma.$MaterialIssuePayload>
/**
 * Model MaterialReturn
 * 
 */
export type MaterialReturn = $Result.DefaultSelection<Prisma.$MaterialReturnPayload>
/**
 * Model MaterialDamage
 * 
 */
export type MaterialDamage = $Result.DefaultSelection<Prisma.$MaterialDamagePayload>
/**
 * Model MaterialApproval
 * 
 */
export type MaterialApproval = $Result.DefaultSelection<Prisma.$MaterialApprovalPayload>
/**
 * Model JobCostSnapshot
 * 
 */
export type JobCostSnapshot = $Result.DefaultSelection<Prisma.$JobCostSnapshotPayload>
/**
 * Model SystemPlugin
 * 
 */
export type SystemPlugin = $Result.DefaultSelection<Prisma.$SystemPluginPayload>
/**
 * Model SystemPluginLog
 * 
 */
export type SystemPluginLog = $Result.DefaultSelection<Prisma.$SystemPluginLogPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Companies
 * const companies = await prisma.company.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Companies
   * const companies = await prisma.company.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.company`: Exposes CRUD operations for the **Company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.CompanyDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.rack`: Exposes CRUD operations for the **Rack** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Racks
    * const racks = await prisma.rack.findMany()
    * ```
    */
  get rack(): Prisma.RackDelegate<ExtArgs>;

  /**
   * `prisma.rackInventory`: Exposes CRUD operations for the **RackInventory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RackInventories
    * const rackInventories = await prisma.rackInventory.findMany()
    * ```
    */
  get rackInventory(): Prisma.RackInventoryDelegate<ExtArgs>;

  /**
   * `prisma.rackActivity`: Exposes CRUD operations for the **RackActivity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RackActivities
    * const rackActivities = await prisma.rackActivity.findMany()
    * ```
    */
  get rackActivity(): Prisma.RackActivityDelegate<ExtArgs>;

  /**
   * `prisma.shipment`: Exposes CRUD operations for the **Shipment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shipments
    * const shipments = await prisma.shipment.findMany()
    * ```
    */
  get shipment(): Prisma.ShipmentDelegate<ExtArgs>;

  /**
   * `prisma.shipmentBox`: Exposes CRUD operations for the **ShipmentBox** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShipmentBoxes
    * const shipmentBoxes = await prisma.shipmentBox.findMany()
    * ```
    */
  get shipmentBox(): Prisma.ShipmentBoxDelegate<ExtArgs>;

  /**
   * `prisma.withdrawal`: Exposes CRUD operations for the **Withdrawal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Withdrawals
    * const withdrawals = await prisma.withdrawal.findMany()
    * ```
    */
  get withdrawal(): Prisma.WithdrawalDelegate<ExtArgs>;

  /**
   * `prisma.expense`: Exposes CRUD operations for the **Expense** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Expenses
    * const expenses = await prisma.expense.findMany()
    * ```
    */
  get expense(): Prisma.ExpenseDelegate<ExtArgs>;

  /**
   * `prisma.invoiceSettings`: Exposes CRUD operations for the **InvoiceSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InvoiceSettings
    * const invoiceSettings = await prisma.invoiceSettings.findMany()
    * ```
    */
  get invoiceSettings(): Prisma.InvoiceSettingsDelegate<ExtArgs>;

  /**
   * `prisma.billingSettings`: Exposes CRUD operations for the **BillingSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BillingSettings
    * const billingSettings = await prisma.billingSettings.findMany()
    * ```
    */
  get billingSettings(): Prisma.BillingSettingsDelegate<ExtArgs>;

  /**
   * `prisma.chargeType`: Exposes CRUD operations for the **ChargeType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChargeTypes
    * const chargeTypes = await prisma.chargeType.findMany()
    * ```
    */
  get chargeType(): Prisma.ChargeTypeDelegate<ExtArgs>;

  /**
   * `prisma.invoice`: Exposes CRUD operations for the **Invoice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invoices
    * const invoices = await prisma.invoice.findMany()
    * ```
    */
  get invoice(): Prisma.InvoiceDelegate<ExtArgs>;

  /**
   * `prisma.invoiceLineItem`: Exposes CRUD operations for the **InvoiceLineItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InvoiceLineItems
    * const invoiceLineItems = await prisma.invoiceLineItem.findMany()
    * ```
    */
  get invoiceLineItem(): Prisma.InvoiceLineItemDelegate<ExtArgs>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs>;

  /**
   * `prisma.shipmentCharges`: Exposes CRUD operations for the **ShipmentCharges** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShipmentCharges
    * const shipmentCharges = await prisma.shipmentCharges.findMany()
    * ```
    */
  get shipmentCharges(): Prisma.ShipmentChargesDelegate<ExtArgs>;

  /**
   * `prisma.customField`: Exposes CRUD operations for the **CustomField** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CustomFields
    * const customFields = await prisma.customField.findMany()
    * ```
    */
  get customField(): Prisma.CustomFieldDelegate<ExtArgs>;

  /**
   * `prisma.customFieldValue`: Exposes CRUD operations for the **CustomFieldValue** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CustomFieldValues
    * const customFieldValues = await prisma.customFieldValue.findMany()
    * ```
    */
  get customFieldValue(): Prisma.CustomFieldValueDelegate<ExtArgs>;

  /**
   * `prisma.shipmentSettings`: Exposes CRUD operations for the **ShipmentSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShipmentSettings
    * const shipmentSettings = await prisma.shipmentSettings.findMany()
    * ```
    */
  get shipmentSettings(): Prisma.ShipmentSettingsDelegate<ExtArgs>;

  /**
   * `prisma.templateSettings`: Exposes CRUD operations for the **TemplateSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TemplateSettings
    * const templateSettings = await prisma.templateSettings.findMany()
    * ```
    */
  get templateSettings(): Prisma.TemplateSettingsDelegate<ExtArgs>;

  /**
   * `prisma.permission`: Exposes CRUD operations for the **Permission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permission.findMany()
    * ```
    */
  get permission(): Prisma.PermissionDelegate<ExtArgs>;

  /**
   * `prisma.rolePermission`: Exposes CRUD operations for the **RolePermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RolePermissions
    * const rolePermissions = await prisma.rolePermission.findMany()
    * ```
    */
  get rolePermission(): Prisma.RolePermissionDelegate<ExtArgs>;

  /**
   * `prisma.movingJob`: Exposes CRUD operations for the **MovingJob** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MovingJobs
    * const movingJobs = await prisma.movingJob.findMany()
    * ```
    */
  get movingJob(): Prisma.MovingJobDelegate<ExtArgs>;

  /**
   * `prisma.jobAssignment`: Exposes CRUD operations for the **JobAssignment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobAssignments
    * const jobAssignments = await prisma.jobAssignment.findMany()
    * ```
    */
  get jobAssignment(): Prisma.JobAssignmentDelegate<ExtArgs>;

  /**
   * `prisma.packingMaterial`: Exposes CRUD operations for the **PackingMaterial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PackingMaterials
    * const packingMaterials = await prisma.packingMaterial.findMany()
    * ```
    */
  get packingMaterial(): Prisma.PackingMaterialDelegate<ExtArgs>;

  /**
   * `prisma.vendor`: Exposes CRUD operations for the **Vendor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vendors
    * const vendors = await prisma.vendor.findMany()
    * ```
    */
  get vendor(): Prisma.VendorDelegate<ExtArgs>;

  /**
   * `prisma.stockBatch`: Exposes CRUD operations for the **StockBatch** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockBatches
    * const stockBatches = await prisma.stockBatch.findMany()
    * ```
    */
  get stockBatch(): Prisma.StockBatchDelegate<ExtArgs>;

  /**
   * `prisma.rackStockLevel`: Exposes CRUD operations for the **RackStockLevel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RackStockLevels
    * const rackStockLevels = await prisma.rackStockLevel.findMany()
    * ```
    */
  get rackStockLevel(): Prisma.RackStockLevelDelegate<ExtArgs>;

  /**
   * `prisma.materialIssue`: Exposes CRUD operations for the **MaterialIssue** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MaterialIssues
    * const materialIssues = await prisma.materialIssue.findMany()
    * ```
    */
  get materialIssue(): Prisma.MaterialIssueDelegate<ExtArgs>;

  /**
   * `prisma.materialReturn`: Exposes CRUD operations for the **MaterialReturn** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MaterialReturns
    * const materialReturns = await prisma.materialReturn.findMany()
    * ```
    */
  get materialReturn(): Prisma.MaterialReturnDelegate<ExtArgs>;

  /**
   * `prisma.materialDamage`: Exposes CRUD operations for the **MaterialDamage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MaterialDamages
    * const materialDamages = await prisma.materialDamage.findMany()
    * ```
    */
  get materialDamage(): Prisma.MaterialDamageDelegate<ExtArgs>;

  /**
   * `prisma.materialApproval`: Exposes CRUD operations for the **MaterialApproval** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MaterialApprovals
    * const materialApprovals = await prisma.materialApproval.findMany()
    * ```
    */
  get materialApproval(): Prisma.MaterialApprovalDelegate<ExtArgs>;

  /**
   * `prisma.jobCostSnapshot`: Exposes CRUD operations for the **JobCostSnapshot** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobCostSnapshots
    * const jobCostSnapshots = await prisma.jobCostSnapshot.findMany()
    * ```
    */
  get jobCostSnapshot(): Prisma.JobCostSnapshotDelegate<ExtArgs>;

  /**
   * `prisma.systemPlugin`: Exposes CRUD operations for the **SystemPlugin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SystemPlugins
    * const systemPlugins = await prisma.systemPlugin.findMany()
    * ```
    */
  get systemPlugin(): Prisma.SystemPluginDelegate<ExtArgs>;

  /**
   * `prisma.systemPluginLog`: Exposes CRUD operations for the **SystemPluginLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SystemPluginLogs
    * const systemPluginLogs = await prisma.systemPluginLog.findMany()
    * ```
    */
  get systemPluginLog(): Prisma.SystemPluginLogDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Company: 'Company',
    User: 'User',
    Rack: 'Rack',
    RackInventory: 'RackInventory',
    RackActivity: 'RackActivity',
    Shipment: 'Shipment',
    ShipmentBox: 'ShipmentBox',
    Withdrawal: 'Withdrawal',
    Expense: 'Expense',
    InvoiceSettings: 'InvoiceSettings',
    BillingSettings: 'BillingSettings',
    ChargeType: 'ChargeType',
    Invoice: 'Invoice',
    InvoiceLineItem: 'InvoiceLineItem',
    Payment: 'Payment',
    ShipmentCharges: 'ShipmentCharges',
    CustomField: 'CustomField',
    CustomFieldValue: 'CustomFieldValue',
    ShipmentSettings: 'ShipmentSettings',
    TemplateSettings: 'TemplateSettings',
    Permission: 'Permission',
    RolePermission: 'RolePermission',
    MovingJob: 'MovingJob',
    JobAssignment: 'JobAssignment',
    PackingMaterial: 'PackingMaterial',
    Vendor: 'Vendor',
    StockBatch: 'StockBatch',
    RackStockLevel: 'RackStockLevel',
    MaterialIssue: 'MaterialIssue',
    MaterialReturn: 'MaterialReturn',
    MaterialDamage: 'MaterialDamage',
    MaterialApproval: 'MaterialApproval',
    JobCostSnapshot: 'JobCostSnapshot',
    SystemPlugin: 'SystemPlugin',
    SystemPluginLog: 'SystemPluginLog'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "company" | "user" | "rack" | "rackInventory" | "rackActivity" | "shipment" | "shipmentBox" | "withdrawal" | "expense" | "invoiceSettings" | "billingSettings" | "chargeType" | "invoice" | "invoiceLineItem" | "payment" | "shipmentCharges" | "customField" | "customFieldValue" | "shipmentSettings" | "templateSettings" | "permission" | "rolePermission" | "movingJob" | "jobAssignment" | "packingMaterial" | "vendor" | "stockBatch" | "rackStockLevel" | "materialIssue" | "materialReturn" | "materialDamage" | "materialApproval" | "jobCostSnapshot" | "systemPlugin" | "systemPluginLog"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Company: {
        payload: Prisma.$CompanyPayload<ExtArgs>
        fields: Prisma.CompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findFirst: {
            args: Prisma.CompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findMany: {
            args: Prisma.CompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          create: {
            args: Prisma.CompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          createMany: {
            args: Prisma.CompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CompanyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          delete: {
            args: Prisma.CompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          update: {
            args: Prisma.CompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          deleteMany: {
            args: Prisma.CompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.CompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Rack: {
        payload: Prisma.$RackPayload<ExtArgs>
        fields: Prisma.RackFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RackFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RackFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackPayload>
          }
          findFirst: {
            args: Prisma.RackFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RackFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackPayload>
          }
          findMany: {
            args: Prisma.RackFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackPayload>[]
          }
          create: {
            args: Prisma.RackCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackPayload>
          }
          createMany: {
            args: Prisma.RackCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RackCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackPayload>[]
          }
          delete: {
            args: Prisma.RackDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackPayload>
          }
          update: {
            args: Prisma.RackUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackPayload>
          }
          deleteMany: {
            args: Prisma.RackDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RackUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RackUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackPayload>
          }
          aggregate: {
            args: Prisma.RackAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRack>
          }
          groupBy: {
            args: Prisma.RackGroupByArgs<ExtArgs>
            result: $Utils.Optional<RackGroupByOutputType>[]
          }
          count: {
            args: Prisma.RackCountArgs<ExtArgs>
            result: $Utils.Optional<RackCountAggregateOutputType> | number
          }
        }
      }
      RackInventory: {
        payload: Prisma.$RackInventoryPayload<ExtArgs>
        fields: Prisma.RackInventoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RackInventoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackInventoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RackInventoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackInventoryPayload>
          }
          findFirst: {
            args: Prisma.RackInventoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackInventoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RackInventoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackInventoryPayload>
          }
          findMany: {
            args: Prisma.RackInventoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackInventoryPayload>[]
          }
          create: {
            args: Prisma.RackInventoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackInventoryPayload>
          }
          createMany: {
            args: Prisma.RackInventoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RackInventoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackInventoryPayload>[]
          }
          delete: {
            args: Prisma.RackInventoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackInventoryPayload>
          }
          update: {
            args: Prisma.RackInventoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackInventoryPayload>
          }
          deleteMany: {
            args: Prisma.RackInventoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RackInventoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RackInventoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackInventoryPayload>
          }
          aggregate: {
            args: Prisma.RackInventoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRackInventory>
          }
          groupBy: {
            args: Prisma.RackInventoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<RackInventoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.RackInventoryCountArgs<ExtArgs>
            result: $Utils.Optional<RackInventoryCountAggregateOutputType> | number
          }
        }
      }
      RackActivity: {
        payload: Prisma.$RackActivityPayload<ExtArgs>
        fields: Prisma.RackActivityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RackActivityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackActivityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RackActivityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackActivityPayload>
          }
          findFirst: {
            args: Prisma.RackActivityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackActivityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RackActivityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackActivityPayload>
          }
          findMany: {
            args: Prisma.RackActivityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackActivityPayload>[]
          }
          create: {
            args: Prisma.RackActivityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackActivityPayload>
          }
          createMany: {
            args: Prisma.RackActivityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RackActivityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackActivityPayload>[]
          }
          delete: {
            args: Prisma.RackActivityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackActivityPayload>
          }
          update: {
            args: Prisma.RackActivityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackActivityPayload>
          }
          deleteMany: {
            args: Prisma.RackActivityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RackActivityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RackActivityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackActivityPayload>
          }
          aggregate: {
            args: Prisma.RackActivityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRackActivity>
          }
          groupBy: {
            args: Prisma.RackActivityGroupByArgs<ExtArgs>
            result: $Utils.Optional<RackActivityGroupByOutputType>[]
          }
          count: {
            args: Prisma.RackActivityCountArgs<ExtArgs>
            result: $Utils.Optional<RackActivityCountAggregateOutputType> | number
          }
        }
      }
      Shipment: {
        payload: Prisma.$ShipmentPayload<ExtArgs>
        fields: Prisma.ShipmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShipmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShipmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          findFirst: {
            args: Prisma.ShipmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShipmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          findMany: {
            args: Prisma.ShipmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>[]
          }
          create: {
            args: Prisma.ShipmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          createMany: {
            args: Prisma.ShipmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShipmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>[]
          }
          delete: {
            args: Prisma.ShipmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          update: {
            args: Prisma.ShipmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          deleteMany: {
            args: Prisma.ShipmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShipmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ShipmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentPayload>
          }
          aggregate: {
            args: Prisma.ShipmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShipment>
          }
          groupBy: {
            args: Prisma.ShipmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShipmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShipmentCountArgs<ExtArgs>
            result: $Utils.Optional<ShipmentCountAggregateOutputType> | number
          }
        }
      }
      ShipmentBox: {
        payload: Prisma.$ShipmentBoxPayload<ExtArgs>
        fields: Prisma.ShipmentBoxFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShipmentBoxFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentBoxPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShipmentBoxFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentBoxPayload>
          }
          findFirst: {
            args: Prisma.ShipmentBoxFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentBoxPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShipmentBoxFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentBoxPayload>
          }
          findMany: {
            args: Prisma.ShipmentBoxFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentBoxPayload>[]
          }
          create: {
            args: Prisma.ShipmentBoxCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentBoxPayload>
          }
          createMany: {
            args: Prisma.ShipmentBoxCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShipmentBoxCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentBoxPayload>[]
          }
          delete: {
            args: Prisma.ShipmentBoxDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentBoxPayload>
          }
          update: {
            args: Prisma.ShipmentBoxUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentBoxPayload>
          }
          deleteMany: {
            args: Prisma.ShipmentBoxDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShipmentBoxUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ShipmentBoxUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentBoxPayload>
          }
          aggregate: {
            args: Prisma.ShipmentBoxAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShipmentBox>
          }
          groupBy: {
            args: Prisma.ShipmentBoxGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShipmentBoxGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShipmentBoxCountArgs<ExtArgs>
            result: $Utils.Optional<ShipmentBoxCountAggregateOutputType> | number
          }
        }
      }
      Withdrawal: {
        payload: Prisma.$WithdrawalPayload<ExtArgs>
        fields: Prisma.WithdrawalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WithdrawalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WithdrawalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WithdrawalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WithdrawalPayload>
          }
          findFirst: {
            args: Prisma.WithdrawalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WithdrawalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WithdrawalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WithdrawalPayload>
          }
          findMany: {
            args: Prisma.WithdrawalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WithdrawalPayload>[]
          }
          create: {
            args: Prisma.WithdrawalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WithdrawalPayload>
          }
          createMany: {
            args: Prisma.WithdrawalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WithdrawalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WithdrawalPayload>[]
          }
          delete: {
            args: Prisma.WithdrawalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WithdrawalPayload>
          }
          update: {
            args: Prisma.WithdrawalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WithdrawalPayload>
          }
          deleteMany: {
            args: Prisma.WithdrawalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WithdrawalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WithdrawalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WithdrawalPayload>
          }
          aggregate: {
            args: Prisma.WithdrawalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWithdrawal>
          }
          groupBy: {
            args: Prisma.WithdrawalGroupByArgs<ExtArgs>
            result: $Utils.Optional<WithdrawalGroupByOutputType>[]
          }
          count: {
            args: Prisma.WithdrawalCountArgs<ExtArgs>
            result: $Utils.Optional<WithdrawalCountAggregateOutputType> | number
          }
        }
      }
      Expense: {
        payload: Prisma.$ExpensePayload<ExtArgs>
        fields: Prisma.ExpenseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ExpenseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ExpenseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          findFirst: {
            args: Prisma.ExpenseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ExpenseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          findMany: {
            args: Prisma.ExpenseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>[]
          }
          create: {
            args: Prisma.ExpenseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          createMany: {
            args: Prisma.ExpenseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ExpenseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>[]
          }
          delete: {
            args: Prisma.ExpenseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          update: {
            args: Prisma.ExpenseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          deleteMany: {
            args: Prisma.ExpenseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ExpenseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ExpenseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpensePayload>
          }
          aggregate: {
            args: Prisma.ExpenseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateExpense>
          }
          groupBy: {
            args: Prisma.ExpenseGroupByArgs<ExtArgs>
            result: $Utils.Optional<ExpenseGroupByOutputType>[]
          }
          count: {
            args: Prisma.ExpenseCountArgs<ExtArgs>
            result: $Utils.Optional<ExpenseCountAggregateOutputType> | number
          }
        }
      }
      InvoiceSettings: {
        payload: Prisma.$InvoiceSettingsPayload<ExtArgs>
        fields: Prisma.InvoiceSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          findFirst: {
            args: Prisma.InvoiceSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          findMany: {
            args: Prisma.InvoiceSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>[]
          }
          create: {
            args: Prisma.InvoiceSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          createMany: {
            args: Prisma.InvoiceSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvoiceSettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>[]
          }
          delete: {
            args: Prisma.InvoiceSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          update: {
            args: Prisma.InvoiceSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          deleteMany: {
            args: Prisma.InvoiceSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InvoiceSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          aggregate: {
            args: Prisma.InvoiceSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoiceSettings>
          }
          groupBy: {
            args: Prisma.InvoiceSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceSettingsCountAggregateOutputType> | number
          }
        }
      }
      BillingSettings: {
        payload: Prisma.$BillingSettingsPayload<ExtArgs>
        fields: Prisma.BillingSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BillingSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BillingSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingSettingsPayload>
          }
          findFirst: {
            args: Prisma.BillingSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BillingSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingSettingsPayload>
          }
          findMany: {
            args: Prisma.BillingSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingSettingsPayload>[]
          }
          create: {
            args: Prisma.BillingSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingSettingsPayload>
          }
          createMany: {
            args: Prisma.BillingSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BillingSettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingSettingsPayload>[]
          }
          delete: {
            args: Prisma.BillingSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingSettingsPayload>
          }
          update: {
            args: Prisma.BillingSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingSettingsPayload>
          }
          deleteMany: {
            args: Prisma.BillingSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BillingSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BillingSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingSettingsPayload>
          }
          aggregate: {
            args: Prisma.BillingSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBillingSettings>
          }
          groupBy: {
            args: Prisma.BillingSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<BillingSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.BillingSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<BillingSettingsCountAggregateOutputType> | number
          }
        }
      }
      ChargeType: {
        payload: Prisma.$ChargeTypePayload<ExtArgs>
        fields: Prisma.ChargeTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChargeTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChargeTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChargeTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChargeTypePayload>
          }
          findFirst: {
            args: Prisma.ChargeTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChargeTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChargeTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChargeTypePayload>
          }
          findMany: {
            args: Prisma.ChargeTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChargeTypePayload>[]
          }
          create: {
            args: Prisma.ChargeTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChargeTypePayload>
          }
          createMany: {
            args: Prisma.ChargeTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChargeTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChargeTypePayload>[]
          }
          delete: {
            args: Prisma.ChargeTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChargeTypePayload>
          }
          update: {
            args: Prisma.ChargeTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChargeTypePayload>
          }
          deleteMany: {
            args: Prisma.ChargeTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChargeTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChargeTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChargeTypePayload>
          }
          aggregate: {
            args: Prisma.ChargeTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChargeType>
          }
          groupBy: {
            args: Prisma.ChargeTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChargeTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChargeTypeCountArgs<ExtArgs>
            result: $Utils.Optional<ChargeTypeCountAggregateOutputType> | number
          }
        }
      }
      Invoice: {
        payload: Prisma.$InvoicePayload<ExtArgs>
        fields: Prisma.InvoiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findFirst: {
            args: Prisma.InvoiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findMany: {
            args: Prisma.InvoiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          create: {
            args: Prisma.InvoiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          createMany: {
            args: Prisma.InvoiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvoiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          delete: {
            args: Prisma.InvoiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          update: {
            args: Prisma.InvoiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          deleteMany: {
            args: Prisma.InvoiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InvoiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          aggregate: {
            args: Prisma.InvoiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoice>
          }
          groupBy: {
            args: Prisma.InvoiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceCountAggregateOutputType> | number
          }
        }
      }
      InvoiceLineItem: {
        payload: Prisma.$InvoiceLineItemPayload<ExtArgs>
        fields: Prisma.InvoiceLineItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceLineItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceLineItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceLineItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceLineItemPayload>
          }
          findFirst: {
            args: Prisma.InvoiceLineItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceLineItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceLineItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceLineItemPayload>
          }
          findMany: {
            args: Prisma.InvoiceLineItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceLineItemPayload>[]
          }
          create: {
            args: Prisma.InvoiceLineItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceLineItemPayload>
          }
          createMany: {
            args: Prisma.InvoiceLineItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvoiceLineItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceLineItemPayload>[]
          }
          delete: {
            args: Prisma.InvoiceLineItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceLineItemPayload>
          }
          update: {
            args: Prisma.InvoiceLineItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceLineItemPayload>
          }
          deleteMany: {
            args: Prisma.InvoiceLineItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceLineItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InvoiceLineItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceLineItemPayload>
          }
          aggregate: {
            args: Prisma.InvoiceLineItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoiceLineItem>
          }
          groupBy: {
            args: Prisma.InvoiceLineItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceLineItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceLineItemCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceLineItemCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      ShipmentCharges: {
        payload: Prisma.$ShipmentChargesPayload<ExtArgs>
        fields: Prisma.ShipmentChargesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShipmentChargesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentChargesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShipmentChargesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentChargesPayload>
          }
          findFirst: {
            args: Prisma.ShipmentChargesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentChargesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShipmentChargesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentChargesPayload>
          }
          findMany: {
            args: Prisma.ShipmentChargesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentChargesPayload>[]
          }
          create: {
            args: Prisma.ShipmentChargesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentChargesPayload>
          }
          createMany: {
            args: Prisma.ShipmentChargesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShipmentChargesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentChargesPayload>[]
          }
          delete: {
            args: Prisma.ShipmentChargesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentChargesPayload>
          }
          update: {
            args: Prisma.ShipmentChargesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentChargesPayload>
          }
          deleteMany: {
            args: Prisma.ShipmentChargesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShipmentChargesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ShipmentChargesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentChargesPayload>
          }
          aggregate: {
            args: Prisma.ShipmentChargesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShipmentCharges>
          }
          groupBy: {
            args: Prisma.ShipmentChargesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShipmentChargesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShipmentChargesCountArgs<ExtArgs>
            result: $Utils.Optional<ShipmentChargesCountAggregateOutputType> | number
          }
        }
      }
      CustomField: {
        payload: Prisma.$CustomFieldPayload<ExtArgs>
        fields: Prisma.CustomFieldFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomFieldFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomFieldFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldPayload>
          }
          findFirst: {
            args: Prisma.CustomFieldFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomFieldFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldPayload>
          }
          findMany: {
            args: Prisma.CustomFieldFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldPayload>[]
          }
          create: {
            args: Prisma.CustomFieldCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldPayload>
          }
          createMany: {
            args: Prisma.CustomFieldCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomFieldCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldPayload>[]
          }
          delete: {
            args: Prisma.CustomFieldDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldPayload>
          }
          update: {
            args: Prisma.CustomFieldUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldPayload>
          }
          deleteMany: {
            args: Prisma.CustomFieldDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomFieldUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CustomFieldUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldPayload>
          }
          aggregate: {
            args: Prisma.CustomFieldAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomField>
          }
          groupBy: {
            args: Prisma.CustomFieldGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomFieldGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomFieldCountArgs<ExtArgs>
            result: $Utils.Optional<CustomFieldCountAggregateOutputType> | number
          }
        }
      }
      CustomFieldValue: {
        payload: Prisma.$CustomFieldValuePayload<ExtArgs>
        fields: Prisma.CustomFieldValueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomFieldValueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldValuePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomFieldValueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldValuePayload>
          }
          findFirst: {
            args: Prisma.CustomFieldValueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldValuePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomFieldValueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldValuePayload>
          }
          findMany: {
            args: Prisma.CustomFieldValueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldValuePayload>[]
          }
          create: {
            args: Prisma.CustomFieldValueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldValuePayload>
          }
          createMany: {
            args: Prisma.CustomFieldValueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomFieldValueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldValuePayload>[]
          }
          delete: {
            args: Prisma.CustomFieldValueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldValuePayload>
          }
          update: {
            args: Prisma.CustomFieldValueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldValuePayload>
          }
          deleteMany: {
            args: Prisma.CustomFieldValueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomFieldValueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CustomFieldValueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldValuePayload>
          }
          aggregate: {
            args: Prisma.CustomFieldValueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomFieldValue>
          }
          groupBy: {
            args: Prisma.CustomFieldValueGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomFieldValueGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomFieldValueCountArgs<ExtArgs>
            result: $Utils.Optional<CustomFieldValueCountAggregateOutputType> | number
          }
        }
      }
      ShipmentSettings: {
        payload: Prisma.$ShipmentSettingsPayload<ExtArgs>
        fields: Prisma.ShipmentSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShipmentSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShipmentSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentSettingsPayload>
          }
          findFirst: {
            args: Prisma.ShipmentSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShipmentSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentSettingsPayload>
          }
          findMany: {
            args: Prisma.ShipmentSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentSettingsPayload>[]
          }
          create: {
            args: Prisma.ShipmentSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentSettingsPayload>
          }
          createMany: {
            args: Prisma.ShipmentSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShipmentSettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentSettingsPayload>[]
          }
          delete: {
            args: Prisma.ShipmentSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentSettingsPayload>
          }
          update: {
            args: Prisma.ShipmentSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentSettingsPayload>
          }
          deleteMany: {
            args: Prisma.ShipmentSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShipmentSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ShipmentSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShipmentSettingsPayload>
          }
          aggregate: {
            args: Prisma.ShipmentSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShipmentSettings>
          }
          groupBy: {
            args: Prisma.ShipmentSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShipmentSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShipmentSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<ShipmentSettingsCountAggregateOutputType> | number
          }
        }
      }
      TemplateSettings: {
        payload: Prisma.$TemplateSettingsPayload<ExtArgs>
        fields: Prisma.TemplateSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TemplateSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplateSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TemplateSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplateSettingsPayload>
          }
          findFirst: {
            args: Prisma.TemplateSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplateSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TemplateSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplateSettingsPayload>
          }
          findMany: {
            args: Prisma.TemplateSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplateSettingsPayload>[]
          }
          create: {
            args: Prisma.TemplateSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplateSettingsPayload>
          }
          createMany: {
            args: Prisma.TemplateSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TemplateSettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplateSettingsPayload>[]
          }
          delete: {
            args: Prisma.TemplateSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplateSettingsPayload>
          }
          update: {
            args: Prisma.TemplateSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplateSettingsPayload>
          }
          deleteMany: {
            args: Prisma.TemplateSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TemplateSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TemplateSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplateSettingsPayload>
          }
          aggregate: {
            args: Prisma.TemplateSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTemplateSettings>
          }
          groupBy: {
            args: Prisma.TemplateSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TemplateSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.TemplateSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<TemplateSettingsCountAggregateOutputType> | number
          }
        }
      }
      Permission: {
        payload: Prisma.$PermissionPayload<ExtArgs>
        fields: Prisma.PermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findFirst: {
            args: Prisma.PermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findMany: {
            args: Prisma.PermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          create: {
            args: Prisma.PermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          createMany: {
            args: Prisma.PermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          delete: {
            args: Prisma.PermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          update: {
            args: Prisma.PermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          deleteMany: {
            args: Prisma.PermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          aggregate: {
            args: Prisma.PermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermission>
          }
          groupBy: {
            args: Prisma.PermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermissionCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionCountAggregateOutputType> | number
          }
        }
      }
      RolePermission: {
        payload: Prisma.$RolePermissionPayload<ExtArgs>
        fields: Prisma.RolePermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolePermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolePermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          findFirst: {
            args: Prisma.RolePermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolePermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          findMany: {
            args: Prisma.RolePermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>[]
          }
          create: {
            args: Prisma.RolePermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          createMany: {
            args: Prisma.RolePermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RolePermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>[]
          }
          delete: {
            args: Prisma.RolePermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          update: {
            args: Prisma.RolePermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          deleteMany: {
            args: Prisma.RolePermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolePermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RolePermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          aggregate: {
            args: Prisma.RolePermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRolePermission>
          }
          groupBy: {
            args: Prisma.RolePermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolePermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolePermissionCountArgs<ExtArgs>
            result: $Utils.Optional<RolePermissionCountAggregateOutputType> | number
          }
        }
      }
      MovingJob: {
        payload: Prisma.$MovingJobPayload<ExtArgs>
        fields: Prisma.MovingJobFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MovingJobFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovingJobPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MovingJobFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovingJobPayload>
          }
          findFirst: {
            args: Prisma.MovingJobFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovingJobPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MovingJobFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovingJobPayload>
          }
          findMany: {
            args: Prisma.MovingJobFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovingJobPayload>[]
          }
          create: {
            args: Prisma.MovingJobCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovingJobPayload>
          }
          createMany: {
            args: Prisma.MovingJobCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MovingJobCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovingJobPayload>[]
          }
          delete: {
            args: Prisma.MovingJobDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovingJobPayload>
          }
          update: {
            args: Prisma.MovingJobUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovingJobPayload>
          }
          deleteMany: {
            args: Prisma.MovingJobDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MovingJobUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MovingJobUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovingJobPayload>
          }
          aggregate: {
            args: Prisma.MovingJobAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMovingJob>
          }
          groupBy: {
            args: Prisma.MovingJobGroupByArgs<ExtArgs>
            result: $Utils.Optional<MovingJobGroupByOutputType>[]
          }
          count: {
            args: Prisma.MovingJobCountArgs<ExtArgs>
            result: $Utils.Optional<MovingJobCountAggregateOutputType> | number
          }
        }
      }
      JobAssignment: {
        payload: Prisma.$JobAssignmentPayload<ExtArgs>
        fields: Prisma.JobAssignmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobAssignmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobAssignmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobAssignmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobAssignmentPayload>
          }
          findFirst: {
            args: Prisma.JobAssignmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobAssignmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobAssignmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobAssignmentPayload>
          }
          findMany: {
            args: Prisma.JobAssignmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobAssignmentPayload>[]
          }
          create: {
            args: Prisma.JobAssignmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobAssignmentPayload>
          }
          createMany: {
            args: Prisma.JobAssignmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobAssignmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobAssignmentPayload>[]
          }
          delete: {
            args: Prisma.JobAssignmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobAssignmentPayload>
          }
          update: {
            args: Prisma.JobAssignmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobAssignmentPayload>
          }
          deleteMany: {
            args: Prisma.JobAssignmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobAssignmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JobAssignmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobAssignmentPayload>
          }
          aggregate: {
            args: Prisma.JobAssignmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobAssignment>
          }
          groupBy: {
            args: Prisma.JobAssignmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobAssignmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobAssignmentCountArgs<ExtArgs>
            result: $Utils.Optional<JobAssignmentCountAggregateOutputType> | number
          }
        }
      }
      PackingMaterial: {
        payload: Prisma.$PackingMaterialPayload<ExtArgs>
        fields: Prisma.PackingMaterialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PackingMaterialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackingMaterialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PackingMaterialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackingMaterialPayload>
          }
          findFirst: {
            args: Prisma.PackingMaterialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackingMaterialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PackingMaterialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackingMaterialPayload>
          }
          findMany: {
            args: Prisma.PackingMaterialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackingMaterialPayload>[]
          }
          create: {
            args: Prisma.PackingMaterialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackingMaterialPayload>
          }
          createMany: {
            args: Prisma.PackingMaterialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PackingMaterialCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackingMaterialPayload>[]
          }
          delete: {
            args: Prisma.PackingMaterialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackingMaterialPayload>
          }
          update: {
            args: Prisma.PackingMaterialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackingMaterialPayload>
          }
          deleteMany: {
            args: Prisma.PackingMaterialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PackingMaterialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PackingMaterialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackingMaterialPayload>
          }
          aggregate: {
            args: Prisma.PackingMaterialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePackingMaterial>
          }
          groupBy: {
            args: Prisma.PackingMaterialGroupByArgs<ExtArgs>
            result: $Utils.Optional<PackingMaterialGroupByOutputType>[]
          }
          count: {
            args: Prisma.PackingMaterialCountArgs<ExtArgs>
            result: $Utils.Optional<PackingMaterialCountAggregateOutputType> | number
          }
        }
      }
      Vendor: {
        payload: Prisma.$VendorPayload<ExtArgs>
        fields: Prisma.VendorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VendorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VendorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          findFirst: {
            args: Prisma.VendorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VendorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          findMany: {
            args: Prisma.VendorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>[]
          }
          create: {
            args: Prisma.VendorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          createMany: {
            args: Prisma.VendorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VendorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>[]
          }
          delete: {
            args: Prisma.VendorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          update: {
            args: Prisma.VendorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          deleteMany: {
            args: Prisma.VendorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VendorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VendorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendorPayload>
          }
          aggregate: {
            args: Prisma.VendorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVendor>
          }
          groupBy: {
            args: Prisma.VendorGroupByArgs<ExtArgs>
            result: $Utils.Optional<VendorGroupByOutputType>[]
          }
          count: {
            args: Prisma.VendorCountArgs<ExtArgs>
            result: $Utils.Optional<VendorCountAggregateOutputType> | number
          }
        }
      }
      StockBatch: {
        payload: Prisma.$StockBatchPayload<ExtArgs>
        fields: Prisma.StockBatchFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockBatchFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBatchPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockBatchFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBatchPayload>
          }
          findFirst: {
            args: Prisma.StockBatchFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBatchPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockBatchFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBatchPayload>
          }
          findMany: {
            args: Prisma.StockBatchFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBatchPayload>[]
          }
          create: {
            args: Prisma.StockBatchCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBatchPayload>
          }
          createMany: {
            args: Prisma.StockBatchCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StockBatchCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBatchPayload>[]
          }
          delete: {
            args: Prisma.StockBatchDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBatchPayload>
          }
          update: {
            args: Prisma.StockBatchUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBatchPayload>
          }
          deleteMany: {
            args: Prisma.StockBatchDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockBatchUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StockBatchUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBatchPayload>
          }
          aggregate: {
            args: Prisma.StockBatchAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockBatch>
          }
          groupBy: {
            args: Prisma.StockBatchGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockBatchGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockBatchCountArgs<ExtArgs>
            result: $Utils.Optional<StockBatchCountAggregateOutputType> | number
          }
        }
      }
      RackStockLevel: {
        payload: Prisma.$RackStockLevelPayload<ExtArgs>
        fields: Prisma.RackStockLevelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RackStockLevelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackStockLevelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RackStockLevelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackStockLevelPayload>
          }
          findFirst: {
            args: Prisma.RackStockLevelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackStockLevelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RackStockLevelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackStockLevelPayload>
          }
          findMany: {
            args: Prisma.RackStockLevelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackStockLevelPayload>[]
          }
          create: {
            args: Prisma.RackStockLevelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackStockLevelPayload>
          }
          createMany: {
            args: Prisma.RackStockLevelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RackStockLevelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackStockLevelPayload>[]
          }
          delete: {
            args: Prisma.RackStockLevelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackStockLevelPayload>
          }
          update: {
            args: Prisma.RackStockLevelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackStockLevelPayload>
          }
          deleteMany: {
            args: Prisma.RackStockLevelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RackStockLevelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RackStockLevelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RackStockLevelPayload>
          }
          aggregate: {
            args: Prisma.RackStockLevelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRackStockLevel>
          }
          groupBy: {
            args: Prisma.RackStockLevelGroupByArgs<ExtArgs>
            result: $Utils.Optional<RackStockLevelGroupByOutputType>[]
          }
          count: {
            args: Prisma.RackStockLevelCountArgs<ExtArgs>
            result: $Utils.Optional<RackStockLevelCountAggregateOutputType> | number
          }
        }
      }
      MaterialIssue: {
        payload: Prisma.$MaterialIssuePayload<ExtArgs>
        fields: Prisma.MaterialIssueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaterialIssueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialIssuePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaterialIssueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialIssuePayload>
          }
          findFirst: {
            args: Prisma.MaterialIssueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialIssuePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaterialIssueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialIssuePayload>
          }
          findMany: {
            args: Prisma.MaterialIssueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialIssuePayload>[]
          }
          create: {
            args: Prisma.MaterialIssueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialIssuePayload>
          }
          createMany: {
            args: Prisma.MaterialIssueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MaterialIssueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialIssuePayload>[]
          }
          delete: {
            args: Prisma.MaterialIssueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialIssuePayload>
          }
          update: {
            args: Prisma.MaterialIssueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialIssuePayload>
          }
          deleteMany: {
            args: Prisma.MaterialIssueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaterialIssueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MaterialIssueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialIssuePayload>
          }
          aggregate: {
            args: Prisma.MaterialIssueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaterialIssue>
          }
          groupBy: {
            args: Prisma.MaterialIssueGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaterialIssueGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaterialIssueCountArgs<ExtArgs>
            result: $Utils.Optional<MaterialIssueCountAggregateOutputType> | number
          }
        }
      }
      MaterialReturn: {
        payload: Prisma.$MaterialReturnPayload<ExtArgs>
        fields: Prisma.MaterialReturnFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaterialReturnFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialReturnPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaterialReturnFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialReturnPayload>
          }
          findFirst: {
            args: Prisma.MaterialReturnFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialReturnPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaterialReturnFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialReturnPayload>
          }
          findMany: {
            args: Prisma.MaterialReturnFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialReturnPayload>[]
          }
          create: {
            args: Prisma.MaterialReturnCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialReturnPayload>
          }
          createMany: {
            args: Prisma.MaterialReturnCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MaterialReturnCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialReturnPayload>[]
          }
          delete: {
            args: Prisma.MaterialReturnDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialReturnPayload>
          }
          update: {
            args: Prisma.MaterialReturnUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialReturnPayload>
          }
          deleteMany: {
            args: Prisma.MaterialReturnDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaterialReturnUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MaterialReturnUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialReturnPayload>
          }
          aggregate: {
            args: Prisma.MaterialReturnAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaterialReturn>
          }
          groupBy: {
            args: Prisma.MaterialReturnGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaterialReturnGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaterialReturnCountArgs<ExtArgs>
            result: $Utils.Optional<MaterialReturnCountAggregateOutputType> | number
          }
        }
      }
      MaterialDamage: {
        payload: Prisma.$MaterialDamagePayload<ExtArgs>
        fields: Prisma.MaterialDamageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaterialDamageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialDamagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaterialDamageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialDamagePayload>
          }
          findFirst: {
            args: Prisma.MaterialDamageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialDamagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaterialDamageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialDamagePayload>
          }
          findMany: {
            args: Prisma.MaterialDamageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialDamagePayload>[]
          }
          create: {
            args: Prisma.MaterialDamageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialDamagePayload>
          }
          createMany: {
            args: Prisma.MaterialDamageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MaterialDamageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialDamagePayload>[]
          }
          delete: {
            args: Prisma.MaterialDamageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialDamagePayload>
          }
          update: {
            args: Prisma.MaterialDamageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialDamagePayload>
          }
          deleteMany: {
            args: Prisma.MaterialDamageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaterialDamageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MaterialDamageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialDamagePayload>
          }
          aggregate: {
            args: Prisma.MaterialDamageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaterialDamage>
          }
          groupBy: {
            args: Prisma.MaterialDamageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaterialDamageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaterialDamageCountArgs<ExtArgs>
            result: $Utils.Optional<MaterialDamageCountAggregateOutputType> | number
          }
        }
      }
      MaterialApproval: {
        payload: Prisma.$MaterialApprovalPayload<ExtArgs>
        fields: Prisma.MaterialApprovalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaterialApprovalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialApprovalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaterialApprovalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialApprovalPayload>
          }
          findFirst: {
            args: Prisma.MaterialApprovalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialApprovalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaterialApprovalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialApprovalPayload>
          }
          findMany: {
            args: Prisma.MaterialApprovalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialApprovalPayload>[]
          }
          create: {
            args: Prisma.MaterialApprovalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialApprovalPayload>
          }
          createMany: {
            args: Prisma.MaterialApprovalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MaterialApprovalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialApprovalPayload>[]
          }
          delete: {
            args: Prisma.MaterialApprovalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialApprovalPayload>
          }
          update: {
            args: Prisma.MaterialApprovalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialApprovalPayload>
          }
          deleteMany: {
            args: Prisma.MaterialApprovalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaterialApprovalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MaterialApprovalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialApprovalPayload>
          }
          aggregate: {
            args: Prisma.MaterialApprovalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaterialApproval>
          }
          groupBy: {
            args: Prisma.MaterialApprovalGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaterialApprovalGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaterialApprovalCountArgs<ExtArgs>
            result: $Utils.Optional<MaterialApprovalCountAggregateOutputType> | number
          }
        }
      }
      JobCostSnapshot: {
        payload: Prisma.$JobCostSnapshotPayload<ExtArgs>
        fields: Prisma.JobCostSnapshotFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobCostSnapshotFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobCostSnapshotPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobCostSnapshotFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobCostSnapshotPayload>
          }
          findFirst: {
            args: Prisma.JobCostSnapshotFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobCostSnapshotPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobCostSnapshotFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobCostSnapshotPayload>
          }
          findMany: {
            args: Prisma.JobCostSnapshotFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobCostSnapshotPayload>[]
          }
          create: {
            args: Prisma.JobCostSnapshotCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobCostSnapshotPayload>
          }
          createMany: {
            args: Prisma.JobCostSnapshotCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobCostSnapshotCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobCostSnapshotPayload>[]
          }
          delete: {
            args: Prisma.JobCostSnapshotDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobCostSnapshotPayload>
          }
          update: {
            args: Prisma.JobCostSnapshotUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobCostSnapshotPayload>
          }
          deleteMany: {
            args: Prisma.JobCostSnapshotDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobCostSnapshotUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JobCostSnapshotUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobCostSnapshotPayload>
          }
          aggregate: {
            args: Prisma.JobCostSnapshotAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobCostSnapshot>
          }
          groupBy: {
            args: Prisma.JobCostSnapshotGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobCostSnapshotGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobCostSnapshotCountArgs<ExtArgs>
            result: $Utils.Optional<JobCostSnapshotCountAggregateOutputType> | number
          }
        }
      }
      SystemPlugin: {
        payload: Prisma.$SystemPluginPayload<ExtArgs>
        fields: Prisma.SystemPluginFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SystemPluginFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SystemPluginFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginPayload>
          }
          findFirst: {
            args: Prisma.SystemPluginFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SystemPluginFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginPayload>
          }
          findMany: {
            args: Prisma.SystemPluginFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginPayload>[]
          }
          create: {
            args: Prisma.SystemPluginCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginPayload>
          }
          createMany: {
            args: Prisma.SystemPluginCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SystemPluginCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginPayload>[]
          }
          delete: {
            args: Prisma.SystemPluginDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginPayload>
          }
          update: {
            args: Prisma.SystemPluginUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginPayload>
          }
          deleteMany: {
            args: Prisma.SystemPluginDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SystemPluginUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SystemPluginUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginPayload>
          }
          aggregate: {
            args: Prisma.SystemPluginAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSystemPlugin>
          }
          groupBy: {
            args: Prisma.SystemPluginGroupByArgs<ExtArgs>
            result: $Utils.Optional<SystemPluginGroupByOutputType>[]
          }
          count: {
            args: Prisma.SystemPluginCountArgs<ExtArgs>
            result: $Utils.Optional<SystemPluginCountAggregateOutputType> | number
          }
        }
      }
      SystemPluginLog: {
        payload: Prisma.$SystemPluginLogPayload<ExtArgs>
        fields: Prisma.SystemPluginLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SystemPluginLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SystemPluginLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginLogPayload>
          }
          findFirst: {
            args: Prisma.SystemPluginLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SystemPluginLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginLogPayload>
          }
          findMany: {
            args: Prisma.SystemPluginLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginLogPayload>[]
          }
          create: {
            args: Prisma.SystemPluginLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginLogPayload>
          }
          createMany: {
            args: Prisma.SystemPluginLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SystemPluginLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginLogPayload>[]
          }
          delete: {
            args: Prisma.SystemPluginLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginLogPayload>
          }
          update: {
            args: Prisma.SystemPluginLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginLogPayload>
          }
          deleteMany: {
            args: Prisma.SystemPluginLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SystemPluginLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SystemPluginLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPluginLogPayload>
          }
          aggregate: {
            args: Prisma.SystemPluginLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSystemPluginLog>
          }
          groupBy: {
            args: Prisma.SystemPluginLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<SystemPluginLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.SystemPluginLogCountArgs<ExtArgs>
            result: $Utils.Optional<SystemPluginLogCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CompanyCountOutputType
   */

  export type CompanyCountOutputType = {
    users: number
    racks: number
    shipments: number
    movingJobs: number
    expenses: number
    customFields: number
    chargeTypes: number
    invoices: number
    invoiceLineItems: number
    payments: number
    shipmentCharges: number
    rolePermissions: number
    packingMaterials: number
    vendors: number
    stockBatches: number
    rackLevels: number
    materialIssues: number
    materialReturns: number
    materialDamages: number
    materialApprovals: number
    jobCostSnapshots: number
    systemPlugins: number
    JobAssignment: number
    SystemPluginLog: number
  }

  export type CompanyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | CompanyCountOutputTypeCountUsersArgs
    racks?: boolean | CompanyCountOutputTypeCountRacksArgs
    shipments?: boolean | CompanyCountOutputTypeCountShipmentsArgs
    movingJobs?: boolean | CompanyCountOutputTypeCountMovingJobsArgs
    expenses?: boolean | CompanyCountOutputTypeCountExpensesArgs
    customFields?: boolean | CompanyCountOutputTypeCountCustomFieldsArgs
    chargeTypes?: boolean | CompanyCountOutputTypeCountChargeTypesArgs
    invoices?: boolean | CompanyCountOutputTypeCountInvoicesArgs
    invoiceLineItems?: boolean | CompanyCountOutputTypeCountInvoiceLineItemsArgs
    payments?: boolean | CompanyCountOutputTypeCountPaymentsArgs
    shipmentCharges?: boolean | CompanyCountOutputTypeCountShipmentChargesArgs
    rolePermissions?: boolean | CompanyCountOutputTypeCountRolePermissionsArgs
    packingMaterials?: boolean | CompanyCountOutputTypeCountPackingMaterialsArgs
    vendors?: boolean | CompanyCountOutputTypeCountVendorsArgs
    stockBatches?: boolean | CompanyCountOutputTypeCountStockBatchesArgs
    rackLevels?: boolean | CompanyCountOutputTypeCountRackLevelsArgs
    materialIssues?: boolean | CompanyCountOutputTypeCountMaterialIssuesArgs
    materialReturns?: boolean | CompanyCountOutputTypeCountMaterialReturnsArgs
    materialDamages?: boolean | CompanyCountOutputTypeCountMaterialDamagesArgs
    materialApprovals?: boolean | CompanyCountOutputTypeCountMaterialApprovalsArgs
    jobCostSnapshots?: boolean | CompanyCountOutputTypeCountJobCostSnapshotsArgs
    systemPlugins?: boolean | CompanyCountOutputTypeCountSystemPluginsArgs
    JobAssignment?: boolean | CompanyCountOutputTypeCountJobAssignmentArgs
    SystemPluginLog?: boolean | CompanyCountOutputTypeCountSystemPluginLogArgs
  }

  // Custom InputTypes
  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyCountOutputType
     */
    select?: CompanyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountRacksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountShipmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountMovingJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovingJobWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountExpensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountCustomFieldsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomFieldWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountChargeTypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChargeTypeWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountInvoiceLineItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceLineItemWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountShipmentChargesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentChargesWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountRolePermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolePermissionWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountPackingMaterialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PackingMaterialWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountVendorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VendorWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountStockBatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBatchWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountRackLevelsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackStockLevelWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountMaterialIssuesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialIssueWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountMaterialReturnsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialReturnWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountMaterialDamagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialDamageWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountMaterialApprovalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialApprovalWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountJobCostSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobCostSnapshotWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountSystemPluginsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemPluginWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountJobAssignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobAssignmentWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountSystemPluginLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemPluginLogWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    activities: number
    jobAssignments: number
    movingJobsLead: number
    stockBatchesReceived: number
    materialIssuesCreated: number
    materialReturnsRecorded: number
    damagesRecorded: number
    damagesApproved: number
    approvalsRequested: number
    approvalsDecided: number
    shipmentsCreated: number
    shipmentsAssigned: number
    shipmentsReleased: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    activities?: boolean | UserCountOutputTypeCountActivitiesArgs
    jobAssignments?: boolean | UserCountOutputTypeCountJobAssignmentsArgs
    movingJobsLead?: boolean | UserCountOutputTypeCountMovingJobsLeadArgs
    stockBatchesReceived?: boolean | UserCountOutputTypeCountStockBatchesReceivedArgs
    materialIssuesCreated?: boolean | UserCountOutputTypeCountMaterialIssuesCreatedArgs
    materialReturnsRecorded?: boolean | UserCountOutputTypeCountMaterialReturnsRecordedArgs
    damagesRecorded?: boolean | UserCountOutputTypeCountDamagesRecordedArgs
    damagesApproved?: boolean | UserCountOutputTypeCountDamagesApprovedArgs
    approvalsRequested?: boolean | UserCountOutputTypeCountApprovalsRequestedArgs
    approvalsDecided?: boolean | UserCountOutputTypeCountApprovalsDecidedArgs
    shipmentsCreated?: boolean | UserCountOutputTypeCountShipmentsCreatedArgs
    shipmentsAssigned?: boolean | UserCountOutputTypeCountShipmentsAssignedArgs
    shipmentsReleased?: boolean | UserCountOutputTypeCountShipmentsReleasedArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackActivityWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountJobAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobAssignmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMovingJobsLeadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovingJobWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStockBatchesReceivedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBatchWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMaterialIssuesCreatedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialIssueWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMaterialReturnsRecordedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialReturnWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDamagesRecordedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialDamageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDamagesApprovedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialDamageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountApprovalsRequestedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialApprovalWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountApprovalsDecidedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialApprovalWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountShipmentsCreatedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountShipmentsAssignedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountShipmentsReleasedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentWhereInput
  }


  /**
   * Count Type RackCountOutputType
   */

  export type RackCountOutputType = {
    shipments: number
    boxes: number
    activities: number
    inventory: number
    materialLevels: number
    MaterialReturn: number
    jobMaterials: number
  }

  export type RackCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipments?: boolean | RackCountOutputTypeCountShipmentsArgs
    boxes?: boolean | RackCountOutputTypeCountBoxesArgs
    activities?: boolean | RackCountOutputTypeCountActivitiesArgs
    inventory?: boolean | RackCountOutputTypeCountInventoryArgs
    materialLevels?: boolean | RackCountOutputTypeCountMaterialLevelsArgs
    MaterialReturn?: boolean | RackCountOutputTypeCountMaterialReturnArgs
    jobMaterials?: boolean | RackCountOutputTypeCountJobMaterialsArgs
  }

  // Custom InputTypes
  /**
   * RackCountOutputType without action
   */
  export type RackCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackCountOutputType
     */
    select?: RackCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RackCountOutputType without action
   */
  export type RackCountOutputTypeCountShipmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentWhereInput
  }

  /**
   * RackCountOutputType without action
   */
  export type RackCountOutputTypeCountBoxesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentBoxWhereInput
  }

  /**
   * RackCountOutputType without action
   */
  export type RackCountOutputTypeCountActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackActivityWhereInput
  }

  /**
   * RackCountOutputType without action
   */
  export type RackCountOutputTypeCountInventoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackInventoryWhereInput
  }

  /**
   * RackCountOutputType without action
   */
  export type RackCountOutputTypeCountMaterialLevelsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackStockLevelWhereInput
  }

  /**
   * RackCountOutputType without action
   */
  export type RackCountOutputTypeCountMaterialReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialReturnWhereInput
  }

  /**
   * RackCountOutputType without action
   */
  export type RackCountOutputTypeCountJobMaterialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialIssueWhereInput
  }


  /**
   * Count Type ShipmentCountOutputType
   */

  export type ShipmentCountOutputType = {
    boxes: number
    withdrawals: number
    invoices: number
  }

  export type ShipmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    boxes?: boolean | ShipmentCountOutputTypeCountBoxesArgs
    withdrawals?: boolean | ShipmentCountOutputTypeCountWithdrawalsArgs
    invoices?: boolean | ShipmentCountOutputTypeCountInvoicesArgs
  }

  // Custom InputTypes
  /**
   * ShipmentCountOutputType without action
   */
  export type ShipmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCountOutputType
     */
    select?: ShipmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ShipmentCountOutputType without action
   */
  export type ShipmentCountOutputTypeCountBoxesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentBoxWhereInput
  }

  /**
   * ShipmentCountOutputType without action
   */
  export type ShipmentCountOutputTypeCountWithdrawalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WithdrawalWhereInput
  }

  /**
   * ShipmentCountOutputType without action
   */
  export type ShipmentCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }


  /**
   * Count Type BillingSettingsCountOutputType
   */

  export type BillingSettingsCountOutputType = {
    chargeTypes: number
  }

  export type BillingSettingsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chargeTypes?: boolean | BillingSettingsCountOutputTypeCountChargeTypesArgs
  }

  // Custom InputTypes
  /**
   * BillingSettingsCountOutputType without action
   */
  export type BillingSettingsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettingsCountOutputType
     */
    select?: BillingSettingsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BillingSettingsCountOutputType without action
   */
  export type BillingSettingsCountOutputTypeCountChargeTypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChargeTypeWhereInput
  }


  /**
   * Count Type InvoiceCountOutputType
   */

  export type InvoiceCountOutputType = {
    lineItems: number
    payments: number
  }

  export type InvoiceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lineItems?: boolean | InvoiceCountOutputTypeCountLineItemsArgs
    payments?: boolean | InvoiceCountOutputTypeCountPaymentsArgs
  }

  // Custom InputTypes
  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceCountOutputType
     */
    select?: InvoiceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountLineItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceLineItemWhereInput
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }


  /**
   * Count Type CustomFieldCountOutputType
   */

  export type CustomFieldCountOutputType = {
    values: number
  }

  export type CustomFieldCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    values?: boolean | CustomFieldCountOutputTypeCountValuesArgs
  }

  // Custom InputTypes
  /**
   * CustomFieldCountOutputType without action
   */
  export type CustomFieldCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldCountOutputType
     */
    select?: CustomFieldCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomFieldCountOutputType without action
   */
  export type CustomFieldCountOutputTypeCountValuesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomFieldValueWhereInput
  }


  /**
   * Count Type PermissionCountOutputType
   */

  export type PermissionCountOutputType = {
    rolePermissions: number
  }

  export type PermissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolePermissions?: boolean | PermissionCountOutputTypeCountRolePermissionsArgs
  }

  // Custom InputTypes
  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionCountOutputType
     */
    select?: PermissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountRolePermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolePermissionWhereInput
  }


  /**
   * Count Type MovingJobCountOutputType
   */

  export type MovingJobCountOutputType = {
    assignments: number
    materialIssues: number
    materialReturns: number
    costSnapshots: number
    approvals: number
  }

  export type MovingJobCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignments?: boolean | MovingJobCountOutputTypeCountAssignmentsArgs
    materialIssues?: boolean | MovingJobCountOutputTypeCountMaterialIssuesArgs
    materialReturns?: boolean | MovingJobCountOutputTypeCountMaterialReturnsArgs
    costSnapshots?: boolean | MovingJobCountOutputTypeCountCostSnapshotsArgs
    approvals?: boolean | MovingJobCountOutputTypeCountApprovalsArgs
  }

  // Custom InputTypes
  /**
   * MovingJobCountOutputType without action
   */
  export type MovingJobCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJobCountOutputType
     */
    select?: MovingJobCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MovingJobCountOutputType without action
   */
  export type MovingJobCountOutputTypeCountAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobAssignmentWhereInput
  }

  /**
   * MovingJobCountOutputType without action
   */
  export type MovingJobCountOutputTypeCountMaterialIssuesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialIssueWhereInput
  }

  /**
   * MovingJobCountOutputType without action
   */
  export type MovingJobCountOutputTypeCountMaterialReturnsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialReturnWhereInput
  }

  /**
   * MovingJobCountOutputType without action
   */
  export type MovingJobCountOutputTypeCountCostSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobCostSnapshotWhereInput
  }

  /**
   * MovingJobCountOutputType without action
   */
  export type MovingJobCountOutputTypeCountApprovalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialApprovalWhereInput
  }


  /**
   * Count Type PackingMaterialCountOutputType
   */

  export type PackingMaterialCountOutputType = {
    stockBatches: number
    rackLevels: number
    materialIssues: number
    materialReturns: number
    materialDamages: number
  }

  export type PackingMaterialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stockBatches?: boolean | PackingMaterialCountOutputTypeCountStockBatchesArgs
    rackLevels?: boolean | PackingMaterialCountOutputTypeCountRackLevelsArgs
    materialIssues?: boolean | PackingMaterialCountOutputTypeCountMaterialIssuesArgs
    materialReturns?: boolean | PackingMaterialCountOutputTypeCountMaterialReturnsArgs
    materialDamages?: boolean | PackingMaterialCountOutputTypeCountMaterialDamagesArgs
  }

  // Custom InputTypes
  /**
   * PackingMaterialCountOutputType without action
   */
  export type PackingMaterialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterialCountOutputType
     */
    select?: PackingMaterialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PackingMaterialCountOutputType without action
   */
  export type PackingMaterialCountOutputTypeCountStockBatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBatchWhereInput
  }

  /**
   * PackingMaterialCountOutputType without action
   */
  export type PackingMaterialCountOutputTypeCountRackLevelsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackStockLevelWhereInput
  }

  /**
   * PackingMaterialCountOutputType without action
   */
  export type PackingMaterialCountOutputTypeCountMaterialIssuesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialIssueWhereInput
  }

  /**
   * PackingMaterialCountOutputType without action
   */
  export type PackingMaterialCountOutputTypeCountMaterialReturnsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialReturnWhereInput
  }

  /**
   * PackingMaterialCountOutputType without action
   */
  export type PackingMaterialCountOutputTypeCountMaterialDamagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialDamageWhereInput
  }


  /**
   * Count Type VendorCountOutputType
   */

  export type VendorCountOutputType = {
    stockBatches: number
  }

  export type VendorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stockBatches?: boolean | VendorCountOutputTypeCountStockBatchesArgs
  }

  // Custom InputTypes
  /**
   * VendorCountOutputType without action
   */
  export type VendorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VendorCountOutputType
     */
    select?: VendorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VendorCountOutputType without action
   */
  export type VendorCountOutputTypeCountStockBatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBatchWhereInput
  }


  /**
   * Count Type StockBatchCountOutputType
   */

  export type StockBatchCountOutputType = {
    rackAllocations: number
    issues: number
  }

  export type StockBatchCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rackAllocations?: boolean | StockBatchCountOutputTypeCountRackAllocationsArgs
    issues?: boolean | StockBatchCountOutputTypeCountIssuesArgs
  }

  // Custom InputTypes
  /**
   * StockBatchCountOutputType without action
   */
  export type StockBatchCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatchCountOutputType
     */
    select?: StockBatchCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StockBatchCountOutputType without action
   */
  export type StockBatchCountOutputTypeCountRackAllocationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackStockLevelWhereInput
  }

  /**
   * StockBatchCountOutputType without action
   */
  export type StockBatchCountOutputTypeCountIssuesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialIssueWhereInput
  }


  /**
   * Count Type MaterialIssueCountOutputType
   */

  export type MaterialIssueCountOutputType = {
    returns: number
  }

  export type MaterialIssueCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    returns?: boolean | MaterialIssueCountOutputTypeCountReturnsArgs
  }

  // Custom InputTypes
  /**
   * MaterialIssueCountOutputType without action
   */
  export type MaterialIssueCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssueCountOutputType
     */
    select?: MaterialIssueCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MaterialIssueCountOutputType without action
   */
  export type MaterialIssueCountOutputTypeCountReturnsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialReturnWhereInput
  }


  /**
   * Count Type MaterialReturnCountOutputType
   */

  export type MaterialReturnCountOutputType = {
    damages: number
  }

  export type MaterialReturnCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    damages?: boolean | MaterialReturnCountOutputTypeCountDamagesArgs
  }

  // Custom InputTypes
  /**
   * MaterialReturnCountOutputType without action
   */
  export type MaterialReturnCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturnCountOutputType
     */
    select?: MaterialReturnCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MaterialReturnCountOutputType without action
   */
  export type MaterialReturnCountOutputTypeCountDamagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialDamageWhereInput
  }


  /**
   * Count Type SystemPluginCountOutputType
   */

  export type SystemPluginCountOutputType = {
    auditLogs: number
  }

  export type SystemPluginCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auditLogs?: boolean | SystemPluginCountOutputTypeCountAuditLogsArgs
  }

  // Custom InputTypes
  /**
   * SystemPluginCountOutputType without action
   */
  export type SystemPluginCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginCountOutputType
     */
    select?: SystemPluginCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SystemPluginCountOutputType without action
   */
  export type SystemPluginCountOutputTypeCountAuditLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemPluginLogWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyAvgAggregateOutputType = {
    ratePerDay: number | null
  }

  export type CompanySumAggregateOutputType = {
    ratePerDay: number | null
  }

  export type CompanyMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    phone: string | null
    address: string | null
    website: string | null
    logo: string | null
    plan: string | null
    ratePerDay: number | null
    currency: string | null
    isActive: boolean | null
    primaryColor: string | null
    secondaryColor: string | null
    accentColor: string | null
    showCompanyName: boolean | null
    logoSize: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CompanyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    phone: string | null
    address: string | null
    website: string | null
    logo: string | null
    plan: string | null
    ratePerDay: number | null
    currency: string | null
    isActive: boolean | null
    primaryColor: string | null
    secondaryColor: string | null
    accentColor: string | null
    showCompanyName: boolean | null
    logoSize: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CompanyCountAggregateOutputType = {
    id: number
    name: number
    email: number
    phone: number
    address: number
    website: number
    logo: number
    plan: number
    ratePerDay: number
    currency: number
    isActive: number
    primaryColor: number
    secondaryColor: number
    accentColor: number
    showCompanyName: number
    logoSize: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CompanyAvgAggregateInputType = {
    ratePerDay?: true
  }

  export type CompanySumAggregateInputType = {
    ratePerDay?: true
  }

  export type CompanyMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    address?: true
    website?: true
    logo?: true
    plan?: true
    ratePerDay?: true
    currency?: true
    isActive?: true
    primaryColor?: true
    secondaryColor?: true
    accentColor?: true
    showCompanyName?: true
    logoSize?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CompanyMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    address?: true
    website?: true
    logo?: true
    plan?: true
    ratePerDay?: true
    currency?: true
    isActive?: true
    primaryColor?: true
    secondaryColor?: true
    accentColor?: true
    showCompanyName?: true
    logoSize?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CompanyCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    address?: true
    website?: true
    logo?: true
    plan?: true
    ratePerDay?: true
    currency?: true
    isActive?: true
    primaryColor?: true
    secondaryColor?: true
    accentColor?: true
    showCompanyName?: true
    logoSize?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Company to aggregate.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type CompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithAggregationInput | CompanyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: CompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _avg?: CompanyAvgAggregateInputType
    _sum?: CompanySumAggregateInputType
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    id: string
    name: string
    email: string
    phone: string | null
    address: string | null
    website: string | null
    logo: string | null
    plan: string
    ratePerDay: number
    currency: string
    isActive: boolean
    primaryColor: string | null
    secondaryColor: string | null
    accentColor: string | null
    showCompanyName: boolean
    logoSize: string | null
    createdAt: Date
    updatedAt: Date
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends CompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type CompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    website?: boolean
    logo?: boolean
    plan?: boolean
    ratePerDay?: boolean
    currency?: boolean
    isActive?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    accentColor?: boolean
    showCompanyName?: boolean
    logoSize?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    users?: boolean | Company$usersArgs<ExtArgs>
    racks?: boolean | Company$racksArgs<ExtArgs>
    shipments?: boolean | Company$shipmentsArgs<ExtArgs>
    movingJobs?: boolean | Company$movingJobsArgs<ExtArgs>
    expenses?: boolean | Company$expensesArgs<ExtArgs>
    invoiceSettings?: boolean | Company$invoiceSettingsArgs<ExtArgs>
    customFields?: boolean | Company$customFieldsArgs<ExtArgs>
    billingSettings?: boolean | Company$billingSettingsArgs<ExtArgs>
    chargeTypes?: boolean | Company$chargeTypesArgs<ExtArgs>
    invoices?: boolean | Company$invoicesArgs<ExtArgs>
    invoiceLineItems?: boolean | Company$invoiceLineItemsArgs<ExtArgs>
    payments?: boolean | Company$paymentsArgs<ExtArgs>
    shipmentCharges?: boolean | Company$shipmentChargesArgs<ExtArgs>
    shipmentSettings?: boolean | Company$shipmentSettingsArgs<ExtArgs>
    templateSettings?: boolean | Company$templateSettingsArgs<ExtArgs>
    rolePermissions?: boolean | Company$rolePermissionsArgs<ExtArgs>
    packingMaterials?: boolean | Company$packingMaterialsArgs<ExtArgs>
    vendors?: boolean | Company$vendorsArgs<ExtArgs>
    stockBatches?: boolean | Company$stockBatchesArgs<ExtArgs>
    rackLevels?: boolean | Company$rackLevelsArgs<ExtArgs>
    materialIssues?: boolean | Company$materialIssuesArgs<ExtArgs>
    materialReturns?: boolean | Company$materialReturnsArgs<ExtArgs>
    materialDamages?: boolean | Company$materialDamagesArgs<ExtArgs>
    materialApprovals?: boolean | Company$materialApprovalsArgs<ExtArgs>
    jobCostSnapshots?: boolean | Company$jobCostSnapshotsArgs<ExtArgs>
    systemPlugins?: boolean | Company$systemPluginsArgs<ExtArgs>
    JobAssignment?: boolean | Company$JobAssignmentArgs<ExtArgs>
    SystemPluginLog?: boolean | Company$SystemPluginLogArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>

  export type CompanySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    website?: boolean
    logo?: boolean
    plan?: boolean
    ratePerDay?: boolean
    currency?: boolean
    isActive?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    accentColor?: boolean
    showCompanyName?: boolean
    logoSize?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["company"]>

  export type CompanySelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    website?: boolean
    logo?: boolean
    plan?: boolean
    ratePerDay?: boolean
    currency?: boolean
    isActive?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    accentColor?: boolean
    showCompanyName?: boolean
    logoSize?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CompanyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Company$usersArgs<ExtArgs>
    racks?: boolean | Company$racksArgs<ExtArgs>
    shipments?: boolean | Company$shipmentsArgs<ExtArgs>
    movingJobs?: boolean | Company$movingJobsArgs<ExtArgs>
    expenses?: boolean | Company$expensesArgs<ExtArgs>
    invoiceSettings?: boolean | Company$invoiceSettingsArgs<ExtArgs>
    customFields?: boolean | Company$customFieldsArgs<ExtArgs>
    billingSettings?: boolean | Company$billingSettingsArgs<ExtArgs>
    chargeTypes?: boolean | Company$chargeTypesArgs<ExtArgs>
    invoices?: boolean | Company$invoicesArgs<ExtArgs>
    invoiceLineItems?: boolean | Company$invoiceLineItemsArgs<ExtArgs>
    payments?: boolean | Company$paymentsArgs<ExtArgs>
    shipmentCharges?: boolean | Company$shipmentChargesArgs<ExtArgs>
    shipmentSettings?: boolean | Company$shipmentSettingsArgs<ExtArgs>
    templateSettings?: boolean | Company$templateSettingsArgs<ExtArgs>
    rolePermissions?: boolean | Company$rolePermissionsArgs<ExtArgs>
    packingMaterials?: boolean | Company$packingMaterialsArgs<ExtArgs>
    vendors?: boolean | Company$vendorsArgs<ExtArgs>
    stockBatches?: boolean | Company$stockBatchesArgs<ExtArgs>
    rackLevels?: boolean | Company$rackLevelsArgs<ExtArgs>
    materialIssues?: boolean | Company$materialIssuesArgs<ExtArgs>
    materialReturns?: boolean | Company$materialReturnsArgs<ExtArgs>
    materialDamages?: boolean | Company$materialDamagesArgs<ExtArgs>
    materialApprovals?: boolean | Company$materialApprovalsArgs<ExtArgs>
    jobCostSnapshots?: boolean | Company$jobCostSnapshotsArgs<ExtArgs>
    systemPlugins?: boolean | Company$systemPluginsArgs<ExtArgs>
    JobAssignment?: boolean | Company$JobAssignmentArgs<ExtArgs>
    SystemPluginLog?: boolean | Company$SystemPluginLogArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CompanyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Company"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
      racks: Prisma.$RackPayload<ExtArgs>[]
      shipments: Prisma.$ShipmentPayload<ExtArgs>[]
      movingJobs: Prisma.$MovingJobPayload<ExtArgs>[]
      expenses: Prisma.$ExpensePayload<ExtArgs>[]
      invoiceSettings: Prisma.$InvoiceSettingsPayload<ExtArgs> | null
      customFields: Prisma.$CustomFieldPayload<ExtArgs>[]
      billingSettings: Prisma.$BillingSettingsPayload<ExtArgs> | null
      chargeTypes: Prisma.$ChargeTypePayload<ExtArgs>[]
      invoices: Prisma.$InvoicePayload<ExtArgs>[]
      invoiceLineItems: Prisma.$InvoiceLineItemPayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      shipmentCharges: Prisma.$ShipmentChargesPayload<ExtArgs>[]
      shipmentSettings: Prisma.$ShipmentSettingsPayload<ExtArgs> | null
      templateSettings: Prisma.$TemplateSettingsPayload<ExtArgs> | null
      rolePermissions: Prisma.$RolePermissionPayload<ExtArgs>[]
      packingMaterials: Prisma.$PackingMaterialPayload<ExtArgs>[]
      vendors: Prisma.$VendorPayload<ExtArgs>[]
      stockBatches: Prisma.$StockBatchPayload<ExtArgs>[]
      rackLevels: Prisma.$RackStockLevelPayload<ExtArgs>[]
      materialIssues: Prisma.$MaterialIssuePayload<ExtArgs>[]
      materialReturns: Prisma.$MaterialReturnPayload<ExtArgs>[]
      materialDamages: Prisma.$MaterialDamagePayload<ExtArgs>[]
      materialApprovals: Prisma.$MaterialApprovalPayload<ExtArgs>[]
      jobCostSnapshots: Prisma.$JobCostSnapshotPayload<ExtArgs>[]
      systemPlugins: Prisma.$SystemPluginPayload<ExtArgs>[]
      JobAssignment: Prisma.$JobAssignmentPayload<ExtArgs>[]
      SystemPluginLog: Prisma.$SystemPluginLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      email: string
      phone: string | null
      address: string | null
      website: string | null
      logo: string | null
      plan: string
      ratePerDay: number
      currency: string
      isActive: boolean
      primaryColor: string | null
      secondaryColor: string | null
      accentColor: string | null
      showCompanyName: boolean
      logoSize: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type CompanyGetPayload<S extends boolean | null | undefined | CompanyDefaultArgs> = $Result.GetResult<Prisma.$CompanyPayload, S>

  type CompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CompanyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface CompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Company'], meta: { name: 'Company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {CompanyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyFindUniqueArgs>(args: SelectSubset<T, CompanyFindUniqueArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CompanyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyFindFirstArgs>(args?: SelectSubset<T, CompanyFindFirstArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompanyFindManyArgs>(args?: SelectSubset<T, CompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Company.
     * @param {CompanyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends CompanyCreateArgs>(args: SelectSubset<T, CompanyCreateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Companies.
     * @param {CompanyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyCreateManyArgs>(args?: SelectSubset<T, CompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Companies and returns the data saved in the database.
     * @param {CompanyCreateManyAndReturnArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Companies and only return the `id`
     * const companyWithIdOnly = await prisma.company.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CompanyCreateManyAndReturnArgs>(args?: SelectSubset<T, CompanyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Company.
     * @param {CompanyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends CompanyDeleteArgs>(args: SelectSubset<T, CompanyDeleteArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Company.
     * @param {CompanyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyUpdateArgs>(args: SelectSubset<T, CompanyUpdateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Companies.
     * @param {CompanyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyDeleteManyArgs>(args?: SelectSubset<T, CompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyUpdateManyArgs>(args: SelectSubset<T, CompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Company.
     * @param {CompanyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends CompanyUpsertArgs>(args: SelectSubset<T, CompanyUpsertArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends CompanyCountArgs>(
      args?: Subset<T, CompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyGroupByArgs['orderBy'] }
        : { orderBy?: CompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Company model
   */
  readonly fields: CompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Company$usersArgs<ExtArgs> = {}>(args?: Subset<T, Company$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    racks<T extends Company$racksArgs<ExtArgs> = {}>(args?: Subset<T, Company$racksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findMany"> | Null>
    shipments<T extends Company$shipmentsArgs<ExtArgs> = {}>(args?: Subset<T, Company$shipmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findMany"> | Null>
    movingJobs<T extends Company$movingJobsArgs<ExtArgs> = {}>(args?: Subset<T, Company$movingJobsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findMany"> | Null>
    expenses<T extends Company$expensesArgs<ExtArgs> = {}>(args?: Subset<T, Company$expensesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findMany"> | Null>
    invoiceSettings<T extends Company$invoiceSettingsArgs<ExtArgs> = {}>(args?: Subset<T, Company$invoiceSettingsArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    customFields<T extends Company$customFieldsArgs<ExtArgs> = {}>(args?: Subset<T, Company$customFieldsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "findMany"> | Null>
    billingSettings<T extends Company$billingSettingsArgs<ExtArgs> = {}>(args?: Subset<T, Company$billingSettingsArgs<ExtArgs>>): Prisma__BillingSettingsClient<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    chargeTypes<T extends Company$chargeTypesArgs<ExtArgs> = {}>(args?: Subset<T, Company$chargeTypesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "findMany"> | Null>
    invoices<T extends Company$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, Company$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany"> | Null>
    invoiceLineItems<T extends Company$invoiceLineItemsArgs<ExtArgs> = {}>(args?: Subset<T, Company$invoiceLineItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "findMany"> | Null>
    payments<T extends Company$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, Company$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany"> | Null>
    shipmentCharges<T extends Company$shipmentChargesArgs<ExtArgs> = {}>(args?: Subset<T, Company$shipmentChargesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "findMany"> | Null>
    shipmentSettings<T extends Company$shipmentSettingsArgs<ExtArgs> = {}>(args?: Subset<T, Company$shipmentSettingsArgs<ExtArgs>>): Prisma__ShipmentSettingsClient<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    templateSettings<T extends Company$templateSettingsArgs<ExtArgs> = {}>(args?: Subset<T, Company$templateSettingsArgs<ExtArgs>>): Prisma__TemplateSettingsClient<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    rolePermissions<T extends Company$rolePermissionsArgs<ExtArgs> = {}>(args?: Subset<T, Company$rolePermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findMany"> | Null>
    packingMaterials<T extends Company$packingMaterialsArgs<ExtArgs> = {}>(args?: Subset<T, Company$packingMaterialsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findMany"> | Null>
    vendors<T extends Company$vendorsArgs<ExtArgs> = {}>(args?: Subset<T, Company$vendorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findMany"> | Null>
    stockBatches<T extends Company$stockBatchesArgs<ExtArgs> = {}>(args?: Subset<T, Company$stockBatchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findMany"> | Null>
    rackLevels<T extends Company$rackLevelsArgs<ExtArgs> = {}>(args?: Subset<T, Company$rackLevelsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "findMany"> | Null>
    materialIssues<T extends Company$materialIssuesArgs<ExtArgs> = {}>(args?: Subset<T, Company$materialIssuesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findMany"> | Null>
    materialReturns<T extends Company$materialReturnsArgs<ExtArgs> = {}>(args?: Subset<T, Company$materialReturnsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findMany"> | Null>
    materialDamages<T extends Company$materialDamagesArgs<ExtArgs> = {}>(args?: Subset<T, Company$materialDamagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findMany"> | Null>
    materialApprovals<T extends Company$materialApprovalsArgs<ExtArgs> = {}>(args?: Subset<T, Company$materialApprovalsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findMany"> | Null>
    jobCostSnapshots<T extends Company$jobCostSnapshotsArgs<ExtArgs> = {}>(args?: Subset<T, Company$jobCostSnapshotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "findMany"> | Null>
    systemPlugins<T extends Company$systemPluginsArgs<ExtArgs> = {}>(args?: Subset<T, Company$systemPluginsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "findMany"> | Null>
    JobAssignment<T extends Company$JobAssignmentArgs<ExtArgs> = {}>(args?: Subset<T, Company$JobAssignmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "findMany"> | Null>
    SystemPluginLog<T extends Company$SystemPluginLogArgs<ExtArgs> = {}>(args?: Subset<T, Company$SystemPluginLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Company model
   */ 
  interface CompanyFieldRefs {
    readonly id: FieldRef<"Company", 'String'>
    readonly name: FieldRef<"Company", 'String'>
    readonly email: FieldRef<"Company", 'String'>
    readonly phone: FieldRef<"Company", 'String'>
    readonly address: FieldRef<"Company", 'String'>
    readonly website: FieldRef<"Company", 'String'>
    readonly logo: FieldRef<"Company", 'String'>
    readonly plan: FieldRef<"Company", 'String'>
    readonly ratePerDay: FieldRef<"Company", 'Float'>
    readonly currency: FieldRef<"Company", 'String'>
    readonly isActive: FieldRef<"Company", 'Boolean'>
    readonly primaryColor: FieldRef<"Company", 'String'>
    readonly secondaryColor: FieldRef<"Company", 'String'>
    readonly accentColor: FieldRef<"Company", 'String'>
    readonly showCompanyName: FieldRef<"Company", 'Boolean'>
    readonly logoSize: FieldRef<"Company", 'String'>
    readonly createdAt: FieldRef<"Company", 'DateTime'>
    readonly updatedAt: FieldRef<"Company", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Company findUnique
   */
  export type CompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findUniqueOrThrow
   */
  export type CompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findFirst
   */
  export type CompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findFirstOrThrow
   */
  export type CompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findMany
   */
  export type CompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Companies to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company create
   */
  export type CompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to create a Company.
     */
    data: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
  }

  /**
   * Company createMany
   */
  export type CompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
  }

  /**
   * Company createManyAndReturn
   */
  export type CompanyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
  }

  /**
   * Company update
   */
  export type CompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to update a Company.
     */
    data: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
    /**
     * Choose, which Company to update.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company updateMany
   */
  export type CompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Companies.
     */
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyInput>
    /**
     * Filter which Companies to update
     */
    where?: CompanyWhereInput
  }

  /**
   * Company upsert
   */
  export type CompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The filter to search for the Company to update in case it exists.
     */
    where: CompanyWhereUniqueInput
    /**
     * In case the Company found by the `where` argument doesn't exist, create a new Company with this data.
     */
    create: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
    /**
     * In case the Company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
  }

  /**
   * Company delete
   */
  export type CompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter which Company to delete.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company deleteMany
   */
  export type CompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Companies to delete
     */
    where?: CompanyWhereInput
  }

  /**
   * Company.users
   */
  export type Company$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Company.racks
   */
  export type Company$racksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    where?: RackWhereInput
    orderBy?: RackOrderByWithRelationInput | RackOrderByWithRelationInput[]
    cursor?: RackWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RackScalarFieldEnum | RackScalarFieldEnum[]
  }

  /**
   * Company.shipments
   */
  export type Company$shipmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    where?: ShipmentWhereInput
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    cursor?: ShipmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * Company.movingJobs
   */
  export type Company$movingJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    where?: MovingJobWhereInput
    orderBy?: MovingJobOrderByWithRelationInput | MovingJobOrderByWithRelationInput[]
    cursor?: MovingJobWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovingJobScalarFieldEnum | MovingJobScalarFieldEnum[]
  }

  /**
   * Company.expenses
   */
  export type Company$expensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    cursor?: ExpenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * Company.invoiceSettings
   */
  export type Company$invoiceSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    where?: InvoiceSettingsWhereInput
  }

  /**
   * Company.customFields
   */
  export type Company$customFieldsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
    where?: CustomFieldWhereInput
    orderBy?: CustomFieldOrderByWithRelationInput | CustomFieldOrderByWithRelationInput[]
    cursor?: CustomFieldWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomFieldScalarFieldEnum | CustomFieldScalarFieldEnum[]
  }

  /**
   * Company.billingSettings
   */
  export type Company$billingSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
    where?: BillingSettingsWhereInput
  }

  /**
   * Company.chargeTypes
   */
  export type Company$chargeTypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    where?: ChargeTypeWhereInput
    orderBy?: ChargeTypeOrderByWithRelationInput | ChargeTypeOrderByWithRelationInput[]
    cursor?: ChargeTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChargeTypeScalarFieldEnum | ChargeTypeScalarFieldEnum[]
  }

  /**
   * Company.invoices
   */
  export type Company$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Company.invoiceLineItems
   */
  export type Company$invoiceLineItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    where?: InvoiceLineItemWhereInput
    orderBy?: InvoiceLineItemOrderByWithRelationInput | InvoiceLineItemOrderByWithRelationInput[]
    cursor?: InvoiceLineItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceLineItemScalarFieldEnum | InvoiceLineItemScalarFieldEnum[]
  }

  /**
   * Company.payments
   */
  export type Company$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Company.shipmentCharges
   */
  export type Company$shipmentChargesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    where?: ShipmentChargesWhereInput
    orderBy?: ShipmentChargesOrderByWithRelationInput | ShipmentChargesOrderByWithRelationInput[]
    cursor?: ShipmentChargesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentChargesScalarFieldEnum | ShipmentChargesScalarFieldEnum[]
  }

  /**
   * Company.shipmentSettings
   */
  export type Company$shipmentSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
    where?: ShipmentSettingsWhereInput
  }

  /**
   * Company.templateSettings
   */
  export type Company$templateSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
    where?: TemplateSettingsWhereInput
  }

  /**
   * Company.rolePermissions
   */
  export type Company$rolePermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    where?: RolePermissionWhereInput
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    cursor?: RolePermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * Company.packingMaterials
   */
  export type Company$packingMaterialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
    where?: PackingMaterialWhereInput
    orderBy?: PackingMaterialOrderByWithRelationInput | PackingMaterialOrderByWithRelationInput[]
    cursor?: PackingMaterialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PackingMaterialScalarFieldEnum | PackingMaterialScalarFieldEnum[]
  }

  /**
   * Company.vendors
   */
  export type Company$vendorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    where?: VendorWhereInput
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    cursor?: VendorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VendorScalarFieldEnum | VendorScalarFieldEnum[]
  }

  /**
   * Company.stockBatches
   */
  export type Company$stockBatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    where?: StockBatchWhereInput
    orderBy?: StockBatchOrderByWithRelationInput | StockBatchOrderByWithRelationInput[]
    cursor?: StockBatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockBatchScalarFieldEnum | StockBatchScalarFieldEnum[]
  }

  /**
   * Company.rackLevels
   */
  export type Company$rackLevelsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    where?: RackStockLevelWhereInput
    orderBy?: RackStockLevelOrderByWithRelationInput | RackStockLevelOrderByWithRelationInput[]
    cursor?: RackStockLevelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RackStockLevelScalarFieldEnum | RackStockLevelScalarFieldEnum[]
  }

  /**
   * Company.materialIssues
   */
  export type Company$materialIssuesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    where?: MaterialIssueWhereInput
    orderBy?: MaterialIssueOrderByWithRelationInput | MaterialIssueOrderByWithRelationInput[]
    cursor?: MaterialIssueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialIssueScalarFieldEnum | MaterialIssueScalarFieldEnum[]
  }

  /**
   * Company.materialReturns
   */
  export type Company$materialReturnsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    where?: MaterialReturnWhereInput
    orderBy?: MaterialReturnOrderByWithRelationInput | MaterialReturnOrderByWithRelationInput[]
    cursor?: MaterialReturnWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialReturnScalarFieldEnum | MaterialReturnScalarFieldEnum[]
  }

  /**
   * Company.materialDamages
   */
  export type Company$materialDamagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    where?: MaterialDamageWhereInput
    orderBy?: MaterialDamageOrderByWithRelationInput | MaterialDamageOrderByWithRelationInput[]
    cursor?: MaterialDamageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialDamageScalarFieldEnum | MaterialDamageScalarFieldEnum[]
  }

  /**
   * Company.materialApprovals
   */
  export type Company$materialApprovalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    where?: MaterialApprovalWhereInput
    orderBy?: MaterialApprovalOrderByWithRelationInput | MaterialApprovalOrderByWithRelationInput[]
    cursor?: MaterialApprovalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialApprovalScalarFieldEnum | MaterialApprovalScalarFieldEnum[]
  }

  /**
   * Company.jobCostSnapshots
   */
  export type Company$jobCostSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    where?: JobCostSnapshotWhereInput
    orderBy?: JobCostSnapshotOrderByWithRelationInput | JobCostSnapshotOrderByWithRelationInput[]
    cursor?: JobCostSnapshotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobCostSnapshotScalarFieldEnum | JobCostSnapshotScalarFieldEnum[]
  }

  /**
   * Company.systemPlugins
   */
  export type Company$systemPluginsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
    where?: SystemPluginWhereInput
    orderBy?: SystemPluginOrderByWithRelationInput | SystemPluginOrderByWithRelationInput[]
    cursor?: SystemPluginWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemPluginScalarFieldEnum | SystemPluginScalarFieldEnum[]
  }

  /**
   * Company.JobAssignment
   */
  export type Company$JobAssignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    where?: JobAssignmentWhereInput
    orderBy?: JobAssignmentOrderByWithRelationInput | JobAssignmentOrderByWithRelationInput[]
    cursor?: JobAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobAssignmentScalarFieldEnum | JobAssignmentScalarFieldEnum[]
  }

  /**
   * Company.SystemPluginLog
   */
  export type Company$SystemPluginLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    where?: SystemPluginLogWhereInput
    orderBy?: SystemPluginLogOrderByWithRelationInput | SystemPluginLogOrderByWithRelationInput[]
    cursor?: SystemPluginLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemPluginLogScalarFieldEnum | SystemPluginLogScalarFieldEnum[]
  }

  /**
   * Company without action
   */
  export type CompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    phone: string | null
    role: string | null
    skills: string | null
    isActive: boolean | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    avatar: string | null
    position: string | null
    department: string | null
    lastLoginAt: Date | null
    resetToken: string | null
    resetTokenExpiry: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    name: string | null
    phone: string | null
    role: string | null
    skills: string | null
    isActive: boolean | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    avatar: string | null
    position: string | null
    department: string | null
    lastLoginAt: Date | null
    resetToken: string | null
    resetTokenExpiry: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    name: number
    phone: number
    role: number
    skills: number
    isActive: number
    companyId: number
    createdAt: number
    updatedAt: number
    avatar: number
    position: number
    department: number
    lastLoginAt: number
    resetToken: number
    resetTokenExpiry: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    role?: true
    skills?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    avatar?: true
    position?: true
    department?: true
    lastLoginAt?: true
    resetToken?: true
    resetTokenExpiry?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    role?: true
    skills?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    avatar?: true
    position?: true
    department?: true
    lastLoginAt?: true
    resetToken?: true
    resetTokenExpiry?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    role?: true
    skills?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    avatar?: true
    position?: true
    department?: true
    lastLoginAt?: true
    resetToken?: true
    resetTokenExpiry?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    password: string
    name: string
    phone: string | null
    role: string
    skills: string | null
    isActive: boolean
    companyId: string
    createdAt: Date
    updatedAt: Date
    avatar: string | null
    position: string | null
    department: string | null
    lastLoginAt: Date | null
    resetToken: string | null
    resetTokenExpiry: Date | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    role?: boolean
    skills?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    avatar?: boolean
    position?: boolean
    department?: boolean
    lastLoginAt?: boolean
    resetToken?: boolean
    resetTokenExpiry?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    activities?: boolean | User$activitiesArgs<ExtArgs>
    jobAssignments?: boolean | User$jobAssignmentsArgs<ExtArgs>
    movingJobsLead?: boolean | User$movingJobsLeadArgs<ExtArgs>
    stockBatchesReceived?: boolean | User$stockBatchesReceivedArgs<ExtArgs>
    materialIssuesCreated?: boolean | User$materialIssuesCreatedArgs<ExtArgs>
    materialReturnsRecorded?: boolean | User$materialReturnsRecordedArgs<ExtArgs>
    damagesRecorded?: boolean | User$damagesRecordedArgs<ExtArgs>
    damagesApproved?: boolean | User$damagesApprovedArgs<ExtArgs>
    approvalsRequested?: boolean | User$approvalsRequestedArgs<ExtArgs>
    approvalsDecided?: boolean | User$approvalsDecidedArgs<ExtArgs>
    shipmentsCreated?: boolean | User$shipmentsCreatedArgs<ExtArgs>
    shipmentsAssigned?: boolean | User$shipmentsAssignedArgs<ExtArgs>
    shipmentsReleased?: boolean | User$shipmentsReleasedArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    role?: boolean
    skills?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    avatar?: boolean
    position?: boolean
    department?: boolean
    lastLoginAt?: boolean
    resetToken?: boolean
    resetTokenExpiry?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    role?: boolean
    skills?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    avatar?: boolean
    position?: boolean
    department?: boolean
    lastLoginAt?: boolean
    resetToken?: boolean
    resetTokenExpiry?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    activities?: boolean | User$activitiesArgs<ExtArgs>
    jobAssignments?: boolean | User$jobAssignmentsArgs<ExtArgs>
    movingJobsLead?: boolean | User$movingJobsLeadArgs<ExtArgs>
    stockBatchesReceived?: boolean | User$stockBatchesReceivedArgs<ExtArgs>
    materialIssuesCreated?: boolean | User$materialIssuesCreatedArgs<ExtArgs>
    materialReturnsRecorded?: boolean | User$materialReturnsRecordedArgs<ExtArgs>
    damagesRecorded?: boolean | User$damagesRecordedArgs<ExtArgs>
    damagesApproved?: boolean | User$damagesApprovedArgs<ExtArgs>
    approvalsRequested?: boolean | User$approvalsRequestedArgs<ExtArgs>
    approvalsDecided?: boolean | User$approvalsDecidedArgs<ExtArgs>
    shipmentsCreated?: boolean | User$shipmentsCreatedArgs<ExtArgs>
    shipmentsAssigned?: boolean | User$shipmentsAssignedArgs<ExtArgs>
    shipmentsReleased?: boolean | User$shipmentsReleasedArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      activities: Prisma.$RackActivityPayload<ExtArgs>[]
      jobAssignments: Prisma.$JobAssignmentPayload<ExtArgs>[]
      movingJobsLead: Prisma.$MovingJobPayload<ExtArgs>[]
      stockBatchesReceived: Prisma.$StockBatchPayload<ExtArgs>[]
      materialIssuesCreated: Prisma.$MaterialIssuePayload<ExtArgs>[]
      materialReturnsRecorded: Prisma.$MaterialReturnPayload<ExtArgs>[]
      damagesRecorded: Prisma.$MaterialDamagePayload<ExtArgs>[]
      damagesApproved: Prisma.$MaterialDamagePayload<ExtArgs>[]
      approvalsRequested: Prisma.$MaterialApprovalPayload<ExtArgs>[]
      approvalsDecided: Prisma.$MaterialApprovalPayload<ExtArgs>[]
      shipmentsCreated: Prisma.$ShipmentPayload<ExtArgs>[]
      shipmentsAssigned: Prisma.$ShipmentPayload<ExtArgs>[]
      shipmentsReleased: Prisma.$ShipmentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      name: string
      phone: string | null
      role: string
      skills: string | null
      isActive: boolean
      companyId: string
      createdAt: Date
      updatedAt: Date
      avatar: string | null
      position: string | null
      department: string | null
      lastLoginAt: Date | null
      resetToken: string | null
      resetTokenExpiry: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    activities<T extends User$activitiesArgs<ExtArgs> = {}>(args?: Subset<T, User$activitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "findMany"> | Null>
    jobAssignments<T extends User$jobAssignmentsArgs<ExtArgs> = {}>(args?: Subset<T, User$jobAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "findMany"> | Null>
    movingJobsLead<T extends User$movingJobsLeadArgs<ExtArgs> = {}>(args?: Subset<T, User$movingJobsLeadArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findMany"> | Null>
    stockBatchesReceived<T extends User$stockBatchesReceivedArgs<ExtArgs> = {}>(args?: Subset<T, User$stockBatchesReceivedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findMany"> | Null>
    materialIssuesCreated<T extends User$materialIssuesCreatedArgs<ExtArgs> = {}>(args?: Subset<T, User$materialIssuesCreatedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findMany"> | Null>
    materialReturnsRecorded<T extends User$materialReturnsRecordedArgs<ExtArgs> = {}>(args?: Subset<T, User$materialReturnsRecordedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findMany"> | Null>
    damagesRecorded<T extends User$damagesRecordedArgs<ExtArgs> = {}>(args?: Subset<T, User$damagesRecordedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findMany"> | Null>
    damagesApproved<T extends User$damagesApprovedArgs<ExtArgs> = {}>(args?: Subset<T, User$damagesApprovedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findMany"> | Null>
    approvalsRequested<T extends User$approvalsRequestedArgs<ExtArgs> = {}>(args?: Subset<T, User$approvalsRequestedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findMany"> | Null>
    approvalsDecided<T extends User$approvalsDecidedArgs<ExtArgs> = {}>(args?: Subset<T, User$approvalsDecidedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findMany"> | Null>
    shipmentsCreated<T extends User$shipmentsCreatedArgs<ExtArgs> = {}>(args?: Subset<T, User$shipmentsCreatedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findMany"> | Null>
    shipmentsAssigned<T extends User$shipmentsAssignedArgs<ExtArgs> = {}>(args?: Subset<T, User$shipmentsAssignedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findMany"> | Null>
    shipmentsReleased<T extends User$shipmentsReleasedArgs<ExtArgs> = {}>(args?: Subset<T, User$shipmentsReleasedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly skills: FieldRef<"User", 'String'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly companyId: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly position: FieldRef<"User", 'String'>
    readonly department: FieldRef<"User", 'String'>
    readonly lastLoginAt: FieldRef<"User", 'DateTime'>
    readonly resetToken: FieldRef<"User", 'String'>
    readonly resetTokenExpiry: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.activities
   */
  export type User$activitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    where?: RackActivityWhereInput
    orderBy?: RackActivityOrderByWithRelationInput | RackActivityOrderByWithRelationInput[]
    cursor?: RackActivityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RackActivityScalarFieldEnum | RackActivityScalarFieldEnum[]
  }

  /**
   * User.jobAssignments
   */
  export type User$jobAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    where?: JobAssignmentWhereInput
    orderBy?: JobAssignmentOrderByWithRelationInput | JobAssignmentOrderByWithRelationInput[]
    cursor?: JobAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobAssignmentScalarFieldEnum | JobAssignmentScalarFieldEnum[]
  }

  /**
   * User.movingJobsLead
   */
  export type User$movingJobsLeadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    where?: MovingJobWhereInput
    orderBy?: MovingJobOrderByWithRelationInput | MovingJobOrderByWithRelationInput[]
    cursor?: MovingJobWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovingJobScalarFieldEnum | MovingJobScalarFieldEnum[]
  }

  /**
   * User.stockBatchesReceived
   */
  export type User$stockBatchesReceivedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    where?: StockBatchWhereInput
    orderBy?: StockBatchOrderByWithRelationInput | StockBatchOrderByWithRelationInput[]
    cursor?: StockBatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockBatchScalarFieldEnum | StockBatchScalarFieldEnum[]
  }

  /**
   * User.materialIssuesCreated
   */
  export type User$materialIssuesCreatedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    where?: MaterialIssueWhereInput
    orderBy?: MaterialIssueOrderByWithRelationInput | MaterialIssueOrderByWithRelationInput[]
    cursor?: MaterialIssueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialIssueScalarFieldEnum | MaterialIssueScalarFieldEnum[]
  }

  /**
   * User.materialReturnsRecorded
   */
  export type User$materialReturnsRecordedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    where?: MaterialReturnWhereInput
    orderBy?: MaterialReturnOrderByWithRelationInput | MaterialReturnOrderByWithRelationInput[]
    cursor?: MaterialReturnWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialReturnScalarFieldEnum | MaterialReturnScalarFieldEnum[]
  }

  /**
   * User.damagesRecorded
   */
  export type User$damagesRecordedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    where?: MaterialDamageWhereInput
    orderBy?: MaterialDamageOrderByWithRelationInput | MaterialDamageOrderByWithRelationInput[]
    cursor?: MaterialDamageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialDamageScalarFieldEnum | MaterialDamageScalarFieldEnum[]
  }

  /**
   * User.damagesApproved
   */
  export type User$damagesApprovedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    where?: MaterialDamageWhereInput
    orderBy?: MaterialDamageOrderByWithRelationInput | MaterialDamageOrderByWithRelationInput[]
    cursor?: MaterialDamageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialDamageScalarFieldEnum | MaterialDamageScalarFieldEnum[]
  }

  /**
   * User.approvalsRequested
   */
  export type User$approvalsRequestedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    where?: MaterialApprovalWhereInput
    orderBy?: MaterialApprovalOrderByWithRelationInput | MaterialApprovalOrderByWithRelationInput[]
    cursor?: MaterialApprovalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialApprovalScalarFieldEnum | MaterialApprovalScalarFieldEnum[]
  }

  /**
   * User.approvalsDecided
   */
  export type User$approvalsDecidedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    where?: MaterialApprovalWhereInput
    orderBy?: MaterialApprovalOrderByWithRelationInput | MaterialApprovalOrderByWithRelationInput[]
    cursor?: MaterialApprovalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialApprovalScalarFieldEnum | MaterialApprovalScalarFieldEnum[]
  }

  /**
   * User.shipmentsCreated
   */
  export type User$shipmentsCreatedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    where?: ShipmentWhereInput
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    cursor?: ShipmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * User.shipmentsAssigned
   */
  export type User$shipmentsAssignedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    where?: ShipmentWhereInput
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    cursor?: ShipmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * User.shipmentsReleased
   */
  export type User$shipmentsReleasedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    where?: ShipmentWhereInput
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    cursor?: ShipmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Rack
   */

  export type AggregateRack = {
    _count: RackCountAggregateOutputType | null
    _avg: RackAvgAggregateOutputType | null
    _sum: RackSumAggregateOutputType | null
    _min: RackMinAggregateOutputType | null
    _max: RackMaxAggregateOutputType | null
  }

  export type RackAvgAggregateOutputType = {
    capacityTotal: number | null
    capacityUsed: number | null
    minCapacity: number | null
  }

  export type RackSumAggregateOutputType = {
    capacityTotal: number | null
    capacityUsed: number | null
    minCapacity: number | null
  }

  export type RackMinAggregateOutputType = {
    id: string | null
    code: string | null
    qrCode: string | null
    rackType: string | null
    location: string | null
    capacityTotal: number | null
    capacityUsed: number | null
    minCapacity: number | null
    status: string | null
    lastActivity: Date | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RackMaxAggregateOutputType = {
    id: string | null
    code: string | null
    qrCode: string | null
    rackType: string | null
    location: string | null
    capacityTotal: number | null
    capacityUsed: number | null
    minCapacity: number | null
    status: string | null
    lastActivity: Date | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RackCountAggregateOutputType = {
    id: number
    code: number
    qrCode: number
    rackType: number
    location: number
    capacityTotal: number
    capacityUsed: number
    minCapacity: number
    status: number
    lastActivity: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RackAvgAggregateInputType = {
    capacityTotal?: true
    capacityUsed?: true
    minCapacity?: true
  }

  export type RackSumAggregateInputType = {
    capacityTotal?: true
    capacityUsed?: true
    minCapacity?: true
  }

  export type RackMinAggregateInputType = {
    id?: true
    code?: true
    qrCode?: true
    rackType?: true
    location?: true
    capacityTotal?: true
    capacityUsed?: true
    minCapacity?: true
    status?: true
    lastActivity?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RackMaxAggregateInputType = {
    id?: true
    code?: true
    qrCode?: true
    rackType?: true
    location?: true
    capacityTotal?: true
    capacityUsed?: true
    minCapacity?: true
    status?: true
    lastActivity?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RackCountAggregateInputType = {
    id?: true
    code?: true
    qrCode?: true
    rackType?: true
    location?: true
    capacityTotal?: true
    capacityUsed?: true
    minCapacity?: true
    status?: true
    lastActivity?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RackAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rack to aggregate.
     */
    where?: RackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Racks to fetch.
     */
    orderBy?: RackOrderByWithRelationInput | RackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Racks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Racks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Racks
    **/
    _count?: true | RackCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RackAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RackSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RackMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RackMaxAggregateInputType
  }

  export type GetRackAggregateType<T extends RackAggregateArgs> = {
        [P in keyof T & keyof AggregateRack]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRack[P]>
      : GetScalarType<T[P], AggregateRack[P]>
  }




  export type RackGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackWhereInput
    orderBy?: RackOrderByWithAggregationInput | RackOrderByWithAggregationInput[]
    by: RackScalarFieldEnum[] | RackScalarFieldEnum
    having?: RackScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RackCountAggregateInputType | true
    _avg?: RackAvgAggregateInputType
    _sum?: RackSumAggregateInputType
    _min?: RackMinAggregateInputType
    _max?: RackMaxAggregateInputType
  }

  export type RackGroupByOutputType = {
    id: string
    code: string
    qrCode: string
    rackType: string
    location: string | null
    capacityTotal: number
    capacityUsed: number
    minCapacity: number
    status: string
    lastActivity: Date | null
    companyId: string
    createdAt: Date
    updatedAt: Date
    _count: RackCountAggregateOutputType | null
    _avg: RackAvgAggregateOutputType | null
    _sum: RackSumAggregateOutputType | null
    _min: RackMinAggregateOutputType | null
    _max: RackMaxAggregateOutputType | null
  }

  type GetRackGroupByPayload<T extends RackGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RackGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RackGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RackGroupByOutputType[P]>
            : GetScalarType<T[P], RackGroupByOutputType[P]>
        }
      >
    >


  export type RackSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    qrCode?: boolean
    rackType?: boolean
    location?: boolean
    capacityTotal?: boolean
    capacityUsed?: boolean
    minCapacity?: boolean
    status?: boolean
    lastActivity?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    shipments?: boolean | Rack$shipmentsArgs<ExtArgs>
    boxes?: boolean | Rack$boxesArgs<ExtArgs>
    activities?: boolean | Rack$activitiesArgs<ExtArgs>
    inventory?: boolean | Rack$inventoryArgs<ExtArgs>
    materialLevels?: boolean | Rack$materialLevelsArgs<ExtArgs>
    MaterialReturn?: boolean | Rack$MaterialReturnArgs<ExtArgs>
    jobMaterials?: boolean | Rack$jobMaterialsArgs<ExtArgs>
    _count?: boolean | RackCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rack"]>

  export type RackSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    qrCode?: boolean
    rackType?: boolean
    location?: boolean
    capacityTotal?: boolean
    capacityUsed?: boolean
    minCapacity?: boolean
    status?: boolean
    lastActivity?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rack"]>

  export type RackSelectScalar = {
    id?: boolean
    code?: boolean
    qrCode?: boolean
    rackType?: boolean
    location?: boolean
    capacityTotal?: boolean
    capacityUsed?: boolean
    minCapacity?: boolean
    status?: boolean
    lastActivity?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RackInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    shipments?: boolean | Rack$shipmentsArgs<ExtArgs>
    boxes?: boolean | Rack$boxesArgs<ExtArgs>
    activities?: boolean | Rack$activitiesArgs<ExtArgs>
    inventory?: boolean | Rack$inventoryArgs<ExtArgs>
    materialLevels?: boolean | Rack$materialLevelsArgs<ExtArgs>
    MaterialReturn?: boolean | Rack$MaterialReturnArgs<ExtArgs>
    jobMaterials?: boolean | Rack$jobMaterialsArgs<ExtArgs>
    _count?: boolean | RackCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RackIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $RackPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Rack"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      shipments: Prisma.$ShipmentPayload<ExtArgs>[]
      boxes: Prisma.$ShipmentBoxPayload<ExtArgs>[]
      activities: Prisma.$RackActivityPayload<ExtArgs>[]
      inventory: Prisma.$RackInventoryPayload<ExtArgs>[]
      materialLevels: Prisma.$RackStockLevelPayload<ExtArgs>[]
      MaterialReturn: Prisma.$MaterialReturnPayload<ExtArgs>[]
      jobMaterials: Prisma.$MaterialIssuePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      code: string
      qrCode: string
      rackType: string
      location: string | null
      capacityTotal: number
      capacityUsed: number
      minCapacity: number
      status: string
      lastActivity: Date | null
      companyId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["rack"]>
    composites: {}
  }

  type RackGetPayload<S extends boolean | null | undefined | RackDefaultArgs> = $Result.GetResult<Prisma.$RackPayload, S>

  type RackCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RackFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RackCountAggregateInputType | true
    }

  export interface RackDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Rack'], meta: { name: 'Rack' } }
    /**
     * Find zero or one Rack that matches the filter.
     * @param {RackFindUniqueArgs} args - Arguments to find a Rack
     * @example
     * // Get one Rack
     * const rack = await prisma.rack.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RackFindUniqueArgs>(args: SelectSubset<T, RackFindUniqueArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Rack that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RackFindUniqueOrThrowArgs} args - Arguments to find a Rack
     * @example
     * // Get one Rack
     * const rack = await prisma.rack.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RackFindUniqueOrThrowArgs>(args: SelectSubset<T, RackFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Rack that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackFindFirstArgs} args - Arguments to find a Rack
     * @example
     * // Get one Rack
     * const rack = await prisma.rack.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RackFindFirstArgs>(args?: SelectSubset<T, RackFindFirstArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Rack that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackFindFirstOrThrowArgs} args - Arguments to find a Rack
     * @example
     * // Get one Rack
     * const rack = await prisma.rack.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RackFindFirstOrThrowArgs>(args?: SelectSubset<T, RackFindFirstOrThrowArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Racks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Racks
     * const racks = await prisma.rack.findMany()
     * 
     * // Get first 10 Racks
     * const racks = await prisma.rack.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rackWithIdOnly = await prisma.rack.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RackFindManyArgs>(args?: SelectSubset<T, RackFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Rack.
     * @param {RackCreateArgs} args - Arguments to create a Rack.
     * @example
     * // Create one Rack
     * const Rack = await prisma.rack.create({
     *   data: {
     *     // ... data to create a Rack
     *   }
     * })
     * 
     */
    create<T extends RackCreateArgs>(args: SelectSubset<T, RackCreateArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Racks.
     * @param {RackCreateManyArgs} args - Arguments to create many Racks.
     * @example
     * // Create many Racks
     * const rack = await prisma.rack.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RackCreateManyArgs>(args?: SelectSubset<T, RackCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Racks and returns the data saved in the database.
     * @param {RackCreateManyAndReturnArgs} args - Arguments to create many Racks.
     * @example
     * // Create many Racks
     * const rack = await prisma.rack.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Racks and only return the `id`
     * const rackWithIdOnly = await prisma.rack.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RackCreateManyAndReturnArgs>(args?: SelectSubset<T, RackCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Rack.
     * @param {RackDeleteArgs} args - Arguments to delete one Rack.
     * @example
     * // Delete one Rack
     * const Rack = await prisma.rack.delete({
     *   where: {
     *     // ... filter to delete one Rack
     *   }
     * })
     * 
     */
    delete<T extends RackDeleteArgs>(args: SelectSubset<T, RackDeleteArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Rack.
     * @param {RackUpdateArgs} args - Arguments to update one Rack.
     * @example
     * // Update one Rack
     * const rack = await prisma.rack.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RackUpdateArgs>(args: SelectSubset<T, RackUpdateArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Racks.
     * @param {RackDeleteManyArgs} args - Arguments to filter Racks to delete.
     * @example
     * // Delete a few Racks
     * const { count } = await prisma.rack.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RackDeleteManyArgs>(args?: SelectSubset<T, RackDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Racks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Racks
     * const rack = await prisma.rack.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RackUpdateManyArgs>(args: SelectSubset<T, RackUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Rack.
     * @param {RackUpsertArgs} args - Arguments to update or create a Rack.
     * @example
     * // Update or create a Rack
     * const rack = await prisma.rack.upsert({
     *   create: {
     *     // ... data to create a Rack
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rack we want to update
     *   }
     * })
     */
    upsert<T extends RackUpsertArgs>(args: SelectSubset<T, RackUpsertArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Racks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackCountArgs} args - Arguments to filter Racks to count.
     * @example
     * // Count the number of Racks
     * const count = await prisma.rack.count({
     *   where: {
     *     // ... the filter for the Racks we want to count
     *   }
     * })
    **/
    count<T extends RackCountArgs>(
      args?: Subset<T, RackCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RackCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rack.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RackAggregateArgs>(args: Subset<T, RackAggregateArgs>): Prisma.PrismaPromise<GetRackAggregateType<T>>

    /**
     * Group by Rack.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RackGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RackGroupByArgs['orderBy'] }
        : { orderBy?: RackGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RackGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRackGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Rack model
   */
  readonly fields: RackFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Rack.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RackClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    shipments<T extends Rack$shipmentsArgs<ExtArgs> = {}>(args?: Subset<T, Rack$shipmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findMany"> | Null>
    boxes<T extends Rack$boxesArgs<ExtArgs> = {}>(args?: Subset<T, Rack$boxesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "findMany"> | Null>
    activities<T extends Rack$activitiesArgs<ExtArgs> = {}>(args?: Subset<T, Rack$activitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "findMany"> | Null>
    inventory<T extends Rack$inventoryArgs<ExtArgs> = {}>(args?: Subset<T, Rack$inventoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "findMany"> | Null>
    materialLevels<T extends Rack$materialLevelsArgs<ExtArgs> = {}>(args?: Subset<T, Rack$materialLevelsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "findMany"> | Null>
    MaterialReturn<T extends Rack$MaterialReturnArgs<ExtArgs> = {}>(args?: Subset<T, Rack$MaterialReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findMany"> | Null>
    jobMaterials<T extends Rack$jobMaterialsArgs<ExtArgs> = {}>(args?: Subset<T, Rack$jobMaterialsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Rack model
   */ 
  interface RackFieldRefs {
    readonly id: FieldRef<"Rack", 'String'>
    readonly code: FieldRef<"Rack", 'String'>
    readonly qrCode: FieldRef<"Rack", 'String'>
    readonly rackType: FieldRef<"Rack", 'String'>
    readonly location: FieldRef<"Rack", 'String'>
    readonly capacityTotal: FieldRef<"Rack", 'Float'>
    readonly capacityUsed: FieldRef<"Rack", 'Float'>
    readonly minCapacity: FieldRef<"Rack", 'Int'>
    readonly status: FieldRef<"Rack", 'String'>
    readonly lastActivity: FieldRef<"Rack", 'DateTime'>
    readonly companyId: FieldRef<"Rack", 'String'>
    readonly createdAt: FieldRef<"Rack", 'DateTime'>
    readonly updatedAt: FieldRef<"Rack", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Rack findUnique
   */
  export type RackFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    /**
     * Filter, which Rack to fetch.
     */
    where: RackWhereUniqueInput
  }

  /**
   * Rack findUniqueOrThrow
   */
  export type RackFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    /**
     * Filter, which Rack to fetch.
     */
    where: RackWhereUniqueInput
  }

  /**
   * Rack findFirst
   */
  export type RackFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    /**
     * Filter, which Rack to fetch.
     */
    where?: RackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Racks to fetch.
     */
    orderBy?: RackOrderByWithRelationInput | RackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Racks.
     */
    cursor?: RackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Racks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Racks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Racks.
     */
    distinct?: RackScalarFieldEnum | RackScalarFieldEnum[]
  }

  /**
   * Rack findFirstOrThrow
   */
  export type RackFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    /**
     * Filter, which Rack to fetch.
     */
    where?: RackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Racks to fetch.
     */
    orderBy?: RackOrderByWithRelationInput | RackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Racks.
     */
    cursor?: RackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Racks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Racks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Racks.
     */
    distinct?: RackScalarFieldEnum | RackScalarFieldEnum[]
  }

  /**
   * Rack findMany
   */
  export type RackFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    /**
     * Filter, which Racks to fetch.
     */
    where?: RackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Racks to fetch.
     */
    orderBy?: RackOrderByWithRelationInput | RackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Racks.
     */
    cursor?: RackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Racks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Racks.
     */
    skip?: number
    distinct?: RackScalarFieldEnum | RackScalarFieldEnum[]
  }

  /**
   * Rack create
   */
  export type RackCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    /**
     * The data needed to create a Rack.
     */
    data: XOR<RackCreateInput, RackUncheckedCreateInput>
  }

  /**
   * Rack createMany
   */
  export type RackCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Racks.
     */
    data: RackCreateManyInput | RackCreateManyInput[]
  }

  /**
   * Rack createManyAndReturn
   */
  export type RackCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Racks.
     */
    data: RackCreateManyInput | RackCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Rack update
   */
  export type RackUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    /**
     * The data needed to update a Rack.
     */
    data: XOR<RackUpdateInput, RackUncheckedUpdateInput>
    /**
     * Choose, which Rack to update.
     */
    where: RackWhereUniqueInput
  }

  /**
   * Rack updateMany
   */
  export type RackUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Racks.
     */
    data: XOR<RackUpdateManyMutationInput, RackUncheckedUpdateManyInput>
    /**
     * Filter which Racks to update
     */
    where?: RackWhereInput
  }

  /**
   * Rack upsert
   */
  export type RackUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    /**
     * The filter to search for the Rack to update in case it exists.
     */
    where: RackWhereUniqueInput
    /**
     * In case the Rack found by the `where` argument doesn't exist, create a new Rack with this data.
     */
    create: XOR<RackCreateInput, RackUncheckedCreateInput>
    /**
     * In case the Rack was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RackUpdateInput, RackUncheckedUpdateInput>
  }

  /**
   * Rack delete
   */
  export type RackDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    /**
     * Filter which Rack to delete.
     */
    where: RackWhereUniqueInput
  }

  /**
   * Rack deleteMany
   */
  export type RackDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Racks to delete
     */
    where?: RackWhereInput
  }

  /**
   * Rack.shipments
   */
  export type Rack$shipmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    where?: ShipmentWhereInput
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    cursor?: ShipmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * Rack.boxes
   */
  export type Rack$boxesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    where?: ShipmentBoxWhereInput
    orderBy?: ShipmentBoxOrderByWithRelationInput | ShipmentBoxOrderByWithRelationInput[]
    cursor?: ShipmentBoxWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentBoxScalarFieldEnum | ShipmentBoxScalarFieldEnum[]
  }

  /**
   * Rack.activities
   */
  export type Rack$activitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    where?: RackActivityWhereInput
    orderBy?: RackActivityOrderByWithRelationInput | RackActivityOrderByWithRelationInput[]
    cursor?: RackActivityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RackActivityScalarFieldEnum | RackActivityScalarFieldEnum[]
  }

  /**
   * Rack.inventory
   */
  export type Rack$inventoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
    where?: RackInventoryWhereInput
    orderBy?: RackInventoryOrderByWithRelationInput | RackInventoryOrderByWithRelationInput[]
    cursor?: RackInventoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RackInventoryScalarFieldEnum | RackInventoryScalarFieldEnum[]
  }

  /**
   * Rack.materialLevels
   */
  export type Rack$materialLevelsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    where?: RackStockLevelWhereInput
    orderBy?: RackStockLevelOrderByWithRelationInput | RackStockLevelOrderByWithRelationInput[]
    cursor?: RackStockLevelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RackStockLevelScalarFieldEnum | RackStockLevelScalarFieldEnum[]
  }

  /**
   * Rack.MaterialReturn
   */
  export type Rack$MaterialReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    where?: MaterialReturnWhereInput
    orderBy?: MaterialReturnOrderByWithRelationInput | MaterialReturnOrderByWithRelationInput[]
    cursor?: MaterialReturnWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialReturnScalarFieldEnum | MaterialReturnScalarFieldEnum[]
  }

  /**
   * Rack.jobMaterials
   */
  export type Rack$jobMaterialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    where?: MaterialIssueWhereInput
    orderBy?: MaterialIssueOrderByWithRelationInput | MaterialIssueOrderByWithRelationInput[]
    cursor?: MaterialIssueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialIssueScalarFieldEnum | MaterialIssueScalarFieldEnum[]
  }

  /**
   * Rack without action
   */
  export type RackDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
  }


  /**
   * Model RackInventory
   */

  export type AggregateRackInventory = {
    _count: RackInventoryCountAggregateOutputType | null
    _avg: RackInventoryAvgAggregateOutputType | null
    _sum: RackInventorySumAggregateOutputType | null
    _min: RackInventoryMinAggregateOutputType | null
    _max: RackInventoryMaxAggregateOutputType | null
  }

  export type RackInventoryAvgAggregateOutputType = {
    quantityCurrent: number | null
    quantityReserved: number | null
  }

  export type RackInventorySumAggregateOutputType = {
    quantityCurrent: number | null
    quantityReserved: number | null
  }

  export type RackInventoryMinAggregateOutputType = {
    id: string | null
    rackId: string | null
    itemType: string | null
    itemId: string | null
    quantityCurrent: number | null
    quantityReserved: number | null
    lastMovement: Date | null
    updatedBy: string | null
    companyId: string | null
  }

  export type RackInventoryMaxAggregateOutputType = {
    id: string | null
    rackId: string | null
    itemType: string | null
    itemId: string | null
    quantityCurrent: number | null
    quantityReserved: number | null
    lastMovement: Date | null
    updatedBy: string | null
    companyId: string | null
  }

  export type RackInventoryCountAggregateOutputType = {
    id: number
    rackId: number
    itemType: number
    itemId: number
    quantityCurrent: number
    quantityReserved: number
    lastMovement: number
    updatedBy: number
    companyId: number
    _all: number
  }


  export type RackInventoryAvgAggregateInputType = {
    quantityCurrent?: true
    quantityReserved?: true
  }

  export type RackInventorySumAggregateInputType = {
    quantityCurrent?: true
    quantityReserved?: true
  }

  export type RackInventoryMinAggregateInputType = {
    id?: true
    rackId?: true
    itemType?: true
    itemId?: true
    quantityCurrent?: true
    quantityReserved?: true
    lastMovement?: true
    updatedBy?: true
    companyId?: true
  }

  export type RackInventoryMaxAggregateInputType = {
    id?: true
    rackId?: true
    itemType?: true
    itemId?: true
    quantityCurrent?: true
    quantityReserved?: true
    lastMovement?: true
    updatedBy?: true
    companyId?: true
  }

  export type RackInventoryCountAggregateInputType = {
    id?: true
    rackId?: true
    itemType?: true
    itemId?: true
    quantityCurrent?: true
    quantityReserved?: true
    lastMovement?: true
    updatedBy?: true
    companyId?: true
    _all?: true
  }

  export type RackInventoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RackInventory to aggregate.
     */
    where?: RackInventoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackInventories to fetch.
     */
    orderBy?: RackInventoryOrderByWithRelationInput | RackInventoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RackInventoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackInventories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackInventories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RackInventories
    **/
    _count?: true | RackInventoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RackInventoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RackInventorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RackInventoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RackInventoryMaxAggregateInputType
  }

  export type GetRackInventoryAggregateType<T extends RackInventoryAggregateArgs> = {
        [P in keyof T & keyof AggregateRackInventory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRackInventory[P]>
      : GetScalarType<T[P], AggregateRackInventory[P]>
  }




  export type RackInventoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackInventoryWhereInput
    orderBy?: RackInventoryOrderByWithAggregationInput | RackInventoryOrderByWithAggregationInput[]
    by: RackInventoryScalarFieldEnum[] | RackInventoryScalarFieldEnum
    having?: RackInventoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RackInventoryCountAggregateInputType | true
    _avg?: RackInventoryAvgAggregateInputType
    _sum?: RackInventorySumAggregateInputType
    _min?: RackInventoryMinAggregateInputType
    _max?: RackInventoryMaxAggregateInputType
  }

  export type RackInventoryGroupByOutputType = {
    id: string
    rackId: string
    itemType: string
    itemId: string
    quantityCurrent: number
    quantityReserved: number
    lastMovement: Date
    updatedBy: string | null
    companyId: string
    _count: RackInventoryCountAggregateOutputType | null
    _avg: RackInventoryAvgAggregateOutputType | null
    _sum: RackInventorySumAggregateOutputType | null
    _min: RackInventoryMinAggregateOutputType | null
    _max: RackInventoryMaxAggregateOutputType | null
  }

  type GetRackInventoryGroupByPayload<T extends RackInventoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RackInventoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RackInventoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RackInventoryGroupByOutputType[P]>
            : GetScalarType<T[P], RackInventoryGroupByOutputType[P]>
        }
      >
    >


  export type RackInventorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rackId?: boolean
    itemType?: boolean
    itemId?: boolean
    quantityCurrent?: boolean
    quantityReserved?: boolean
    lastMovement?: boolean
    updatedBy?: boolean
    companyId?: boolean
    rack?: boolean | RackDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rackInventory"]>

  export type RackInventorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rackId?: boolean
    itemType?: boolean
    itemId?: boolean
    quantityCurrent?: boolean
    quantityReserved?: boolean
    lastMovement?: boolean
    updatedBy?: boolean
    companyId?: boolean
    rack?: boolean | RackDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rackInventory"]>

  export type RackInventorySelectScalar = {
    id?: boolean
    rackId?: boolean
    itemType?: boolean
    itemId?: boolean
    quantityCurrent?: boolean
    quantityReserved?: boolean
    lastMovement?: boolean
    updatedBy?: boolean
    companyId?: boolean
  }

  export type RackInventoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rack?: boolean | RackDefaultArgs<ExtArgs>
  }
  export type RackInventoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rack?: boolean | RackDefaultArgs<ExtArgs>
  }

  export type $RackInventoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RackInventory"
    objects: {
      rack: Prisma.$RackPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      rackId: string
      itemType: string
      itemId: string
      quantityCurrent: number
      quantityReserved: number
      lastMovement: Date
      updatedBy: string | null
      companyId: string
    }, ExtArgs["result"]["rackInventory"]>
    composites: {}
  }

  type RackInventoryGetPayload<S extends boolean | null | undefined | RackInventoryDefaultArgs> = $Result.GetResult<Prisma.$RackInventoryPayload, S>

  type RackInventoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RackInventoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RackInventoryCountAggregateInputType | true
    }

  export interface RackInventoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RackInventory'], meta: { name: 'RackInventory' } }
    /**
     * Find zero or one RackInventory that matches the filter.
     * @param {RackInventoryFindUniqueArgs} args - Arguments to find a RackInventory
     * @example
     * // Get one RackInventory
     * const rackInventory = await prisma.rackInventory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RackInventoryFindUniqueArgs>(args: SelectSubset<T, RackInventoryFindUniqueArgs<ExtArgs>>): Prisma__RackInventoryClient<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RackInventory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RackInventoryFindUniqueOrThrowArgs} args - Arguments to find a RackInventory
     * @example
     * // Get one RackInventory
     * const rackInventory = await prisma.rackInventory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RackInventoryFindUniqueOrThrowArgs>(args: SelectSubset<T, RackInventoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RackInventoryClient<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RackInventory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackInventoryFindFirstArgs} args - Arguments to find a RackInventory
     * @example
     * // Get one RackInventory
     * const rackInventory = await prisma.rackInventory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RackInventoryFindFirstArgs>(args?: SelectSubset<T, RackInventoryFindFirstArgs<ExtArgs>>): Prisma__RackInventoryClient<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RackInventory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackInventoryFindFirstOrThrowArgs} args - Arguments to find a RackInventory
     * @example
     * // Get one RackInventory
     * const rackInventory = await prisma.rackInventory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RackInventoryFindFirstOrThrowArgs>(args?: SelectSubset<T, RackInventoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__RackInventoryClient<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RackInventories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackInventoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RackInventories
     * const rackInventories = await prisma.rackInventory.findMany()
     * 
     * // Get first 10 RackInventories
     * const rackInventories = await prisma.rackInventory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rackInventoryWithIdOnly = await prisma.rackInventory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RackInventoryFindManyArgs>(args?: SelectSubset<T, RackInventoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RackInventory.
     * @param {RackInventoryCreateArgs} args - Arguments to create a RackInventory.
     * @example
     * // Create one RackInventory
     * const RackInventory = await prisma.rackInventory.create({
     *   data: {
     *     // ... data to create a RackInventory
     *   }
     * })
     * 
     */
    create<T extends RackInventoryCreateArgs>(args: SelectSubset<T, RackInventoryCreateArgs<ExtArgs>>): Prisma__RackInventoryClient<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RackInventories.
     * @param {RackInventoryCreateManyArgs} args - Arguments to create many RackInventories.
     * @example
     * // Create many RackInventories
     * const rackInventory = await prisma.rackInventory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RackInventoryCreateManyArgs>(args?: SelectSubset<T, RackInventoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RackInventories and returns the data saved in the database.
     * @param {RackInventoryCreateManyAndReturnArgs} args - Arguments to create many RackInventories.
     * @example
     * // Create many RackInventories
     * const rackInventory = await prisma.rackInventory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RackInventories and only return the `id`
     * const rackInventoryWithIdOnly = await prisma.rackInventory.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RackInventoryCreateManyAndReturnArgs>(args?: SelectSubset<T, RackInventoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RackInventory.
     * @param {RackInventoryDeleteArgs} args - Arguments to delete one RackInventory.
     * @example
     * // Delete one RackInventory
     * const RackInventory = await prisma.rackInventory.delete({
     *   where: {
     *     // ... filter to delete one RackInventory
     *   }
     * })
     * 
     */
    delete<T extends RackInventoryDeleteArgs>(args: SelectSubset<T, RackInventoryDeleteArgs<ExtArgs>>): Prisma__RackInventoryClient<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RackInventory.
     * @param {RackInventoryUpdateArgs} args - Arguments to update one RackInventory.
     * @example
     * // Update one RackInventory
     * const rackInventory = await prisma.rackInventory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RackInventoryUpdateArgs>(args: SelectSubset<T, RackInventoryUpdateArgs<ExtArgs>>): Prisma__RackInventoryClient<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RackInventories.
     * @param {RackInventoryDeleteManyArgs} args - Arguments to filter RackInventories to delete.
     * @example
     * // Delete a few RackInventories
     * const { count } = await prisma.rackInventory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RackInventoryDeleteManyArgs>(args?: SelectSubset<T, RackInventoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RackInventories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackInventoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RackInventories
     * const rackInventory = await prisma.rackInventory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RackInventoryUpdateManyArgs>(args: SelectSubset<T, RackInventoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RackInventory.
     * @param {RackInventoryUpsertArgs} args - Arguments to update or create a RackInventory.
     * @example
     * // Update or create a RackInventory
     * const rackInventory = await prisma.rackInventory.upsert({
     *   create: {
     *     // ... data to create a RackInventory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RackInventory we want to update
     *   }
     * })
     */
    upsert<T extends RackInventoryUpsertArgs>(args: SelectSubset<T, RackInventoryUpsertArgs<ExtArgs>>): Prisma__RackInventoryClient<$Result.GetResult<Prisma.$RackInventoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RackInventories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackInventoryCountArgs} args - Arguments to filter RackInventories to count.
     * @example
     * // Count the number of RackInventories
     * const count = await prisma.rackInventory.count({
     *   where: {
     *     // ... the filter for the RackInventories we want to count
     *   }
     * })
    **/
    count<T extends RackInventoryCountArgs>(
      args?: Subset<T, RackInventoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RackInventoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RackInventory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackInventoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RackInventoryAggregateArgs>(args: Subset<T, RackInventoryAggregateArgs>): Prisma.PrismaPromise<GetRackInventoryAggregateType<T>>

    /**
     * Group by RackInventory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackInventoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RackInventoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RackInventoryGroupByArgs['orderBy'] }
        : { orderBy?: RackInventoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RackInventoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRackInventoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RackInventory model
   */
  readonly fields: RackInventoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RackInventory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RackInventoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rack<T extends RackDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RackDefaultArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RackInventory model
   */ 
  interface RackInventoryFieldRefs {
    readonly id: FieldRef<"RackInventory", 'String'>
    readonly rackId: FieldRef<"RackInventory", 'String'>
    readonly itemType: FieldRef<"RackInventory", 'String'>
    readonly itemId: FieldRef<"RackInventory", 'String'>
    readonly quantityCurrent: FieldRef<"RackInventory", 'Int'>
    readonly quantityReserved: FieldRef<"RackInventory", 'Int'>
    readonly lastMovement: FieldRef<"RackInventory", 'DateTime'>
    readonly updatedBy: FieldRef<"RackInventory", 'String'>
    readonly companyId: FieldRef<"RackInventory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RackInventory findUnique
   */
  export type RackInventoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
    /**
     * Filter, which RackInventory to fetch.
     */
    where: RackInventoryWhereUniqueInput
  }

  /**
   * RackInventory findUniqueOrThrow
   */
  export type RackInventoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
    /**
     * Filter, which RackInventory to fetch.
     */
    where: RackInventoryWhereUniqueInput
  }

  /**
   * RackInventory findFirst
   */
  export type RackInventoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
    /**
     * Filter, which RackInventory to fetch.
     */
    where?: RackInventoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackInventories to fetch.
     */
    orderBy?: RackInventoryOrderByWithRelationInput | RackInventoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RackInventories.
     */
    cursor?: RackInventoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackInventories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackInventories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RackInventories.
     */
    distinct?: RackInventoryScalarFieldEnum | RackInventoryScalarFieldEnum[]
  }

  /**
   * RackInventory findFirstOrThrow
   */
  export type RackInventoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
    /**
     * Filter, which RackInventory to fetch.
     */
    where?: RackInventoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackInventories to fetch.
     */
    orderBy?: RackInventoryOrderByWithRelationInput | RackInventoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RackInventories.
     */
    cursor?: RackInventoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackInventories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackInventories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RackInventories.
     */
    distinct?: RackInventoryScalarFieldEnum | RackInventoryScalarFieldEnum[]
  }

  /**
   * RackInventory findMany
   */
  export type RackInventoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
    /**
     * Filter, which RackInventories to fetch.
     */
    where?: RackInventoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackInventories to fetch.
     */
    orderBy?: RackInventoryOrderByWithRelationInput | RackInventoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RackInventories.
     */
    cursor?: RackInventoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackInventories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackInventories.
     */
    skip?: number
    distinct?: RackInventoryScalarFieldEnum | RackInventoryScalarFieldEnum[]
  }

  /**
   * RackInventory create
   */
  export type RackInventoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
    /**
     * The data needed to create a RackInventory.
     */
    data: XOR<RackInventoryCreateInput, RackInventoryUncheckedCreateInput>
  }

  /**
   * RackInventory createMany
   */
  export type RackInventoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RackInventories.
     */
    data: RackInventoryCreateManyInput | RackInventoryCreateManyInput[]
  }

  /**
   * RackInventory createManyAndReturn
   */
  export type RackInventoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RackInventories.
     */
    data: RackInventoryCreateManyInput | RackInventoryCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RackInventory update
   */
  export type RackInventoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
    /**
     * The data needed to update a RackInventory.
     */
    data: XOR<RackInventoryUpdateInput, RackInventoryUncheckedUpdateInput>
    /**
     * Choose, which RackInventory to update.
     */
    where: RackInventoryWhereUniqueInput
  }

  /**
   * RackInventory updateMany
   */
  export type RackInventoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RackInventories.
     */
    data: XOR<RackInventoryUpdateManyMutationInput, RackInventoryUncheckedUpdateManyInput>
    /**
     * Filter which RackInventories to update
     */
    where?: RackInventoryWhereInput
  }

  /**
   * RackInventory upsert
   */
  export type RackInventoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
    /**
     * The filter to search for the RackInventory to update in case it exists.
     */
    where: RackInventoryWhereUniqueInput
    /**
     * In case the RackInventory found by the `where` argument doesn't exist, create a new RackInventory with this data.
     */
    create: XOR<RackInventoryCreateInput, RackInventoryUncheckedCreateInput>
    /**
     * In case the RackInventory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RackInventoryUpdateInput, RackInventoryUncheckedUpdateInput>
  }

  /**
   * RackInventory delete
   */
  export type RackInventoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
    /**
     * Filter which RackInventory to delete.
     */
    where: RackInventoryWhereUniqueInput
  }

  /**
   * RackInventory deleteMany
   */
  export type RackInventoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RackInventories to delete
     */
    where?: RackInventoryWhereInput
  }

  /**
   * RackInventory without action
   */
  export type RackInventoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackInventory
     */
    select?: RackInventorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInventoryInclude<ExtArgs> | null
  }


  /**
   * Model RackActivity
   */

  export type AggregateRackActivity = {
    _count: RackActivityCountAggregateOutputType | null
    _avg: RackActivityAvgAggregateOutputType | null
    _sum: RackActivitySumAggregateOutputType | null
    _min: RackActivityMinAggregateOutputType | null
    _max: RackActivityMaxAggregateOutputType | null
  }

  export type RackActivityAvgAggregateOutputType = {
    quantityBefore: number | null
    quantityAfter: number | null
  }

  export type RackActivitySumAggregateOutputType = {
    quantityBefore: number | null
    quantityAfter: number | null
  }

  export type RackActivityMinAggregateOutputType = {
    id: string | null
    rackId: string | null
    userId: string | null
    activityType: string | null
    itemDetails: string | null
    quantityBefore: number | null
    quantityAfter: number | null
    photos: string | null
    notes: string | null
    gpsLocation: string | null
    timestamp: Date | null
    companyId: string | null
  }

  export type RackActivityMaxAggregateOutputType = {
    id: string | null
    rackId: string | null
    userId: string | null
    activityType: string | null
    itemDetails: string | null
    quantityBefore: number | null
    quantityAfter: number | null
    photos: string | null
    notes: string | null
    gpsLocation: string | null
    timestamp: Date | null
    companyId: string | null
  }

  export type RackActivityCountAggregateOutputType = {
    id: number
    rackId: number
    userId: number
    activityType: number
    itemDetails: number
    quantityBefore: number
    quantityAfter: number
    photos: number
    notes: number
    gpsLocation: number
    timestamp: number
    companyId: number
    _all: number
  }


  export type RackActivityAvgAggregateInputType = {
    quantityBefore?: true
    quantityAfter?: true
  }

  export type RackActivitySumAggregateInputType = {
    quantityBefore?: true
    quantityAfter?: true
  }

  export type RackActivityMinAggregateInputType = {
    id?: true
    rackId?: true
    userId?: true
    activityType?: true
    itemDetails?: true
    quantityBefore?: true
    quantityAfter?: true
    photos?: true
    notes?: true
    gpsLocation?: true
    timestamp?: true
    companyId?: true
  }

  export type RackActivityMaxAggregateInputType = {
    id?: true
    rackId?: true
    userId?: true
    activityType?: true
    itemDetails?: true
    quantityBefore?: true
    quantityAfter?: true
    photos?: true
    notes?: true
    gpsLocation?: true
    timestamp?: true
    companyId?: true
  }

  export type RackActivityCountAggregateInputType = {
    id?: true
    rackId?: true
    userId?: true
    activityType?: true
    itemDetails?: true
    quantityBefore?: true
    quantityAfter?: true
    photos?: true
    notes?: true
    gpsLocation?: true
    timestamp?: true
    companyId?: true
    _all?: true
  }

  export type RackActivityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RackActivity to aggregate.
     */
    where?: RackActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackActivities to fetch.
     */
    orderBy?: RackActivityOrderByWithRelationInput | RackActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RackActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackActivities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RackActivities
    **/
    _count?: true | RackActivityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RackActivityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RackActivitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RackActivityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RackActivityMaxAggregateInputType
  }

  export type GetRackActivityAggregateType<T extends RackActivityAggregateArgs> = {
        [P in keyof T & keyof AggregateRackActivity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRackActivity[P]>
      : GetScalarType<T[P], AggregateRackActivity[P]>
  }




  export type RackActivityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackActivityWhereInput
    orderBy?: RackActivityOrderByWithAggregationInput | RackActivityOrderByWithAggregationInput[]
    by: RackActivityScalarFieldEnum[] | RackActivityScalarFieldEnum
    having?: RackActivityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RackActivityCountAggregateInputType | true
    _avg?: RackActivityAvgAggregateInputType
    _sum?: RackActivitySumAggregateInputType
    _min?: RackActivityMinAggregateInputType
    _max?: RackActivityMaxAggregateInputType
  }

  export type RackActivityGroupByOutputType = {
    id: string
    rackId: string
    userId: string
    activityType: string
    itemDetails: string
    quantityBefore: number | null
    quantityAfter: number | null
    photos: string | null
    notes: string | null
    gpsLocation: string | null
    timestamp: Date
    companyId: string
    _count: RackActivityCountAggregateOutputType | null
    _avg: RackActivityAvgAggregateOutputType | null
    _sum: RackActivitySumAggregateOutputType | null
    _min: RackActivityMinAggregateOutputType | null
    _max: RackActivityMaxAggregateOutputType | null
  }

  type GetRackActivityGroupByPayload<T extends RackActivityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RackActivityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RackActivityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RackActivityGroupByOutputType[P]>
            : GetScalarType<T[P], RackActivityGroupByOutputType[P]>
        }
      >
    >


  export type RackActivitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rackId?: boolean
    userId?: boolean
    activityType?: boolean
    itemDetails?: boolean
    quantityBefore?: boolean
    quantityAfter?: boolean
    photos?: boolean
    notes?: boolean
    gpsLocation?: boolean
    timestamp?: boolean
    companyId?: boolean
    rack?: boolean | RackDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rackActivity"]>

  export type RackActivitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rackId?: boolean
    userId?: boolean
    activityType?: boolean
    itemDetails?: boolean
    quantityBefore?: boolean
    quantityAfter?: boolean
    photos?: boolean
    notes?: boolean
    gpsLocation?: boolean
    timestamp?: boolean
    companyId?: boolean
    rack?: boolean | RackDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rackActivity"]>

  export type RackActivitySelectScalar = {
    id?: boolean
    rackId?: boolean
    userId?: boolean
    activityType?: boolean
    itemDetails?: boolean
    quantityBefore?: boolean
    quantityAfter?: boolean
    photos?: boolean
    notes?: boolean
    gpsLocation?: boolean
    timestamp?: boolean
    companyId?: boolean
  }

  export type RackActivityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rack?: boolean | RackDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RackActivityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rack?: boolean | RackDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RackActivityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RackActivity"
    objects: {
      rack: Prisma.$RackPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      rackId: string
      userId: string
      activityType: string
      itemDetails: string
      quantityBefore: number | null
      quantityAfter: number | null
      photos: string | null
      notes: string | null
      gpsLocation: string | null
      timestamp: Date
      companyId: string
    }, ExtArgs["result"]["rackActivity"]>
    composites: {}
  }

  type RackActivityGetPayload<S extends boolean | null | undefined | RackActivityDefaultArgs> = $Result.GetResult<Prisma.$RackActivityPayload, S>

  type RackActivityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RackActivityFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RackActivityCountAggregateInputType | true
    }

  export interface RackActivityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RackActivity'], meta: { name: 'RackActivity' } }
    /**
     * Find zero or one RackActivity that matches the filter.
     * @param {RackActivityFindUniqueArgs} args - Arguments to find a RackActivity
     * @example
     * // Get one RackActivity
     * const rackActivity = await prisma.rackActivity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RackActivityFindUniqueArgs>(args: SelectSubset<T, RackActivityFindUniqueArgs<ExtArgs>>): Prisma__RackActivityClient<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RackActivity that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RackActivityFindUniqueOrThrowArgs} args - Arguments to find a RackActivity
     * @example
     * // Get one RackActivity
     * const rackActivity = await prisma.rackActivity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RackActivityFindUniqueOrThrowArgs>(args: SelectSubset<T, RackActivityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RackActivityClient<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RackActivity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackActivityFindFirstArgs} args - Arguments to find a RackActivity
     * @example
     * // Get one RackActivity
     * const rackActivity = await prisma.rackActivity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RackActivityFindFirstArgs>(args?: SelectSubset<T, RackActivityFindFirstArgs<ExtArgs>>): Prisma__RackActivityClient<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RackActivity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackActivityFindFirstOrThrowArgs} args - Arguments to find a RackActivity
     * @example
     * // Get one RackActivity
     * const rackActivity = await prisma.rackActivity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RackActivityFindFirstOrThrowArgs>(args?: SelectSubset<T, RackActivityFindFirstOrThrowArgs<ExtArgs>>): Prisma__RackActivityClient<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RackActivities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackActivityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RackActivities
     * const rackActivities = await prisma.rackActivity.findMany()
     * 
     * // Get first 10 RackActivities
     * const rackActivities = await prisma.rackActivity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rackActivityWithIdOnly = await prisma.rackActivity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RackActivityFindManyArgs>(args?: SelectSubset<T, RackActivityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RackActivity.
     * @param {RackActivityCreateArgs} args - Arguments to create a RackActivity.
     * @example
     * // Create one RackActivity
     * const RackActivity = await prisma.rackActivity.create({
     *   data: {
     *     // ... data to create a RackActivity
     *   }
     * })
     * 
     */
    create<T extends RackActivityCreateArgs>(args: SelectSubset<T, RackActivityCreateArgs<ExtArgs>>): Prisma__RackActivityClient<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RackActivities.
     * @param {RackActivityCreateManyArgs} args - Arguments to create many RackActivities.
     * @example
     * // Create many RackActivities
     * const rackActivity = await prisma.rackActivity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RackActivityCreateManyArgs>(args?: SelectSubset<T, RackActivityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RackActivities and returns the data saved in the database.
     * @param {RackActivityCreateManyAndReturnArgs} args - Arguments to create many RackActivities.
     * @example
     * // Create many RackActivities
     * const rackActivity = await prisma.rackActivity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RackActivities and only return the `id`
     * const rackActivityWithIdOnly = await prisma.rackActivity.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RackActivityCreateManyAndReturnArgs>(args?: SelectSubset<T, RackActivityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RackActivity.
     * @param {RackActivityDeleteArgs} args - Arguments to delete one RackActivity.
     * @example
     * // Delete one RackActivity
     * const RackActivity = await prisma.rackActivity.delete({
     *   where: {
     *     // ... filter to delete one RackActivity
     *   }
     * })
     * 
     */
    delete<T extends RackActivityDeleteArgs>(args: SelectSubset<T, RackActivityDeleteArgs<ExtArgs>>): Prisma__RackActivityClient<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RackActivity.
     * @param {RackActivityUpdateArgs} args - Arguments to update one RackActivity.
     * @example
     * // Update one RackActivity
     * const rackActivity = await prisma.rackActivity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RackActivityUpdateArgs>(args: SelectSubset<T, RackActivityUpdateArgs<ExtArgs>>): Prisma__RackActivityClient<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RackActivities.
     * @param {RackActivityDeleteManyArgs} args - Arguments to filter RackActivities to delete.
     * @example
     * // Delete a few RackActivities
     * const { count } = await prisma.rackActivity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RackActivityDeleteManyArgs>(args?: SelectSubset<T, RackActivityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RackActivities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackActivityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RackActivities
     * const rackActivity = await prisma.rackActivity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RackActivityUpdateManyArgs>(args: SelectSubset<T, RackActivityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RackActivity.
     * @param {RackActivityUpsertArgs} args - Arguments to update or create a RackActivity.
     * @example
     * // Update or create a RackActivity
     * const rackActivity = await prisma.rackActivity.upsert({
     *   create: {
     *     // ... data to create a RackActivity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RackActivity we want to update
     *   }
     * })
     */
    upsert<T extends RackActivityUpsertArgs>(args: SelectSubset<T, RackActivityUpsertArgs<ExtArgs>>): Prisma__RackActivityClient<$Result.GetResult<Prisma.$RackActivityPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RackActivities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackActivityCountArgs} args - Arguments to filter RackActivities to count.
     * @example
     * // Count the number of RackActivities
     * const count = await prisma.rackActivity.count({
     *   where: {
     *     // ... the filter for the RackActivities we want to count
     *   }
     * })
    **/
    count<T extends RackActivityCountArgs>(
      args?: Subset<T, RackActivityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RackActivityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RackActivity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackActivityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RackActivityAggregateArgs>(args: Subset<T, RackActivityAggregateArgs>): Prisma.PrismaPromise<GetRackActivityAggregateType<T>>

    /**
     * Group by RackActivity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackActivityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RackActivityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RackActivityGroupByArgs['orderBy'] }
        : { orderBy?: RackActivityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RackActivityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRackActivityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RackActivity model
   */
  readonly fields: RackActivityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RackActivity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RackActivityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rack<T extends RackDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RackDefaultArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RackActivity model
   */ 
  interface RackActivityFieldRefs {
    readonly id: FieldRef<"RackActivity", 'String'>
    readonly rackId: FieldRef<"RackActivity", 'String'>
    readonly userId: FieldRef<"RackActivity", 'String'>
    readonly activityType: FieldRef<"RackActivity", 'String'>
    readonly itemDetails: FieldRef<"RackActivity", 'String'>
    readonly quantityBefore: FieldRef<"RackActivity", 'Int'>
    readonly quantityAfter: FieldRef<"RackActivity", 'Int'>
    readonly photos: FieldRef<"RackActivity", 'String'>
    readonly notes: FieldRef<"RackActivity", 'String'>
    readonly gpsLocation: FieldRef<"RackActivity", 'String'>
    readonly timestamp: FieldRef<"RackActivity", 'DateTime'>
    readonly companyId: FieldRef<"RackActivity", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RackActivity findUnique
   */
  export type RackActivityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    /**
     * Filter, which RackActivity to fetch.
     */
    where: RackActivityWhereUniqueInput
  }

  /**
   * RackActivity findUniqueOrThrow
   */
  export type RackActivityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    /**
     * Filter, which RackActivity to fetch.
     */
    where: RackActivityWhereUniqueInput
  }

  /**
   * RackActivity findFirst
   */
  export type RackActivityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    /**
     * Filter, which RackActivity to fetch.
     */
    where?: RackActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackActivities to fetch.
     */
    orderBy?: RackActivityOrderByWithRelationInput | RackActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RackActivities.
     */
    cursor?: RackActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackActivities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RackActivities.
     */
    distinct?: RackActivityScalarFieldEnum | RackActivityScalarFieldEnum[]
  }

  /**
   * RackActivity findFirstOrThrow
   */
  export type RackActivityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    /**
     * Filter, which RackActivity to fetch.
     */
    where?: RackActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackActivities to fetch.
     */
    orderBy?: RackActivityOrderByWithRelationInput | RackActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RackActivities.
     */
    cursor?: RackActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackActivities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RackActivities.
     */
    distinct?: RackActivityScalarFieldEnum | RackActivityScalarFieldEnum[]
  }

  /**
   * RackActivity findMany
   */
  export type RackActivityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    /**
     * Filter, which RackActivities to fetch.
     */
    where?: RackActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackActivities to fetch.
     */
    orderBy?: RackActivityOrderByWithRelationInput | RackActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RackActivities.
     */
    cursor?: RackActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackActivities.
     */
    skip?: number
    distinct?: RackActivityScalarFieldEnum | RackActivityScalarFieldEnum[]
  }

  /**
   * RackActivity create
   */
  export type RackActivityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    /**
     * The data needed to create a RackActivity.
     */
    data: XOR<RackActivityCreateInput, RackActivityUncheckedCreateInput>
  }

  /**
   * RackActivity createMany
   */
  export type RackActivityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RackActivities.
     */
    data: RackActivityCreateManyInput | RackActivityCreateManyInput[]
  }

  /**
   * RackActivity createManyAndReturn
   */
  export type RackActivityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RackActivities.
     */
    data: RackActivityCreateManyInput | RackActivityCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RackActivity update
   */
  export type RackActivityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    /**
     * The data needed to update a RackActivity.
     */
    data: XOR<RackActivityUpdateInput, RackActivityUncheckedUpdateInput>
    /**
     * Choose, which RackActivity to update.
     */
    where: RackActivityWhereUniqueInput
  }

  /**
   * RackActivity updateMany
   */
  export type RackActivityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RackActivities.
     */
    data: XOR<RackActivityUpdateManyMutationInput, RackActivityUncheckedUpdateManyInput>
    /**
     * Filter which RackActivities to update
     */
    where?: RackActivityWhereInput
  }

  /**
   * RackActivity upsert
   */
  export type RackActivityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    /**
     * The filter to search for the RackActivity to update in case it exists.
     */
    where: RackActivityWhereUniqueInput
    /**
     * In case the RackActivity found by the `where` argument doesn't exist, create a new RackActivity with this data.
     */
    create: XOR<RackActivityCreateInput, RackActivityUncheckedCreateInput>
    /**
     * In case the RackActivity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RackActivityUpdateInput, RackActivityUncheckedUpdateInput>
  }

  /**
   * RackActivity delete
   */
  export type RackActivityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
    /**
     * Filter which RackActivity to delete.
     */
    where: RackActivityWhereUniqueInput
  }

  /**
   * RackActivity deleteMany
   */
  export type RackActivityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RackActivities to delete
     */
    where?: RackActivityWhereInput
  }

  /**
   * RackActivity without action
   */
  export type RackActivityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackActivity
     */
    select?: RackActivitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackActivityInclude<ExtArgs> | null
  }


  /**
   * Model Shipment
   */

  export type AggregateShipment = {
    _count: ShipmentCountAggregateOutputType | null
    _avg: ShipmentAvgAggregateOutputType | null
    _sum: ShipmentSumAggregateOutputType | null
    _min: ShipmentMinAggregateOutputType | null
    _max: ShipmentMaxAggregateOutputType | null
  }

  export type ShipmentAvgAggregateOutputType = {
    originalBoxCount: number | null
    currentBoxCount: number | null
    estimatedValue: number | null
    storageCharge: number | null
  }

  export type ShipmentSumAggregateOutputType = {
    originalBoxCount: number | null
    currentBoxCount: number | null
    estimatedValue: number | null
    storageCharge: number | null
  }

  export type ShipmentMinAggregateOutputType = {
    id: string | null
    name: string | null
    referenceId: string | null
    originalBoxCount: number | null
    currentBoxCount: number | null
    type: string | null
    arrivalDate: Date | null
    clientName: string | null
    clientPhone: string | null
    clientEmail: string | null
    description: string | null
    estimatedValue: number | null
    notes: string | null
    qrCode: string | null
    status: string | null
    rackId: string | null
    assignedAt: Date | null
    releasedAt: Date | null
    storageCharge: number | null
    companyId: string | null
    createdById: string | null
    assignedById: string | null
    releasedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isWarehouseShipment: boolean | null
    warehouseData: string | null
    shipper: string | null
    consignee: string | null
  }

  export type ShipmentMaxAggregateOutputType = {
    id: string | null
    name: string | null
    referenceId: string | null
    originalBoxCount: number | null
    currentBoxCount: number | null
    type: string | null
    arrivalDate: Date | null
    clientName: string | null
    clientPhone: string | null
    clientEmail: string | null
    description: string | null
    estimatedValue: number | null
    notes: string | null
    qrCode: string | null
    status: string | null
    rackId: string | null
    assignedAt: Date | null
    releasedAt: Date | null
    storageCharge: number | null
    companyId: string | null
    createdById: string | null
    assignedById: string | null
    releasedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isWarehouseShipment: boolean | null
    warehouseData: string | null
    shipper: string | null
    consignee: string | null
  }

  export type ShipmentCountAggregateOutputType = {
    id: number
    name: number
    referenceId: number
    originalBoxCount: number
    currentBoxCount: number
    type: number
    arrivalDate: number
    clientName: number
    clientPhone: number
    clientEmail: number
    description: number
    estimatedValue: number
    notes: number
    qrCode: number
    status: number
    rackId: number
    assignedAt: number
    releasedAt: number
    storageCharge: number
    companyId: number
    createdById: number
    assignedById: number
    releasedById: number
    createdAt: number
    updatedAt: number
    isWarehouseShipment: number
    warehouseData: number
    shipper: number
    consignee: number
    _all: number
  }


  export type ShipmentAvgAggregateInputType = {
    originalBoxCount?: true
    currentBoxCount?: true
    estimatedValue?: true
    storageCharge?: true
  }

  export type ShipmentSumAggregateInputType = {
    originalBoxCount?: true
    currentBoxCount?: true
    estimatedValue?: true
    storageCharge?: true
  }

  export type ShipmentMinAggregateInputType = {
    id?: true
    name?: true
    referenceId?: true
    originalBoxCount?: true
    currentBoxCount?: true
    type?: true
    arrivalDate?: true
    clientName?: true
    clientPhone?: true
    clientEmail?: true
    description?: true
    estimatedValue?: true
    notes?: true
    qrCode?: true
    status?: true
    rackId?: true
    assignedAt?: true
    releasedAt?: true
    storageCharge?: true
    companyId?: true
    createdById?: true
    assignedById?: true
    releasedById?: true
    createdAt?: true
    updatedAt?: true
    isWarehouseShipment?: true
    warehouseData?: true
    shipper?: true
    consignee?: true
  }

  export type ShipmentMaxAggregateInputType = {
    id?: true
    name?: true
    referenceId?: true
    originalBoxCount?: true
    currentBoxCount?: true
    type?: true
    arrivalDate?: true
    clientName?: true
    clientPhone?: true
    clientEmail?: true
    description?: true
    estimatedValue?: true
    notes?: true
    qrCode?: true
    status?: true
    rackId?: true
    assignedAt?: true
    releasedAt?: true
    storageCharge?: true
    companyId?: true
    createdById?: true
    assignedById?: true
    releasedById?: true
    createdAt?: true
    updatedAt?: true
    isWarehouseShipment?: true
    warehouseData?: true
    shipper?: true
    consignee?: true
  }

  export type ShipmentCountAggregateInputType = {
    id?: true
    name?: true
    referenceId?: true
    originalBoxCount?: true
    currentBoxCount?: true
    type?: true
    arrivalDate?: true
    clientName?: true
    clientPhone?: true
    clientEmail?: true
    description?: true
    estimatedValue?: true
    notes?: true
    qrCode?: true
    status?: true
    rackId?: true
    assignedAt?: true
    releasedAt?: true
    storageCharge?: true
    companyId?: true
    createdById?: true
    assignedById?: true
    releasedById?: true
    createdAt?: true
    updatedAt?: true
    isWarehouseShipment?: true
    warehouseData?: true
    shipper?: true
    consignee?: true
    _all?: true
  }

  export type ShipmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Shipment to aggregate.
     */
    where?: ShipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shipments to fetch.
     */
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shipments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shipments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Shipments
    **/
    _count?: true | ShipmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShipmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShipmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShipmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShipmentMaxAggregateInputType
  }

  export type GetShipmentAggregateType<T extends ShipmentAggregateArgs> = {
        [P in keyof T & keyof AggregateShipment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipment[P]>
      : GetScalarType<T[P], AggregateShipment[P]>
  }




  export type ShipmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentWhereInput
    orderBy?: ShipmentOrderByWithAggregationInput | ShipmentOrderByWithAggregationInput[]
    by: ShipmentScalarFieldEnum[] | ShipmentScalarFieldEnum
    having?: ShipmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShipmentCountAggregateInputType | true
    _avg?: ShipmentAvgAggregateInputType
    _sum?: ShipmentSumAggregateInputType
    _min?: ShipmentMinAggregateInputType
    _max?: ShipmentMaxAggregateInputType
  }

  export type ShipmentGroupByOutputType = {
    id: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date
    clientName: string | null
    clientPhone: string | null
    clientEmail: string | null
    description: string | null
    estimatedValue: number | null
    notes: string | null
    qrCode: string
    status: string
    rackId: string | null
    assignedAt: Date | null
    releasedAt: Date | null
    storageCharge: number | null
    companyId: string
    createdById: string | null
    assignedById: string | null
    releasedById: string | null
    createdAt: Date
    updatedAt: Date
    isWarehouseShipment: boolean
    warehouseData: string | null
    shipper: string | null
    consignee: string | null
    _count: ShipmentCountAggregateOutputType | null
    _avg: ShipmentAvgAggregateOutputType | null
    _sum: ShipmentSumAggregateOutputType | null
    _min: ShipmentMinAggregateOutputType | null
    _max: ShipmentMaxAggregateOutputType | null
  }

  type GetShipmentGroupByPayload<T extends ShipmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShipmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShipmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShipmentGroupByOutputType[P]>
            : GetScalarType<T[P], ShipmentGroupByOutputType[P]>
        }
      >
    >


  export type ShipmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    referenceId?: boolean
    originalBoxCount?: boolean
    currentBoxCount?: boolean
    type?: boolean
    arrivalDate?: boolean
    clientName?: boolean
    clientPhone?: boolean
    clientEmail?: boolean
    description?: boolean
    estimatedValue?: boolean
    notes?: boolean
    qrCode?: boolean
    status?: boolean
    rackId?: boolean
    assignedAt?: boolean
    releasedAt?: boolean
    storageCharge?: boolean
    companyId?: boolean
    createdById?: boolean
    assignedById?: boolean
    releasedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isWarehouseShipment?: boolean
    warehouseData?: boolean
    shipper?: boolean
    consignee?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    rack?: boolean | Shipment$rackArgs<ExtArgs>
    boxes?: boolean | Shipment$boxesArgs<ExtArgs>
    withdrawals?: boolean | Shipment$withdrawalsArgs<ExtArgs>
    invoices?: boolean | Shipment$invoicesArgs<ExtArgs>
    charges?: boolean | Shipment$chargesArgs<ExtArgs>
    createdBy?: boolean | Shipment$createdByArgs<ExtArgs>
    assignedBy?: boolean | Shipment$assignedByArgs<ExtArgs>
    releasedBy?: boolean | Shipment$releasedByArgs<ExtArgs>
    _count?: boolean | ShipmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipment"]>

  export type ShipmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    referenceId?: boolean
    originalBoxCount?: boolean
    currentBoxCount?: boolean
    type?: boolean
    arrivalDate?: boolean
    clientName?: boolean
    clientPhone?: boolean
    clientEmail?: boolean
    description?: boolean
    estimatedValue?: boolean
    notes?: boolean
    qrCode?: boolean
    status?: boolean
    rackId?: boolean
    assignedAt?: boolean
    releasedAt?: boolean
    storageCharge?: boolean
    companyId?: boolean
    createdById?: boolean
    assignedById?: boolean
    releasedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isWarehouseShipment?: boolean
    warehouseData?: boolean
    shipper?: boolean
    consignee?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    rack?: boolean | Shipment$rackArgs<ExtArgs>
    createdBy?: boolean | Shipment$createdByArgs<ExtArgs>
    assignedBy?: boolean | Shipment$assignedByArgs<ExtArgs>
    releasedBy?: boolean | Shipment$releasedByArgs<ExtArgs>
  }, ExtArgs["result"]["shipment"]>

  export type ShipmentSelectScalar = {
    id?: boolean
    name?: boolean
    referenceId?: boolean
    originalBoxCount?: boolean
    currentBoxCount?: boolean
    type?: boolean
    arrivalDate?: boolean
    clientName?: boolean
    clientPhone?: boolean
    clientEmail?: boolean
    description?: boolean
    estimatedValue?: boolean
    notes?: boolean
    qrCode?: boolean
    status?: boolean
    rackId?: boolean
    assignedAt?: boolean
    releasedAt?: boolean
    storageCharge?: boolean
    companyId?: boolean
    createdById?: boolean
    assignedById?: boolean
    releasedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isWarehouseShipment?: boolean
    warehouseData?: boolean
    shipper?: boolean
    consignee?: boolean
  }

  export type ShipmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    rack?: boolean | Shipment$rackArgs<ExtArgs>
    boxes?: boolean | Shipment$boxesArgs<ExtArgs>
    withdrawals?: boolean | Shipment$withdrawalsArgs<ExtArgs>
    invoices?: boolean | Shipment$invoicesArgs<ExtArgs>
    charges?: boolean | Shipment$chargesArgs<ExtArgs>
    createdBy?: boolean | Shipment$createdByArgs<ExtArgs>
    assignedBy?: boolean | Shipment$assignedByArgs<ExtArgs>
    releasedBy?: boolean | Shipment$releasedByArgs<ExtArgs>
    _count?: boolean | ShipmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ShipmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    rack?: boolean | Shipment$rackArgs<ExtArgs>
    createdBy?: boolean | Shipment$createdByArgs<ExtArgs>
    assignedBy?: boolean | Shipment$assignedByArgs<ExtArgs>
    releasedBy?: boolean | Shipment$releasedByArgs<ExtArgs>
  }

  export type $ShipmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Shipment"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      rack: Prisma.$RackPayload<ExtArgs> | null
      boxes: Prisma.$ShipmentBoxPayload<ExtArgs>[]
      withdrawals: Prisma.$WithdrawalPayload<ExtArgs>[]
      invoices: Prisma.$InvoicePayload<ExtArgs>[]
      charges: Prisma.$ShipmentChargesPayload<ExtArgs> | null
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      assignedBy: Prisma.$UserPayload<ExtArgs> | null
      releasedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      referenceId: string
      originalBoxCount: number
      currentBoxCount: number
      type: string
      arrivalDate: Date
      clientName: string | null
      clientPhone: string | null
      clientEmail: string | null
      description: string | null
      estimatedValue: number | null
      notes: string | null
      qrCode: string
      status: string
      rackId: string | null
      assignedAt: Date | null
      releasedAt: Date | null
      storageCharge: number | null
      companyId: string
      createdById: string | null
      assignedById: string | null
      releasedById: string | null
      createdAt: Date
      updatedAt: Date
      isWarehouseShipment: boolean
      warehouseData: string | null
      shipper: string | null
      consignee: string | null
    }, ExtArgs["result"]["shipment"]>
    composites: {}
  }

  type ShipmentGetPayload<S extends boolean | null | undefined | ShipmentDefaultArgs> = $Result.GetResult<Prisma.$ShipmentPayload, S>

  type ShipmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ShipmentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ShipmentCountAggregateInputType | true
    }

  export interface ShipmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Shipment'], meta: { name: 'Shipment' } }
    /**
     * Find zero or one Shipment that matches the filter.
     * @param {ShipmentFindUniqueArgs} args - Arguments to find a Shipment
     * @example
     * // Get one Shipment
     * const shipment = await prisma.shipment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShipmentFindUniqueArgs>(args: SelectSubset<T, ShipmentFindUniqueArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Shipment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ShipmentFindUniqueOrThrowArgs} args - Arguments to find a Shipment
     * @example
     * // Get one Shipment
     * const shipment = await prisma.shipment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShipmentFindUniqueOrThrowArgs>(args: SelectSubset<T, ShipmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Shipment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentFindFirstArgs} args - Arguments to find a Shipment
     * @example
     * // Get one Shipment
     * const shipment = await prisma.shipment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShipmentFindFirstArgs>(args?: SelectSubset<T, ShipmentFindFirstArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Shipment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentFindFirstOrThrowArgs} args - Arguments to find a Shipment
     * @example
     * // Get one Shipment
     * const shipment = await prisma.shipment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShipmentFindFirstOrThrowArgs>(args?: SelectSubset<T, ShipmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Shipments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shipments
     * const shipments = await prisma.shipment.findMany()
     * 
     * // Get first 10 Shipments
     * const shipments = await prisma.shipment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipmentWithIdOnly = await prisma.shipment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShipmentFindManyArgs>(args?: SelectSubset<T, ShipmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Shipment.
     * @param {ShipmentCreateArgs} args - Arguments to create a Shipment.
     * @example
     * // Create one Shipment
     * const Shipment = await prisma.shipment.create({
     *   data: {
     *     // ... data to create a Shipment
     *   }
     * })
     * 
     */
    create<T extends ShipmentCreateArgs>(args: SelectSubset<T, ShipmentCreateArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Shipments.
     * @param {ShipmentCreateManyArgs} args - Arguments to create many Shipments.
     * @example
     * // Create many Shipments
     * const shipment = await prisma.shipment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShipmentCreateManyArgs>(args?: SelectSubset<T, ShipmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Shipments and returns the data saved in the database.
     * @param {ShipmentCreateManyAndReturnArgs} args - Arguments to create many Shipments.
     * @example
     * // Create many Shipments
     * const shipment = await prisma.shipment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Shipments and only return the `id`
     * const shipmentWithIdOnly = await prisma.shipment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShipmentCreateManyAndReturnArgs>(args?: SelectSubset<T, ShipmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Shipment.
     * @param {ShipmentDeleteArgs} args - Arguments to delete one Shipment.
     * @example
     * // Delete one Shipment
     * const Shipment = await prisma.shipment.delete({
     *   where: {
     *     // ... filter to delete one Shipment
     *   }
     * })
     * 
     */
    delete<T extends ShipmentDeleteArgs>(args: SelectSubset<T, ShipmentDeleteArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Shipment.
     * @param {ShipmentUpdateArgs} args - Arguments to update one Shipment.
     * @example
     * // Update one Shipment
     * const shipment = await prisma.shipment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShipmentUpdateArgs>(args: SelectSubset<T, ShipmentUpdateArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Shipments.
     * @param {ShipmentDeleteManyArgs} args - Arguments to filter Shipments to delete.
     * @example
     * // Delete a few Shipments
     * const { count } = await prisma.shipment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShipmentDeleteManyArgs>(args?: SelectSubset<T, ShipmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shipments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shipments
     * const shipment = await prisma.shipment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShipmentUpdateManyArgs>(args: SelectSubset<T, ShipmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Shipment.
     * @param {ShipmentUpsertArgs} args - Arguments to update or create a Shipment.
     * @example
     * // Update or create a Shipment
     * const shipment = await prisma.shipment.upsert({
     *   create: {
     *     // ... data to create a Shipment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shipment we want to update
     *   }
     * })
     */
    upsert<T extends ShipmentUpsertArgs>(args: SelectSubset<T, ShipmentUpsertArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Shipments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentCountArgs} args - Arguments to filter Shipments to count.
     * @example
     * // Count the number of Shipments
     * const count = await prisma.shipment.count({
     *   where: {
     *     // ... the filter for the Shipments we want to count
     *   }
     * })
    **/
    count<T extends ShipmentCountArgs>(
      args?: Subset<T, ShipmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShipmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShipmentAggregateArgs>(args: Subset<T, ShipmentAggregateArgs>): Prisma.PrismaPromise<GetShipmentAggregateType<T>>

    /**
     * Group by Shipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShipmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShipmentGroupByArgs['orderBy'] }
        : { orderBy?: ShipmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShipmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Shipment model
   */
  readonly fields: ShipmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Shipment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShipmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    rack<T extends Shipment$rackArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$rackArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    boxes<T extends Shipment$boxesArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$boxesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "findMany"> | Null>
    withdrawals<T extends Shipment$withdrawalsArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$withdrawalsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "findMany"> | Null>
    invoices<T extends Shipment$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany"> | Null>
    charges<T extends Shipment$chargesArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$chargesArgs<ExtArgs>>): Prisma__ShipmentChargesClient<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    createdBy<T extends Shipment$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    assignedBy<T extends Shipment$assignedByArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$assignedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    releasedBy<T extends Shipment$releasedByArgs<ExtArgs> = {}>(args?: Subset<T, Shipment$releasedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Shipment model
   */ 
  interface ShipmentFieldRefs {
    readonly id: FieldRef<"Shipment", 'String'>
    readonly name: FieldRef<"Shipment", 'String'>
    readonly referenceId: FieldRef<"Shipment", 'String'>
    readonly originalBoxCount: FieldRef<"Shipment", 'Int'>
    readonly currentBoxCount: FieldRef<"Shipment", 'Int'>
    readonly type: FieldRef<"Shipment", 'String'>
    readonly arrivalDate: FieldRef<"Shipment", 'DateTime'>
    readonly clientName: FieldRef<"Shipment", 'String'>
    readonly clientPhone: FieldRef<"Shipment", 'String'>
    readonly clientEmail: FieldRef<"Shipment", 'String'>
    readonly description: FieldRef<"Shipment", 'String'>
    readonly estimatedValue: FieldRef<"Shipment", 'Float'>
    readonly notes: FieldRef<"Shipment", 'String'>
    readonly qrCode: FieldRef<"Shipment", 'String'>
    readonly status: FieldRef<"Shipment", 'String'>
    readonly rackId: FieldRef<"Shipment", 'String'>
    readonly assignedAt: FieldRef<"Shipment", 'DateTime'>
    readonly releasedAt: FieldRef<"Shipment", 'DateTime'>
    readonly storageCharge: FieldRef<"Shipment", 'Float'>
    readonly companyId: FieldRef<"Shipment", 'String'>
    readonly createdById: FieldRef<"Shipment", 'String'>
    readonly assignedById: FieldRef<"Shipment", 'String'>
    readonly releasedById: FieldRef<"Shipment", 'String'>
    readonly createdAt: FieldRef<"Shipment", 'DateTime'>
    readonly updatedAt: FieldRef<"Shipment", 'DateTime'>
    readonly isWarehouseShipment: FieldRef<"Shipment", 'Boolean'>
    readonly warehouseData: FieldRef<"Shipment", 'String'>
    readonly shipper: FieldRef<"Shipment", 'String'>
    readonly consignee: FieldRef<"Shipment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Shipment findUnique
   */
  export type ShipmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter, which Shipment to fetch.
     */
    where: ShipmentWhereUniqueInput
  }

  /**
   * Shipment findUniqueOrThrow
   */
  export type ShipmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter, which Shipment to fetch.
     */
    where: ShipmentWhereUniqueInput
  }

  /**
   * Shipment findFirst
   */
  export type ShipmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter, which Shipment to fetch.
     */
    where?: ShipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shipments to fetch.
     */
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Shipments.
     */
    cursor?: ShipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shipments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shipments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Shipments.
     */
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * Shipment findFirstOrThrow
   */
  export type ShipmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter, which Shipment to fetch.
     */
    where?: ShipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shipments to fetch.
     */
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Shipments.
     */
    cursor?: ShipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shipments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shipments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Shipments.
     */
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * Shipment findMany
   */
  export type ShipmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter, which Shipments to fetch.
     */
    where?: ShipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shipments to fetch.
     */
    orderBy?: ShipmentOrderByWithRelationInput | ShipmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Shipments.
     */
    cursor?: ShipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shipments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shipments.
     */
    skip?: number
    distinct?: ShipmentScalarFieldEnum | ShipmentScalarFieldEnum[]
  }

  /**
   * Shipment create
   */
  export type ShipmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * The data needed to create a Shipment.
     */
    data: XOR<ShipmentCreateInput, ShipmentUncheckedCreateInput>
  }

  /**
   * Shipment createMany
   */
  export type ShipmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Shipments.
     */
    data: ShipmentCreateManyInput | ShipmentCreateManyInput[]
  }

  /**
   * Shipment createManyAndReturn
   */
  export type ShipmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Shipments.
     */
    data: ShipmentCreateManyInput | ShipmentCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Shipment update
   */
  export type ShipmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * The data needed to update a Shipment.
     */
    data: XOR<ShipmentUpdateInput, ShipmentUncheckedUpdateInput>
    /**
     * Choose, which Shipment to update.
     */
    where: ShipmentWhereUniqueInput
  }

  /**
   * Shipment updateMany
   */
  export type ShipmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Shipments.
     */
    data: XOR<ShipmentUpdateManyMutationInput, ShipmentUncheckedUpdateManyInput>
    /**
     * Filter which Shipments to update
     */
    where?: ShipmentWhereInput
  }

  /**
   * Shipment upsert
   */
  export type ShipmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * The filter to search for the Shipment to update in case it exists.
     */
    where: ShipmentWhereUniqueInput
    /**
     * In case the Shipment found by the `where` argument doesn't exist, create a new Shipment with this data.
     */
    create: XOR<ShipmentCreateInput, ShipmentUncheckedCreateInput>
    /**
     * In case the Shipment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShipmentUpdateInput, ShipmentUncheckedUpdateInput>
  }

  /**
   * Shipment delete
   */
  export type ShipmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
    /**
     * Filter which Shipment to delete.
     */
    where: ShipmentWhereUniqueInput
  }

  /**
   * Shipment deleteMany
   */
  export type ShipmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Shipments to delete
     */
    where?: ShipmentWhereInput
  }

  /**
   * Shipment.rack
   */
  export type Shipment$rackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    where?: RackWhereInput
  }

  /**
   * Shipment.boxes
   */
  export type Shipment$boxesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    where?: ShipmentBoxWhereInput
    orderBy?: ShipmentBoxOrderByWithRelationInput | ShipmentBoxOrderByWithRelationInput[]
    cursor?: ShipmentBoxWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShipmentBoxScalarFieldEnum | ShipmentBoxScalarFieldEnum[]
  }

  /**
   * Shipment.withdrawals
   */
  export type Shipment$withdrawalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
    where?: WithdrawalWhereInput
    orderBy?: WithdrawalOrderByWithRelationInput | WithdrawalOrderByWithRelationInput[]
    cursor?: WithdrawalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WithdrawalScalarFieldEnum | WithdrawalScalarFieldEnum[]
  }

  /**
   * Shipment.invoices
   */
  export type Shipment$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Shipment.charges
   */
  export type Shipment$chargesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    where?: ShipmentChargesWhereInput
  }

  /**
   * Shipment.createdBy
   */
  export type Shipment$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Shipment.assignedBy
   */
  export type Shipment$assignedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Shipment.releasedBy
   */
  export type Shipment$releasedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Shipment without action
   */
  export type ShipmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Shipment
     */
    select?: ShipmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentInclude<ExtArgs> | null
  }


  /**
   * Model ShipmentBox
   */

  export type AggregateShipmentBox = {
    _count: ShipmentBoxCountAggregateOutputType | null
    _avg: ShipmentBoxAvgAggregateOutputType | null
    _sum: ShipmentBoxSumAggregateOutputType | null
    _min: ShipmentBoxMinAggregateOutputType | null
    _max: ShipmentBoxMaxAggregateOutputType | null
  }

  export type ShipmentBoxAvgAggregateOutputType = {
    boxNumber: number | null
    pieceWeight: number | null
  }

  export type ShipmentBoxSumAggregateOutputType = {
    boxNumber: number | null
    pieceWeight: number | null
  }

  export type ShipmentBoxMinAggregateOutputType = {
    id: string | null
    shipmentId: string | null
    boxNumber: number | null
    qrCode: string | null
    rackId: string | null
    status: string | null
    assignedAt: Date | null
    releasedAt: Date | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    pieceWeight: number | null
    pieceQR: string | null
  }

  export type ShipmentBoxMaxAggregateOutputType = {
    id: string | null
    shipmentId: string | null
    boxNumber: number | null
    qrCode: string | null
    rackId: string | null
    status: string | null
    assignedAt: Date | null
    releasedAt: Date | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    pieceWeight: number | null
    pieceQR: string | null
  }

  export type ShipmentBoxCountAggregateOutputType = {
    id: number
    shipmentId: number
    boxNumber: number
    qrCode: number
    rackId: number
    status: number
    assignedAt: number
    releasedAt: number
    companyId: number
    createdAt: number
    updatedAt: number
    pieceWeight: number
    pieceQR: number
    _all: number
  }


  export type ShipmentBoxAvgAggregateInputType = {
    boxNumber?: true
    pieceWeight?: true
  }

  export type ShipmentBoxSumAggregateInputType = {
    boxNumber?: true
    pieceWeight?: true
  }

  export type ShipmentBoxMinAggregateInputType = {
    id?: true
    shipmentId?: true
    boxNumber?: true
    qrCode?: true
    rackId?: true
    status?: true
    assignedAt?: true
    releasedAt?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    pieceWeight?: true
    pieceQR?: true
  }

  export type ShipmentBoxMaxAggregateInputType = {
    id?: true
    shipmentId?: true
    boxNumber?: true
    qrCode?: true
    rackId?: true
    status?: true
    assignedAt?: true
    releasedAt?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    pieceWeight?: true
    pieceQR?: true
  }

  export type ShipmentBoxCountAggregateInputType = {
    id?: true
    shipmentId?: true
    boxNumber?: true
    qrCode?: true
    rackId?: true
    status?: true
    assignedAt?: true
    releasedAt?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    pieceWeight?: true
    pieceQR?: true
    _all?: true
  }

  export type ShipmentBoxAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShipmentBox to aggregate.
     */
    where?: ShipmentBoxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentBoxes to fetch.
     */
    orderBy?: ShipmentBoxOrderByWithRelationInput | ShipmentBoxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShipmentBoxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentBoxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentBoxes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShipmentBoxes
    **/
    _count?: true | ShipmentBoxCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShipmentBoxAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShipmentBoxSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShipmentBoxMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShipmentBoxMaxAggregateInputType
  }

  export type GetShipmentBoxAggregateType<T extends ShipmentBoxAggregateArgs> = {
        [P in keyof T & keyof AggregateShipmentBox]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipmentBox[P]>
      : GetScalarType<T[P], AggregateShipmentBox[P]>
  }




  export type ShipmentBoxGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentBoxWhereInput
    orderBy?: ShipmentBoxOrderByWithAggregationInput | ShipmentBoxOrderByWithAggregationInput[]
    by: ShipmentBoxScalarFieldEnum[] | ShipmentBoxScalarFieldEnum
    having?: ShipmentBoxScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShipmentBoxCountAggregateInputType | true
    _avg?: ShipmentBoxAvgAggregateInputType
    _sum?: ShipmentBoxSumAggregateInputType
    _min?: ShipmentBoxMinAggregateInputType
    _max?: ShipmentBoxMaxAggregateInputType
  }

  export type ShipmentBoxGroupByOutputType = {
    id: string
    shipmentId: string
    boxNumber: number
    qrCode: string
    rackId: string | null
    status: string
    assignedAt: Date | null
    releasedAt: Date | null
    companyId: string
    createdAt: Date
    updatedAt: Date
    pieceWeight: number | null
    pieceQR: string | null
    _count: ShipmentBoxCountAggregateOutputType | null
    _avg: ShipmentBoxAvgAggregateOutputType | null
    _sum: ShipmentBoxSumAggregateOutputType | null
    _min: ShipmentBoxMinAggregateOutputType | null
    _max: ShipmentBoxMaxAggregateOutputType | null
  }

  type GetShipmentBoxGroupByPayload<T extends ShipmentBoxGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShipmentBoxGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShipmentBoxGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShipmentBoxGroupByOutputType[P]>
            : GetScalarType<T[P], ShipmentBoxGroupByOutputType[P]>
        }
      >
    >


  export type ShipmentBoxSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    boxNumber?: boolean
    qrCode?: boolean
    rackId?: boolean
    status?: boolean
    assignedAt?: boolean
    releasedAt?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    pieceWeight?: boolean
    pieceQR?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
    rack?: boolean | ShipmentBox$rackArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentBox"]>

  export type ShipmentBoxSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    boxNumber?: boolean
    qrCode?: boolean
    rackId?: boolean
    status?: boolean
    assignedAt?: boolean
    releasedAt?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    pieceWeight?: boolean
    pieceQR?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
    rack?: boolean | ShipmentBox$rackArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentBox"]>

  export type ShipmentBoxSelectScalar = {
    id?: boolean
    shipmentId?: boolean
    boxNumber?: boolean
    qrCode?: boolean
    rackId?: boolean
    status?: boolean
    assignedAt?: boolean
    releasedAt?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    pieceWeight?: boolean
    pieceQR?: boolean
  }

  export type ShipmentBoxInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
    rack?: boolean | ShipmentBox$rackArgs<ExtArgs>
  }
  export type ShipmentBoxIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
    rack?: boolean | ShipmentBox$rackArgs<ExtArgs>
  }

  export type $ShipmentBoxPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShipmentBox"
    objects: {
      shipment: Prisma.$ShipmentPayload<ExtArgs>
      rack: Prisma.$RackPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      shipmentId: string
      boxNumber: number
      qrCode: string
      rackId: string | null
      status: string
      assignedAt: Date | null
      releasedAt: Date | null
      companyId: string
      createdAt: Date
      updatedAt: Date
      pieceWeight: number | null
      pieceQR: string | null
    }, ExtArgs["result"]["shipmentBox"]>
    composites: {}
  }

  type ShipmentBoxGetPayload<S extends boolean | null | undefined | ShipmentBoxDefaultArgs> = $Result.GetResult<Prisma.$ShipmentBoxPayload, S>

  type ShipmentBoxCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ShipmentBoxFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ShipmentBoxCountAggregateInputType | true
    }

  export interface ShipmentBoxDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShipmentBox'], meta: { name: 'ShipmentBox' } }
    /**
     * Find zero or one ShipmentBox that matches the filter.
     * @param {ShipmentBoxFindUniqueArgs} args - Arguments to find a ShipmentBox
     * @example
     * // Get one ShipmentBox
     * const shipmentBox = await prisma.shipmentBox.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShipmentBoxFindUniqueArgs>(args: SelectSubset<T, ShipmentBoxFindUniqueArgs<ExtArgs>>): Prisma__ShipmentBoxClient<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ShipmentBox that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ShipmentBoxFindUniqueOrThrowArgs} args - Arguments to find a ShipmentBox
     * @example
     * // Get one ShipmentBox
     * const shipmentBox = await prisma.shipmentBox.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShipmentBoxFindUniqueOrThrowArgs>(args: SelectSubset<T, ShipmentBoxFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShipmentBoxClient<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ShipmentBox that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentBoxFindFirstArgs} args - Arguments to find a ShipmentBox
     * @example
     * // Get one ShipmentBox
     * const shipmentBox = await prisma.shipmentBox.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShipmentBoxFindFirstArgs>(args?: SelectSubset<T, ShipmentBoxFindFirstArgs<ExtArgs>>): Prisma__ShipmentBoxClient<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ShipmentBox that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentBoxFindFirstOrThrowArgs} args - Arguments to find a ShipmentBox
     * @example
     * // Get one ShipmentBox
     * const shipmentBox = await prisma.shipmentBox.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShipmentBoxFindFirstOrThrowArgs>(args?: SelectSubset<T, ShipmentBoxFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShipmentBoxClient<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ShipmentBoxes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentBoxFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShipmentBoxes
     * const shipmentBoxes = await prisma.shipmentBox.findMany()
     * 
     * // Get first 10 ShipmentBoxes
     * const shipmentBoxes = await prisma.shipmentBox.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipmentBoxWithIdOnly = await prisma.shipmentBox.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShipmentBoxFindManyArgs>(args?: SelectSubset<T, ShipmentBoxFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ShipmentBox.
     * @param {ShipmentBoxCreateArgs} args - Arguments to create a ShipmentBox.
     * @example
     * // Create one ShipmentBox
     * const ShipmentBox = await prisma.shipmentBox.create({
     *   data: {
     *     // ... data to create a ShipmentBox
     *   }
     * })
     * 
     */
    create<T extends ShipmentBoxCreateArgs>(args: SelectSubset<T, ShipmentBoxCreateArgs<ExtArgs>>): Prisma__ShipmentBoxClient<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ShipmentBoxes.
     * @param {ShipmentBoxCreateManyArgs} args - Arguments to create many ShipmentBoxes.
     * @example
     * // Create many ShipmentBoxes
     * const shipmentBox = await prisma.shipmentBox.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShipmentBoxCreateManyArgs>(args?: SelectSubset<T, ShipmentBoxCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ShipmentBoxes and returns the data saved in the database.
     * @param {ShipmentBoxCreateManyAndReturnArgs} args - Arguments to create many ShipmentBoxes.
     * @example
     * // Create many ShipmentBoxes
     * const shipmentBox = await prisma.shipmentBox.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ShipmentBoxes and only return the `id`
     * const shipmentBoxWithIdOnly = await prisma.shipmentBox.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShipmentBoxCreateManyAndReturnArgs>(args?: SelectSubset<T, ShipmentBoxCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ShipmentBox.
     * @param {ShipmentBoxDeleteArgs} args - Arguments to delete one ShipmentBox.
     * @example
     * // Delete one ShipmentBox
     * const ShipmentBox = await prisma.shipmentBox.delete({
     *   where: {
     *     // ... filter to delete one ShipmentBox
     *   }
     * })
     * 
     */
    delete<T extends ShipmentBoxDeleteArgs>(args: SelectSubset<T, ShipmentBoxDeleteArgs<ExtArgs>>): Prisma__ShipmentBoxClient<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ShipmentBox.
     * @param {ShipmentBoxUpdateArgs} args - Arguments to update one ShipmentBox.
     * @example
     * // Update one ShipmentBox
     * const shipmentBox = await prisma.shipmentBox.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShipmentBoxUpdateArgs>(args: SelectSubset<T, ShipmentBoxUpdateArgs<ExtArgs>>): Prisma__ShipmentBoxClient<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ShipmentBoxes.
     * @param {ShipmentBoxDeleteManyArgs} args - Arguments to filter ShipmentBoxes to delete.
     * @example
     * // Delete a few ShipmentBoxes
     * const { count } = await prisma.shipmentBox.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShipmentBoxDeleteManyArgs>(args?: SelectSubset<T, ShipmentBoxDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShipmentBoxes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentBoxUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShipmentBoxes
     * const shipmentBox = await prisma.shipmentBox.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShipmentBoxUpdateManyArgs>(args: SelectSubset<T, ShipmentBoxUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ShipmentBox.
     * @param {ShipmentBoxUpsertArgs} args - Arguments to update or create a ShipmentBox.
     * @example
     * // Update or create a ShipmentBox
     * const shipmentBox = await prisma.shipmentBox.upsert({
     *   create: {
     *     // ... data to create a ShipmentBox
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShipmentBox we want to update
     *   }
     * })
     */
    upsert<T extends ShipmentBoxUpsertArgs>(args: SelectSubset<T, ShipmentBoxUpsertArgs<ExtArgs>>): Prisma__ShipmentBoxClient<$Result.GetResult<Prisma.$ShipmentBoxPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ShipmentBoxes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentBoxCountArgs} args - Arguments to filter ShipmentBoxes to count.
     * @example
     * // Count the number of ShipmentBoxes
     * const count = await prisma.shipmentBox.count({
     *   where: {
     *     // ... the filter for the ShipmentBoxes we want to count
     *   }
     * })
    **/
    count<T extends ShipmentBoxCountArgs>(
      args?: Subset<T, ShipmentBoxCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShipmentBoxCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShipmentBox.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentBoxAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShipmentBoxAggregateArgs>(args: Subset<T, ShipmentBoxAggregateArgs>): Prisma.PrismaPromise<GetShipmentBoxAggregateType<T>>

    /**
     * Group by ShipmentBox.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentBoxGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShipmentBoxGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShipmentBoxGroupByArgs['orderBy'] }
        : { orderBy?: ShipmentBoxGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShipmentBoxGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipmentBoxGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShipmentBox model
   */
  readonly fields: ShipmentBoxFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShipmentBox.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShipmentBoxClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    shipment<T extends ShipmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ShipmentDefaultArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    rack<T extends ShipmentBox$rackArgs<ExtArgs> = {}>(args?: Subset<T, ShipmentBox$rackArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ShipmentBox model
   */ 
  interface ShipmentBoxFieldRefs {
    readonly id: FieldRef<"ShipmentBox", 'String'>
    readonly shipmentId: FieldRef<"ShipmentBox", 'String'>
    readonly boxNumber: FieldRef<"ShipmentBox", 'Int'>
    readonly qrCode: FieldRef<"ShipmentBox", 'String'>
    readonly rackId: FieldRef<"ShipmentBox", 'String'>
    readonly status: FieldRef<"ShipmentBox", 'String'>
    readonly assignedAt: FieldRef<"ShipmentBox", 'DateTime'>
    readonly releasedAt: FieldRef<"ShipmentBox", 'DateTime'>
    readonly companyId: FieldRef<"ShipmentBox", 'String'>
    readonly createdAt: FieldRef<"ShipmentBox", 'DateTime'>
    readonly updatedAt: FieldRef<"ShipmentBox", 'DateTime'>
    readonly pieceWeight: FieldRef<"ShipmentBox", 'Float'>
    readonly pieceQR: FieldRef<"ShipmentBox", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ShipmentBox findUnique
   */
  export type ShipmentBoxFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentBox to fetch.
     */
    where: ShipmentBoxWhereUniqueInput
  }

  /**
   * ShipmentBox findUniqueOrThrow
   */
  export type ShipmentBoxFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentBox to fetch.
     */
    where: ShipmentBoxWhereUniqueInput
  }

  /**
   * ShipmentBox findFirst
   */
  export type ShipmentBoxFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentBox to fetch.
     */
    where?: ShipmentBoxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentBoxes to fetch.
     */
    orderBy?: ShipmentBoxOrderByWithRelationInput | ShipmentBoxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShipmentBoxes.
     */
    cursor?: ShipmentBoxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentBoxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentBoxes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShipmentBoxes.
     */
    distinct?: ShipmentBoxScalarFieldEnum | ShipmentBoxScalarFieldEnum[]
  }

  /**
   * ShipmentBox findFirstOrThrow
   */
  export type ShipmentBoxFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentBox to fetch.
     */
    where?: ShipmentBoxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentBoxes to fetch.
     */
    orderBy?: ShipmentBoxOrderByWithRelationInput | ShipmentBoxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShipmentBoxes.
     */
    cursor?: ShipmentBoxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentBoxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentBoxes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShipmentBoxes.
     */
    distinct?: ShipmentBoxScalarFieldEnum | ShipmentBoxScalarFieldEnum[]
  }

  /**
   * ShipmentBox findMany
   */
  export type ShipmentBoxFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentBoxes to fetch.
     */
    where?: ShipmentBoxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentBoxes to fetch.
     */
    orderBy?: ShipmentBoxOrderByWithRelationInput | ShipmentBoxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShipmentBoxes.
     */
    cursor?: ShipmentBoxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentBoxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentBoxes.
     */
    skip?: number
    distinct?: ShipmentBoxScalarFieldEnum | ShipmentBoxScalarFieldEnum[]
  }

  /**
   * ShipmentBox create
   */
  export type ShipmentBoxCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    /**
     * The data needed to create a ShipmentBox.
     */
    data: XOR<ShipmentBoxCreateInput, ShipmentBoxUncheckedCreateInput>
  }

  /**
   * ShipmentBox createMany
   */
  export type ShipmentBoxCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShipmentBoxes.
     */
    data: ShipmentBoxCreateManyInput | ShipmentBoxCreateManyInput[]
  }

  /**
   * ShipmentBox createManyAndReturn
   */
  export type ShipmentBoxCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ShipmentBoxes.
     */
    data: ShipmentBoxCreateManyInput | ShipmentBoxCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShipmentBox update
   */
  export type ShipmentBoxUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    /**
     * The data needed to update a ShipmentBox.
     */
    data: XOR<ShipmentBoxUpdateInput, ShipmentBoxUncheckedUpdateInput>
    /**
     * Choose, which ShipmentBox to update.
     */
    where: ShipmentBoxWhereUniqueInput
  }

  /**
   * ShipmentBox updateMany
   */
  export type ShipmentBoxUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShipmentBoxes.
     */
    data: XOR<ShipmentBoxUpdateManyMutationInput, ShipmentBoxUncheckedUpdateManyInput>
    /**
     * Filter which ShipmentBoxes to update
     */
    where?: ShipmentBoxWhereInput
  }

  /**
   * ShipmentBox upsert
   */
  export type ShipmentBoxUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    /**
     * The filter to search for the ShipmentBox to update in case it exists.
     */
    where: ShipmentBoxWhereUniqueInput
    /**
     * In case the ShipmentBox found by the `where` argument doesn't exist, create a new ShipmentBox with this data.
     */
    create: XOR<ShipmentBoxCreateInput, ShipmentBoxUncheckedCreateInput>
    /**
     * In case the ShipmentBox was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShipmentBoxUpdateInput, ShipmentBoxUncheckedUpdateInput>
  }

  /**
   * ShipmentBox delete
   */
  export type ShipmentBoxDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
    /**
     * Filter which ShipmentBox to delete.
     */
    where: ShipmentBoxWhereUniqueInput
  }

  /**
   * ShipmentBox deleteMany
   */
  export type ShipmentBoxDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShipmentBoxes to delete
     */
    where?: ShipmentBoxWhereInput
  }

  /**
   * ShipmentBox.rack
   */
  export type ShipmentBox$rackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    where?: RackWhereInput
  }

  /**
   * ShipmentBox without action
   */
  export type ShipmentBoxDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentBox
     */
    select?: ShipmentBoxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentBoxInclude<ExtArgs> | null
  }


  /**
   * Model Withdrawal
   */

  export type AggregateWithdrawal = {
    _count: WithdrawalCountAggregateOutputType | null
    _avg: WithdrawalAvgAggregateOutputType | null
    _sum: WithdrawalSumAggregateOutputType | null
    _min: WithdrawalMinAggregateOutputType | null
    _max: WithdrawalMaxAggregateOutputType | null
  }

  export type WithdrawalAvgAggregateOutputType = {
    withdrawnBoxCount: number | null
    remainingBoxCount: number | null
  }

  export type WithdrawalSumAggregateOutputType = {
    withdrawnBoxCount: number | null
    remainingBoxCount: number | null
  }

  export type WithdrawalMinAggregateOutputType = {
    id: string | null
    shipmentId: string | null
    withdrawnBoxCount: number | null
    remainingBoxCount: number | null
    withdrawalDate: Date | null
    status: string | null
    reason: string | null
    notes: string | null
    photos: string | null
    receiptNumber: string | null
    withdrawnBy: string | null
    authorizedBy: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WithdrawalMaxAggregateOutputType = {
    id: string | null
    shipmentId: string | null
    withdrawnBoxCount: number | null
    remainingBoxCount: number | null
    withdrawalDate: Date | null
    status: string | null
    reason: string | null
    notes: string | null
    photos: string | null
    receiptNumber: string | null
    withdrawnBy: string | null
    authorizedBy: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WithdrawalCountAggregateOutputType = {
    id: number
    shipmentId: number
    withdrawnBoxCount: number
    remainingBoxCount: number
    withdrawalDate: number
    status: number
    reason: number
    notes: number
    photos: number
    receiptNumber: number
    withdrawnBy: number
    authorizedBy: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type WithdrawalAvgAggregateInputType = {
    withdrawnBoxCount?: true
    remainingBoxCount?: true
  }

  export type WithdrawalSumAggregateInputType = {
    withdrawnBoxCount?: true
    remainingBoxCount?: true
  }

  export type WithdrawalMinAggregateInputType = {
    id?: true
    shipmentId?: true
    withdrawnBoxCount?: true
    remainingBoxCount?: true
    withdrawalDate?: true
    status?: true
    reason?: true
    notes?: true
    photos?: true
    receiptNumber?: true
    withdrawnBy?: true
    authorizedBy?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WithdrawalMaxAggregateInputType = {
    id?: true
    shipmentId?: true
    withdrawnBoxCount?: true
    remainingBoxCount?: true
    withdrawalDate?: true
    status?: true
    reason?: true
    notes?: true
    photos?: true
    receiptNumber?: true
    withdrawnBy?: true
    authorizedBy?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WithdrawalCountAggregateInputType = {
    id?: true
    shipmentId?: true
    withdrawnBoxCount?: true
    remainingBoxCount?: true
    withdrawalDate?: true
    status?: true
    reason?: true
    notes?: true
    photos?: true
    receiptNumber?: true
    withdrawnBy?: true
    authorizedBy?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type WithdrawalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Withdrawal to aggregate.
     */
    where?: WithdrawalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Withdrawals to fetch.
     */
    orderBy?: WithdrawalOrderByWithRelationInput | WithdrawalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WithdrawalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Withdrawals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Withdrawals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Withdrawals
    **/
    _count?: true | WithdrawalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WithdrawalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WithdrawalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WithdrawalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WithdrawalMaxAggregateInputType
  }

  export type GetWithdrawalAggregateType<T extends WithdrawalAggregateArgs> = {
        [P in keyof T & keyof AggregateWithdrawal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWithdrawal[P]>
      : GetScalarType<T[P], AggregateWithdrawal[P]>
  }




  export type WithdrawalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WithdrawalWhereInput
    orderBy?: WithdrawalOrderByWithAggregationInput | WithdrawalOrderByWithAggregationInput[]
    by: WithdrawalScalarFieldEnum[] | WithdrawalScalarFieldEnum
    having?: WithdrawalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WithdrawalCountAggregateInputType | true
    _avg?: WithdrawalAvgAggregateInputType
    _sum?: WithdrawalSumAggregateInputType
    _min?: WithdrawalMinAggregateInputType
    _max?: WithdrawalMaxAggregateInputType
  }

  export type WithdrawalGroupByOutputType = {
    id: string
    shipmentId: string
    withdrawnBoxCount: number
    remainingBoxCount: number
    withdrawalDate: Date
    status: string
    reason: string | null
    notes: string | null
    photos: string | null
    receiptNumber: string | null
    withdrawnBy: string
    authorizedBy: string | null
    companyId: string
    createdAt: Date
    updatedAt: Date
    _count: WithdrawalCountAggregateOutputType | null
    _avg: WithdrawalAvgAggregateOutputType | null
    _sum: WithdrawalSumAggregateOutputType | null
    _min: WithdrawalMinAggregateOutputType | null
    _max: WithdrawalMaxAggregateOutputType | null
  }

  type GetWithdrawalGroupByPayload<T extends WithdrawalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WithdrawalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WithdrawalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WithdrawalGroupByOutputType[P]>
            : GetScalarType<T[P], WithdrawalGroupByOutputType[P]>
        }
      >
    >


  export type WithdrawalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    withdrawnBoxCount?: boolean
    remainingBoxCount?: boolean
    withdrawalDate?: boolean
    status?: boolean
    reason?: boolean
    notes?: boolean
    photos?: boolean
    receiptNumber?: boolean
    withdrawnBy?: boolean
    authorizedBy?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["withdrawal"]>

  export type WithdrawalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    withdrawnBoxCount?: boolean
    remainingBoxCount?: boolean
    withdrawalDate?: boolean
    status?: boolean
    reason?: boolean
    notes?: boolean
    photos?: boolean
    receiptNumber?: boolean
    withdrawnBy?: boolean
    authorizedBy?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["withdrawal"]>

  export type WithdrawalSelectScalar = {
    id?: boolean
    shipmentId?: boolean
    withdrawnBoxCount?: boolean
    remainingBoxCount?: boolean
    withdrawalDate?: boolean
    status?: boolean
    reason?: boolean
    notes?: boolean
    photos?: boolean
    receiptNumber?: boolean
    withdrawnBy?: boolean
    authorizedBy?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type WithdrawalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }
  export type WithdrawalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }

  export type $WithdrawalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Withdrawal"
    objects: {
      shipment: Prisma.$ShipmentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      shipmentId: string
      withdrawnBoxCount: number
      remainingBoxCount: number
      withdrawalDate: Date
      status: string
      reason: string | null
      notes: string | null
      photos: string | null
      receiptNumber: string | null
      withdrawnBy: string
      authorizedBy: string | null
      companyId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["withdrawal"]>
    composites: {}
  }

  type WithdrawalGetPayload<S extends boolean | null | undefined | WithdrawalDefaultArgs> = $Result.GetResult<Prisma.$WithdrawalPayload, S>

  type WithdrawalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WithdrawalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WithdrawalCountAggregateInputType | true
    }

  export interface WithdrawalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Withdrawal'], meta: { name: 'Withdrawal' } }
    /**
     * Find zero or one Withdrawal that matches the filter.
     * @param {WithdrawalFindUniqueArgs} args - Arguments to find a Withdrawal
     * @example
     * // Get one Withdrawal
     * const withdrawal = await prisma.withdrawal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WithdrawalFindUniqueArgs>(args: SelectSubset<T, WithdrawalFindUniqueArgs<ExtArgs>>): Prisma__WithdrawalClient<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Withdrawal that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WithdrawalFindUniqueOrThrowArgs} args - Arguments to find a Withdrawal
     * @example
     * // Get one Withdrawal
     * const withdrawal = await prisma.withdrawal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WithdrawalFindUniqueOrThrowArgs>(args: SelectSubset<T, WithdrawalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WithdrawalClient<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Withdrawal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WithdrawalFindFirstArgs} args - Arguments to find a Withdrawal
     * @example
     * // Get one Withdrawal
     * const withdrawal = await prisma.withdrawal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WithdrawalFindFirstArgs>(args?: SelectSubset<T, WithdrawalFindFirstArgs<ExtArgs>>): Prisma__WithdrawalClient<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Withdrawal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WithdrawalFindFirstOrThrowArgs} args - Arguments to find a Withdrawal
     * @example
     * // Get one Withdrawal
     * const withdrawal = await prisma.withdrawal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WithdrawalFindFirstOrThrowArgs>(args?: SelectSubset<T, WithdrawalFindFirstOrThrowArgs<ExtArgs>>): Prisma__WithdrawalClient<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Withdrawals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WithdrawalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Withdrawals
     * const withdrawals = await prisma.withdrawal.findMany()
     * 
     * // Get first 10 Withdrawals
     * const withdrawals = await prisma.withdrawal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const withdrawalWithIdOnly = await prisma.withdrawal.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WithdrawalFindManyArgs>(args?: SelectSubset<T, WithdrawalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Withdrawal.
     * @param {WithdrawalCreateArgs} args - Arguments to create a Withdrawal.
     * @example
     * // Create one Withdrawal
     * const Withdrawal = await prisma.withdrawal.create({
     *   data: {
     *     // ... data to create a Withdrawal
     *   }
     * })
     * 
     */
    create<T extends WithdrawalCreateArgs>(args: SelectSubset<T, WithdrawalCreateArgs<ExtArgs>>): Prisma__WithdrawalClient<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Withdrawals.
     * @param {WithdrawalCreateManyArgs} args - Arguments to create many Withdrawals.
     * @example
     * // Create many Withdrawals
     * const withdrawal = await prisma.withdrawal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WithdrawalCreateManyArgs>(args?: SelectSubset<T, WithdrawalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Withdrawals and returns the data saved in the database.
     * @param {WithdrawalCreateManyAndReturnArgs} args - Arguments to create many Withdrawals.
     * @example
     * // Create many Withdrawals
     * const withdrawal = await prisma.withdrawal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Withdrawals and only return the `id`
     * const withdrawalWithIdOnly = await prisma.withdrawal.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WithdrawalCreateManyAndReturnArgs>(args?: SelectSubset<T, WithdrawalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Withdrawal.
     * @param {WithdrawalDeleteArgs} args - Arguments to delete one Withdrawal.
     * @example
     * // Delete one Withdrawal
     * const Withdrawal = await prisma.withdrawal.delete({
     *   where: {
     *     // ... filter to delete one Withdrawal
     *   }
     * })
     * 
     */
    delete<T extends WithdrawalDeleteArgs>(args: SelectSubset<T, WithdrawalDeleteArgs<ExtArgs>>): Prisma__WithdrawalClient<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Withdrawal.
     * @param {WithdrawalUpdateArgs} args - Arguments to update one Withdrawal.
     * @example
     * // Update one Withdrawal
     * const withdrawal = await prisma.withdrawal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WithdrawalUpdateArgs>(args: SelectSubset<T, WithdrawalUpdateArgs<ExtArgs>>): Prisma__WithdrawalClient<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Withdrawals.
     * @param {WithdrawalDeleteManyArgs} args - Arguments to filter Withdrawals to delete.
     * @example
     * // Delete a few Withdrawals
     * const { count } = await prisma.withdrawal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WithdrawalDeleteManyArgs>(args?: SelectSubset<T, WithdrawalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Withdrawals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WithdrawalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Withdrawals
     * const withdrawal = await prisma.withdrawal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WithdrawalUpdateManyArgs>(args: SelectSubset<T, WithdrawalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Withdrawal.
     * @param {WithdrawalUpsertArgs} args - Arguments to update or create a Withdrawal.
     * @example
     * // Update or create a Withdrawal
     * const withdrawal = await prisma.withdrawal.upsert({
     *   create: {
     *     // ... data to create a Withdrawal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Withdrawal we want to update
     *   }
     * })
     */
    upsert<T extends WithdrawalUpsertArgs>(args: SelectSubset<T, WithdrawalUpsertArgs<ExtArgs>>): Prisma__WithdrawalClient<$Result.GetResult<Prisma.$WithdrawalPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Withdrawals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WithdrawalCountArgs} args - Arguments to filter Withdrawals to count.
     * @example
     * // Count the number of Withdrawals
     * const count = await prisma.withdrawal.count({
     *   where: {
     *     // ... the filter for the Withdrawals we want to count
     *   }
     * })
    **/
    count<T extends WithdrawalCountArgs>(
      args?: Subset<T, WithdrawalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WithdrawalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Withdrawal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WithdrawalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WithdrawalAggregateArgs>(args: Subset<T, WithdrawalAggregateArgs>): Prisma.PrismaPromise<GetWithdrawalAggregateType<T>>

    /**
     * Group by Withdrawal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WithdrawalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WithdrawalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WithdrawalGroupByArgs['orderBy'] }
        : { orderBy?: WithdrawalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WithdrawalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWithdrawalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Withdrawal model
   */
  readonly fields: WithdrawalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Withdrawal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WithdrawalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    shipment<T extends ShipmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ShipmentDefaultArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Withdrawal model
   */ 
  interface WithdrawalFieldRefs {
    readonly id: FieldRef<"Withdrawal", 'String'>
    readonly shipmentId: FieldRef<"Withdrawal", 'String'>
    readonly withdrawnBoxCount: FieldRef<"Withdrawal", 'Int'>
    readonly remainingBoxCount: FieldRef<"Withdrawal", 'Int'>
    readonly withdrawalDate: FieldRef<"Withdrawal", 'DateTime'>
    readonly status: FieldRef<"Withdrawal", 'String'>
    readonly reason: FieldRef<"Withdrawal", 'String'>
    readonly notes: FieldRef<"Withdrawal", 'String'>
    readonly photos: FieldRef<"Withdrawal", 'String'>
    readonly receiptNumber: FieldRef<"Withdrawal", 'String'>
    readonly withdrawnBy: FieldRef<"Withdrawal", 'String'>
    readonly authorizedBy: FieldRef<"Withdrawal", 'String'>
    readonly companyId: FieldRef<"Withdrawal", 'String'>
    readonly createdAt: FieldRef<"Withdrawal", 'DateTime'>
    readonly updatedAt: FieldRef<"Withdrawal", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Withdrawal findUnique
   */
  export type WithdrawalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
    /**
     * Filter, which Withdrawal to fetch.
     */
    where: WithdrawalWhereUniqueInput
  }

  /**
   * Withdrawal findUniqueOrThrow
   */
  export type WithdrawalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
    /**
     * Filter, which Withdrawal to fetch.
     */
    where: WithdrawalWhereUniqueInput
  }

  /**
   * Withdrawal findFirst
   */
  export type WithdrawalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
    /**
     * Filter, which Withdrawal to fetch.
     */
    where?: WithdrawalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Withdrawals to fetch.
     */
    orderBy?: WithdrawalOrderByWithRelationInput | WithdrawalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Withdrawals.
     */
    cursor?: WithdrawalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Withdrawals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Withdrawals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Withdrawals.
     */
    distinct?: WithdrawalScalarFieldEnum | WithdrawalScalarFieldEnum[]
  }

  /**
   * Withdrawal findFirstOrThrow
   */
  export type WithdrawalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
    /**
     * Filter, which Withdrawal to fetch.
     */
    where?: WithdrawalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Withdrawals to fetch.
     */
    orderBy?: WithdrawalOrderByWithRelationInput | WithdrawalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Withdrawals.
     */
    cursor?: WithdrawalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Withdrawals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Withdrawals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Withdrawals.
     */
    distinct?: WithdrawalScalarFieldEnum | WithdrawalScalarFieldEnum[]
  }

  /**
   * Withdrawal findMany
   */
  export type WithdrawalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
    /**
     * Filter, which Withdrawals to fetch.
     */
    where?: WithdrawalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Withdrawals to fetch.
     */
    orderBy?: WithdrawalOrderByWithRelationInput | WithdrawalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Withdrawals.
     */
    cursor?: WithdrawalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Withdrawals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Withdrawals.
     */
    skip?: number
    distinct?: WithdrawalScalarFieldEnum | WithdrawalScalarFieldEnum[]
  }

  /**
   * Withdrawal create
   */
  export type WithdrawalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
    /**
     * The data needed to create a Withdrawal.
     */
    data: XOR<WithdrawalCreateInput, WithdrawalUncheckedCreateInput>
  }

  /**
   * Withdrawal createMany
   */
  export type WithdrawalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Withdrawals.
     */
    data: WithdrawalCreateManyInput | WithdrawalCreateManyInput[]
  }

  /**
   * Withdrawal createManyAndReturn
   */
  export type WithdrawalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Withdrawals.
     */
    data: WithdrawalCreateManyInput | WithdrawalCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Withdrawal update
   */
  export type WithdrawalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
    /**
     * The data needed to update a Withdrawal.
     */
    data: XOR<WithdrawalUpdateInput, WithdrawalUncheckedUpdateInput>
    /**
     * Choose, which Withdrawal to update.
     */
    where: WithdrawalWhereUniqueInput
  }

  /**
   * Withdrawal updateMany
   */
  export type WithdrawalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Withdrawals.
     */
    data: XOR<WithdrawalUpdateManyMutationInput, WithdrawalUncheckedUpdateManyInput>
    /**
     * Filter which Withdrawals to update
     */
    where?: WithdrawalWhereInput
  }

  /**
   * Withdrawal upsert
   */
  export type WithdrawalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
    /**
     * The filter to search for the Withdrawal to update in case it exists.
     */
    where: WithdrawalWhereUniqueInput
    /**
     * In case the Withdrawal found by the `where` argument doesn't exist, create a new Withdrawal with this data.
     */
    create: XOR<WithdrawalCreateInput, WithdrawalUncheckedCreateInput>
    /**
     * In case the Withdrawal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WithdrawalUpdateInput, WithdrawalUncheckedUpdateInput>
  }

  /**
   * Withdrawal delete
   */
  export type WithdrawalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
    /**
     * Filter which Withdrawal to delete.
     */
    where: WithdrawalWhereUniqueInput
  }

  /**
   * Withdrawal deleteMany
   */
  export type WithdrawalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Withdrawals to delete
     */
    where?: WithdrawalWhereInput
  }

  /**
   * Withdrawal without action
   */
  export type WithdrawalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Withdrawal
     */
    select?: WithdrawalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WithdrawalInclude<ExtArgs> | null
  }


  /**
   * Model Expense
   */

  export type AggregateExpense = {
    _count: ExpenseCountAggregateOutputType | null
    _avg: ExpenseAvgAggregateOutputType | null
    _sum: ExpenseSumAggregateOutputType | null
    _min: ExpenseMinAggregateOutputType | null
    _max: ExpenseMaxAggregateOutputType | null
  }

  export type ExpenseAvgAggregateOutputType = {
    amount: number | null
  }

  export type ExpenseSumAggregateOutputType = {
    amount: number | null
  }

  export type ExpenseMinAggregateOutputType = {
    id: string | null
    title: string | null
    category: string | null
    amount: number | null
    currency: string | null
    description: string | null
    receipts: string | null
    expenseDate: Date | null
    approvedBy: string | null
    status: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ExpenseMaxAggregateOutputType = {
    id: string | null
    title: string | null
    category: string | null
    amount: number | null
    currency: string | null
    description: string | null
    receipts: string | null
    expenseDate: Date | null
    approvedBy: string | null
    status: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ExpenseCountAggregateOutputType = {
    id: number
    title: number
    category: number
    amount: number
    currency: number
    description: number
    receipts: number
    expenseDate: number
    approvedBy: number
    status: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ExpenseAvgAggregateInputType = {
    amount?: true
  }

  export type ExpenseSumAggregateInputType = {
    amount?: true
  }

  export type ExpenseMinAggregateInputType = {
    id?: true
    title?: true
    category?: true
    amount?: true
    currency?: true
    description?: true
    receipts?: true
    expenseDate?: true
    approvedBy?: true
    status?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ExpenseMaxAggregateInputType = {
    id?: true
    title?: true
    category?: true
    amount?: true
    currency?: true
    description?: true
    receipts?: true
    expenseDate?: true
    approvedBy?: true
    status?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ExpenseCountAggregateInputType = {
    id?: true
    title?: true
    category?: true
    amount?: true
    currency?: true
    description?: true
    receipts?: true
    expenseDate?: true
    approvedBy?: true
    status?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ExpenseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Expense to aggregate.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Expenses
    **/
    _count?: true | ExpenseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ExpenseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ExpenseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ExpenseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ExpenseMaxAggregateInputType
  }

  export type GetExpenseAggregateType<T extends ExpenseAggregateArgs> = {
        [P in keyof T & keyof AggregateExpense]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateExpense[P]>
      : GetScalarType<T[P], AggregateExpense[P]>
  }




  export type ExpenseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpenseWhereInput
    orderBy?: ExpenseOrderByWithAggregationInput | ExpenseOrderByWithAggregationInput[]
    by: ExpenseScalarFieldEnum[] | ExpenseScalarFieldEnum
    having?: ExpenseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ExpenseCountAggregateInputType | true
    _avg?: ExpenseAvgAggregateInputType
    _sum?: ExpenseSumAggregateInputType
    _min?: ExpenseMinAggregateInputType
    _max?: ExpenseMaxAggregateInputType
  }

  export type ExpenseGroupByOutputType = {
    id: string
    title: string
    category: string
    amount: number
    currency: string
    description: string | null
    receipts: string | null
    expenseDate: Date
    approvedBy: string | null
    status: string
    companyId: string
    createdAt: Date
    updatedAt: Date
    _count: ExpenseCountAggregateOutputType | null
    _avg: ExpenseAvgAggregateOutputType | null
    _sum: ExpenseSumAggregateOutputType | null
    _min: ExpenseMinAggregateOutputType | null
    _max: ExpenseMaxAggregateOutputType | null
  }

  type GetExpenseGroupByPayload<T extends ExpenseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ExpenseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ExpenseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ExpenseGroupByOutputType[P]>
            : GetScalarType<T[P], ExpenseGroupByOutputType[P]>
        }
      >
    >


  export type ExpenseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    category?: boolean
    amount?: boolean
    currency?: boolean
    description?: boolean
    receipts?: boolean
    expenseDate?: boolean
    approvedBy?: boolean
    status?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["expense"]>

  export type ExpenseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    category?: boolean
    amount?: boolean
    currency?: boolean
    description?: boolean
    receipts?: boolean
    expenseDate?: boolean
    approvedBy?: boolean
    status?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["expense"]>

  export type ExpenseSelectScalar = {
    id?: boolean
    title?: boolean
    category?: boolean
    amount?: boolean
    currency?: boolean
    description?: boolean
    receipts?: boolean
    expenseDate?: boolean
    approvedBy?: boolean
    status?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ExpenseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type ExpenseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $ExpensePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Expense"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      category: string
      amount: number
      currency: string
      description: string | null
      receipts: string | null
      expenseDate: Date
      approvedBy: string | null
      status: string
      companyId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["expense"]>
    composites: {}
  }

  type ExpenseGetPayload<S extends boolean | null | undefined | ExpenseDefaultArgs> = $Result.GetResult<Prisma.$ExpensePayload, S>

  type ExpenseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ExpenseFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ExpenseCountAggregateInputType | true
    }

  export interface ExpenseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Expense'], meta: { name: 'Expense' } }
    /**
     * Find zero or one Expense that matches the filter.
     * @param {ExpenseFindUniqueArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ExpenseFindUniqueArgs>(args: SelectSubset<T, ExpenseFindUniqueArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Expense that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ExpenseFindUniqueOrThrowArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ExpenseFindUniqueOrThrowArgs>(args: SelectSubset<T, ExpenseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Expense that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseFindFirstArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ExpenseFindFirstArgs>(args?: SelectSubset<T, ExpenseFindFirstArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Expense that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseFindFirstOrThrowArgs} args - Arguments to find a Expense
     * @example
     * // Get one Expense
     * const expense = await prisma.expense.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ExpenseFindFirstOrThrowArgs>(args?: SelectSubset<T, ExpenseFindFirstOrThrowArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Expenses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Expenses
     * const expenses = await prisma.expense.findMany()
     * 
     * // Get first 10 Expenses
     * const expenses = await prisma.expense.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const expenseWithIdOnly = await prisma.expense.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ExpenseFindManyArgs>(args?: SelectSubset<T, ExpenseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Expense.
     * @param {ExpenseCreateArgs} args - Arguments to create a Expense.
     * @example
     * // Create one Expense
     * const Expense = await prisma.expense.create({
     *   data: {
     *     // ... data to create a Expense
     *   }
     * })
     * 
     */
    create<T extends ExpenseCreateArgs>(args: SelectSubset<T, ExpenseCreateArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Expenses.
     * @param {ExpenseCreateManyArgs} args - Arguments to create many Expenses.
     * @example
     * // Create many Expenses
     * const expense = await prisma.expense.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ExpenseCreateManyArgs>(args?: SelectSubset<T, ExpenseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Expenses and returns the data saved in the database.
     * @param {ExpenseCreateManyAndReturnArgs} args - Arguments to create many Expenses.
     * @example
     * // Create many Expenses
     * const expense = await prisma.expense.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Expenses and only return the `id`
     * const expenseWithIdOnly = await prisma.expense.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ExpenseCreateManyAndReturnArgs>(args?: SelectSubset<T, ExpenseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Expense.
     * @param {ExpenseDeleteArgs} args - Arguments to delete one Expense.
     * @example
     * // Delete one Expense
     * const Expense = await prisma.expense.delete({
     *   where: {
     *     // ... filter to delete one Expense
     *   }
     * })
     * 
     */
    delete<T extends ExpenseDeleteArgs>(args: SelectSubset<T, ExpenseDeleteArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Expense.
     * @param {ExpenseUpdateArgs} args - Arguments to update one Expense.
     * @example
     * // Update one Expense
     * const expense = await prisma.expense.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ExpenseUpdateArgs>(args: SelectSubset<T, ExpenseUpdateArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Expenses.
     * @param {ExpenseDeleteManyArgs} args - Arguments to filter Expenses to delete.
     * @example
     * // Delete a few Expenses
     * const { count } = await prisma.expense.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ExpenseDeleteManyArgs>(args?: SelectSubset<T, ExpenseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Expenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Expenses
     * const expense = await prisma.expense.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ExpenseUpdateManyArgs>(args: SelectSubset<T, ExpenseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Expense.
     * @param {ExpenseUpsertArgs} args - Arguments to update or create a Expense.
     * @example
     * // Update or create a Expense
     * const expense = await prisma.expense.upsert({
     *   create: {
     *     // ... data to create a Expense
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Expense we want to update
     *   }
     * })
     */
    upsert<T extends ExpenseUpsertArgs>(args: SelectSubset<T, ExpenseUpsertArgs<ExtArgs>>): Prisma__ExpenseClient<$Result.GetResult<Prisma.$ExpensePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Expenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseCountArgs} args - Arguments to filter Expenses to count.
     * @example
     * // Count the number of Expenses
     * const count = await prisma.expense.count({
     *   where: {
     *     // ... the filter for the Expenses we want to count
     *   }
     * })
    **/
    count<T extends ExpenseCountArgs>(
      args?: Subset<T, ExpenseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ExpenseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Expense.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ExpenseAggregateArgs>(args: Subset<T, ExpenseAggregateArgs>): Prisma.PrismaPromise<GetExpenseAggregateType<T>>

    /**
     * Group by Expense.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpenseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ExpenseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ExpenseGroupByArgs['orderBy'] }
        : { orderBy?: ExpenseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ExpenseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExpenseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Expense model
   */
  readonly fields: ExpenseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Expense.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ExpenseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Expense model
   */ 
  interface ExpenseFieldRefs {
    readonly id: FieldRef<"Expense", 'String'>
    readonly title: FieldRef<"Expense", 'String'>
    readonly category: FieldRef<"Expense", 'String'>
    readonly amount: FieldRef<"Expense", 'Float'>
    readonly currency: FieldRef<"Expense", 'String'>
    readonly description: FieldRef<"Expense", 'String'>
    readonly receipts: FieldRef<"Expense", 'String'>
    readonly expenseDate: FieldRef<"Expense", 'DateTime'>
    readonly approvedBy: FieldRef<"Expense", 'String'>
    readonly status: FieldRef<"Expense", 'String'>
    readonly companyId: FieldRef<"Expense", 'String'>
    readonly createdAt: FieldRef<"Expense", 'DateTime'>
    readonly updatedAt: FieldRef<"Expense", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Expense findUnique
   */
  export type ExpenseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where: ExpenseWhereUniqueInput
  }

  /**
   * Expense findUniqueOrThrow
   */
  export type ExpenseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where: ExpenseWhereUniqueInput
  }

  /**
   * Expense findFirst
   */
  export type ExpenseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Expenses.
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Expenses.
     */
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * Expense findFirstOrThrow
   */
  export type ExpenseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expense to fetch.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Expenses.
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Expenses.
     */
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * Expense findMany
   */
  export type ExpenseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter, which Expenses to fetch.
     */
    where?: ExpenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expenses to fetch.
     */
    orderBy?: ExpenseOrderByWithRelationInput | ExpenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Expenses.
     */
    cursor?: ExpenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expenses.
     */
    skip?: number
    distinct?: ExpenseScalarFieldEnum | ExpenseScalarFieldEnum[]
  }

  /**
   * Expense create
   */
  export type ExpenseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * The data needed to create a Expense.
     */
    data: XOR<ExpenseCreateInput, ExpenseUncheckedCreateInput>
  }

  /**
   * Expense createMany
   */
  export type ExpenseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Expenses.
     */
    data: ExpenseCreateManyInput | ExpenseCreateManyInput[]
  }

  /**
   * Expense createManyAndReturn
   */
  export type ExpenseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Expenses.
     */
    data: ExpenseCreateManyInput | ExpenseCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Expense update
   */
  export type ExpenseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * The data needed to update a Expense.
     */
    data: XOR<ExpenseUpdateInput, ExpenseUncheckedUpdateInput>
    /**
     * Choose, which Expense to update.
     */
    where: ExpenseWhereUniqueInput
  }

  /**
   * Expense updateMany
   */
  export type ExpenseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Expenses.
     */
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyInput>
    /**
     * Filter which Expenses to update
     */
    where?: ExpenseWhereInput
  }

  /**
   * Expense upsert
   */
  export type ExpenseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * The filter to search for the Expense to update in case it exists.
     */
    where: ExpenseWhereUniqueInput
    /**
     * In case the Expense found by the `where` argument doesn't exist, create a new Expense with this data.
     */
    create: XOR<ExpenseCreateInput, ExpenseUncheckedCreateInput>
    /**
     * In case the Expense was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ExpenseUpdateInput, ExpenseUncheckedUpdateInput>
  }

  /**
   * Expense delete
   */
  export type ExpenseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
    /**
     * Filter which Expense to delete.
     */
    where: ExpenseWhereUniqueInput
  }

  /**
   * Expense deleteMany
   */
  export type ExpenseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Expenses to delete
     */
    where?: ExpenseWhereInput
  }

  /**
   * Expense without action
   */
  export type ExpenseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expense
     */
    select?: ExpenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpenseInclude<ExtArgs> | null
  }


  /**
   * Model InvoiceSettings
   */

  export type AggregateInvoiceSettings = {
    _count: InvoiceSettingsCountAggregateOutputType | null
    _min: InvoiceSettingsMinAggregateOutputType | null
    _max: InvoiceSettingsMaxAggregateOutputType | null
  }

  export type InvoiceSettingsMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    templateType: string | null
    primaryColor: string | null
    secondaryColor: string | null
    showLogo: boolean | null
    footerText: string | null
    termsConditions: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InvoiceSettingsMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    templateType: string | null
    primaryColor: string | null
    secondaryColor: string | null
    showLogo: boolean | null
    footerText: string | null
    termsConditions: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InvoiceSettingsCountAggregateOutputType = {
    id: number
    companyId: number
    templateType: number
    primaryColor: number
    secondaryColor: number
    showLogo: number
    footerText: number
    termsConditions: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InvoiceSettingsMinAggregateInputType = {
    id?: true
    companyId?: true
    templateType?: true
    primaryColor?: true
    secondaryColor?: true
    showLogo?: true
    footerText?: true
    termsConditions?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InvoiceSettingsMaxAggregateInputType = {
    id?: true
    companyId?: true
    templateType?: true
    primaryColor?: true
    secondaryColor?: true
    showLogo?: true
    footerText?: true
    termsConditions?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InvoiceSettingsCountAggregateInputType = {
    id?: true
    companyId?: true
    templateType?: true
    primaryColor?: true
    secondaryColor?: true
    showLogo?: true
    footerText?: true
    termsConditions?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InvoiceSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceSettings to aggregate.
     */
    where?: InvoiceSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceSettings to fetch.
     */
    orderBy?: InvoiceSettingsOrderByWithRelationInput | InvoiceSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InvoiceSettings
    **/
    _count?: true | InvoiceSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceSettingsMaxAggregateInputType
  }

  export type GetInvoiceSettingsAggregateType<T extends InvoiceSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoiceSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoiceSettings[P]>
      : GetScalarType<T[P], AggregateInvoiceSettings[P]>
  }




  export type InvoiceSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceSettingsWhereInput
    orderBy?: InvoiceSettingsOrderByWithAggregationInput | InvoiceSettingsOrderByWithAggregationInput[]
    by: InvoiceSettingsScalarFieldEnum[] | InvoiceSettingsScalarFieldEnum
    having?: InvoiceSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceSettingsCountAggregateInputType | true
    _min?: InvoiceSettingsMinAggregateInputType
    _max?: InvoiceSettingsMaxAggregateInputType
  }

  export type InvoiceSettingsGroupByOutputType = {
    id: string
    companyId: string
    templateType: string
    primaryColor: string
    secondaryColor: string
    showLogo: boolean
    footerText: string | null
    termsConditions: string | null
    createdAt: Date
    updatedAt: Date
    _count: InvoiceSettingsCountAggregateOutputType | null
    _min: InvoiceSettingsMinAggregateOutputType | null
    _max: InvoiceSettingsMaxAggregateOutputType | null
  }

  type GetInvoiceSettingsGroupByPayload<T extends InvoiceSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceSettingsGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    templateType?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    showLogo?: boolean
    footerText?: boolean
    termsConditions?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceSettings"]>

  export type InvoiceSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    templateType?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    showLogo?: boolean
    footerText?: boolean
    termsConditions?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceSettings"]>

  export type InvoiceSettingsSelectScalar = {
    id?: boolean
    companyId?: boolean
    templateType?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    showLogo?: boolean
    footerText?: boolean
    termsConditions?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InvoiceSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type InvoiceSettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $InvoiceSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InvoiceSettings"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      templateType: string
      primaryColor: string
      secondaryColor: string
      showLogo: boolean
      footerText: string | null
      termsConditions: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["invoiceSettings"]>
    composites: {}
  }

  type InvoiceSettingsGetPayload<S extends boolean | null | undefined | InvoiceSettingsDefaultArgs> = $Result.GetResult<Prisma.$InvoiceSettingsPayload, S>

  type InvoiceSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<InvoiceSettingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InvoiceSettingsCountAggregateInputType | true
    }

  export interface InvoiceSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InvoiceSettings'], meta: { name: 'InvoiceSettings' } }
    /**
     * Find zero or one InvoiceSettings that matches the filter.
     * @param {InvoiceSettingsFindUniqueArgs} args - Arguments to find a InvoiceSettings
     * @example
     * // Get one InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceSettingsFindUniqueArgs>(args: SelectSubset<T, InvoiceSettingsFindUniqueArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one InvoiceSettings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {InvoiceSettingsFindUniqueOrThrowArgs} args - Arguments to find a InvoiceSettings
     * @example
     * // Get one InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first InvoiceSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsFindFirstArgs} args - Arguments to find a InvoiceSettings
     * @example
     * // Get one InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceSettingsFindFirstArgs>(args?: SelectSubset<T, InvoiceSettingsFindFirstArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first InvoiceSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsFindFirstOrThrowArgs} args - Arguments to find a InvoiceSettings
     * @example
     * // Get one InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more InvoiceSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findMany()
     * 
     * // Get first 10 InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceSettingsWithIdOnly = await prisma.invoiceSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceSettingsFindManyArgs>(args?: SelectSubset<T, InvoiceSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a InvoiceSettings.
     * @param {InvoiceSettingsCreateArgs} args - Arguments to create a InvoiceSettings.
     * @example
     * // Create one InvoiceSettings
     * const InvoiceSettings = await prisma.invoiceSettings.create({
     *   data: {
     *     // ... data to create a InvoiceSettings
     *   }
     * })
     * 
     */
    create<T extends InvoiceSettingsCreateArgs>(args: SelectSubset<T, InvoiceSettingsCreateArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many InvoiceSettings.
     * @param {InvoiceSettingsCreateManyArgs} args - Arguments to create many InvoiceSettings.
     * @example
     * // Create many InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceSettingsCreateManyArgs>(args?: SelectSubset<T, InvoiceSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InvoiceSettings and returns the data saved in the database.
     * @param {InvoiceSettingsCreateManyAndReturnArgs} args - Arguments to create many InvoiceSettings.
     * @example
     * // Create many InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InvoiceSettings and only return the `id`
     * const invoiceSettingsWithIdOnly = await prisma.invoiceSettings.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvoiceSettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, InvoiceSettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a InvoiceSettings.
     * @param {InvoiceSettingsDeleteArgs} args - Arguments to delete one InvoiceSettings.
     * @example
     * // Delete one InvoiceSettings
     * const InvoiceSettings = await prisma.invoiceSettings.delete({
     *   where: {
     *     // ... filter to delete one InvoiceSettings
     *   }
     * })
     * 
     */
    delete<T extends InvoiceSettingsDeleteArgs>(args: SelectSubset<T, InvoiceSettingsDeleteArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one InvoiceSettings.
     * @param {InvoiceSettingsUpdateArgs} args - Arguments to update one InvoiceSettings.
     * @example
     * // Update one InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceSettingsUpdateArgs>(args: SelectSubset<T, InvoiceSettingsUpdateArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more InvoiceSettings.
     * @param {InvoiceSettingsDeleteManyArgs} args - Arguments to filter InvoiceSettings to delete.
     * @example
     * // Delete a few InvoiceSettings
     * const { count } = await prisma.invoiceSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceSettingsDeleteManyArgs>(args?: SelectSubset<T, InvoiceSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvoiceSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceSettingsUpdateManyArgs>(args: SelectSubset<T, InvoiceSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one InvoiceSettings.
     * @param {InvoiceSettingsUpsertArgs} args - Arguments to update or create a InvoiceSettings.
     * @example
     * // Update or create a InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.upsert({
     *   create: {
     *     // ... data to create a InvoiceSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InvoiceSettings we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceSettingsUpsertArgs>(args: SelectSubset<T, InvoiceSettingsUpsertArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of InvoiceSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsCountArgs} args - Arguments to filter InvoiceSettings to count.
     * @example
     * // Count the number of InvoiceSettings
     * const count = await prisma.invoiceSettings.count({
     *   where: {
     *     // ... the filter for the InvoiceSettings we want to count
     *   }
     * })
    **/
    count<T extends InvoiceSettingsCountArgs>(
      args?: Subset<T, InvoiceSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InvoiceSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceSettingsAggregateArgs>(args: Subset<T, InvoiceSettingsAggregateArgs>): Prisma.PrismaPromise<GetInvoiceSettingsAggregateType<T>>

    /**
     * Group by InvoiceSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceSettingsGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InvoiceSettings model
   */
  readonly fields: InvoiceSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InvoiceSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InvoiceSettings model
   */ 
  interface InvoiceSettingsFieldRefs {
    readonly id: FieldRef<"InvoiceSettings", 'String'>
    readonly companyId: FieldRef<"InvoiceSettings", 'String'>
    readonly templateType: FieldRef<"InvoiceSettings", 'String'>
    readonly primaryColor: FieldRef<"InvoiceSettings", 'String'>
    readonly secondaryColor: FieldRef<"InvoiceSettings", 'String'>
    readonly showLogo: FieldRef<"InvoiceSettings", 'Boolean'>
    readonly footerText: FieldRef<"InvoiceSettings", 'String'>
    readonly termsConditions: FieldRef<"InvoiceSettings", 'String'>
    readonly createdAt: FieldRef<"InvoiceSettings", 'DateTime'>
    readonly updatedAt: FieldRef<"InvoiceSettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InvoiceSettings findUnique
   */
  export type InvoiceSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceSettings to fetch.
     */
    where: InvoiceSettingsWhereUniqueInput
  }

  /**
   * InvoiceSettings findUniqueOrThrow
   */
  export type InvoiceSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceSettings to fetch.
     */
    where: InvoiceSettingsWhereUniqueInput
  }

  /**
   * InvoiceSettings findFirst
   */
  export type InvoiceSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceSettings to fetch.
     */
    where?: InvoiceSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceSettings to fetch.
     */
    orderBy?: InvoiceSettingsOrderByWithRelationInput | InvoiceSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceSettings.
     */
    cursor?: InvoiceSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceSettings.
     */
    distinct?: InvoiceSettingsScalarFieldEnum | InvoiceSettingsScalarFieldEnum[]
  }

  /**
   * InvoiceSettings findFirstOrThrow
   */
  export type InvoiceSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceSettings to fetch.
     */
    where?: InvoiceSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceSettings to fetch.
     */
    orderBy?: InvoiceSettingsOrderByWithRelationInput | InvoiceSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceSettings.
     */
    cursor?: InvoiceSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceSettings.
     */
    distinct?: InvoiceSettingsScalarFieldEnum | InvoiceSettingsScalarFieldEnum[]
  }

  /**
   * InvoiceSettings findMany
   */
  export type InvoiceSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceSettings to fetch.
     */
    where?: InvoiceSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceSettings to fetch.
     */
    orderBy?: InvoiceSettingsOrderByWithRelationInput | InvoiceSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InvoiceSettings.
     */
    cursor?: InvoiceSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceSettings.
     */
    skip?: number
    distinct?: InvoiceSettingsScalarFieldEnum | InvoiceSettingsScalarFieldEnum[]
  }

  /**
   * InvoiceSettings create
   */
  export type InvoiceSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a InvoiceSettings.
     */
    data: XOR<InvoiceSettingsCreateInput, InvoiceSettingsUncheckedCreateInput>
  }

  /**
   * InvoiceSettings createMany
   */
  export type InvoiceSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InvoiceSettings.
     */
    data: InvoiceSettingsCreateManyInput | InvoiceSettingsCreateManyInput[]
  }

  /**
   * InvoiceSettings createManyAndReturn
   */
  export type InvoiceSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many InvoiceSettings.
     */
    data: InvoiceSettingsCreateManyInput | InvoiceSettingsCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InvoiceSettings update
   */
  export type InvoiceSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a InvoiceSettings.
     */
    data: XOR<InvoiceSettingsUpdateInput, InvoiceSettingsUncheckedUpdateInput>
    /**
     * Choose, which InvoiceSettings to update.
     */
    where: InvoiceSettingsWhereUniqueInput
  }

  /**
   * InvoiceSettings updateMany
   */
  export type InvoiceSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InvoiceSettings.
     */
    data: XOR<InvoiceSettingsUpdateManyMutationInput, InvoiceSettingsUncheckedUpdateManyInput>
    /**
     * Filter which InvoiceSettings to update
     */
    where?: InvoiceSettingsWhereInput
  }

  /**
   * InvoiceSettings upsert
   */
  export type InvoiceSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the InvoiceSettings to update in case it exists.
     */
    where: InvoiceSettingsWhereUniqueInput
    /**
     * In case the InvoiceSettings found by the `where` argument doesn't exist, create a new InvoiceSettings with this data.
     */
    create: XOR<InvoiceSettingsCreateInput, InvoiceSettingsUncheckedCreateInput>
    /**
     * In case the InvoiceSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceSettingsUpdateInput, InvoiceSettingsUncheckedUpdateInput>
  }

  /**
   * InvoiceSettings delete
   */
  export type InvoiceSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter which InvoiceSettings to delete.
     */
    where: InvoiceSettingsWhereUniqueInput
  }

  /**
   * InvoiceSettings deleteMany
   */
  export type InvoiceSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceSettings to delete
     */
    where?: InvoiceSettingsWhereInput
  }

  /**
   * InvoiceSettings without action
   */
  export type InvoiceSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
  }


  /**
   * Model BillingSettings
   */

  export type AggregateBillingSettings = {
    _count: BillingSettingsCountAggregateOutputType | null
    _avg: BillingSettingsAvgAggregateOutputType | null
    _sum: BillingSettingsSumAggregateOutputType | null
    _min: BillingSettingsMinAggregateOutputType | null
    _max: BillingSettingsMaxAggregateOutputType | null
  }

  export type BillingSettingsAvgAggregateOutputType = {
    storageRatePerBox: number | null
    storageRatePerWeek: number | null
    storageRatePerMonth: number | null
    taxRate: number | null
    invoiceDueDays: number | null
    gracePeriodDays: number | null
    minimumCharge: number | null
  }

  export type BillingSettingsSumAggregateOutputType = {
    storageRatePerBox: number | null
    storageRatePerWeek: number | null
    storageRatePerMonth: number | null
    taxRate: number | null
    invoiceDueDays: number | null
    gracePeriodDays: number | null
    minimumCharge: number | null
  }

  export type BillingSettingsMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    storageRateType: string | null
    storageRatePerBox: number | null
    storageRatePerWeek: number | null
    storageRatePerMonth: number | null
    taxEnabled: boolean | null
    taxRate: number | null
    currency: string | null
    invoicePrefix: string | null
    invoiceDueDays: number | null
    gracePeriodDays: number | null
    minimumCharge: number | null
    logoUrl: string | null
    logoPosition: string | null
    primaryColor: string | null
    secondaryColor: string | null
    showCompanyDetails: boolean | null
    showBankDetails: boolean | null
    showTermsConditions: boolean | null
    bankName: string | null
    accountNumber: string | null
    accountName: string | null
    iban: string | null
    swiftCode: string | null
    invoiceFooterText: string | null
    termsAndConditions: string | null
    paymentInstructions: string | null
    taxRegistrationNo: string | null
    companyRegistrationNo: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BillingSettingsMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    storageRateType: string | null
    storageRatePerBox: number | null
    storageRatePerWeek: number | null
    storageRatePerMonth: number | null
    taxEnabled: boolean | null
    taxRate: number | null
    currency: string | null
    invoicePrefix: string | null
    invoiceDueDays: number | null
    gracePeriodDays: number | null
    minimumCharge: number | null
    logoUrl: string | null
    logoPosition: string | null
    primaryColor: string | null
    secondaryColor: string | null
    showCompanyDetails: boolean | null
    showBankDetails: boolean | null
    showTermsConditions: boolean | null
    bankName: string | null
    accountNumber: string | null
    accountName: string | null
    iban: string | null
    swiftCode: string | null
    invoiceFooterText: string | null
    termsAndConditions: string | null
    paymentInstructions: string | null
    taxRegistrationNo: string | null
    companyRegistrationNo: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BillingSettingsCountAggregateOutputType = {
    id: number
    companyId: number
    storageRateType: number
    storageRatePerBox: number
    storageRatePerWeek: number
    storageRatePerMonth: number
    taxEnabled: number
    taxRate: number
    currency: number
    invoicePrefix: number
    invoiceDueDays: number
    gracePeriodDays: number
    minimumCharge: number
    logoUrl: number
    logoPosition: number
    primaryColor: number
    secondaryColor: number
    showCompanyDetails: number
    showBankDetails: number
    showTermsConditions: number
    bankName: number
    accountNumber: number
    accountName: number
    iban: number
    swiftCode: number
    invoiceFooterText: number
    termsAndConditions: number
    paymentInstructions: number
    taxRegistrationNo: number
    companyRegistrationNo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BillingSettingsAvgAggregateInputType = {
    storageRatePerBox?: true
    storageRatePerWeek?: true
    storageRatePerMonth?: true
    taxRate?: true
    invoiceDueDays?: true
    gracePeriodDays?: true
    minimumCharge?: true
  }

  export type BillingSettingsSumAggregateInputType = {
    storageRatePerBox?: true
    storageRatePerWeek?: true
    storageRatePerMonth?: true
    taxRate?: true
    invoiceDueDays?: true
    gracePeriodDays?: true
    minimumCharge?: true
  }

  export type BillingSettingsMinAggregateInputType = {
    id?: true
    companyId?: true
    storageRateType?: true
    storageRatePerBox?: true
    storageRatePerWeek?: true
    storageRatePerMonth?: true
    taxEnabled?: true
    taxRate?: true
    currency?: true
    invoicePrefix?: true
    invoiceDueDays?: true
    gracePeriodDays?: true
    minimumCharge?: true
    logoUrl?: true
    logoPosition?: true
    primaryColor?: true
    secondaryColor?: true
    showCompanyDetails?: true
    showBankDetails?: true
    showTermsConditions?: true
    bankName?: true
    accountNumber?: true
    accountName?: true
    iban?: true
    swiftCode?: true
    invoiceFooterText?: true
    termsAndConditions?: true
    paymentInstructions?: true
    taxRegistrationNo?: true
    companyRegistrationNo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BillingSettingsMaxAggregateInputType = {
    id?: true
    companyId?: true
    storageRateType?: true
    storageRatePerBox?: true
    storageRatePerWeek?: true
    storageRatePerMonth?: true
    taxEnabled?: true
    taxRate?: true
    currency?: true
    invoicePrefix?: true
    invoiceDueDays?: true
    gracePeriodDays?: true
    minimumCharge?: true
    logoUrl?: true
    logoPosition?: true
    primaryColor?: true
    secondaryColor?: true
    showCompanyDetails?: true
    showBankDetails?: true
    showTermsConditions?: true
    bankName?: true
    accountNumber?: true
    accountName?: true
    iban?: true
    swiftCode?: true
    invoiceFooterText?: true
    termsAndConditions?: true
    paymentInstructions?: true
    taxRegistrationNo?: true
    companyRegistrationNo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BillingSettingsCountAggregateInputType = {
    id?: true
    companyId?: true
    storageRateType?: true
    storageRatePerBox?: true
    storageRatePerWeek?: true
    storageRatePerMonth?: true
    taxEnabled?: true
    taxRate?: true
    currency?: true
    invoicePrefix?: true
    invoiceDueDays?: true
    gracePeriodDays?: true
    minimumCharge?: true
    logoUrl?: true
    logoPosition?: true
    primaryColor?: true
    secondaryColor?: true
    showCompanyDetails?: true
    showBankDetails?: true
    showTermsConditions?: true
    bankName?: true
    accountNumber?: true
    accountName?: true
    iban?: true
    swiftCode?: true
    invoiceFooterText?: true
    termsAndConditions?: true
    paymentInstructions?: true
    taxRegistrationNo?: true
    companyRegistrationNo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BillingSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BillingSettings to aggregate.
     */
    where?: BillingSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BillingSettings to fetch.
     */
    orderBy?: BillingSettingsOrderByWithRelationInput | BillingSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BillingSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BillingSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BillingSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BillingSettings
    **/
    _count?: true | BillingSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BillingSettingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BillingSettingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BillingSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BillingSettingsMaxAggregateInputType
  }

  export type GetBillingSettingsAggregateType<T extends BillingSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateBillingSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBillingSettings[P]>
      : GetScalarType<T[P], AggregateBillingSettings[P]>
  }




  export type BillingSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BillingSettingsWhereInput
    orderBy?: BillingSettingsOrderByWithAggregationInput | BillingSettingsOrderByWithAggregationInput[]
    by: BillingSettingsScalarFieldEnum[] | BillingSettingsScalarFieldEnum
    having?: BillingSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BillingSettingsCountAggregateInputType | true
    _avg?: BillingSettingsAvgAggregateInputType
    _sum?: BillingSettingsSumAggregateInputType
    _min?: BillingSettingsMinAggregateInputType
    _max?: BillingSettingsMaxAggregateInputType
  }

  export type BillingSettingsGroupByOutputType = {
    id: string
    companyId: string
    storageRateType: string
    storageRatePerBox: number
    storageRatePerWeek: number | null
    storageRatePerMonth: number | null
    taxEnabled: boolean
    taxRate: number
    currency: string
    invoicePrefix: string
    invoiceDueDays: number
    gracePeriodDays: number
    minimumCharge: number
    logoUrl: string | null
    logoPosition: string
    primaryColor: string
    secondaryColor: string
    showCompanyDetails: boolean
    showBankDetails: boolean
    showTermsConditions: boolean
    bankName: string | null
    accountNumber: string | null
    accountName: string | null
    iban: string | null
    swiftCode: string | null
    invoiceFooterText: string | null
    termsAndConditions: string | null
    paymentInstructions: string | null
    taxRegistrationNo: string | null
    companyRegistrationNo: string | null
    createdAt: Date
    updatedAt: Date
    _count: BillingSettingsCountAggregateOutputType | null
    _avg: BillingSettingsAvgAggregateOutputType | null
    _sum: BillingSettingsSumAggregateOutputType | null
    _min: BillingSettingsMinAggregateOutputType | null
    _max: BillingSettingsMaxAggregateOutputType | null
  }

  type GetBillingSettingsGroupByPayload<T extends BillingSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BillingSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BillingSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BillingSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], BillingSettingsGroupByOutputType[P]>
        }
      >
    >


  export type BillingSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    storageRateType?: boolean
    storageRatePerBox?: boolean
    storageRatePerWeek?: boolean
    storageRatePerMonth?: boolean
    taxEnabled?: boolean
    taxRate?: boolean
    currency?: boolean
    invoicePrefix?: boolean
    invoiceDueDays?: boolean
    gracePeriodDays?: boolean
    minimumCharge?: boolean
    logoUrl?: boolean
    logoPosition?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    showCompanyDetails?: boolean
    showBankDetails?: boolean
    showTermsConditions?: boolean
    bankName?: boolean
    accountNumber?: boolean
    accountName?: boolean
    iban?: boolean
    swiftCode?: boolean
    invoiceFooterText?: boolean
    termsAndConditions?: boolean
    paymentInstructions?: boolean
    taxRegistrationNo?: boolean
    companyRegistrationNo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    chargeTypes?: boolean | BillingSettings$chargeTypesArgs<ExtArgs>
    _count?: boolean | BillingSettingsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["billingSettings"]>

  export type BillingSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    storageRateType?: boolean
    storageRatePerBox?: boolean
    storageRatePerWeek?: boolean
    storageRatePerMonth?: boolean
    taxEnabled?: boolean
    taxRate?: boolean
    currency?: boolean
    invoicePrefix?: boolean
    invoiceDueDays?: boolean
    gracePeriodDays?: boolean
    minimumCharge?: boolean
    logoUrl?: boolean
    logoPosition?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    showCompanyDetails?: boolean
    showBankDetails?: boolean
    showTermsConditions?: boolean
    bankName?: boolean
    accountNumber?: boolean
    accountName?: boolean
    iban?: boolean
    swiftCode?: boolean
    invoiceFooterText?: boolean
    termsAndConditions?: boolean
    paymentInstructions?: boolean
    taxRegistrationNo?: boolean
    companyRegistrationNo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["billingSettings"]>

  export type BillingSettingsSelectScalar = {
    id?: boolean
    companyId?: boolean
    storageRateType?: boolean
    storageRatePerBox?: boolean
    storageRatePerWeek?: boolean
    storageRatePerMonth?: boolean
    taxEnabled?: boolean
    taxRate?: boolean
    currency?: boolean
    invoicePrefix?: boolean
    invoiceDueDays?: boolean
    gracePeriodDays?: boolean
    minimumCharge?: boolean
    logoUrl?: boolean
    logoPosition?: boolean
    primaryColor?: boolean
    secondaryColor?: boolean
    showCompanyDetails?: boolean
    showBankDetails?: boolean
    showTermsConditions?: boolean
    bankName?: boolean
    accountNumber?: boolean
    accountName?: boolean
    iban?: boolean
    swiftCode?: boolean
    invoiceFooterText?: boolean
    termsAndConditions?: boolean
    paymentInstructions?: boolean
    taxRegistrationNo?: boolean
    companyRegistrationNo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BillingSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    chargeTypes?: boolean | BillingSettings$chargeTypesArgs<ExtArgs>
    _count?: boolean | BillingSettingsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BillingSettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $BillingSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BillingSettings"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      chargeTypes: Prisma.$ChargeTypePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      storageRateType: string
      storageRatePerBox: number
      storageRatePerWeek: number | null
      storageRatePerMonth: number | null
      taxEnabled: boolean
      taxRate: number
      currency: string
      invoicePrefix: string
      invoiceDueDays: number
      gracePeriodDays: number
      minimumCharge: number
      logoUrl: string | null
      logoPosition: string
      primaryColor: string
      secondaryColor: string
      showCompanyDetails: boolean
      showBankDetails: boolean
      showTermsConditions: boolean
      bankName: string | null
      accountNumber: string | null
      accountName: string | null
      iban: string | null
      swiftCode: string | null
      invoiceFooterText: string | null
      termsAndConditions: string | null
      paymentInstructions: string | null
      taxRegistrationNo: string | null
      companyRegistrationNo: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["billingSettings"]>
    composites: {}
  }

  type BillingSettingsGetPayload<S extends boolean | null | undefined | BillingSettingsDefaultArgs> = $Result.GetResult<Prisma.$BillingSettingsPayload, S>

  type BillingSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BillingSettingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BillingSettingsCountAggregateInputType | true
    }

  export interface BillingSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BillingSettings'], meta: { name: 'BillingSettings' } }
    /**
     * Find zero or one BillingSettings that matches the filter.
     * @param {BillingSettingsFindUniqueArgs} args - Arguments to find a BillingSettings
     * @example
     * // Get one BillingSettings
     * const billingSettings = await prisma.billingSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BillingSettingsFindUniqueArgs>(args: SelectSubset<T, BillingSettingsFindUniqueArgs<ExtArgs>>): Prisma__BillingSettingsClient<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one BillingSettings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BillingSettingsFindUniqueOrThrowArgs} args - Arguments to find a BillingSettings
     * @example
     * // Get one BillingSettings
     * const billingSettings = await prisma.billingSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BillingSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, BillingSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BillingSettingsClient<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first BillingSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingSettingsFindFirstArgs} args - Arguments to find a BillingSettings
     * @example
     * // Get one BillingSettings
     * const billingSettings = await prisma.billingSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BillingSettingsFindFirstArgs>(args?: SelectSubset<T, BillingSettingsFindFirstArgs<ExtArgs>>): Prisma__BillingSettingsClient<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first BillingSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingSettingsFindFirstOrThrowArgs} args - Arguments to find a BillingSettings
     * @example
     * // Get one BillingSettings
     * const billingSettings = await prisma.billingSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BillingSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, BillingSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__BillingSettingsClient<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more BillingSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BillingSettings
     * const billingSettings = await prisma.billingSettings.findMany()
     * 
     * // Get first 10 BillingSettings
     * const billingSettings = await prisma.billingSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const billingSettingsWithIdOnly = await prisma.billingSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BillingSettingsFindManyArgs>(args?: SelectSubset<T, BillingSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a BillingSettings.
     * @param {BillingSettingsCreateArgs} args - Arguments to create a BillingSettings.
     * @example
     * // Create one BillingSettings
     * const BillingSettings = await prisma.billingSettings.create({
     *   data: {
     *     // ... data to create a BillingSettings
     *   }
     * })
     * 
     */
    create<T extends BillingSettingsCreateArgs>(args: SelectSubset<T, BillingSettingsCreateArgs<ExtArgs>>): Prisma__BillingSettingsClient<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many BillingSettings.
     * @param {BillingSettingsCreateManyArgs} args - Arguments to create many BillingSettings.
     * @example
     * // Create many BillingSettings
     * const billingSettings = await prisma.billingSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BillingSettingsCreateManyArgs>(args?: SelectSubset<T, BillingSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BillingSettings and returns the data saved in the database.
     * @param {BillingSettingsCreateManyAndReturnArgs} args - Arguments to create many BillingSettings.
     * @example
     * // Create many BillingSettings
     * const billingSettings = await prisma.billingSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BillingSettings and only return the `id`
     * const billingSettingsWithIdOnly = await prisma.billingSettings.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BillingSettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, BillingSettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a BillingSettings.
     * @param {BillingSettingsDeleteArgs} args - Arguments to delete one BillingSettings.
     * @example
     * // Delete one BillingSettings
     * const BillingSettings = await prisma.billingSettings.delete({
     *   where: {
     *     // ... filter to delete one BillingSettings
     *   }
     * })
     * 
     */
    delete<T extends BillingSettingsDeleteArgs>(args: SelectSubset<T, BillingSettingsDeleteArgs<ExtArgs>>): Prisma__BillingSettingsClient<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one BillingSettings.
     * @param {BillingSettingsUpdateArgs} args - Arguments to update one BillingSettings.
     * @example
     * // Update one BillingSettings
     * const billingSettings = await prisma.billingSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BillingSettingsUpdateArgs>(args: SelectSubset<T, BillingSettingsUpdateArgs<ExtArgs>>): Prisma__BillingSettingsClient<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more BillingSettings.
     * @param {BillingSettingsDeleteManyArgs} args - Arguments to filter BillingSettings to delete.
     * @example
     * // Delete a few BillingSettings
     * const { count } = await prisma.billingSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BillingSettingsDeleteManyArgs>(args?: SelectSubset<T, BillingSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BillingSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BillingSettings
     * const billingSettings = await prisma.billingSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BillingSettingsUpdateManyArgs>(args: SelectSubset<T, BillingSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BillingSettings.
     * @param {BillingSettingsUpsertArgs} args - Arguments to update or create a BillingSettings.
     * @example
     * // Update or create a BillingSettings
     * const billingSettings = await prisma.billingSettings.upsert({
     *   create: {
     *     // ... data to create a BillingSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BillingSettings we want to update
     *   }
     * })
     */
    upsert<T extends BillingSettingsUpsertArgs>(args: SelectSubset<T, BillingSettingsUpsertArgs<ExtArgs>>): Prisma__BillingSettingsClient<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of BillingSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingSettingsCountArgs} args - Arguments to filter BillingSettings to count.
     * @example
     * // Count the number of BillingSettings
     * const count = await prisma.billingSettings.count({
     *   where: {
     *     // ... the filter for the BillingSettings we want to count
     *   }
     * })
    **/
    count<T extends BillingSettingsCountArgs>(
      args?: Subset<T, BillingSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BillingSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BillingSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BillingSettingsAggregateArgs>(args: Subset<T, BillingSettingsAggregateArgs>): Prisma.PrismaPromise<GetBillingSettingsAggregateType<T>>

    /**
     * Group by BillingSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BillingSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BillingSettingsGroupByArgs['orderBy'] }
        : { orderBy?: BillingSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BillingSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBillingSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BillingSettings model
   */
  readonly fields: BillingSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BillingSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BillingSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    chargeTypes<T extends BillingSettings$chargeTypesArgs<ExtArgs> = {}>(args?: Subset<T, BillingSettings$chargeTypesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BillingSettings model
   */ 
  interface BillingSettingsFieldRefs {
    readonly id: FieldRef<"BillingSettings", 'String'>
    readonly companyId: FieldRef<"BillingSettings", 'String'>
    readonly storageRateType: FieldRef<"BillingSettings", 'String'>
    readonly storageRatePerBox: FieldRef<"BillingSettings", 'Float'>
    readonly storageRatePerWeek: FieldRef<"BillingSettings", 'Float'>
    readonly storageRatePerMonth: FieldRef<"BillingSettings", 'Float'>
    readonly taxEnabled: FieldRef<"BillingSettings", 'Boolean'>
    readonly taxRate: FieldRef<"BillingSettings", 'Float'>
    readonly currency: FieldRef<"BillingSettings", 'String'>
    readonly invoicePrefix: FieldRef<"BillingSettings", 'String'>
    readonly invoiceDueDays: FieldRef<"BillingSettings", 'Int'>
    readonly gracePeriodDays: FieldRef<"BillingSettings", 'Int'>
    readonly minimumCharge: FieldRef<"BillingSettings", 'Float'>
    readonly logoUrl: FieldRef<"BillingSettings", 'String'>
    readonly logoPosition: FieldRef<"BillingSettings", 'String'>
    readonly primaryColor: FieldRef<"BillingSettings", 'String'>
    readonly secondaryColor: FieldRef<"BillingSettings", 'String'>
    readonly showCompanyDetails: FieldRef<"BillingSettings", 'Boolean'>
    readonly showBankDetails: FieldRef<"BillingSettings", 'Boolean'>
    readonly showTermsConditions: FieldRef<"BillingSettings", 'Boolean'>
    readonly bankName: FieldRef<"BillingSettings", 'String'>
    readonly accountNumber: FieldRef<"BillingSettings", 'String'>
    readonly accountName: FieldRef<"BillingSettings", 'String'>
    readonly iban: FieldRef<"BillingSettings", 'String'>
    readonly swiftCode: FieldRef<"BillingSettings", 'String'>
    readonly invoiceFooterText: FieldRef<"BillingSettings", 'String'>
    readonly termsAndConditions: FieldRef<"BillingSettings", 'String'>
    readonly paymentInstructions: FieldRef<"BillingSettings", 'String'>
    readonly taxRegistrationNo: FieldRef<"BillingSettings", 'String'>
    readonly companyRegistrationNo: FieldRef<"BillingSettings", 'String'>
    readonly createdAt: FieldRef<"BillingSettings", 'DateTime'>
    readonly updatedAt: FieldRef<"BillingSettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BillingSettings findUnique
   */
  export type BillingSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
    /**
     * Filter, which BillingSettings to fetch.
     */
    where: BillingSettingsWhereUniqueInput
  }

  /**
   * BillingSettings findUniqueOrThrow
   */
  export type BillingSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
    /**
     * Filter, which BillingSettings to fetch.
     */
    where: BillingSettingsWhereUniqueInput
  }

  /**
   * BillingSettings findFirst
   */
  export type BillingSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
    /**
     * Filter, which BillingSettings to fetch.
     */
    where?: BillingSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BillingSettings to fetch.
     */
    orderBy?: BillingSettingsOrderByWithRelationInput | BillingSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BillingSettings.
     */
    cursor?: BillingSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BillingSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BillingSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BillingSettings.
     */
    distinct?: BillingSettingsScalarFieldEnum | BillingSettingsScalarFieldEnum[]
  }

  /**
   * BillingSettings findFirstOrThrow
   */
  export type BillingSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
    /**
     * Filter, which BillingSettings to fetch.
     */
    where?: BillingSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BillingSettings to fetch.
     */
    orderBy?: BillingSettingsOrderByWithRelationInput | BillingSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BillingSettings.
     */
    cursor?: BillingSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BillingSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BillingSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BillingSettings.
     */
    distinct?: BillingSettingsScalarFieldEnum | BillingSettingsScalarFieldEnum[]
  }

  /**
   * BillingSettings findMany
   */
  export type BillingSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
    /**
     * Filter, which BillingSettings to fetch.
     */
    where?: BillingSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BillingSettings to fetch.
     */
    orderBy?: BillingSettingsOrderByWithRelationInput | BillingSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BillingSettings.
     */
    cursor?: BillingSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BillingSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BillingSettings.
     */
    skip?: number
    distinct?: BillingSettingsScalarFieldEnum | BillingSettingsScalarFieldEnum[]
  }

  /**
   * BillingSettings create
   */
  export type BillingSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a BillingSettings.
     */
    data: XOR<BillingSettingsCreateInput, BillingSettingsUncheckedCreateInput>
  }

  /**
   * BillingSettings createMany
   */
  export type BillingSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BillingSettings.
     */
    data: BillingSettingsCreateManyInput | BillingSettingsCreateManyInput[]
  }

  /**
   * BillingSettings createManyAndReturn
   */
  export type BillingSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many BillingSettings.
     */
    data: BillingSettingsCreateManyInput | BillingSettingsCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BillingSettings update
   */
  export type BillingSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a BillingSettings.
     */
    data: XOR<BillingSettingsUpdateInput, BillingSettingsUncheckedUpdateInput>
    /**
     * Choose, which BillingSettings to update.
     */
    where: BillingSettingsWhereUniqueInput
  }

  /**
   * BillingSettings updateMany
   */
  export type BillingSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BillingSettings.
     */
    data: XOR<BillingSettingsUpdateManyMutationInput, BillingSettingsUncheckedUpdateManyInput>
    /**
     * Filter which BillingSettings to update
     */
    where?: BillingSettingsWhereInput
  }

  /**
   * BillingSettings upsert
   */
  export type BillingSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the BillingSettings to update in case it exists.
     */
    where: BillingSettingsWhereUniqueInput
    /**
     * In case the BillingSettings found by the `where` argument doesn't exist, create a new BillingSettings with this data.
     */
    create: XOR<BillingSettingsCreateInput, BillingSettingsUncheckedCreateInput>
    /**
     * In case the BillingSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BillingSettingsUpdateInput, BillingSettingsUncheckedUpdateInput>
  }

  /**
   * BillingSettings delete
   */
  export type BillingSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
    /**
     * Filter which BillingSettings to delete.
     */
    where: BillingSettingsWhereUniqueInput
  }

  /**
   * BillingSettings deleteMany
   */
  export type BillingSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BillingSettings to delete
     */
    where?: BillingSettingsWhereInput
  }

  /**
   * BillingSettings.chargeTypes
   */
  export type BillingSettings$chargeTypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    where?: ChargeTypeWhereInput
    orderBy?: ChargeTypeOrderByWithRelationInput | ChargeTypeOrderByWithRelationInput[]
    cursor?: ChargeTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChargeTypeScalarFieldEnum | ChargeTypeScalarFieldEnum[]
  }

  /**
   * BillingSettings without action
   */
  export type BillingSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingSettings
     */
    select?: BillingSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingSettingsInclude<ExtArgs> | null
  }


  /**
   * Model ChargeType
   */

  export type AggregateChargeType = {
    _count: ChargeTypeCountAggregateOutputType | null
    _avg: ChargeTypeAvgAggregateOutputType | null
    _sum: ChargeTypeSumAggregateOutputType | null
    _min: ChargeTypeMinAggregateOutputType | null
    _max: ChargeTypeMaxAggregateOutputType | null
  }

  export type ChargeTypeAvgAggregateOutputType = {
    rate: number | null
    minCharge: number | null
    maxCharge: number | null
    displayOrder: number | null
  }

  export type ChargeTypeSumAggregateOutputType = {
    rate: number | null
    minCharge: number | null
    maxCharge: number | null
    displayOrder: number | null
  }

  export type ChargeTypeMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    billingSettingsId: string | null
    name: string | null
    code: string | null
    description: string | null
    category: string | null
    calculationType: string | null
    rate: number | null
    minCharge: number | null
    maxCharge: number | null
    applyOnRelease: boolean | null
    applyOnStorage: boolean | null
    isTaxable: boolean | null
    isActive: boolean | null
    isDefault: boolean | null
    displayOrder: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ChargeTypeMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    billingSettingsId: string | null
    name: string | null
    code: string | null
    description: string | null
    category: string | null
    calculationType: string | null
    rate: number | null
    minCharge: number | null
    maxCharge: number | null
    applyOnRelease: boolean | null
    applyOnStorage: boolean | null
    isTaxable: boolean | null
    isActive: boolean | null
    isDefault: boolean | null
    displayOrder: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ChargeTypeCountAggregateOutputType = {
    id: number
    companyId: number
    billingSettingsId: number
    name: number
    code: number
    description: number
    category: number
    calculationType: number
    rate: number
    minCharge: number
    maxCharge: number
    applyOnRelease: number
    applyOnStorage: number
    isTaxable: number
    isActive: number
    isDefault: number
    displayOrder: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ChargeTypeAvgAggregateInputType = {
    rate?: true
    minCharge?: true
    maxCharge?: true
    displayOrder?: true
  }

  export type ChargeTypeSumAggregateInputType = {
    rate?: true
    minCharge?: true
    maxCharge?: true
    displayOrder?: true
  }

  export type ChargeTypeMinAggregateInputType = {
    id?: true
    companyId?: true
    billingSettingsId?: true
    name?: true
    code?: true
    description?: true
    category?: true
    calculationType?: true
    rate?: true
    minCharge?: true
    maxCharge?: true
    applyOnRelease?: true
    applyOnStorage?: true
    isTaxable?: true
    isActive?: true
    isDefault?: true
    displayOrder?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ChargeTypeMaxAggregateInputType = {
    id?: true
    companyId?: true
    billingSettingsId?: true
    name?: true
    code?: true
    description?: true
    category?: true
    calculationType?: true
    rate?: true
    minCharge?: true
    maxCharge?: true
    applyOnRelease?: true
    applyOnStorage?: true
    isTaxable?: true
    isActive?: true
    isDefault?: true
    displayOrder?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ChargeTypeCountAggregateInputType = {
    id?: true
    companyId?: true
    billingSettingsId?: true
    name?: true
    code?: true
    description?: true
    category?: true
    calculationType?: true
    rate?: true
    minCharge?: true
    maxCharge?: true
    applyOnRelease?: true
    applyOnStorage?: true
    isTaxable?: true
    isActive?: true
    isDefault?: true
    displayOrder?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ChargeTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChargeType to aggregate.
     */
    where?: ChargeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChargeTypes to fetch.
     */
    orderBy?: ChargeTypeOrderByWithRelationInput | ChargeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChargeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChargeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChargeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChargeTypes
    **/
    _count?: true | ChargeTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChargeTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChargeTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChargeTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChargeTypeMaxAggregateInputType
  }

  export type GetChargeTypeAggregateType<T extends ChargeTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateChargeType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChargeType[P]>
      : GetScalarType<T[P], AggregateChargeType[P]>
  }




  export type ChargeTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChargeTypeWhereInput
    orderBy?: ChargeTypeOrderByWithAggregationInput | ChargeTypeOrderByWithAggregationInput[]
    by: ChargeTypeScalarFieldEnum[] | ChargeTypeScalarFieldEnum
    having?: ChargeTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChargeTypeCountAggregateInputType | true
    _avg?: ChargeTypeAvgAggregateInputType
    _sum?: ChargeTypeSumAggregateInputType
    _min?: ChargeTypeMinAggregateInputType
    _max?: ChargeTypeMaxAggregateInputType
  }

  export type ChargeTypeGroupByOutputType = {
    id: string
    companyId: string
    billingSettingsId: string
    name: string
    code: string
    description: string | null
    category: string
    calculationType: string
    rate: number
    minCharge: number | null
    maxCharge: number | null
    applyOnRelease: boolean
    applyOnStorage: boolean
    isTaxable: boolean
    isActive: boolean
    isDefault: boolean
    displayOrder: number
    createdAt: Date
    updatedAt: Date
    _count: ChargeTypeCountAggregateOutputType | null
    _avg: ChargeTypeAvgAggregateOutputType | null
    _sum: ChargeTypeSumAggregateOutputType | null
    _min: ChargeTypeMinAggregateOutputType | null
    _max: ChargeTypeMaxAggregateOutputType | null
  }

  type GetChargeTypeGroupByPayload<T extends ChargeTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChargeTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChargeTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChargeTypeGroupByOutputType[P]>
            : GetScalarType<T[P], ChargeTypeGroupByOutputType[P]>
        }
      >
    >


  export type ChargeTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    billingSettingsId?: boolean
    name?: boolean
    code?: boolean
    description?: boolean
    category?: boolean
    calculationType?: boolean
    rate?: boolean
    minCharge?: boolean
    maxCharge?: boolean
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    billingSettings?: boolean | BillingSettingsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chargeType"]>

  export type ChargeTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    billingSettingsId?: boolean
    name?: boolean
    code?: boolean
    description?: boolean
    category?: boolean
    calculationType?: boolean
    rate?: boolean
    minCharge?: boolean
    maxCharge?: boolean
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    billingSettings?: boolean | BillingSettingsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chargeType"]>

  export type ChargeTypeSelectScalar = {
    id?: boolean
    companyId?: boolean
    billingSettingsId?: boolean
    name?: boolean
    code?: boolean
    description?: boolean
    category?: boolean
    calculationType?: boolean
    rate?: boolean
    minCharge?: boolean
    maxCharge?: boolean
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ChargeTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    billingSettings?: boolean | BillingSettingsDefaultArgs<ExtArgs>
  }
  export type ChargeTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    billingSettings?: boolean | BillingSettingsDefaultArgs<ExtArgs>
  }

  export type $ChargeTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChargeType"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      billingSettings: Prisma.$BillingSettingsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      billingSettingsId: string
      name: string
      code: string
      description: string | null
      category: string
      calculationType: string
      rate: number
      minCharge: number | null
      maxCharge: number | null
      applyOnRelease: boolean
      applyOnStorage: boolean
      isTaxable: boolean
      isActive: boolean
      isDefault: boolean
      displayOrder: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["chargeType"]>
    composites: {}
  }

  type ChargeTypeGetPayload<S extends boolean | null | undefined | ChargeTypeDefaultArgs> = $Result.GetResult<Prisma.$ChargeTypePayload, S>

  type ChargeTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ChargeTypeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ChargeTypeCountAggregateInputType | true
    }

  export interface ChargeTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChargeType'], meta: { name: 'ChargeType' } }
    /**
     * Find zero or one ChargeType that matches the filter.
     * @param {ChargeTypeFindUniqueArgs} args - Arguments to find a ChargeType
     * @example
     * // Get one ChargeType
     * const chargeType = await prisma.chargeType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChargeTypeFindUniqueArgs>(args: SelectSubset<T, ChargeTypeFindUniqueArgs<ExtArgs>>): Prisma__ChargeTypeClient<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ChargeType that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ChargeTypeFindUniqueOrThrowArgs} args - Arguments to find a ChargeType
     * @example
     * // Get one ChargeType
     * const chargeType = await prisma.chargeType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChargeTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, ChargeTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChargeTypeClient<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ChargeType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChargeTypeFindFirstArgs} args - Arguments to find a ChargeType
     * @example
     * // Get one ChargeType
     * const chargeType = await prisma.chargeType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChargeTypeFindFirstArgs>(args?: SelectSubset<T, ChargeTypeFindFirstArgs<ExtArgs>>): Prisma__ChargeTypeClient<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ChargeType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChargeTypeFindFirstOrThrowArgs} args - Arguments to find a ChargeType
     * @example
     * // Get one ChargeType
     * const chargeType = await prisma.chargeType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChargeTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, ChargeTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChargeTypeClient<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ChargeTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChargeTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChargeTypes
     * const chargeTypes = await prisma.chargeType.findMany()
     * 
     * // Get first 10 ChargeTypes
     * const chargeTypes = await prisma.chargeType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chargeTypeWithIdOnly = await prisma.chargeType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChargeTypeFindManyArgs>(args?: SelectSubset<T, ChargeTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ChargeType.
     * @param {ChargeTypeCreateArgs} args - Arguments to create a ChargeType.
     * @example
     * // Create one ChargeType
     * const ChargeType = await prisma.chargeType.create({
     *   data: {
     *     // ... data to create a ChargeType
     *   }
     * })
     * 
     */
    create<T extends ChargeTypeCreateArgs>(args: SelectSubset<T, ChargeTypeCreateArgs<ExtArgs>>): Prisma__ChargeTypeClient<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ChargeTypes.
     * @param {ChargeTypeCreateManyArgs} args - Arguments to create many ChargeTypes.
     * @example
     * // Create many ChargeTypes
     * const chargeType = await prisma.chargeType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChargeTypeCreateManyArgs>(args?: SelectSubset<T, ChargeTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChargeTypes and returns the data saved in the database.
     * @param {ChargeTypeCreateManyAndReturnArgs} args - Arguments to create many ChargeTypes.
     * @example
     * // Create many ChargeTypes
     * const chargeType = await prisma.chargeType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChargeTypes and only return the `id`
     * const chargeTypeWithIdOnly = await prisma.chargeType.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChargeTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, ChargeTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ChargeType.
     * @param {ChargeTypeDeleteArgs} args - Arguments to delete one ChargeType.
     * @example
     * // Delete one ChargeType
     * const ChargeType = await prisma.chargeType.delete({
     *   where: {
     *     // ... filter to delete one ChargeType
     *   }
     * })
     * 
     */
    delete<T extends ChargeTypeDeleteArgs>(args: SelectSubset<T, ChargeTypeDeleteArgs<ExtArgs>>): Prisma__ChargeTypeClient<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ChargeType.
     * @param {ChargeTypeUpdateArgs} args - Arguments to update one ChargeType.
     * @example
     * // Update one ChargeType
     * const chargeType = await prisma.chargeType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChargeTypeUpdateArgs>(args: SelectSubset<T, ChargeTypeUpdateArgs<ExtArgs>>): Prisma__ChargeTypeClient<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ChargeTypes.
     * @param {ChargeTypeDeleteManyArgs} args - Arguments to filter ChargeTypes to delete.
     * @example
     * // Delete a few ChargeTypes
     * const { count } = await prisma.chargeType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChargeTypeDeleteManyArgs>(args?: SelectSubset<T, ChargeTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChargeTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChargeTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChargeTypes
     * const chargeType = await prisma.chargeType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChargeTypeUpdateManyArgs>(args: SelectSubset<T, ChargeTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChargeType.
     * @param {ChargeTypeUpsertArgs} args - Arguments to update or create a ChargeType.
     * @example
     * // Update or create a ChargeType
     * const chargeType = await prisma.chargeType.upsert({
     *   create: {
     *     // ... data to create a ChargeType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChargeType we want to update
     *   }
     * })
     */
    upsert<T extends ChargeTypeUpsertArgs>(args: SelectSubset<T, ChargeTypeUpsertArgs<ExtArgs>>): Prisma__ChargeTypeClient<$Result.GetResult<Prisma.$ChargeTypePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ChargeTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChargeTypeCountArgs} args - Arguments to filter ChargeTypes to count.
     * @example
     * // Count the number of ChargeTypes
     * const count = await prisma.chargeType.count({
     *   where: {
     *     // ... the filter for the ChargeTypes we want to count
     *   }
     * })
    **/
    count<T extends ChargeTypeCountArgs>(
      args?: Subset<T, ChargeTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChargeTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChargeType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChargeTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChargeTypeAggregateArgs>(args: Subset<T, ChargeTypeAggregateArgs>): Prisma.PrismaPromise<GetChargeTypeAggregateType<T>>

    /**
     * Group by ChargeType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChargeTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChargeTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChargeTypeGroupByArgs['orderBy'] }
        : { orderBy?: ChargeTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChargeTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChargeTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChargeType model
   */
  readonly fields: ChargeTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChargeType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChargeTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    billingSettings<T extends BillingSettingsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BillingSettingsDefaultArgs<ExtArgs>>): Prisma__BillingSettingsClient<$Result.GetResult<Prisma.$BillingSettingsPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChargeType model
   */ 
  interface ChargeTypeFieldRefs {
    readonly id: FieldRef<"ChargeType", 'String'>
    readonly companyId: FieldRef<"ChargeType", 'String'>
    readonly billingSettingsId: FieldRef<"ChargeType", 'String'>
    readonly name: FieldRef<"ChargeType", 'String'>
    readonly code: FieldRef<"ChargeType", 'String'>
    readonly description: FieldRef<"ChargeType", 'String'>
    readonly category: FieldRef<"ChargeType", 'String'>
    readonly calculationType: FieldRef<"ChargeType", 'String'>
    readonly rate: FieldRef<"ChargeType", 'Float'>
    readonly minCharge: FieldRef<"ChargeType", 'Float'>
    readonly maxCharge: FieldRef<"ChargeType", 'Float'>
    readonly applyOnRelease: FieldRef<"ChargeType", 'Boolean'>
    readonly applyOnStorage: FieldRef<"ChargeType", 'Boolean'>
    readonly isTaxable: FieldRef<"ChargeType", 'Boolean'>
    readonly isActive: FieldRef<"ChargeType", 'Boolean'>
    readonly isDefault: FieldRef<"ChargeType", 'Boolean'>
    readonly displayOrder: FieldRef<"ChargeType", 'Int'>
    readonly createdAt: FieldRef<"ChargeType", 'DateTime'>
    readonly updatedAt: FieldRef<"ChargeType", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ChargeType findUnique
   */
  export type ChargeTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChargeType to fetch.
     */
    where: ChargeTypeWhereUniqueInput
  }

  /**
   * ChargeType findUniqueOrThrow
   */
  export type ChargeTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChargeType to fetch.
     */
    where: ChargeTypeWhereUniqueInput
  }

  /**
   * ChargeType findFirst
   */
  export type ChargeTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChargeType to fetch.
     */
    where?: ChargeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChargeTypes to fetch.
     */
    orderBy?: ChargeTypeOrderByWithRelationInput | ChargeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChargeTypes.
     */
    cursor?: ChargeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChargeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChargeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChargeTypes.
     */
    distinct?: ChargeTypeScalarFieldEnum | ChargeTypeScalarFieldEnum[]
  }

  /**
   * ChargeType findFirstOrThrow
   */
  export type ChargeTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChargeType to fetch.
     */
    where?: ChargeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChargeTypes to fetch.
     */
    orderBy?: ChargeTypeOrderByWithRelationInput | ChargeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChargeTypes.
     */
    cursor?: ChargeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChargeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChargeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChargeTypes.
     */
    distinct?: ChargeTypeScalarFieldEnum | ChargeTypeScalarFieldEnum[]
  }

  /**
   * ChargeType findMany
   */
  export type ChargeTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChargeTypes to fetch.
     */
    where?: ChargeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChargeTypes to fetch.
     */
    orderBy?: ChargeTypeOrderByWithRelationInput | ChargeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChargeTypes.
     */
    cursor?: ChargeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChargeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChargeTypes.
     */
    skip?: number
    distinct?: ChargeTypeScalarFieldEnum | ChargeTypeScalarFieldEnum[]
  }

  /**
   * ChargeType create
   */
  export type ChargeTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a ChargeType.
     */
    data: XOR<ChargeTypeCreateInput, ChargeTypeUncheckedCreateInput>
  }

  /**
   * ChargeType createMany
   */
  export type ChargeTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChargeTypes.
     */
    data: ChargeTypeCreateManyInput | ChargeTypeCreateManyInput[]
  }

  /**
   * ChargeType createManyAndReturn
   */
  export type ChargeTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ChargeTypes.
     */
    data: ChargeTypeCreateManyInput | ChargeTypeCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChargeType update
   */
  export type ChargeTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a ChargeType.
     */
    data: XOR<ChargeTypeUpdateInput, ChargeTypeUncheckedUpdateInput>
    /**
     * Choose, which ChargeType to update.
     */
    where: ChargeTypeWhereUniqueInput
  }

  /**
   * ChargeType updateMany
   */
  export type ChargeTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChargeTypes.
     */
    data: XOR<ChargeTypeUpdateManyMutationInput, ChargeTypeUncheckedUpdateManyInput>
    /**
     * Filter which ChargeTypes to update
     */
    where?: ChargeTypeWhereInput
  }

  /**
   * ChargeType upsert
   */
  export type ChargeTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the ChargeType to update in case it exists.
     */
    where: ChargeTypeWhereUniqueInput
    /**
     * In case the ChargeType found by the `where` argument doesn't exist, create a new ChargeType with this data.
     */
    create: XOR<ChargeTypeCreateInput, ChargeTypeUncheckedCreateInput>
    /**
     * In case the ChargeType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChargeTypeUpdateInput, ChargeTypeUncheckedUpdateInput>
  }

  /**
   * ChargeType delete
   */
  export type ChargeTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
    /**
     * Filter which ChargeType to delete.
     */
    where: ChargeTypeWhereUniqueInput
  }

  /**
   * ChargeType deleteMany
   */
  export type ChargeTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChargeTypes to delete
     */
    where?: ChargeTypeWhereInput
  }

  /**
   * ChargeType without action
   */
  export type ChargeTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChargeType
     */
    select?: ChargeTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChargeTypeInclude<ExtArgs> | null
  }


  /**
   * Model Invoice
   */

  export type AggregateInvoice = {
    _count: InvoiceCountAggregateOutputType | null
    _avg: InvoiceAvgAggregateOutputType | null
    _sum: InvoiceSumAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  export type InvoiceAvgAggregateOutputType = {
    subtotal: number | null
    taxAmount: number | null
    discountAmount: number | null
    totalAmount: number | null
    paidAmount: number | null
    balanceDue: number | null
  }

  export type InvoiceSumAggregateOutputType = {
    subtotal: number | null
    taxAmount: number | null
    discountAmount: number | null
    totalAmount: number | null
    paidAmount: number | null
    balanceDue: number | null
  }

  export type InvoiceMinAggregateOutputType = {
    id: string | null
    invoiceNumber: string | null
    companyId: string | null
    shipmentId: string | null
    clientName: string | null
    clientPhone: string | null
    clientAddress: string | null
    invoiceDate: Date | null
    dueDate: Date | null
    invoiceType: string | null
    isWarehouseInvoice: boolean | null
    warehouseData: string | null
    subtotal: number | null
    taxAmount: number | null
    discountAmount: number | null
    totalAmount: number | null
    paymentStatus: string | null
    paidAmount: number | null
    balanceDue: number | null
    paymentDate: Date | null
    paymentMethod: string | null
    transactionRef: string | null
    notes: string | null
    termsAndConditions: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InvoiceMaxAggregateOutputType = {
    id: string | null
    invoiceNumber: string | null
    companyId: string | null
    shipmentId: string | null
    clientName: string | null
    clientPhone: string | null
    clientAddress: string | null
    invoiceDate: Date | null
    dueDate: Date | null
    invoiceType: string | null
    isWarehouseInvoice: boolean | null
    warehouseData: string | null
    subtotal: number | null
    taxAmount: number | null
    discountAmount: number | null
    totalAmount: number | null
    paymentStatus: string | null
    paidAmount: number | null
    balanceDue: number | null
    paymentDate: Date | null
    paymentMethod: string | null
    transactionRef: string | null
    notes: string | null
    termsAndConditions: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InvoiceCountAggregateOutputType = {
    id: number
    invoiceNumber: number
    companyId: number
    shipmentId: number
    clientName: number
    clientPhone: number
    clientAddress: number
    invoiceDate: number
    dueDate: number
    invoiceType: number
    isWarehouseInvoice: number
    warehouseData: number
    subtotal: number
    taxAmount: number
    discountAmount: number
    totalAmount: number
    paymentStatus: number
    paidAmount: number
    balanceDue: number
    paymentDate: number
    paymentMethod: number
    transactionRef: number
    notes: number
    termsAndConditions: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InvoiceAvgAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    discountAmount?: true
    totalAmount?: true
    paidAmount?: true
    balanceDue?: true
  }

  export type InvoiceSumAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    discountAmount?: true
    totalAmount?: true
    paidAmount?: true
    balanceDue?: true
  }

  export type InvoiceMinAggregateInputType = {
    id?: true
    invoiceNumber?: true
    companyId?: true
    shipmentId?: true
    clientName?: true
    clientPhone?: true
    clientAddress?: true
    invoiceDate?: true
    dueDate?: true
    invoiceType?: true
    isWarehouseInvoice?: true
    warehouseData?: true
    subtotal?: true
    taxAmount?: true
    discountAmount?: true
    totalAmount?: true
    paymentStatus?: true
    paidAmount?: true
    balanceDue?: true
    paymentDate?: true
    paymentMethod?: true
    transactionRef?: true
    notes?: true
    termsAndConditions?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InvoiceMaxAggregateInputType = {
    id?: true
    invoiceNumber?: true
    companyId?: true
    shipmentId?: true
    clientName?: true
    clientPhone?: true
    clientAddress?: true
    invoiceDate?: true
    dueDate?: true
    invoiceType?: true
    isWarehouseInvoice?: true
    warehouseData?: true
    subtotal?: true
    taxAmount?: true
    discountAmount?: true
    totalAmount?: true
    paymentStatus?: true
    paidAmount?: true
    balanceDue?: true
    paymentDate?: true
    paymentMethod?: true
    transactionRef?: true
    notes?: true
    termsAndConditions?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InvoiceCountAggregateInputType = {
    id?: true
    invoiceNumber?: true
    companyId?: true
    shipmentId?: true
    clientName?: true
    clientPhone?: true
    clientAddress?: true
    invoiceDate?: true
    dueDate?: true
    invoiceType?: true
    isWarehouseInvoice?: true
    warehouseData?: true
    subtotal?: true
    taxAmount?: true
    discountAmount?: true
    totalAmount?: true
    paymentStatus?: true
    paidAmount?: true
    balanceDue?: true
    paymentDate?: true
    paymentMethod?: true
    transactionRef?: true
    notes?: true
    termsAndConditions?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InvoiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoice to aggregate.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Invoices
    **/
    _count?: true | InvoiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvoiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvoiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceMaxAggregateInputType
  }

  export type GetInvoiceAggregateType<T extends InvoiceAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoice[P]>
      : GetScalarType<T[P], AggregateInvoice[P]>
  }




  export type InvoiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithAggregationInput | InvoiceOrderByWithAggregationInput[]
    by: InvoiceScalarFieldEnum[] | InvoiceScalarFieldEnum
    having?: InvoiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceCountAggregateInputType | true
    _avg?: InvoiceAvgAggregateInputType
    _sum?: InvoiceSumAggregateInputType
    _min?: InvoiceMinAggregateInputType
    _max?: InvoiceMaxAggregateInputType
  }

  export type InvoiceGroupByOutputType = {
    id: string
    invoiceNumber: string
    companyId: string
    shipmentId: string
    clientName: string
    clientPhone: string | null
    clientAddress: string | null
    invoiceDate: Date
    dueDate: Date
    invoiceType: string
    isWarehouseInvoice: boolean
    warehouseData: string | null
    subtotal: number
    taxAmount: number
    discountAmount: number
    totalAmount: number
    paymentStatus: string
    paidAmount: number
    balanceDue: number
    paymentDate: Date | null
    paymentMethod: string | null
    transactionRef: string | null
    notes: string | null
    termsAndConditions: string | null
    createdAt: Date
    updatedAt: Date
    _count: InvoiceCountAggregateOutputType | null
    _avg: InvoiceAvgAggregateOutputType | null
    _sum: InvoiceSumAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  type GetInvoiceGroupByPayload<T extends InvoiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    companyId?: boolean
    shipmentId?: boolean
    clientName?: boolean
    clientPhone?: boolean
    clientAddress?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    invoiceType?: boolean
    isWarehouseInvoice?: boolean
    warehouseData?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    paymentStatus?: boolean
    paidAmount?: boolean
    balanceDue?: boolean
    paymentDate?: boolean
    paymentMethod?: boolean
    transactionRef?: boolean
    notes?: boolean
    termsAndConditions?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
    lineItems?: boolean | Invoice$lineItemsArgs<ExtArgs>
    payments?: boolean | Invoice$paymentsArgs<ExtArgs>
    _count?: boolean | InvoiceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    companyId?: boolean
    shipmentId?: boolean
    clientName?: boolean
    clientPhone?: boolean
    clientAddress?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    invoiceType?: boolean
    isWarehouseInvoice?: boolean
    warehouseData?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    paymentStatus?: boolean
    paidAmount?: boolean
    balanceDue?: boolean
    paymentDate?: boolean
    paymentMethod?: boolean
    transactionRef?: boolean
    notes?: boolean
    termsAndConditions?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectScalar = {
    id?: boolean
    invoiceNumber?: boolean
    companyId?: boolean
    shipmentId?: boolean
    clientName?: boolean
    clientPhone?: boolean
    clientAddress?: boolean
    invoiceDate?: boolean
    dueDate?: boolean
    invoiceType?: boolean
    isWarehouseInvoice?: boolean
    warehouseData?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    paymentStatus?: boolean
    paidAmount?: boolean
    balanceDue?: boolean
    paymentDate?: boolean
    paymentMethod?: boolean
    transactionRef?: boolean
    notes?: boolean
    termsAndConditions?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InvoiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
    lineItems?: boolean | Invoice$lineItemsArgs<ExtArgs>
    payments?: boolean | Invoice$paymentsArgs<ExtArgs>
    _count?: boolean | InvoiceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InvoiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
  }

  export type $InvoicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Invoice"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      shipment: Prisma.$ShipmentPayload<ExtArgs>
      lineItems: Prisma.$InvoiceLineItemPayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      invoiceNumber: string
      companyId: string
      shipmentId: string
      clientName: string
      clientPhone: string | null
      clientAddress: string | null
      invoiceDate: Date
      dueDate: Date
      invoiceType: string
      isWarehouseInvoice: boolean
      warehouseData: string | null
      subtotal: number
      taxAmount: number
      discountAmount: number
      totalAmount: number
      paymentStatus: string
      paidAmount: number
      balanceDue: number
      paymentDate: Date | null
      paymentMethod: string | null
      transactionRef: string | null
      notes: string | null
      termsAndConditions: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["invoice"]>
    composites: {}
  }

  type InvoiceGetPayload<S extends boolean | null | undefined | InvoiceDefaultArgs> = $Result.GetResult<Prisma.$InvoicePayload, S>

  type InvoiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<InvoiceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InvoiceCountAggregateInputType | true
    }

  export interface InvoiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Invoice'], meta: { name: 'Invoice' } }
    /**
     * Find zero or one Invoice that matches the filter.
     * @param {InvoiceFindUniqueArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceFindUniqueArgs>(args: SelectSubset<T, InvoiceFindUniqueArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Invoice that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {InvoiceFindUniqueOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Invoice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceFindFirstArgs>(args?: SelectSubset<T, InvoiceFindFirstArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Invoice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Invoices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invoices
     * const invoices = await prisma.invoice.findMany()
     * 
     * // Get first 10 Invoices
     * const invoices = await prisma.invoice.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceWithIdOnly = await prisma.invoice.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceFindManyArgs>(args?: SelectSubset<T, InvoiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Invoice.
     * @param {InvoiceCreateArgs} args - Arguments to create a Invoice.
     * @example
     * // Create one Invoice
     * const Invoice = await prisma.invoice.create({
     *   data: {
     *     // ... data to create a Invoice
     *   }
     * })
     * 
     */
    create<T extends InvoiceCreateArgs>(args: SelectSubset<T, InvoiceCreateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Invoices.
     * @param {InvoiceCreateManyArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceCreateManyArgs>(args?: SelectSubset<T, InvoiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invoices and returns the data saved in the database.
     * @param {InvoiceCreateManyAndReturnArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invoices and only return the `id`
     * const invoiceWithIdOnly = await prisma.invoice.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvoiceCreateManyAndReturnArgs>(args?: SelectSubset<T, InvoiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Invoice.
     * @param {InvoiceDeleteArgs} args - Arguments to delete one Invoice.
     * @example
     * // Delete one Invoice
     * const Invoice = await prisma.invoice.delete({
     *   where: {
     *     // ... filter to delete one Invoice
     *   }
     * })
     * 
     */
    delete<T extends InvoiceDeleteArgs>(args: SelectSubset<T, InvoiceDeleteArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Invoice.
     * @param {InvoiceUpdateArgs} args - Arguments to update one Invoice.
     * @example
     * // Update one Invoice
     * const invoice = await prisma.invoice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceUpdateArgs>(args: SelectSubset<T, InvoiceUpdateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Invoices.
     * @param {InvoiceDeleteManyArgs} args - Arguments to filter Invoices to delete.
     * @example
     * // Delete a few Invoices
     * const { count } = await prisma.invoice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceDeleteManyArgs>(args?: SelectSubset<T, InvoiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invoices
     * const invoice = await prisma.invoice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceUpdateManyArgs>(args: SelectSubset<T, InvoiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Invoice.
     * @param {InvoiceUpsertArgs} args - Arguments to update or create a Invoice.
     * @example
     * // Update or create a Invoice
     * const invoice = await prisma.invoice.upsert({
     *   create: {
     *     // ... data to create a Invoice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invoice we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceUpsertArgs>(args: SelectSubset<T, InvoiceUpsertArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceCountArgs} args - Arguments to filter Invoices to count.
     * @example
     * // Count the number of Invoices
     * const count = await prisma.invoice.count({
     *   where: {
     *     // ... the filter for the Invoices we want to count
     *   }
     * })
    **/
    count<T extends InvoiceCountArgs>(
      args?: Subset<T, InvoiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceAggregateArgs>(args: Subset<T, InvoiceAggregateArgs>): Prisma.PrismaPromise<GetInvoiceAggregateType<T>>

    /**
     * Group by Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Invoice model
   */
  readonly fields: InvoiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Invoice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    shipment<T extends ShipmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ShipmentDefaultArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    lineItems<T extends Invoice$lineItemsArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$lineItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "findMany"> | Null>
    payments<T extends Invoice$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Invoice model
   */ 
  interface InvoiceFieldRefs {
    readonly id: FieldRef<"Invoice", 'String'>
    readonly invoiceNumber: FieldRef<"Invoice", 'String'>
    readonly companyId: FieldRef<"Invoice", 'String'>
    readonly shipmentId: FieldRef<"Invoice", 'String'>
    readonly clientName: FieldRef<"Invoice", 'String'>
    readonly clientPhone: FieldRef<"Invoice", 'String'>
    readonly clientAddress: FieldRef<"Invoice", 'String'>
    readonly invoiceDate: FieldRef<"Invoice", 'DateTime'>
    readonly dueDate: FieldRef<"Invoice", 'DateTime'>
    readonly invoiceType: FieldRef<"Invoice", 'String'>
    readonly isWarehouseInvoice: FieldRef<"Invoice", 'Boolean'>
    readonly warehouseData: FieldRef<"Invoice", 'String'>
    readonly subtotal: FieldRef<"Invoice", 'Float'>
    readonly taxAmount: FieldRef<"Invoice", 'Float'>
    readonly discountAmount: FieldRef<"Invoice", 'Float'>
    readonly totalAmount: FieldRef<"Invoice", 'Float'>
    readonly paymentStatus: FieldRef<"Invoice", 'String'>
    readonly paidAmount: FieldRef<"Invoice", 'Float'>
    readonly balanceDue: FieldRef<"Invoice", 'Float'>
    readonly paymentDate: FieldRef<"Invoice", 'DateTime'>
    readonly paymentMethod: FieldRef<"Invoice", 'String'>
    readonly transactionRef: FieldRef<"Invoice", 'String'>
    readonly notes: FieldRef<"Invoice", 'String'>
    readonly termsAndConditions: FieldRef<"Invoice", 'String'>
    readonly createdAt: FieldRef<"Invoice", 'DateTime'>
    readonly updatedAt: FieldRef<"Invoice", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Invoice findUnique
   */
  export type InvoiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice findUniqueOrThrow
   */
  export type InvoiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice findFirst
   */
  export type InvoiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice findFirstOrThrow
   */
  export type InvoiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice findMany
   */
  export type InvoiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoices to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice create
   */
  export type InvoiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to create a Invoice.
     */
    data: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
  }

  /**
   * Invoice createMany
   */
  export type InvoiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
  }

  /**
   * Invoice createManyAndReturn
   */
  export type InvoiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invoice update
   */
  export type InvoiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to update a Invoice.
     */
    data: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
    /**
     * Choose, which Invoice to update.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice updateMany
   */
  export type InvoiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Invoices.
     */
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyInput>
    /**
     * Filter which Invoices to update
     */
    where?: InvoiceWhereInput
  }

  /**
   * Invoice upsert
   */
  export type InvoiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The filter to search for the Invoice to update in case it exists.
     */
    where: InvoiceWhereUniqueInput
    /**
     * In case the Invoice found by the `where` argument doesn't exist, create a new Invoice with this data.
     */
    create: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
    /**
     * In case the Invoice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
  }

  /**
   * Invoice delete
   */
  export type InvoiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter which Invoice to delete.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice deleteMany
   */
  export type InvoiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoices to delete
     */
    where?: InvoiceWhereInput
  }

  /**
   * Invoice.lineItems
   */
  export type Invoice$lineItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    where?: InvoiceLineItemWhereInput
    orderBy?: InvoiceLineItemOrderByWithRelationInput | InvoiceLineItemOrderByWithRelationInput[]
    cursor?: InvoiceLineItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceLineItemScalarFieldEnum | InvoiceLineItemScalarFieldEnum[]
  }

  /**
   * Invoice.payments
   */
  export type Invoice$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Invoice without action
   */
  export type InvoiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
  }


  /**
   * Model InvoiceLineItem
   */

  export type AggregateInvoiceLineItem = {
    _count: InvoiceLineItemCountAggregateOutputType | null
    _avg: InvoiceLineItemAvgAggregateOutputType | null
    _sum: InvoiceLineItemSumAggregateOutputType | null
    _min: InvoiceLineItemMinAggregateOutputType | null
    _max: InvoiceLineItemMaxAggregateOutputType | null
  }

  export type InvoiceLineItemAvgAggregateOutputType = {
    quantity: number | null
    unitPrice: number | null
    amount: number | null
    taxRate: number | null
    taxAmount: number | null
    displayOrder: number | null
  }

  export type InvoiceLineItemSumAggregateOutputType = {
    quantity: number | null
    unitPrice: number | null
    amount: number | null
    taxRate: number | null
    taxAmount: number | null
    displayOrder: number | null
  }

  export type InvoiceLineItemMinAggregateOutputType = {
    id: string | null
    invoiceId: string | null
    companyId: string | null
    chargeTypeId: string | null
    description: string | null
    category: string | null
    quantity: number | null
    unitPrice: number | null
    amount: number | null
    isTaxable: boolean | null
    taxRate: number | null
    taxAmount: number | null
    displayOrder: number | null
    createdAt: Date | null
  }

  export type InvoiceLineItemMaxAggregateOutputType = {
    id: string | null
    invoiceId: string | null
    companyId: string | null
    chargeTypeId: string | null
    description: string | null
    category: string | null
    quantity: number | null
    unitPrice: number | null
    amount: number | null
    isTaxable: boolean | null
    taxRate: number | null
    taxAmount: number | null
    displayOrder: number | null
    createdAt: Date | null
  }

  export type InvoiceLineItemCountAggregateOutputType = {
    id: number
    invoiceId: number
    companyId: number
    chargeTypeId: number
    description: number
    category: number
    quantity: number
    unitPrice: number
    amount: number
    isTaxable: number
    taxRate: number
    taxAmount: number
    displayOrder: number
    createdAt: number
    _all: number
  }


  export type InvoiceLineItemAvgAggregateInputType = {
    quantity?: true
    unitPrice?: true
    amount?: true
    taxRate?: true
    taxAmount?: true
    displayOrder?: true
  }

  export type InvoiceLineItemSumAggregateInputType = {
    quantity?: true
    unitPrice?: true
    amount?: true
    taxRate?: true
    taxAmount?: true
    displayOrder?: true
  }

  export type InvoiceLineItemMinAggregateInputType = {
    id?: true
    invoiceId?: true
    companyId?: true
    chargeTypeId?: true
    description?: true
    category?: true
    quantity?: true
    unitPrice?: true
    amount?: true
    isTaxable?: true
    taxRate?: true
    taxAmount?: true
    displayOrder?: true
    createdAt?: true
  }

  export type InvoiceLineItemMaxAggregateInputType = {
    id?: true
    invoiceId?: true
    companyId?: true
    chargeTypeId?: true
    description?: true
    category?: true
    quantity?: true
    unitPrice?: true
    amount?: true
    isTaxable?: true
    taxRate?: true
    taxAmount?: true
    displayOrder?: true
    createdAt?: true
  }

  export type InvoiceLineItemCountAggregateInputType = {
    id?: true
    invoiceId?: true
    companyId?: true
    chargeTypeId?: true
    description?: true
    category?: true
    quantity?: true
    unitPrice?: true
    amount?: true
    isTaxable?: true
    taxRate?: true
    taxAmount?: true
    displayOrder?: true
    createdAt?: true
    _all?: true
  }

  export type InvoiceLineItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceLineItem to aggregate.
     */
    where?: InvoiceLineItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceLineItems to fetch.
     */
    orderBy?: InvoiceLineItemOrderByWithRelationInput | InvoiceLineItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceLineItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceLineItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceLineItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InvoiceLineItems
    **/
    _count?: true | InvoiceLineItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvoiceLineItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvoiceLineItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceLineItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceLineItemMaxAggregateInputType
  }

  export type GetInvoiceLineItemAggregateType<T extends InvoiceLineItemAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoiceLineItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoiceLineItem[P]>
      : GetScalarType<T[P], AggregateInvoiceLineItem[P]>
  }




  export type InvoiceLineItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceLineItemWhereInput
    orderBy?: InvoiceLineItemOrderByWithAggregationInput | InvoiceLineItemOrderByWithAggregationInput[]
    by: InvoiceLineItemScalarFieldEnum[] | InvoiceLineItemScalarFieldEnum
    having?: InvoiceLineItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceLineItemCountAggregateInputType | true
    _avg?: InvoiceLineItemAvgAggregateInputType
    _sum?: InvoiceLineItemSumAggregateInputType
    _min?: InvoiceLineItemMinAggregateInputType
    _max?: InvoiceLineItemMaxAggregateInputType
  }

  export type InvoiceLineItemGroupByOutputType = {
    id: string
    invoiceId: string
    companyId: string
    chargeTypeId: string | null
    description: string
    category: string
    quantity: number
    unitPrice: number
    amount: number
    isTaxable: boolean
    taxRate: number | null
    taxAmount: number
    displayOrder: number
    createdAt: Date
    _count: InvoiceLineItemCountAggregateOutputType | null
    _avg: InvoiceLineItemAvgAggregateOutputType | null
    _sum: InvoiceLineItemSumAggregateOutputType | null
    _min: InvoiceLineItemMinAggregateOutputType | null
    _max: InvoiceLineItemMaxAggregateOutputType | null
  }

  type GetInvoiceLineItemGroupByPayload<T extends InvoiceLineItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceLineItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceLineItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceLineItemGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceLineItemGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceLineItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    companyId?: boolean
    chargeTypeId?: boolean
    description?: boolean
    category?: boolean
    quantity?: boolean
    unitPrice?: boolean
    amount?: boolean
    isTaxable?: boolean
    taxRate?: boolean
    taxAmount?: boolean
    displayOrder?: boolean
    createdAt?: boolean
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceLineItem"]>

  export type InvoiceLineItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    companyId?: boolean
    chargeTypeId?: boolean
    description?: boolean
    category?: boolean
    quantity?: boolean
    unitPrice?: boolean
    amount?: boolean
    isTaxable?: boolean
    taxRate?: boolean
    taxAmount?: boolean
    displayOrder?: boolean
    createdAt?: boolean
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceLineItem"]>

  export type InvoiceLineItemSelectScalar = {
    id?: boolean
    invoiceId?: boolean
    companyId?: boolean
    chargeTypeId?: boolean
    description?: boolean
    category?: boolean
    quantity?: boolean
    unitPrice?: boolean
    amount?: boolean
    isTaxable?: boolean
    taxRate?: boolean
    taxAmount?: boolean
    displayOrder?: boolean
    createdAt?: boolean
  }

  export type InvoiceLineItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type InvoiceLineItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $InvoiceLineItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InvoiceLineItem"
    objects: {
      invoice: Prisma.$InvoicePayload<ExtArgs>
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      invoiceId: string
      companyId: string
      chargeTypeId: string | null
      description: string
      category: string
      quantity: number
      unitPrice: number
      amount: number
      isTaxable: boolean
      taxRate: number | null
      taxAmount: number
      displayOrder: number
      createdAt: Date
    }, ExtArgs["result"]["invoiceLineItem"]>
    composites: {}
  }

  type InvoiceLineItemGetPayload<S extends boolean | null | undefined | InvoiceLineItemDefaultArgs> = $Result.GetResult<Prisma.$InvoiceLineItemPayload, S>

  type InvoiceLineItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<InvoiceLineItemFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InvoiceLineItemCountAggregateInputType | true
    }

  export interface InvoiceLineItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InvoiceLineItem'], meta: { name: 'InvoiceLineItem' } }
    /**
     * Find zero or one InvoiceLineItem that matches the filter.
     * @param {InvoiceLineItemFindUniqueArgs} args - Arguments to find a InvoiceLineItem
     * @example
     * // Get one InvoiceLineItem
     * const invoiceLineItem = await prisma.invoiceLineItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceLineItemFindUniqueArgs>(args: SelectSubset<T, InvoiceLineItemFindUniqueArgs<ExtArgs>>): Prisma__InvoiceLineItemClient<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one InvoiceLineItem that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {InvoiceLineItemFindUniqueOrThrowArgs} args - Arguments to find a InvoiceLineItem
     * @example
     * // Get one InvoiceLineItem
     * const invoiceLineItem = await prisma.invoiceLineItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceLineItemFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceLineItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceLineItemClient<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first InvoiceLineItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceLineItemFindFirstArgs} args - Arguments to find a InvoiceLineItem
     * @example
     * // Get one InvoiceLineItem
     * const invoiceLineItem = await prisma.invoiceLineItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceLineItemFindFirstArgs>(args?: SelectSubset<T, InvoiceLineItemFindFirstArgs<ExtArgs>>): Prisma__InvoiceLineItemClient<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first InvoiceLineItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceLineItemFindFirstOrThrowArgs} args - Arguments to find a InvoiceLineItem
     * @example
     * // Get one InvoiceLineItem
     * const invoiceLineItem = await prisma.invoiceLineItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceLineItemFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceLineItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceLineItemClient<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more InvoiceLineItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceLineItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InvoiceLineItems
     * const invoiceLineItems = await prisma.invoiceLineItem.findMany()
     * 
     * // Get first 10 InvoiceLineItems
     * const invoiceLineItems = await prisma.invoiceLineItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceLineItemWithIdOnly = await prisma.invoiceLineItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceLineItemFindManyArgs>(args?: SelectSubset<T, InvoiceLineItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a InvoiceLineItem.
     * @param {InvoiceLineItemCreateArgs} args - Arguments to create a InvoiceLineItem.
     * @example
     * // Create one InvoiceLineItem
     * const InvoiceLineItem = await prisma.invoiceLineItem.create({
     *   data: {
     *     // ... data to create a InvoiceLineItem
     *   }
     * })
     * 
     */
    create<T extends InvoiceLineItemCreateArgs>(args: SelectSubset<T, InvoiceLineItemCreateArgs<ExtArgs>>): Prisma__InvoiceLineItemClient<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many InvoiceLineItems.
     * @param {InvoiceLineItemCreateManyArgs} args - Arguments to create many InvoiceLineItems.
     * @example
     * // Create many InvoiceLineItems
     * const invoiceLineItem = await prisma.invoiceLineItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceLineItemCreateManyArgs>(args?: SelectSubset<T, InvoiceLineItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InvoiceLineItems and returns the data saved in the database.
     * @param {InvoiceLineItemCreateManyAndReturnArgs} args - Arguments to create many InvoiceLineItems.
     * @example
     * // Create many InvoiceLineItems
     * const invoiceLineItem = await prisma.invoiceLineItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InvoiceLineItems and only return the `id`
     * const invoiceLineItemWithIdOnly = await prisma.invoiceLineItem.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvoiceLineItemCreateManyAndReturnArgs>(args?: SelectSubset<T, InvoiceLineItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a InvoiceLineItem.
     * @param {InvoiceLineItemDeleteArgs} args - Arguments to delete one InvoiceLineItem.
     * @example
     * // Delete one InvoiceLineItem
     * const InvoiceLineItem = await prisma.invoiceLineItem.delete({
     *   where: {
     *     // ... filter to delete one InvoiceLineItem
     *   }
     * })
     * 
     */
    delete<T extends InvoiceLineItemDeleteArgs>(args: SelectSubset<T, InvoiceLineItemDeleteArgs<ExtArgs>>): Prisma__InvoiceLineItemClient<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one InvoiceLineItem.
     * @param {InvoiceLineItemUpdateArgs} args - Arguments to update one InvoiceLineItem.
     * @example
     * // Update one InvoiceLineItem
     * const invoiceLineItem = await prisma.invoiceLineItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceLineItemUpdateArgs>(args: SelectSubset<T, InvoiceLineItemUpdateArgs<ExtArgs>>): Prisma__InvoiceLineItemClient<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more InvoiceLineItems.
     * @param {InvoiceLineItemDeleteManyArgs} args - Arguments to filter InvoiceLineItems to delete.
     * @example
     * // Delete a few InvoiceLineItems
     * const { count } = await prisma.invoiceLineItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceLineItemDeleteManyArgs>(args?: SelectSubset<T, InvoiceLineItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvoiceLineItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceLineItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InvoiceLineItems
     * const invoiceLineItem = await prisma.invoiceLineItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceLineItemUpdateManyArgs>(args: SelectSubset<T, InvoiceLineItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one InvoiceLineItem.
     * @param {InvoiceLineItemUpsertArgs} args - Arguments to update or create a InvoiceLineItem.
     * @example
     * // Update or create a InvoiceLineItem
     * const invoiceLineItem = await prisma.invoiceLineItem.upsert({
     *   create: {
     *     // ... data to create a InvoiceLineItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InvoiceLineItem we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceLineItemUpsertArgs>(args: SelectSubset<T, InvoiceLineItemUpsertArgs<ExtArgs>>): Prisma__InvoiceLineItemClient<$Result.GetResult<Prisma.$InvoiceLineItemPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of InvoiceLineItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceLineItemCountArgs} args - Arguments to filter InvoiceLineItems to count.
     * @example
     * // Count the number of InvoiceLineItems
     * const count = await prisma.invoiceLineItem.count({
     *   where: {
     *     // ... the filter for the InvoiceLineItems we want to count
     *   }
     * })
    **/
    count<T extends InvoiceLineItemCountArgs>(
      args?: Subset<T, InvoiceLineItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceLineItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InvoiceLineItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceLineItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceLineItemAggregateArgs>(args: Subset<T, InvoiceLineItemAggregateArgs>): Prisma.PrismaPromise<GetInvoiceLineItemAggregateType<T>>

    /**
     * Group by InvoiceLineItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceLineItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceLineItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceLineItemGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceLineItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceLineItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceLineItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InvoiceLineItem model
   */
  readonly fields: InvoiceLineItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InvoiceLineItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceLineItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    invoice<T extends InvoiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InvoiceDefaultArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InvoiceLineItem model
   */ 
  interface InvoiceLineItemFieldRefs {
    readonly id: FieldRef<"InvoiceLineItem", 'String'>
    readonly invoiceId: FieldRef<"InvoiceLineItem", 'String'>
    readonly companyId: FieldRef<"InvoiceLineItem", 'String'>
    readonly chargeTypeId: FieldRef<"InvoiceLineItem", 'String'>
    readonly description: FieldRef<"InvoiceLineItem", 'String'>
    readonly category: FieldRef<"InvoiceLineItem", 'String'>
    readonly quantity: FieldRef<"InvoiceLineItem", 'Float'>
    readonly unitPrice: FieldRef<"InvoiceLineItem", 'Float'>
    readonly amount: FieldRef<"InvoiceLineItem", 'Float'>
    readonly isTaxable: FieldRef<"InvoiceLineItem", 'Boolean'>
    readonly taxRate: FieldRef<"InvoiceLineItem", 'Float'>
    readonly taxAmount: FieldRef<"InvoiceLineItem", 'Float'>
    readonly displayOrder: FieldRef<"InvoiceLineItem", 'Int'>
    readonly createdAt: FieldRef<"InvoiceLineItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InvoiceLineItem findUnique
   */
  export type InvoiceLineItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceLineItem to fetch.
     */
    where: InvoiceLineItemWhereUniqueInput
  }

  /**
   * InvoiceLineItem findUniqueOrThrow
   */
  export type InvoiceLineItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceLineItem to fetch.
     */
    where: InvoiceLineItemWhereUniqueInput
  }

  /**
   * InvoiceLineItem findFirst
   */
  export type InvoiceLineItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceLineItem to fetch.
     */
    where?: InvoiceLineItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceLineItems to fetch.
     */
    orderBy?: InvoiceLineItemOrderByWithRelationInput | InvoiceLineItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceLineItems.
     */
    cursor?: InvoiceLineItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceLineItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceLineItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceLineItems.
     */
    distinct?: InvoiceLineItemScalarFieldEnum | InvoiceLineItemScalarFieldEnum[]
  }

  /**
   * InvoiceLineItem findFirstOrThrow
   */
  export type InvoiceLineItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceLineItem to fetch.
     */
    where?: InvoiceLineItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceLineItems to fetch.
     */
    orderBy?: InvoiceLineItemOrderByWithRelationInput | InvoiceLineItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceLineItems.
     */
    cursor?: InvoiceLineItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceLineItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceLineItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceLineItems.
     */
    distinct?: InvoiceLineItemScalarFieldEnum | InvoiceLineItemScalarFieldEnum[]
  }

  /**
   * InvoiceLineItem findMany
   */
  export type InvoiceLineItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceLineItems to fetch.
     */
    where?: InvoiceLineItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceLineItems to fetch.
     */
    orderBy?: InvoiceLineItemOrderByWithRelationInput | InvoiceLineItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InvoiceLineItems.
     */
    cursor?: InvoiceLineItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceLineItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceLineItems.
     */
    skip?: number
    distinct?: InvoiceLineItemScalarFieldEnum | InvoiceLineItemScalarFieldEnum[]
  }

  /**
   * InvoiceLineItem create
   */
  export type InvoiceLineItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    /**
     * The data needed to create a InvoiceLineItem.
     */
    data: XOR<InvoiceLineItemCreateInput, InvoiceLineItemUncheckedCreateInput>
  }

  /**
   * InvoiceLineItem createMany
   */
  export type InvoiceLineItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InvoiceLineItems.
     */
    data: InvoiceLineItemCreateManyInput | InvoiceLineItemCreateManyInput[]
  }

  /**
   * InvoiceLineItem createManyAndReturn
   */
  export type InvoiceLineItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many InvoiceLineItems.
     */
    data: InvoiceLineItemCreateManyInput | InvoiceLineItemCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InvoiceLineItem update
   */
  export type InvoiceLineItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    /**
     * The data needed to update a InvoiceLineItem.
     */
    data: XOR<InvoiceLineItemUpdateInput, InvoiceLineItemUncheckedUpdateInput>
    /**
     * Choose, which InvoiceLineItem to update.
     */
    where: InvoiceLineItemWhereUniqueInput
  }

  /**
   * InvoiceLineItem updateMany
   */
  export type InvoiceLineItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InvoiceLineItems.
     */
    data: XOR<InvoiceLineItemUpdateManyMutationInput, InvoiceLineItemUncheckedUpdateManyInput>
    /**
     * Filter which InvoiceLineItems to update
     */
    where?: InvoiceLineItemWhereInput
  }

  /**
   * InvoiceLineItem upsert
   */
  export type InvoiceLineItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    /**
     * The filter to search for the InvoiceLineItem to update in case it exists.
     */
    where: InvoiceLineItemWhereUniqueInput
    /**
     * In case the InvoiceLineItem found by the `where` argument doesn't exist, create a new InvoiceLineItem with this data.
     */
    create: XOR<InvoiceLineItemCreateInput, InvoiceLineItemUncheckedCreateInput>
    /**
     * In case the InvoiceLineItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceLineItemUpdateInput, InvoiceLineItemUncheckedUpdateInput>
  }

  /**
   * InvoiceLineItem delete
   */
  export type InvoiceLineItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
    /**
     * Filter which InvoiceLineItem to delete.
     */
    where: InvoiceLineItemWhereUniqueInput
  }

  /**
   * InvoiceLineItem deleteMany
   */
  export type InvoiceLineItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceLineItems to delete
     */
    where?: InvoiceLineItemWhereInput
  }

  /**
   * InvoiceLineItem without action
   */
  export type InvoiceLineItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceLineItem
     */
    select?: InvoiceLineItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceLineItemInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    amount: number | null
  }

  export type PaymentSumAggregateOutputType = {
    amount: number | null
  }

  export type PaymentMinAggregateOutputType = {
    id: string | null
    invoiceId: string | null
    companyId: string | null
    amount: number | null
    paymentDate: Date | null
    paymentMethod: string | null
    transactionRef: string | null
    receiptNumber: string | null
    notes: string | null
    createdBy: string | null
    createdAt: Date | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: string | null
    invoiceId: string | null
    companyId: string | null
    amount: number | null
    paymentDate: Date | null
    paymentMethod: string | null
    transactionRef: string | null
    receiptNumber: string | null
    notes: string | null
    createdBy: string | null
    createdAt: Date | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    invoiceId: number
    companyId: number
    amount: number
    paymentDate: number
    paymentMethod: number
    transactionRef: number
    receiptNumber: number
    notes: number
    createdBy: number
    createdAt: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentSumAggregateInputType = {
    amount?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    invoiceId?: true
    companyId?: true
    amount?: true
    paymentDate?: true
    paymentMethod?: true
    transactionRef?: true
    receiptNumber?: true
    notes?: true
    createdBy?: true
    createdAt?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    invoiceId?: true
    companyId?: true
    amount?: true
    paymentDate?: true
    paymentMethod?: true
    transactionRef?: true
    receiptNumber?: true
    notes?: true
    createdBy?: true
    createdAt?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    invoiceId?: true
    companyId?: true
    amount?: true
    paymentDate?: true
    paymentMethod?: true
    transactionRef?: true
    receiptNumber?: true
    notes?: true
    createdBy?: true
    createdAt?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: string
    invoiceId: string
    companyId: string
    amount: number
    paymentDate: Date
    paymentMethod: string
    transactionRef: string | null
    receiptNumber: string | null
    notes: string | null
    createdBy: string | null
    createdAt: Date
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    companyId?: boolean
    amount?: boolean
    paymentDate?: boolean
    paymentMethod?: boolean
    transactionRef?: boolean
    receiptNumber?: boolean
    notes?: boolean
    createdBy?: boolean
    createdAt?: boolean
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    companyId?: boolean
    amount?: boolean
    paymentDate?: boolean
    paymentMethod?: boolean
    transactionRef?: boolean
    receiptNumber?: boolean
    notes?: boolean
    createdBy?: boolean
    createdAt?: boolean
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    invoiceId?: boolean
    companyId?: boolean
    amount?: boolean
    paymentDate?: boolean
    paymentMethod?: boolean
    transactionRef?: boolean
    receiptNumber?: boolean
    notes?: boolean
    createdBy?: boolean
    createdAt?: boolean
  }

  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      invoice: Prisma.$InvoicePayload<ExtArgs>
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      invoiceId: string
      companyId: string
      amount: number
      paymentDate: Date
      paymentMethod: string
      transactionRef: string | null
      receiptNumber: string | null
      notes: string | null
      createdBy: string | null
      createdAt: Date
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    invoice<T extends InvoiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InvoiceDefaultArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */ 
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'String'>
    readonly invoiceId: FieldRef<"Payment", 'String'>
    readonly companyId: FieldRef<"Payment", 'String'>
    readonly amount: FieldRef<"Payment", 'Float'>
    readonly paymentDate: FieldRef<"Payment", 'DateTime'>
    readonly paymentMethod: FieldRef<"Payment", 'String'>
    readonly transactionRef: FieldRef<"Payment", 'String'>
    readonly receiptNumber: FieldRef<"Payment", 'String'>
    readonly notes: FieldRef<"Payment", 'String'>
    readonly createdBy: FieldRef<"Payment", 'String'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model ShipmentCharges
   */

  export type AggregateShipmentCharges = {
    _count: ShipmentChargesCountAggregateOutputType | null
    _avg: ShipmentChargesAvgAggregateOutputType | null
    _sum: ShipmentChargesSumAggregateOutputType | null
    _min: ShipmentChargesMinAggregateOutputType | null
    _max: ShipmentChargesMaxAggregateOutputType | null
  }

  export type ShipmentChargesAvgAggregateOutputType = {
    currentStorageCharge: number | null
    daysStored: number | null
    totalBoxesReleased: number | null
    totalInvoiced: number | null
    totalPaid: number | null
    outstandingBalance: number | null
  }

  export type ShipmentChargesSumAggregateOutputType = {
    currentStorageCharge: number | null
    daysStored: number | null
    totalBoxesReleased: number | null
    totalInvoiced: number | null
    totalPaid: number | null
    outstandingBalance: number | null
  }

  export type ShipmentChargesMinAggregateOutputType = {
    id: string | null
    shipmentId: string | null
    companyId: string | null
    currentStorageCharge: number | null
    daysStored: number | null
    lastCalculatedDate: Date | null
    totalBoxesReleased: number | null
    totalInvoiced: number | null
    totalPaid: number | null
    outstandingBalance: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ShipmentChargesMaxAggregateOutputType = {
    id: string | null
    shipmentId: string | null
    companyId: string | null
    currentStorageCharge: number | null
    daysStored: number | null
    lastCalculatedDate: Date | null
    totalBoxesReleased: number | null
    totalInvoiced: number | null
    totalPaid: number | null
    outstandingBalance: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ShipmentChargesCountAggregateOutputType = {
    id: number
    shipmentId: number
    companyId: number
    currentStorageCharge: number
    daysStored: number
    lastCalculatedDate: number
    totalBoxesReleased: number
    totalInvoiced: number
    totalPaid: number
    outstandingBalance: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ShipmentChargesAvgAggregateInputType = {
    currentStorageCharge?: true
    daysStored?: true
    totalBoxesReleased?: true
    totalInvoiced?: true
    totalPaid?: true
    outstandingBalance?: true
  }

  export type ShipmentChargesSumAggregateInputType = {
    currentStorageCharge?: true
    daysStored?: true
    totalBoxesReleased?: true
    totalInvoiced?: true
    totalPaid?: true
    outstandingBalance?: true
  }

  export type ShipmentChargesMinAggregateInputType = {
    id?: true
    shipmentId?: true
    companyId?: true
    currentStorageCharge?: true
    daysStored?: true
    lastCalculatedDate?: true
    totalBoxesReleased?: true
    totalInvoiced?: true
    totalPaid?: true
    outstandingBalance?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ShipmentChargesMaxAggregateInputType = {
    id?: true
    shipmentId?: true
    companyId?: true
    currentStorageCharge?: true
    daysStored?: true
    lastCalculatedDate?: true
    totalBoxesReleased?: true
    totalInvoiced?: true
    totalPaid?: true
    outstandingBalance?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ShipmentChargesCountAggregateInputType = {
    id?: true
    shipmentId?: true
    companyId?: true
    currentStorageCharge?: true
    daysStored?: true
    lastCalculatedDate?: true
    totalBoxesReleased?: true
    totalInvoiced?: true
    totalPaid?: true
    outstandingBalance?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ShipmentChargesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShipmentCharges to aggregate.
     */
    where?: ShipmentChargesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentCharges to fetch.
     */
    orderBy?: ShipmentChargesOrderByWithRelationInput | ShipmentChargesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShipmentChargesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentCharges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentCharges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShipmentCharges
    **/
    _count?: true | ShipmentChargesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShipmentChargesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShipmentChargesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShipmentChargesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShipmentChargesMaxAggregateInputType
  }

  export type GetShipmentChargesAggregateType<T extends ShipmentChargesAggregateArgs> = {
        [P in keyof T & keyof AggregateShipmentCharges]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipmentCharges[P]>
      : GetScalarType<T[P], AggregateShipmentCharges[P]>
  }




  export type ShipmentChargesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentChargesWhereInput
    orderBy?: ShipmentChargesOrderByWithAggregationInput | ShipmentChargesOrderByWithAggregationInput[]
    by: ShipmentChargesScalarFieldEnum[] | ShipmentChargesScalarFieldEnum
    having?: ShipmentChargesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShipmentChargesCountAggregateInputType | true
    _avg?: ShipmentChargesAvgAggregateInputType
    _sum?: ShipmentChargesSumAggregateInputType
    _min?: ShipmentChargesMinAggregateInputType
    _max?: ShipmentChargesMaxAggregateInputType
  }

  export type ShipmentChargesGroupByOutputType = {
    id: string
    shipmentId: string
    companyId: string
    currentStorageCharge: number
    daysStored: number
    lastCalculatedDate: Date
    totalBoxesReleased: number
    totalInvoiced: number
    totalPaid: number
    outstandingBalance: number
    createdAt: Date
    updatedAt: Date
    _count: ShipmentChargesCountAggregateOutputType | null
    _avg: ShipmentChargesAvgAggregateOutputType | null
    _sum: ShipmentChargesSumAggregateOutputType | null
    _min: ShipmentChargesMinAggregateOutputType | null
    _max: ShipmentChargesMaxAggregateOutputType | null
  }

  type GetShipmentChargesGroupByPayload<T extends ShipmentChargesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShipmentChargesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShipmentChargesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShipmentChargesGroupByOutputType[P]>
            : GetScalarType<T[P], ShipmentChargesGroupByOutputType[P]>
        }
      >
    >


  export type ShipmentChargesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    companyId?: boolean
    currentStorageCharge?: boolean
    daysStored?: boolean
    lastCalculatedDate?: boolean
    totalBoxesReleased?: boolean
    totalInvoiced?: boolean
    totalPaid?: boolean
    outstandingBalance?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentCharges"]>

  export type ShipmentChargesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shipmentId?: boolean
    companyId?: boolean
    currentStorageCharge?: boolean
    daysStored?: boolean
    lastCalculatedDate?: boolean
    totalBoxesReleased?: boolean
    totalInvoiced?: boolean
    totalPaid?: boolean
    outstandingBalance?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentCharges"]>

  export type ShipmentChargesSelectScalar = {
    id?: boolean
    shipmentId?: boolean
    companyId?: boolean
    currentStorageCharge?: boolean
    daysStored?: boolean
    lastCalculatedDate?: boolean
    totalBoxesReleased?: boolean
    totalInvoiced?: boolean
    totalPaid?: boolean
    outstandingBalance?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ShipmentChargesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type ShipmentChargesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shipment?: boolean | ShipmentDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $ShipmentChargesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShipmentCharges"
    objects: {
      shipment: Prisma.$ShipmentPayload<ExtArgs>
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      shipmentId: string
      companyId: string
      currentStorageCharge: number
      daysStored: number
      lastCalculatedDate: Date
      totalBoxesReleased: number
      totalInvoiced: number
      totalPaid: number
      outstandingBalance: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["shipmentCharges"]>
    composites: {}
  }

  type ShipmentChargesGetPayload<S extends boolean | null | undefined | ShipmentChargesDefaultArgs> = $Result.GetResult<Prisma.$ShipmentChargesPayload, S>

  type ShipmentChargesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ShipmentChargesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ShipmentChargesCountAggregateInputType | true
    }

  export interface ShipmentChargesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShipmentCharges'], meta: { name: 'ShipmentCharges' } }
    /**
     * Find zero or one ShipmentCharges that matches the filter.
     * @param {ShipmentChargesFindUniqueArgs} args - Arguments to find a ShipmentCharges
     * @example
     * // Get one ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShipmentChargesFindUniqueArgs>(args: SelectSubset<T, ShipmentChargesFindUniqueArgs<ExtArgs>>): Prisma__ShipmentChargesClient<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ShipmentCharges that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ShipmentChargesFindUniqueOrThrowArgs} args - Arguments to find a ShipmentCharges
     * @example
     * // Get one ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShipmentChargesFindUniqueOrThrowArgs>(args: SelectSubset<T, ShipmentChargesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShipmentChargesClient<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ShipmentCharges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentChargesFindFirstArgs} args - Arguments to find a ShipmentCharges
     * @example
     * // Get one ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShipmentChargesFindFirstArgs>(args?: SelectSubset<T, ShipmentChargesFindFirstArgs<ExtArgs>>): Prisma__ShipmentChargesClient<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ShipmentCharges that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentChargesFindFirstOrThrowArgs} args - Arguments to find a ShipmentCharges
     * @example
     * // Get one ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShipmentChargesFindFirstOrThrowArgs>(args?: SelectSubset<T, ShipmentChargesFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShipmentChargesClient<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ShipmentCharges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentChargesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.findMany()
     * 
     * // Get first 10 ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipmentChargesWithIdOnly = await prisma.shipmentCharges.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShipmentChargesFindManyArgs>(args?: SelectSubset<T, ShipmentChargesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ShipmentCharges.
     * @param {ShipmentChargesCreateArgs} args - Arguments to create a ShipmentCharges.
     * @example
     * // Create one ShipmentCharges
     * const ShipmentCharges = await prisma.shipmentCharges.create({
     *   data: {
     *     // ... data to create a ShipmentCharges
     *   }
     * })
     * 
     */
    create<T extends ShipmentChargesCreateArgs>(args: SelectSubset<T, ShipmentChargesCreateArgs<ExtArgs>>): Prisma__ShipmentChargesClient<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ShipmentCharges.
     * @param {ShipmentChargesCreateManyArgs} args - Arguments to create many ShipmentCharges.
     * @example
     * // Create many ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShipmentChargesCreateManyArgs>(args?: SelectSubset<T, ShipmentChargesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ShipmentCharges and returns the data saved in the database.
     * @param {ShipmentChargesCreateManyAndReturnArgs} args - Arguments to create many ShipmentCharges.
     * @example
     * // Create many ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ShipmentCharges and only return the `id`
     * const shipmentChargesWithIdOnly = await prisma.shipmentCharges.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShipmentChargesCreateManyAndReturnArgs>(args?: SelectSubset<T, ShipmentChargesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ShipmentCharges.
     * @param {ShipmentChargesDeleteArgs} args - Arguments to delete one ShipmentCharges.
     * @example
     * // Delete one ShipmentCharges
     * const ShipmentCharges = await prisma.shipmentCharges.delete({
     *   where: {
     *     // ... filter to delete one ShipmentCharges
     *   }
     * })
     * 
     */
    delete<T extends ShipmentChargesDeleteArgs>(args: SelectSubset<T, ShipmentChargesDeleteArgs<ExtArgs>>): Prisma__ShipmentChargesClient<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ShipmentCharges.
     * @param {ShipmentChargesUpdateArgs} args - Arguments to update one ShipmentCharges.
     * @example
     * // Update one ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShipmentChargesUpdateArgs>(args: SelectSubset<T, ShipmentChargesUpdateArgs<ExtArgs>>): Prisma__ShipmentChargesClient<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ShipmentCharges.
     * @param {ShipmentChargesDeleteManyArgs} args - Arguments to filter ShipmentCharges to delete.
     * @example
     * // Delete a few ShipmentCharges
     * const { count } = await prisma.shipmentCharges.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShipmentChargesDeleteManyArgs>(args?: SelectSubset<T, ShipmentChargesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShipmentCharges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentChargesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShipmentChargesUpdateManyArgs>(args: SelectSubset<T, ShipmentChargesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ShipmentCharges.
     * @param {ShipmentChargesUpsertArgs} args - Arguments to update or create a ShipmentCharges.
     * @example
     * // Update or create a ShipmentCharges
     * const shipmentCharges = await prisma.shipmentCharges.upsert({
     *   create: {
     *     // ... data to create a ShipmentCharges
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShipmentCharges we want to update
     *   }
     * })
     */
    upsert<T extends ShipmentChargesUpsertArgs>(args: SelectSubset<T, ShipmentChargesUpsertArgs<ExtArgs>>): Prisma__ShipmentChargesClient<$Result.GetResult<Prisma.$ShipmentChargesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ShipmentCharges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentChargesCountArgs} args - Arguments to filter ShipmentCharges to count.
     * @example
     * // Count the number of ShipmentCharges
     * const count = await prisma.shipmentCharges.count({
     *   where: {
     *     // ... the filter for the ShipmentCharges we want to count
     *   }
     * })
    **/
    count<T extends ShipmentChargesCountArgs>(
      args?: Subset<T, ShipmentChargesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShipmentChargesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShipmentCharges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentChargesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShipmentChargesAggregateArgs>(args: Subset<T, ShipmentChargesAggregateArgs>): Prisma.PrismaPromise<GetShipmentChargesAggregateType<T>>

    /**
     * Group by ShipmentCharges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentChargesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShipmentChargesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShipmentChargesGroupByArgs['orderBy'] }
        : { orderBy?: ShipmentChargesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShipmentChargesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipmentChargesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShipmentCharges model
   */
  readonly fields: ShipmentChargesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShipmentCharges.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShipmentChargesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    shipment<T extends ShipmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ShipmentDefaultArgs<ExtArgs>>): Prisma__ShipmentClient<$Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ShipmentCharges model
   */ 
  interface ShipmentChargesFieldRefs {
    readonly id: FieldRef<"ShipmentCharges", 'String'>
    readonly shipmentId: FieldRef<"ShipmentCharges", 'String'>
    readonly companyId: FieldRef<"ShipmentCharges", 'String'>
    readonly currentStorageCharge: FieldRef<"ShipmentCharges", 'Float'>
    readonly daysStored: FieldRef<"ShipmentCharges", 'Int'>
    readonly lastCalculatedDate: FieldRef<"ShipmentCharges", 'DateTime'>
    readonly totalBoxesReleased: FieldRef<"ShipmentCharges", 'Int'>
    readonly totalInvoiced: FieldRef<"ShipmentCharges", 'Float'>
    readonly totalPaid: FieldRef<"ShipmentCharges", 'Float'>
    readonly outstandingBalance: FieldRef<"ShipmentCharges", 'Float'>
    readonly createdAt: FieldRef<"ShipmentCharges", 'DateTime'>
    readonly updatedAt: FieldRef<"ShipmentCharges", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ShipmentCharges findUnique
   */
  export type ShipmentChargesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentCharges to fetch.
     */
    where: ShipmentChargesWhereUniqueInput
  }

  /**
   * ShipmentCharges findUniqueOrThrow
   */
  export type ShipmentChargesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentCharges to fetch.
     */
    where: ShipmentChargesWhereUniqueInput
  }

  /**
   * ShipmentCharges findFirst
   */
  export type ShipmentChargesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentCharges to fetch.
     */
    where?: ShipmentChargesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentCharges to fetch.
     */
    orderBy?: ShipmentChargesOrderByWithRelationInput | ShipmentChargesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShipmentCharges.
     */
    cursor?: ShipmentChargesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentCharges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentCharges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShipmentCharges.
     */
    distinct?: ShipmentChargesScalarFieldEnum | ShipmentChargesScalarFieldEnum[]
  }

  /**
   * ShipmentCharges findFirstOrThrow
   */
  export type ShipmentChargesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentCharges to fetch.
     */
    where?: ShipmentChargesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentCharges to fetch.
     */
    orderBy?: ShipmentChargesOrderByWithRelationInput | ShipmentChargesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShipmentCharges.
     */
    cursor?: ShipmentChargesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentCharges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentCharges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShipmentCharges.
     */
    distinct?: ShipmentChargesScalarFieldEnum | ShipmentChargesScalarFieldEnum[]
  }

  /**
   * ShipmentCharges findMany
   */
  export type ShipmentChargesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentCharges to fetch.
     */
    where?: ShipmentChargesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentCharges to fetch.
     */
    orderBy?: ShipmentChargesOrderByWithRelationInput | ShipmentChargesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShipmentCharges.
     */
    cursor?: ShipmentChargesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentCharges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentCharges.
     */
    skip?: number
    distinct?: ShipmentChargesScalarFieldEnum | ShipmentChargesScalarFieldEnum[]
  }

  /**
   * ShipmentCharges create
   */
  export type ShipmentChargesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    /**
     * The data needed to create a ShipmentCharges.
     */
    data: XOR<ShipmentChargesCreateInput, ShipmentChargesUncheckedCreateInput>
  }

  /**
   * ShipmentCharges createMany
   */
  export type ShipmentChargesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShipmentCharges.
     */
    data: ShipmentChargesCreateManyInput | ShipmentChargesCreateManyInput[]
  }

  /**
   * ShipmentCharges createManyAndReturn
   */
  export type ShipmentChargesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ShipmentCharges.
     */
    data: ShipmentChargesCreateManyInput | ShipmentChargesCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShipmentCharges update
   */
  export type ShipmentChargesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    /**
     * The data needed to update a ShipmentCharges.
     */
    data: XOR<ShipmentChargesUpdateInput, ShipmentChargesUncheckedUpdateInput>
    /**
     * Choose, which ShipmentCharges to update.
     */
    where: ShipmentChargesWhereUniqueInput
  }

  /**
   * ShipmentCharges updateMany
   */
  export type ShipmentChargesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShipmentCharges.
     */
    data: XOR<ShipmentChargesUpdateManyMutationInput, ShipmentChargesUncheckedUpdateManyInput>
    /**
     * Filter which ShipmentCharges to update
     */
    where?: ShipmentChargesWhereInput
  }

  /**
   * ShipmentCharges upsert
   */
  export type ShipmentChargesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    /**
     * The filter to search for the ShipmentCharges to update in case it exists.
     */
    where: ShipmentChargesWhereUniqueInput
    /**
     * In case the ShipmentCharges found by the `where` argument doesn't exist, create a new ShipmentCharges with this data.
     */
    create: XOR<ShipmentChargesCreateInput, ShipmentChargesUncheckedCreateInput>
    /**
     * In case the ShipmentCharges was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShipmentChargesUpdateInput, ShipmentChargesUncheckedUpdateInput>
  }

  /**
   * ShipmentCharges delete
   */
  export type ShipmentChargesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
    /**
     * Filter which ShipmentCharges to delete.
     */
    where: ShipmentChargesWhereUniqueInput
  }

  /**
   * ShipmentCharges deleteMany
   */
  export type ShipmentChargesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShipmentCharges to delete
     */
    where?: ShipmentChargesWhereInput
  }

  /**
   * ShipmentCharges without action
   */
  export type ShipmentChargesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentCharges
     */
    select?: ShipmentChargesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentChargesInclude<ExtArgs> | null
  }


  /**
   * Model CustomField
   */

  export type AggregateCustomField = {
    _count: CustomFieldCountAggregateOutputType | null
    _min: CustomFieldMinAggregateOutputType | null
    _max: CustomFieldMaxAggregateOutputType | null
  }

  export type CustomFieldMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    fieldName: string | null
    fieldType: string | null
    fieldOptions: string | null
    isRequired: boolean | null
    isActive: boolean | null
    section: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomFieldMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    fieldName: string | null
    fieldType: string | null
    fieldOptions: string | null
    isRequired: boolean | null
    isActive: boolean | null
    section: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomFieldCountAggregateOutputType = {
    id: number
    companyId: number
    fieldName: number
    fieldType: number
    fieldOptions: number
    isRequired: number
    isActive: number
    section: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CustomFieldMinAggregateInputType = {
    id?: true
    companyId?: true
    fieldName?: true
    fieldType?: true
    fieldOptions?: true
    isRequired?: true
    isActive?: true
    section?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomFieldMaxAggregateInputType = {
    id?: true
    companyId?: true
    fieldName?: true
    fieldType?: true
    fieldOptions?: true
    isRequired?: true
    isActive?: true
    section?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomFieldCountAggregateInputType = {
    id?: true
    companyId?: true
    fieldName?: true
    fieldType?: true
    fieldOptions?: true
    isRequired?: true
    isActive?: true
    section?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CustomFieldAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomField to aggregate.
     */
    where?: CustomFieldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFields to fetch.
     */
    orderBy?: CustomFieldOrderByWithRelationInput | CustomFieldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomFieldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFields.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CustomFields
    **/
    _count?: true | CustomFieldCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomFieldMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomFieldMaxAggregateInputType
  }

  export type GetCustomFieldAggregateType<T extends CustomFieldAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomField]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomField[P]>
      : GetScalarType<T[P], AggregateCustomField[P]>
  }




  export type CustomFieldGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomFieldWhereInput
    orderBy?: CustomFieldOrderByWithAggregationInput | CustomFieldOrderByWithAggregationInput[]
    by: CustomFieldScalarFieldEnum[] | CustomFieldScalarFieldEnum
    having?: CustomFieldScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomFieldCountAggregateInputType | true
    _min?: CustomFieldMinAggregateInputType
    _max?: CustomFieldMaxAggregateInputType
  }

  export type CustomFieldGroupByOutputType = {
    id: string
    companyId: string
    fieldName: string
    fieldType: string
    fieldOptions: string | null
    isRequired: boolean
    isActive: boolean
    section: string
    createdAt: Date
    updatedAt: Date
    _count: CustomFieldCountAggregateOutputType | null
    _min: CustomFieldMinAggregateOutputType | null
    _max: CustomFieldMaxAggregateOutputType | null
  }

  type GetCustomFieldGroupByPayload<T extends CustomFieldGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomFieldGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomFieldGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomFieldGroupByOutputType[P]>
            : GetScalarType<T[P], CustomFieldGroupByOutputType[P]>
        }
      >
    >


  export type CustomFieldSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    fieldName?: boolean
    fieldType?: boolean
    fieldOptions?: boolean
    isRequired?: boolean
    isActive?: boolean
    section?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    values?: boolean | CustomField$valuesArgs<ExtArgs>
    _count?: boolean | CustomFieldCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customField"]>

  export type CustomFieldSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    fieldName?: boolean
    fieldType?: boolean
    fieldOptions?: boolean
    isRequired?: boolean
    isActive?: boolean
    section?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customField"]>

  export type CustomFieldSelectScalar = {
    id?: boolean
    companyId?: boolean
    fieldName?: boolean
    fieldType?: boolean
    fieldOptions?: boolean
    isRequired?: boolean
    isActive?: boolean
    section?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CustomFieldInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    values?: boolean | CustomField$valuesArgs<ExtArgs>
    _count?: boolean | CustomFieldCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CustomFieldIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $CustomFieldPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CustomField"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      values: Prisma.$CustomFieldValuePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      fieldName: string
      fieldType: string
      fieldOptions: string | null
      isRequired: boolean
      isActive: boolean
      section: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["customField"]>
    composites: {}
  }

  type CustomFieldGetPayload<S extends boolean | null | undefined | CustomFieldDefaultArgs> = $Result.GetResult<Prisma.$CustomFieldPayload, S>

  type CustomFieldCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CustomFieldFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CustomFieldCountAggregateInputType | true
    }

  export interface CustomFieldDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CustomField'], meta: { name: 'CustomField' } }
    /**
     * Find zero or one CustomField that matches the filter.
     * @param {CustomFieldFindUniqueArgs} args - Arguments to find a CustomField
     * @example
     * // Get one CustomField
     * const customField = await prisma.customField.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomFieldFindUniqueArgs>(args: SelectSubset<T, CustomFieldFindUniqueArgs<ExtArgs>>): Prisma__CustomFieldClient<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CustomField that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CustomFieldFindUniqueOrThrowArgs} args - Arguments to find a CustomField
     * @example
     * // Get one CustomField
     * const customField = await prisma.customField.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomFieldFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomFieldFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomFieldClient<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CustomField that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldFindFirstArgs} args - Arguments to find a CustomField
     * @example
     * // Get one CustomField
     * const customField = await prisma.customField.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomFieldFindFirstArgs>(args?: SelectSubset<T, CustomFieldFindFirstArgs<ExtArgs>>): Prisma__CustomFieldClient<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CustomField that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldFindFirstOrThrowArgs} args - Arguments to find a CustomField
     * @example
     * // Get one CustomField
     * const customField = await prisma.customField.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomFieldFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomFieldFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomFieldClient<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CustomFields that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CustomFields
     * const customFields = await prisma.customField.findMany()
     * 
     * // Get first 10 CustomFields
     * const customFields = await prisma.customField.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customFieldWithIdOnly = await prisma.customField.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomFieldFindManyArgs>(args?: SelectSubset<T, CustomFieldFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CustomField.
     * @param {CustomFieldCreateArgs} args - Arguments to create a CustomField.
     * @example
     * // Create one CustomField
     * const CustomField = await prisma.customField.create({
     *   data: {
     *     // ... data to create a CustomField
     *   }
     * })
     * 
     */
    create<T extends CustomFieldCreateArgs>(args: SelectSubset<T, CustomFieldCreateArgs<ExtArgs>>): Prisma__CustomFieldClient<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CustomFields.
     * @param {CustomFieldCreateManyArgs} args - Arguments to create many CustomFields.
     * @example
     * // Create many CustomFields
     * const customField = await prisma.customField.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomFieldCreateManyArgs>(args?: SelectSubset<T, CustomFieldCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CustomFields and returns the data saved in the database.
     * @param {CustomFieldCreateManyAndReturnArgs} args - Arguments to create many CustomFields.
     * @example
     * // Create many CustomFields
     * const customField = await prisma.customField.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CustomFields and only return the `id`
     * const customFieldWithIdOnly = await prisma.customField.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomFieldCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomFieldCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a CustomField.
     * @param {CustomFieldDeleteArgs} args - Arguments to delete one CustomField.
     * @example
     * // Delete one CustomField
     * const CustomField = await prisma.customField.delete({
     *   where: {
     *     // ... filter to delete one CustomField
     *   }
     * })
     * 
     */
    delete<T extends CustomFieldDeleteArgs>(args: SelectSubset<T, CustomFieldDeleteArgs<ExtArgs>>): Prisma__CustomFieldClient<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CustomField.
     * @param {CustomFieldUpdateArgs} args - Arguments to update one CustomField.
     * @example
     * // Update one CustomField
     * const customField = await prisma.customField.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomFieldUpdateArgs>(args: SelectSubset<T, CustomFieldUpdateArgs<ExtArgs>>): Prisma__CustomFieldClient<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CustomFields.
     * @param {CustomFieldDeleteManyArgs} args - Arguments to filter CustomFields to delete.
     * @example
     * // Delete a few CustomFields
     * const { count } = await prisma.customField.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomFieldDeleteManyArgs>(args?: SelectSubset<T, CustomFieldDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomFields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CustomFields
     * const customField = await prisma.customField.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomFieldUpdateManyArgs>(args: SelectSubset<T, CustomFieldUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CustomField.
     * @param {CustomFieldUpsertArgs} args - Arguments to update or create a CustomField.
     * @example
     * // Update or create a CustomField
     * const customField = await prisma.customField.upsert({
     *   create: {
     *     // ... data to create a CustomField
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CustomField we want to update
     *   }
     * })
     */
    upsert<T extends CustomFieldUpsertArgs>(args: SelectSubset<T, CustomFieldUpsertArgs<ExtArgs>>): Prisma__CustomFieldClient<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CustomFields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldCountArgs} args - Arguments to filter CustomFields to count.
     * @example
     * // Count the number of CustomFields
     * const count = await prisma.customField.count({
     *   where: {
     *     // ... the filter for the CustomFields we want to count
     *   }
     * })
    **/
    count<T extends CustomFieldCountArgs>(
      args?: Subset<T, CustomFieldCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomFieldCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CustomField.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomFieldAggregateArgs>(args: Subset<T, CustomFieldAggregateArgs>): Prisma.PrismaPromise<GetCustomFieldAggregateType<T>>

    /**
     * Group by CustomField.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomFieldGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomFieldGroupByArgs['orderBy'] }
        : { orderBy?: CustomFieldGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomFieldGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomFieldGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CustomField model
   */
  readonly fields: CustomFieldFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CustomField.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomFieldClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    values<T extends CustomField$valuesArgs<ExtArgs> = {}>(args?: Subset<T, CustomField$valuesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CustomField model
   */ 
  interface CustomFieldFieldRefs {
    readonly id: FieldRef<"CustomField", 'String'>
    readonly companyId: FieldRef<"CustomField", 'String'>
    readonly fieldName: FieldRef<"CustomField", 'String'>
    readonly fieldType: FieldRef<"CustomField", 'String'>
    readonly fieldOptions: FieldRef<"CustomField", 'String'>
    readonly isRequired: FieldRef<"CustomField", 'Boolean'>
    readonly isActive: FieldRef<"CustomField", 'Boolean'>
    readonly section: FieldRef<"CustomField", 'String'>
    readonly createdAt: FieldRef<"CustomField", 'DateTime'>
    readonly updatedAt: FieldRef<"CustomField", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CustomField findUnique
   */
  export type CustomFieldFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
    /**
     * Filter, which CustomField to fetch.
     */
    where: CustomFieldWhereUniqueInput
  }

  /**
   * CustomField findUniqueOrThrow
   */
  export type CustomFieldFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
    /**
     * Filter, which CustomField to fetch.
     */
    where: CustomFieldWhereUniqueInput
  }

  /**
   * CustomField findFirst
   */
  export type CustomFieldFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
    /**
     * Filter, which CustomField to fetch.
     */
    where?: CustomFieldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFields to fetch.
     */
    orderBy?: CustomFieldOrderByWithRelationInput | CustomFieldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomFields.
     */
    cursor?: CustomFieldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFields.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomFields.
     */
    distinct?: CustomFieldScalarFieldEnum | CustomFieldScalarFieldEnum[]
  }

  /**
   * CustomField findFirstOrThrow
   */
  export type CustomFieldFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
    /**
     * Filter, which CustomField to fetch.
     */
    where?: CustomFieldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFields to fetch.
     */
    orderBy?: CustomFieldOrderByWithRelationInput | CustomFieldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomFields.
     */
    cursor?: CustomFieldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFields.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomFields.
     */
    distinct?: CustomFieldScalarFieldEnum | CustomFieldScalarFieldEnum[]
  }

  /**
   * CustomField findMany
   */
  export type CustomFieldFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
    /**
     * Filter, which CustomFields to fetch.
     */
    where?: CustomFieldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFields to fetch.
     */
    orderBy?: CustomFieldOrderByWithRelationInput | CustomFieldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CustomFields.
     */
    cursor?: CustomFieldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFields.
     */
    skip?: number
    distinct?: CustomFieldScalarFieldEnum | CustomFieldScalarFieldEnum[]
  }

  /**
   * CustomField create
   */
  export type CustomFieldCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
    /**
     * The data needed to create a CustomField.
     */
    data: XOR<CustomFieldCreateInput, CustomFieldUncheckedCreateInput>
  }

  /**
   * CustomField createMany
   */
  export type CustomFieldCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CustomFields.
     */
    data: CustomFieldCreateManyInput | CustomFieldCreateManyInput[]
  }

  /**
   * CustomField createManyAndReturn
   */
  export type CustomFieldCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CustomFields.
     */
    data: CustomFieldCreateManyInput | CustomFieldCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CustomField update
   */
  export type CustomFieldUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
    /**
     * The data needed to update a CustomField.
     */
    data: XOR<CustomFieldUpdateInput, CustomFieldUncheckedUpdateInput>
    /**
     * Choose, which CustomField to update.
     */
    where: CustomFieldWhereUniqueInput
  }

  /**
   * CustomField updateMany
   */
  export type CustomFieldUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CustomFields.
     */
    data: XOR<CustomFieldUpdateManyMutationInput, CustomFieldUncheckedUpdateManyInput>
    /**
     * Filter which CustomFields to update
     */
    where?: CustomFieldWhereInput
  }

  /**
   * CustomField upsert
   */
  export type CustomFieldUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
    /**
     * The filter to search for the CustomField to update in case it exists.
     */
    where: CustomFieldWhereUniqueInput
    /**
     * In case the CustomField found by the `where` argument doesn't exist, create a new CustomField with this data.
     */
    create: XOR<CustomFieldCreateInput, CustomFieldUncheckedCreateInput>
    /**
     * In case the CustomField was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomFieldUpdateInput, CustomFieldUncheckedUpdateInput>
  }

  /**
   * CustomField delete
   */
  export type CustomFieldDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
    /**
     * Filter which CustomField to delete.
     */
    where: CustomFieldWhereUniqueInput
  }

  /**
   * CustomField deleteMany
   */
  export type CustomFieldDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomFields to delete
     */
    where?: CustomFieldWhereInput
  }

  /**
   * CustomField.values
   */
  export type CustomField$valuesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
    where?: CustomFieldValueWhereInput
    orderBy?: CustomFieldValueOrderByWithRelationInput | CustomFieldValueOrderByWithRelationInput[]
    cursor?: CustomFieldValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomFieldValueScalarFieldEnum | CustomFieldValueScalarFieldEnum[]
  }

  /**
   * CustomField without action
   */
  export type CustomFieldDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomField
     */
    select?: CustomFieldSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldInclude<ExtArgs> | null
  }


  /**
   * Model CustomFieldValue
   */

  export type AggregateCustomFieldValue = {
    _count: CustomFieldValueCountAggregateOutputType | null
    _min: CustomFieldValueMinAggregateOutputType | null
    _max: CustomFieldValueMaxAggregateOutputType | null
  }

  export type CustomFieldValueMinAggregateOutputType = {
    id: string | null
    customFieldId: string | null
    entityType: string | null
    entityId: string | null
    fieldValue: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomFieldValueMaxAggregateOutputType = {
    id: string | null
    customFieldId: string | null
    entityType: string | null
    entityId: string | null
    fieldValue: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomFieldValueCountAggregateOutputType = {
    id: number
    customFieldId: number
    entityType: number
    entityId: number
    fieldValue: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CustomFieldValueMinAggregateInputType = {
    id?: true
    customFieldId?: true
    entityType?: true
    entityId?: true
    fieldValue?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomFieldValueMaxAggregateInputType = {
    id?: true
    customFieldId?: true
    entityType?: true
    entityId?: true
    fieldValue?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomFieldValueCountAggregateInputType = {
    id?: true
    customFieldId?: true
    entityType?: true
    entityId?: true
    fieldValue?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CustomFieldValueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomFieldValue to aggregate.
     */
    where?: CustomFieldValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFieldValues to fetch.
     */
    orderBy?: CustomFieldValueOrderByWithRelationInput | CustomFieldValueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomFieldValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFieldValues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFieldValues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CustomFieldValues
    **/
    _count?: true | CustomFieldValueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomFieldValueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomFieldValueMaxAggregateInputType
  }

  export type GetCustomFieldValueAggregateType<T extends CustomFieldValueAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomFieldValue]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomFieldValue[P]>
      : GetScalarType<T[P], AggregateCustomFieldValue[P]>
  }




  export type CustomFieldValueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomFieldValueWhereInput
    orderBy?: CustomFieldValueOrderByWithAggregationInput | CustomFieldValueOrderByWithAggregationInput[]
    by: CustomFieldValueScalarFieldEnum[] | CustomFieldValueScalarFieldEnum
    having?: CustomFieldValueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomFieldValueCountAggregateInputType | true
    _min?: CustomFieldValueMinAggregateInputType
    _max?: CustomFieldValueMaxAggregateInputType
  }

  export type CustomFieldValueGroupByOutputType = {
    id: string
    customFieldId: string
    entityType: string
    entityId: string
    fieldValue: string
    companyId: string
    createdAt: Date
    updatedAt: Date
    _count: CustomFieldValueCountAggregateOutputType | null
    _min: CustomFieldValueMinAggregateOutputType | null
    _max: CustomFieldValueMaxAggregateOutputType | null
  }

  type GetCustomFieldValueGroupByPayload<T extends CustomFieldValueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomFieldValueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomFieldValueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomFieldValueGroupByOutputType[P]>
            : GetScalarType<T[P], CustomFieldValueGroupByOutputType[P]>
        }
      >
    >


  export type CustomFieldValueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customFieldId?: boolean
    entityType?: boolean
    entityId?: boolean
    fieldValue?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customField?: boolean | CustomFieldDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customFieldValue"]>

  export type CustomFieldValueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customFieldId?: boolean
    entityType?: boolean
    entityId?: boolean
    fieldValue?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customField?: boolean | CustomFieldDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customFieldValue"]>

  export type CustomFieldValueSelectScalar = {
    id?: boolean
    customFieldId?: boolean
    entityType?: boolean
    entityId?: boolean
    fieldValue?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CustomFieldValueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customField?: boolean | CustomFieldDefaultArgs<ExtArgs>
  }
  export type CustomFieldValueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customField?: boolean | CustomFieldDefaultArgs<ExtArgs>
  }

  export type $CustomFieldValuePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CustomFieldValue"
    objects: {
      customField: Prisma.$CustomFieldPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      customFieldId: string
      entityType: string
      entityId: string
      fieldValue: string
      companyId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["customFieldValue"]>
    composites: {}
  }

  type CustomFieldValueGetPayload<S extends boolean | null | undefined | CustomFieldValueDefaultArgs> = $Result.GetResult<Prisma.$CustomFieldValuePayload, S>

  type CustomFieldValueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CustomFieldValueFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CustomFieldValueCountAggregateInputType | true
    }

  export interface CustomFieldValueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CustomFieldValue'], meta: { name: 'CustomFieldValue' } }
    /**
     * Find zero or one CustomFieldValue that matches the filter.
     * @param {CustomFieldValueFindUniqueArgs} args - Arguments to find a CustomFieldValue
     * @example
     * // Get one CustomFieldValue
     * const customFieldValue = await prisma.customFieldValue.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomFieldValueFindUniqueArgs>(args: SelectSubset<T, CustomFieldValueFindUniqueArgs<ExtArgs>>): Prisma__CustomFieldValueClient<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CustomFieldValue that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CustomFieldValueFindUniqueOrThrowArgs} args - Arguments to find a CustomFieldValue
     * @example
     * // Get one CustomFieldValue
     * const customFieldValue = await prisma.customFieldValue.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomFieldValueFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomFieldValueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomFieldValueClient<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CustomFieldValue that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldValueFindFirstArgs} args - Arguments to find a CustomFieldValue
     * @example
     * // Get one CustomFieldValue
     * const customFieldValue = await prisma.customFieldValue.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomFieldValueFindFirstArgs>(args?: SelectSubset<T, CustomFieldValueFindFirstArgs<ExtArgs>>): Prisma__CustomFieldValueClient<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CustomFieldValue that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldValueFindFirstOrThrowArgs} args - Arguments to find a CustomFieldValue
     * @example
     * // Get one CustomFieldValue
     * const customFieldValue = await prisma.customFieldValue.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomFieldValueFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomFieldValueFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomFieldValueClient<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CustomFieldValues that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldValueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CustomFieldValues
     * const customFieldValues = await prisma.customFieldValue.findMany()
     * 
     * // Get first 10 CustomFieldValues
     * const customFieldValues = await prisma.customFieldValue.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customFieldValueWithIdOnly = await prisma.customFieldValue.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomFieldValueFindManyArgs>(args?: SelectSubset<T, CustomFieldValueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CustomFieldValue.
     * @param {CustomFieldValueCreateArgs} args - Arguments to create a CustomFieldValue.
     * @example
     * // Create one CustomFieldValue
     * const CustomFieldValue = await prisma.customFieldValue.create({
     *   data: {
     *     // ... data to create a CustomFieldValue
     *   }
     * })
     * 
     */
    create<T extends CustomFieldValueCreateArgs>(args: SelectSubset<T, CustomFieldValueCreateArgs<ExtArgs>>): Prisma__CustomFieldValueClient<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CustomFieldValues.
     * @param {CustomFieldValueCreateManyArgs} args - Arguments to create many CustomFieldValues.
     * @example
     * // Create many CustomFieldValues
     * const customFieldValue = await prisma.customFieldValue.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomFieldValueCreateManyArgs>(args?: SelectSubset<T, CustomFieldValueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CustomFieldValues and returns the data saved in the database.
     * @param {CustomFieldValueCreateManyAndReturnArgs} args - Arguments to create many CustomFieldValues.
     * @example
     * // Create many CustomFieldValues
     * const customFieldValue = await prisma.customFieldValue.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CustomFieldValues and only return the `id`
     * const customFieldValueWithIdOnly = await prisma.customFieldValue.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomFieldValueCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomFieldValueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a CustomFieldValue.
     * @param {CustomFieldValueDeleteArgs} args - Arguments to delete one CustomFieldValue.
     * @example
     * // Delete one CustomFieldValue
     * const CustomFieldValue = await prisma.customFieldValue.delete({
     *   where: {
     *     // ... filter to delete one CustomFieldValue
     *   }
     * })
     * 
     */
    delete<T extends CustomFieldValueDeleteArgs>(args: SelectSubset<T, CustomFieldValueDeleteArgs<ExtArgs>>): Prisma__CustomFieldValueClient<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CustomFieldValue.
     * @param {CustomFieldValueUpdateArgs} args - Arguments to update one CustomFieldValue.
     * @example
     * // Update one CustomFieldValue
     * const customFieldValue = await prisma.customFieldValue.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomFieldValueUpdateArgs>(args: SelectSubset<T, CustomFieldValueUpdateArgs<ExtArgs>>): Prisma__CustomFieldValueClient<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CustomFieldValues.
     * @param {CustomFieldValueDeleteManyArgs} args - Arguments to filter CustomFieldValues to delete.
     * @example
     * // Delete a few CustomFieldValues
     * const { count } = await prisma.customFieldValue.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomFieldValueDeleteManyArgs>(args?: SelectSubset<T, CustomFieldValueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomFieldValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldValueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CustomFieldValues
     * const customFieldValue = await prisma.customFieldValue.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomFieldValueUpdateManyArgs>(args: SelectSubset<T, CustomFieldValueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CustomFieldValue.
     * @param {CustomFieldValueUpsertArgs} args - Arguments to update or create a CustomFieldValue.
     * @example
     * // Update or create a CustomFieldValue
     * const customFieldValue = await prisma.customFieldValue.upsert({
     *   create: {
     *     // ... data to create a CustomFieldValue
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CustomFieldValue we want to update
     *   }
     * })
     */
    upsert<T extends CustomFieldValueUpsertArgs>(args: SelectSubset<T, CustomFieldValueUpsertArgs<ExtArgs>>): Prisma__CustomFieldValueClient<$Result.GetResult<Prisma.$CustomFieldValuePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CustomFieldValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldValueCountArgs} args - Arguments to filter CustomFieldValues to count.
     * @example
     * // Count the number of CustomFieldValues
     * const count = await prisma.customFieldValue.count({
     *   where: {
     *     // ... the filter for the CustomFieldValues we want to count
     *   }
     * })
    **/
    count<T extends CustomFieldValueCountArgs>(
      args?: Subset<T, CustomFieldValueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomFieldValueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CustomFieldValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldValueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomFieldValueAggregateArgs>(args: Subset<T, CustomFieldValueAggregateArgs>): Prisma.PrismaPromise<GetCustomFieldValueAggregateType<T>>

    /**
     * Group by CustomFieldValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldValueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomFieldValueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomFieldValueGroupByArgs['orderBy'] }
        : { orderBy?: CustomFieldValueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomFieldValueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomFieldValueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CustomFieldValue model
   */
  readonly fields: CustomFieldValueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CustomFieldValue.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomFieldValueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customField<T extends CustomFieldDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomFieldDefaultArgs<ExtArgs>>): Prisma__CustomFieldClient<$Result.GetResult<Prisma.$CustomFieldPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CustomFieldValue model
   */ 
  interface CustomFieldValueFieldRefs {
    readonly id: FieldRef<"CustomFieldValue", 'String'>
    readonly customFieldId: FieldRef<"CustomFieldValue", 'String'>
    readonly entityType: FieldRef<"CustomFieldValue", 'String'>
    readonly entityId: FieldRef<"CustomFieldValue", 'String'>
    readonly fieldValue: FieldRef<"CustomFieldValue", 'String'>
    readonly companyId: FieldRef<"CustomFieldValue", 'String'>
    readonly createdAt: FieldRef<"CustomFieldValue", 'DateTime'>
    readonly updatedAt: FieldRef<"CustomFieldValue", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CustomFieldValue findUnique
   */
  export type CustomFieldValueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
    /**
     * Filter, which CustomFieldValue to fetch.
     */
    where: CustomFieldValueWhereUniqueInput
  }

  /**
   * CustomFieldValue findUniqueOrThrow
   */
  export type CustomFieldValueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
    /**
     * Filter, which CustomFieldValue to fetch.
     */
    where: CustomFieldValueWhereUniqueInput
  }

  /**
   * CustomFieldValue findFirst
   */
  export type CustomFieldValueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
    /**
     * Filter, which CustomFieldValue to fetch.
     */
    where?: CustomFieldValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFieldValues to fetch.
     */
    orderBy?: CustomFieldValueOrderByWithRelationInput | CustomFieldValueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomFieldValues.
     */
    cursor?: CustomFieldValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFieldValues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFieldValues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomFieldValues.
     */
    distinct?: CustomFieldValueScalarFieldEnum | CustomFieldValueScalarFieldEnum[]
  }

  /**
   * CustomFieldValue findFirstOrThrow
   */
  export type CustomFieldValueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
    /**
     * Filter, which CustomFieldValue to fetch.
     */
    where?: CustomFieldValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFieldValues to fetch.
     */
    orderBy?: CustomFieldValueOrderByWithRelationInput | CustomFieldValueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomFieldValues.
     */
    cursor?: CustomFieldValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFieldValues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFieldValues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomFieldValues.
     */
    distinct?: CustomFieldValueScalarFieldEnum | CustomFieldValueScalarFieldEnum[]
  }

  /**
   * CustomFieldValue findMany
   */
  export type CustomFieldValueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
    /**
     * Filter, which CustomFieldValues to fetch.
     */
    where?: CustomFieldValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFieldValues to fetch.
     */
    orderBy?: CustomFieldValueOrderByWithRelationInput | CustomFieldValueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CustomFieldValues.
     */
    cursor?: CustomFieldValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFieldValues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFieldValues.
     */
    skip?: number
    distinct?: CustomFieldValueScalarFieldEnum | CustomFieldValueScalarFieldEnum[]
  }

  /**
   * CustomFieldValue create
   */
  export type CustomFieldValueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
    /**
     * The data needed to create a CustomFieldValue.
     */
    data: XOR<CustomFieldValueCreateInput, CustomFieldValueUncheckedCreateInput>
  }

  /**
   * CustomFieldValue createMany
   */
  export type CustomFieldValueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CustomFieldValues.
     */
    data: CustomFieldValueCreateManyInput | CustomFieldValueCreateManyInput[]
  }

  /**
   * CustomFieldValue createManyAndReturn
   */
  export type CustomFieldValueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CustomFieldValues.
     */
    data: CustomFieldValueCreateManyInput | CustomFieldValueCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CustomFieldValue update
   */
  export type CustomFieldValueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
    /**
     * The data needed to update a CustomFieldValue.
     */
    data: XOR<CustomFieldValueUpdateInput, CustomFieldValueUncheckedUpdateInput>
    /**
     * Choose, which CustomFieldValue to update.
     */
    where: CustomFieldValueWhereUniqueInput
  }

  /**
   * CustomFieldValue updateMany
   */
  export type CustomFieldValueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CustomFieldValues.
     */
    data: XOR<CustomFieldValueUpdateManyMutationInput, CustomFieldValueUncheckedUpdateManyInput>
    /**
     * Filter which CustomFieldValues to update
     */
    where?: CustomFieldValueWhereInput
  }

  /**
   * CustomFieldValue upsert
   */
  export type CustomFieldValueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
    /**
     * The filter to search for the CustomFieldValue to update in case it exists.
     */
    where: CustomFieldValueWhereUniqueInput
    /**
     * In case the CustomFieldValue found by the `where` argument doesn't exist, create a new CustomFieldValue with this data.
     */
    create: XOR<CustomFieldValueCreateInput, CustomFieldValueUncheckedCreateInput>
    /**
     * In case the CustomFieldValue was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomFieldValueUpdateInput, CustomFieldValueUncheckedUpdateInput>
  }

  /**
   * CustomFieldValue delete
   */
  export type CustomFieldValueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
    /**
     * Filter which CustomFieldValue to delete.
     */
    where: CustomFieldValueWhereUniqueInput
  }

  /**
   * CustomFieldValue deleteMany
   */
  export type CustomFieldValueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomFieldValues to delete
     */
    where?: CustomFieldValueWhereInput
  }

  /**
   * CustomFieldValue without action
   */
  export type CustomFieldValueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldValue
     */
    select?: CustomFieldValueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldValueInclude<ExtArgs> | null
  }


  /**
   * Model ShipmentSettings
   */

  export type AggregateShipmentSettings = {
    _count: ShipmentSettingsCountAggregateOutputType | null
    _avg: ShipmentSettingsAvgAggregateOutputType | null
    _sum: ShipmentSettingsSumAggregateOutputType | null
    _min: ShipmentSettingsMinAggregateOutputType | null
    _max: ShipmentSettingsMaxAggregateOutputType | null
  }

  export type ShipmentSettingsAvgAggregateOutputType = {
    defaultEstimatedDays: number | null
    lowCapacityThreshold: number | null
    storageRatePerDay: number | null
    storageRatePerBox: number | null
    minimumChargeDays: number | null
    releaseHandlingFee: number | null
    releasePerBoxFee: number | null
    releaseTransportFee: number | null
    storageAlertDays: number | null
    partialReleaseMinBoxes: number | null
  }

  export type ShipmentSettingsSumAggregateOutputType = {
    defaultEstimatedDays: number | null
    lowCapacityThreshold: number | null
    storageRatePerDay: number | null
    storageRatePerBox: number | null
    minimumChargeDays: number | null
    releaseHandlingFee: number | null
    releasePerBoxFee: number | null
    releaseTransportFee: number | null
    storageAlertDays: number | null
    partialReleaseMinBoxes: number | null
  }

  export type ShipmentSettingsMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    requireClientEmail: boolean | null
    requireClientPhone: boolean | null
    requireEstimatedValue: boolean | null
    requirePhotos: boolean | null
    autoGenerateQR: boolean | null
    qrCodePrefix: string | null
    showClientAddress: boolean | null
    requireClientAddress: boolean | null
    showDescription: boolean | null
    requireDescription: boolean | null
    showReferenceId: boolean | null
    requireReferenceId: boolean | null
    showNotes: boolean | null
    requireNotes: boolean | null
    showWarehouseMode: boolean | null
    showShipperDetails: boolean | null
    requireShipperDetails: boolean | null
    showConsigneeDetails: boolean | null
    requireConsigneeDetails: boolean | null
    showWeight: boolean | null
    requireWeight: boolean | null
    showDimensions: boolean | null
    requireDimensions: boolean | null
    showStorageType: boolean | null
    showSpecialInstructions: boolean | null
    showEstimatedDays: boolean | null
    requireEstimatedDays: boolean | null
    defaultEstimatedDays: number | null
    formSectionOrder: string | null
    defaultStorageType: string | null
    allowMultipleRacks: boolean | null
    requireRackAssignment: boolean | null
    autoAssignRack: boolean | null
    notifyOnLowCapacity: boolean | null
    lowCapacityThreshold: number | null
    requireReleaseApproval: boolean | null
    releaseApproverRole: string | null
    requireReleasePhotos: boolean | null
    requireIDVerification: boolean | null
    generateReleaseInvoice: boolean | null
    autoSendInvoiceEmail: boolean | null
    storageRatePerDay: number | null
    storageRatePerBox: number | null
    chargePartialDay: boolean | null
    minimumChargeDays: number | null
    releaseHandlingFee: number | null
    releasePerBoxFee: number | null
    releaseTransportFee: number | null
    notifyClientOnIntake: boolean | null
    notifyClientOnRelease: boolean | null
    notifyOnStorageAlert: boolean | null
    storageAlertDays: number | null
    enableCustomFields: boolean | null
    requiredCustomFields: string | null
    allowPartialRelease: boolean | null
    partialReleaseMinBoxes: number | null
    requirePartialApproval: boolean | null
    requireReleaseSignature: boolean | null
    requireCollectorID: boolean | null
    allowProxyCollection: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ShipmentSettingsMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    requireClientEmail: boolean | null
    requireClientPhone: boolean | null
    requireEstimatedValue: boolean | null
    requirePhotos: boolean | null
    autoGenerateQR: boolean | null
    qrCodePrefix: string | null
    showClientAddress: boolean | null
    requireClientAddress: boolean | null
    showDescription: boolean | null
    requireDescription: boolean | null
    showReferenceId: boolean | null
    requireReferenceId: boolean | null
    showNotes: boolean | null
    requireNotes: boolean | null
    showWarehouseMode: boolean | null
    showShipperDetails: boolean | null
    requireShipperDetails: boolean | null
    showConsigneeDetails: boolean | null
    requireConsigneeDetails: boolean | null
    showWeight: boolean | null
    requireWeight: boolean | null
    showDimensions: boolean | null
    requireDimensions: boolean | null
    showStorageType: boolean | null
    showSpecialInstructions: boolean | null
    showEstimatedDays: boolean | null
    requireEstimatedDays: boolean | null
    defaultEstimatedDays: number | null
    formSectionOrder: string | null
    defaultStorageType: string | null
    allowMultipleRacks: boolean | null
    requireRackAssignment: boolean | null
    autoAssignRack: boolean | null
    notifyOnLowCapacity: boolean | null
    lowCapacityThreshold: number | null
    requireReleaseApproval: boolean | null
    releaseApproverRole: string | null
    requireReleasePhotos: boolean | null
    requireIDVerification: boolean | null
    generateReleaseInvoice: boolean | null
    autoSendInvoiceEmail: boolean | null
    storageRatePerDay: number | null
    storageRatePerBox: number | null
    chargePartialDay: boolean | null
    minimumChargeDays: number | null
    releaseHandlingFee: number | null
    releasePerBoxFee: number | null
    releaseTransportFee: number | null
    notifyClientOnIntake: boolean | null
    notifyClientOnRelease: boolean | null
    notifyOnStorageAlert: boolean | null
    storageAlertDays: number | null
    enableCustomFields: boolean | null
    requiredCustomFields: string | null
    allowPartialRelease: boolean | null
    partialReleaseMinBoxes: number | null
    requirePartialApproval: boolean | null
    requireReleaseSignature: boolean | null
    requireCollectorID: boolean | null
    allowProxyCollection: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ShipmentSettingsCountAggregateOutputType = {
    id: number
    companyId: number
    requireClientEmail: number
    requireClientPhone: number
    requireEstimatedValue: number
    requirePhotos: number
    autoGenerateQR: number
    qrCodePrefix: number
    showClientAddress: number
    requireClientAddress: number
    showDescription: number
    requireDescription: number
    showReferenceId: number
    requireReferenceId: number
    showNotes: number
    requireNotes: number
    showWarehouseMode: number
    showShipperDetails: number
    requireShipperDetails: number
    showConsigneeDetails: number
    requireConsigneeDetails: number
    showWeight: number
    requireWeight: number
    showDimensions: number
    requireDimensions: number
    showStorageType: number
    showSpecialInstructions: number
    showEstimatedDays: number
    requireEstimatedDays: number
    defaultEstimatedDays: number
    formSectionOrder: number
    defaultStorageType: number
    allowMultipleRacks: number
    requireRackAssignment: number
    autoAssignRack: number
    notifyOnLowCapacity: number
    lowCapacityThreshold: number
    requireReleaseApproval: number
    releaseApproverRole: number
    requireReleasePhotos: number
    requireIDVerification: number
    generateReleaseInvoice: number
    autoSendInvoiceEmail: number
    storageRatePerDay: number
    storageRatePerBox: number
    chargePartialDay: number
    minimumChargeDays: number
    releaseHandlingFee: number
    releasePerBoxFee: number
    releaseTransportFee: number
    notifyClientOnIntake: number
    notifyClientOnRelease: number
    notifyOnStorageAlert: number
    storageAlertDays: number
    enableCustomFields: number
    requiredCustomFields: number
    allowPartialRelease: number
    partialReleaseMinBoxes: number
    requirePartialApproval: number
    requireReleaseSignature: number
    requireCollectorID: number
    allowProxyCollection: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ShipmentSettingsAvgAggregateInputType = {
    defaultEstimatedDays?: true
    lowCapacityThreshold?: true
    storageRatePerDay?: true
    storageRatePerBox?: true
    minimumChargeDays?: true
    releaseHandlingFee?: true
    releasePerBoxFee?: true
    releaseTransportFee?: true
    storageAlertDays?: true
    partialReleaseMinBoxes?: true
  }

  export type ShipmentSettingsSumAggregateInputType = {
    defaultEstimatedDays?: true
    lowCapacityThreshold?: true
    storageRatePerDay?: true
    storageRatePerBox?: true
    minimumChargeDays?: true
    releaseHandlingFee?: true
    releasePerBoxFee?: true
    releaseTransportFee?: true
    storageAlertDays?: true
    partialReleaseMinBoxes?: true
  }

  export type ShipmentSettingsMinAggregateInputType = {
    id?: true
    companyId?: true
    requireClientEmail?: true
    requireClientPhone?: true
    requireEstimatedValue?: true
    requirePhotos?: true
    autoGenerateQR?: true
    qrCodePrefix?: true
    showClientAddress?: true
    requireClientAddress?: true
    showDescription?: true
    requireDescription?: true
    showReferenceId?: true
    requireReferenceId?: true
    showNotes?: true
    requireNotes?: true
    showWarehouseMode?: true
    showShipperDetails?: true
    requireShipperDetails?: true
    showConsigneeDetails?: true
    requireConsigneeDetails?: true
    showWeight?: true
    requireWeight?: true
    showDimensions?: true
    requireDimensions?: true
    showStorageType?: true
    showSpecialInstructions?: true
    showEstimatedDays?: true
    requireEstimatedDays?: true
    defaultEstimatedDays?: true
    formSectionOrder?: true
    defaultStorageType?: true
    allowMultipleRacks?: true
    requireRackAssignment?: true
    autoAssignRack?: true
    notifyOnLowCapacity?: true
    lowCapacityThreshold?: true
    requireReleaseApproval?: true
    releaseApproverRole?: true
    requireReleasePhotos?: true
    requireIDVerification?: true
    generateReleaseInvoice?: true
    autoSendInvoiceEmail?: true
    storageRatePerDay?: true
    storageRatePerBox?: true
    chargePartialDay?: true
    minimumChargeDays?: true
    releaseHandlingFee?: true
    releasePerBoxFee?: true
    releaseTransportFee?: true
    notifyClientOnIntake?: true
    notifyClientOnRelease?: true
    notifyOnStorageAlert?: true
    storageAlertDays?: true
    enableCustomFields?: true
    requiredCustomFields?: true
    allowPartialRelease?: true
    partialReleaseMinBoxes?: true
    requirePartialApproval?: true
    requireReleaseSignature?: true
    requireCollectorID?: true
    allowProxyCollection?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ShipmentSettingsMaxAggregateInputType = {
    id?: true
    companyId?: true
    requireClientEmail?: true
    requireClientPhone?: true
    requireEstimatedValue?: true
    requirePhotos?: true
    autoGenerateQR?: true
    qrCodePrefix?: true
    showClientAddress?: true
    requireClientAddress?: true
    showDescription?: true
    requireDescription?: true
    showReferenceId?: true
    requireReferenceId?: true
    showNotes?: true
    requireNotes?: true
    showWarehouseMode?: true
    showShipperDetails?: true
    requireShipperDetails?: true
    showConsigneeDetails?: true
    requireConsigneeDetails?: true
    showWeight?: true
    requireWeight?: true
    showDimensions?: true
    requireDimensions?: true
    showStorageType?: true
    showSpecialInstructions?: true
    showEstimatedDays?: true
    requireEstimatedDays?: true
    defaultEstimatedDays?: true
    formSectionOrder?: true
    defaultStorageType?: true
    allowMultipleRacks?: true
    requireRackAssignment?: true
    autoAssignRack?: true
    notifyOnLowCapacity?: true
    lowCapacityThreshold?: true
    requireReleaseApproval?: true
    releaseApproverRole?: true
    requireReleasePhotos?: true
    requireIDVerification?: true
    generateReleaseInvoice?: true
    autoSendInvoiceEmail?: true
    storageRatePerDay?: true
    storageRatePerBox?: true
    chargePartialDay?: true
    minimumChargeDays?: true
    releaseHandlingFee?: true
    releasePerBoxFee?: true
    releaseTransportFee?: true
    notifyClientOnIntake?: true
    notifyClientOnRelease?: true
    notifyOnStorageAlert?: true
    storageAlertDays?: true
    enableCustomFields?: true
    requiredCustomFields?: true
    allowPartialRelease?: true
    partialReleaseMinBoxes?: true
    requirePartialApproval?: true
    requireReleaseSignature?: true
    requireCollectorID?: true
    allowProxyCollection?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ShipmentSettingsCountAggregateInputType = {
    id?: true
    companyId?: true
    requireClientEmail?: true
    requireClientPhone?: true
    requireEstimatedValue?: true
    requirePhotos?: true
    autoGenerateQR?: true
    qrCodePrefix?: true
    showClientAddress?: true
    requireClientAddress?: true
    showDescription?: true
    requireDescription?: true
    showReferenceId?: true
    requireReferenceId?: true
    showNotes?: true
    requireNotes?: true
    showWarehouseMode?: true
    showShipperDetails?: true
    requireShipperDetails?: true
    showConsigneeDetails?: true
    requireConsigneeDetails?: true
    showWeight?: true
    requireWeight?: true
    showDimensions?: true
    requireDimensions?: true
    showStorageType?: true
    showSpecialInstructions?: true
    showEstimatedDays?: true
    requireEstimatedDays?: true
    defaultEstimatedDays?: true
    formSectionOrder?: true
    defaultStorageType?: true
    allowMultipleRacks?: true
    requireRackAssignment?: true
    autoAssignRack?: true
    notifyOnLowCapacity?: true
    lowCapacityThreshold?: true
    requireReleaseApproval?: true
    releaseApproverRole?: true
    requireReleasePhotos?: true
    requireIDVerification?: true
    generateReleaseInvoice?: true
    autoSendInvoiceEmail?: true
    storageRatePerDay?: true
    storageRatePerBox?: true
    chargePartialDay?: true
    minimumChargeDays?: true
    releaseHandlingFee?: true
    releasePerBoxFee?: true
    releaseTransportFee?: true
    notifyClientOnIntake?: true
    notifyClientOnRelease?: true
    notifyOnStorageAlert?: true
    storageAlertDays?: true
    enableCustomFields?: true
    requiredCustomFields?: true
    allowPartialRelease?: true
    partialReleaseMinBoxes?: true
    requirePartialApproval?: true
    requireReleaseSignature?: true
    requireCollectorID?: true
    allowProxyCollection?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ShipmentSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShipmentSettings to aggregate.
     */
    where?: ShipmentSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentSettings to fetch.
     */
    orderBy?: ShipmentSettingsOrderByWithRelationInput | ShipmentSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShipmentSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShipmentSettings
    **/
    _count?: true | ShipmentSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShipmentSettingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShipmentSettingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShipmentSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShipmentSettingsMaxAggregateInputType
  }

  export type GetShipmentSettingsAggregateType<T extends ShipmentSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateShipmentSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShipmentSettings[P]>
      : GetScalarType<T[P], AggregateShipmentSettings[P]>
  }




  export type ShipmentSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShipmentSettingsWhereInput
    orderBy?: ShipmentSettingsOrderByWithAggregationInput | ShipmentSettingsOrderByWithAggregationInput[]
    by: ShipmentSettingsScalarFieldEnum[] | ShipmentSettingsScalarFieldEnum
    having?: ShipmentSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShipmentSettingsCountAggregateInputType | true
    _avg?: ShipmentSettingsAvgAggregateInputType
    _sum?: ShipmentSettingsSumAggregateInputType
    _min?: ShipmentSettingsMinAggregateInputType
    _max?: ShipmentSettingsMaxAggregateInputType
  }

  export type ShipmentSettingsGroupByOutputType = {
    id: string
    companyId: string
    requireClientEmail: boolean
    requireClientPhone: boolean
    requireEstimatedValue: boolean
    requirePhotos: boolean
    autoGenerateQR: boolean
    qrCodePrefix: string
    showClientAddress: boolean
    requireClientAddress: boolean
    showDescription: boolean
    requireDescription: boolean
    showReferenceId: boolean
    requireReferenceId: boolean
    showNotes: boolean
    requireNotes: boolean
    showWarehouseMode: boolean
    showShipperDetails: boolean
    requireShipperDetails: boolean
    showConsigneeDetails: boolean
    requireConsigneeDetails: boolean
    showWeight: boolean
    requireWeight: boolean
    showDimensions: boolean
    requireDimensions: boolean
    showStorageType: boolean
    showSpecialInstructions: boolean
    showEstimatedDays: boolean
    requireEstimatedDays: boolean
    defaultEstimatedDays: number
    formSectionOrder: string | null
    defaultStorageType: string
    allowMultipleRacks: boolean
    requireRackAssignment: boolean
    autoAssignRack: boolean
    notifyOnLowCapacity: boolean
    lowCapacityThreshold: number
    requireReleaseApproval: boolean
    releaseApproverRole: string
    requireReleasePhotos: boolean
    requireIDVerification: boolean
    generateReleaseInvoice: boolean
    autoSendInvoiceEmail: boolean
    storageRatePerDay: number
    storageRatePerBox: number
    chargePartialDay: boolean
    minimumChargeDays: number
    releaseHandlingFee: number
    releasePerBoxFee: number
    releaseTransportFee: number
    notifyClientOnIntake: boolean
    notifyClientOnRelease: boolean
    notifyOnStorageAlert: boolean
    storageAlertDays: number
    enableCustomFields: boolean
    requiredCustomFields: string | null
    allowPartialRelease: boolean
    partialReleaseMinBoxes: number
    requirePartialApproval: boolean
    requireReleaseSignature: boolean
    requireCollectorID: boolean
    allowProxyCollection: boolean
    createdAt: Date
    updatedAt: Date
    _count: ShipmentSettingsCountAggregateOutputType | null
    _avg: ShipmentSettingsAvgAggregateOutputType | null
    _sum: ShipmentSettingsSumAggregateOutputType | null
    _min: ShipmentSettingsMinAggregateOutputType | null
    _max: ShipmentSettingsMaxAggregateOutputType | null
  }

  type GetShipmentSettingsGroupByPayload<T extends ShipmentSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShipmentSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShipmentSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShipmentSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], ShipmentSettingsGroupByOutputType[P]>
        }
      >
    >


  export type ShipmentSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    requireClientEmail?: boolean
    requireClientPhone?: boolean
    requireEstimatedValue?: boolean
    requirePhotos?: boolean
    autoGenerateQR?: boolean
    qrCodePrefix?: boolean
    showClientAddress?: boolean
    requireClientAddress?: boolean
    showDescription?: boolean
    requireDescription?: boolean
    showReferenceId?: boolean
    requireReferenceId?: boolean
    showNotes?: boolean
    requireNotes?: boolean
    showWarehouseMode?: boolean
    showShipperDetails?: boolean
    requireShipperDetails?: boolean
    showConsigneeDetails?: boolean
    requireConsigneeDetails?: boolean
    showWeight?: boolean
    requireWeight?: boolean
    showDimensions?: boolean
    requireDimensions?: boolean
    showStorageType?: boolean
    showSpecialInstructions?: boolean
    showEstimatedDays?: boolean
    requireEstimatedDays?: boolean
    defaultEstimatedDays?: boolean
    formSectionOrder?: boolean
    defaultStorageType?: boolean
    allowMultipleRacks?: boolean
    requireRackAssignment?: boolean
    autoAssignRack?: boolean
    notifyOnLowCapacity?: boolean
    lowCapacityThreshold?: boolean
    requireReleaseApproval?: boolean
    releaseApproverRole?: boolean
    requireReleasePhotos?: boolean
    requireIDVerification?: boolean
    generateReleaseInvoice?: boolean
    autoSendInvoiceEmail?: boolean
    storageRatePerDay?: boolean
    storageRatePerBox?: boolean
    chargePartialDay?: boolean
    minimumChargeDays?: boolean
    releaseHandlingFee?: boolean
    releasePerBoxFee?: boolean
    releaseTransportFee?: boolean
    notifyClientOnIntake?: boolean
    notifyClientOnRelease?: boolean
    notifyOnStorageAlert?: boolean
    storageAlertDays?: boolean
    enableCustomFields?: boolean
    requiredCustomFields?: boolean
    allowPartialRelease?: boolean
    partialReleaseMinBoxes?: boolean
    requirePartialApproval?: boolean
    requireReleaseSignature?: boolean
    requireCollectorID?: boolean
    allowProxyCollection?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentSettings"]>

  export type ShipmentSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    requireClientEmail?: boolean
    requireClientPhone?: boolean
    requireEstimatedValue?: boolean
    requirePhotos?: boolean
    autoGenerateQR?: boolean
    qrCodePrefix?: boolean
    showClientAddress?: boolean
    requireClientAddress?: boolean
    showDescription?: boolean
    requireDescription?: boolean
    showReferenceId?: boolean
    requireReferenceId?: boolean
    showNotes?: boolean
    requireNotes?: boolean
    showWarehouseMode?: boolean
    showShipperDetails?: boolean
    requireShipperDetails?: boolean
    showConsigneeDetails?: boolean
    requireConsigneeDetails?: boolean
    showWeight?: boolean
    requireWeight?: boolean
    showDimensions?: boolean
    requireDimensions?: boolean
    showStorageType?: boolean
    showSpecialInstructions?: boolean
    showEstimatedDays?: boolean
    requireEstimatedDays?: boolean
    defaultEstimatedDays?: boolean
    formSectionOrder?: boolean
    defaultStorageType?: boolean
    allowMultipleRacks?: boolean
    requireRackAssignment?: boolean
    autoAssignRack?: boolean
    notifyOnLowCapacity?: boolean
    lowCapacityThreshold?: boolean
    requireReleaseApproval?: boolean
    releaseApproverRole?: boolean
    requireReleasePhotos?: boolean
    requireIDVerification?: boolean
    generateReleaseInvoice?: boolean
    autoSendInvoiceEmail?: boolean
    storageRatePerDay?: boolean
    storageRatePerBox?: boolean
    chargePartialDay?: boolean
    minimumChargeDays?: boolean
    releaseHandlingFee?: boolean
    releasePerBoxFee?: boolean
    releaseTransportFee?: boolean
    notifyClientOnIntake?: boolean
    notifyClientOnRelease?: boolean
    notifyOnStorageAlert?: boolean
    storageAlertDays?: boolean
    enableCustomFields?: boolean
    requiredCustomFields?: boolean
    allowPartialRelease?: boolean
    partialReleaseMinBoxes?: boolean
    requirePartialApproval?: boolean
    requireReleaseSignature?: boolean
    requireCollectorID?: boolean
    allowProxyCollection?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shipmentSettings"]>

  export type ShipmentSettingsSelectScalar = {
    id?: boolean
    companyId?: boolean
    requireClientEmail?: boolean
    requireClientPhone?: boolean
    requireEstimatedValue?: boolean
    requirePhotos?: boolean
    autoGenerateQR?: boolean
    qrCodePrefix?: boolean
    showClientAddress?: boolean
    requireClientAddress?: boolean
    showDescription?: boolean
    requireDescription?: boolean
    showReferenceId?: boolean
    requireReferenceId?: boolean
    showNotes?: boolean
    requireNotes?: boolean
    showWarehouseMode?: boolean
    showShipperDetails?: boolean
    requireShipperDetails?: boolean
    showConsigneeDetails?: boolean
    requireConsigneeDetails?: boolean
    showWeight?: boolean
    requireWeight?: boolean
    showDimensions?: boolean
    requireDimensions?: boolean
    showStorageType?: boolean
    showSpecialInstructions?: boolean
    showEstimatedDays?: boolean
    requireEstimatedDays?: boolean
    defaultEstimatedDays?: boolean
    formSectionOrder?: boolean
    defaultStorageType?: boolean
    allowMultipleRacks?: boolean
    requireRackAssignment?: boolean
    autoAssignRack?: boolean
    notifyOnLowCapacity?: boolean
    lowCapacityThreshold?: boolean
    requireReleaseApproval?: boolean
    releaseApproverRole?: boolean
    requireReleasePhotos?: boolean
    requireIDVerification?: boolean
    generateReleaseInvoice?: boolean
    autoSendInvoiceEmail?: boolean
    storageRatePerDay?: boolean
    storageRatePerBox?: boolean
    chargePartialDay?: boolean
    minimumChargeDays?: boolean
    releaseHandlingFee?: boolean
    releasePerBoxFee?: boolean
    releaseTransportFee?: boolean
    notifyClientOnIntake?: boolean
    notifyClientOnRelease?: boolean
    notifyOnStorageAlert?: boolean
    storageAlertDays?: boolean
    enableCustomFields?: boolean
    requiredCustomFields?: boolean
    allowPartialRelease?: boolean
    partialReleaseMinBoxes?: boolean
    requirePartialApproval?: boolean
    requireReleaseSignature?: boolean
    requireCollectorID?: boolean
    allowProxyCollection?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ShipmentSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type ShipmentSettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $ShipmentSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShipmentSettings"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      requireClientEmail: boolean
      requireClientPhone: boolean
      requireEstimatedValue: boolean
      requirePhotos: boolean
      autoGenerateQR: boolean
      qrCodePrefix: string
      showClientAddress: boolean
      requireClientAddress: boolean
      showDescription: boolean
      requireDescription: boolean
      showReferenceId: boolean
      requireReferenceId: boolean
      showNotes: boolean
      requireNotes: boolean
      showWarehouseMode: boolean
      showShipperDetails: boolean
      requireShipperDetails: boolean
      showConsigneeDetails: boolean
      requireConsigneeDetails: boolean
      showWeight: boolean
      requireWeight: boolean
      showDimensions: boolean
      requireDimensions: boolean
      showStorageType: boolean
      showSpecialInstructions: boolean
      showEstimatedDays: boolean
      requireEstimatedDays: boolean
      defaultEstimatedDays: number
      formSectionOrder: string | null
      defaultStorageType: string
      allowMultipleRacks: boolean
      requireRackAssignment: boolean
      autoAssignRack: boolean
      notifyOnLowCapacity: boolean
      lowCapacityThreshold: number
      requireReleaseApproval: boolean
      releaseApproverRole: string
      requireReleasePhotos: boolean
      requireIDVerification: boolean
      generateReleaseInvoice: boolean
      autoSendInvoiceEmail: boolean
      storageRatePerDay: number
      storageRatePerBox: number
      chargePartialDay: boolean
      minimumChargeDays: number
      releaseHandlingFee: number
      releasePerBoxFee: number
      releaseTransportFee: number
      notifyClientOnIntake: boolean
      notifyClientOnRelease: boolean
      notifyOnStorageAlert: boolean
      storageAlertDays: number
      enableCustomFields: boolean
      requiredCustomFields: string | null
      allowPartialRelease: boolean
      partialReleaseMinBoxes: number
      requirePartialApproval: boolean
      requireReleaseSignature: boolean
      requireCollectorID: boolean
      allowProxyCollection: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["shipmentSettings"]>
    composites: {}
  }

  type ShipmentSettingsGetPayload<S extends boolean | null | undefined | ShipmentSettingsDefaultArgs> = $Result.GetResult<Prisma.$ShipmentSettingsPayload, S>

  type ShipmentSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ShipmentSettingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ShipmentSettingsCountAggregateInputType | true
    }

  export interface ShipmentSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShipmentSettings'], meta: { name: 'ShipmentSettings' } }
    /**
     * Find zero or one ShipmentSettings that matches the filter.
     * @param {ShipmentSettingsFindUniqueArgs} args - Arguments to find a ShipmentSettings
     * @example
     * // Get one ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShipmentSettingsFindUniqueArgs>(args: SelectSubset<T, ShipmentSettingsFindUniqueArgs<ExtArgs>>): Prisma__ShipmentSettingsClient<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ShipmentSettings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ShipmentSettingsFindUniqueOrThrowArgs} args - Arguments to find a ShipmentSettings
     * @example
     * // Get one ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShipmentSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, ShipmentSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShipmentSettingsClient<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ShipmentSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentSettingsFindFirstArgs} args - Arguments to find a ShipmentSettings
     * @example
     * // Get one ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShipmentSettingsFindFirstArgs>(args?: SelectSubset<T, ShipmentSettingsFindFirstArgs<ExtArgs>>): Prisma__ShipmentSettingsClient<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ShipmentSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentSettingsFindFirstOrThrowArgs} args - Arguments to find a ShipmentSettings
     * @example
     * // Get one ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShipmentSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, ShipmentSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShipmentSettingsClient<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ShipmentSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.findMany()
     * 
     * // Get first 10 ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shipmentSettingsWithIdOnly = await prisma.shipmentSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShipmentSettingsFindManyArgs>(args?: SelectSubset<T, ShipmentSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ShipmentSettings.
     * @param {ShipmentSettingsCreateArgs} args - Arguments to create a ShipmentSettings.
     * @example
     * // Create one ShipmentSettings
     * const ShipmentSettings = await prisma.shipmentSettings.create({
     *   data: {
     *     // ... data to create a ShipmentSettings
     *   }
     * })
     * 
     */
    create<T extends ShipmentSettingsCreateArgs>(args: SelectSubset<T, ShipmentSettingsCreateArgs<ExtArgs>>): Prisma__ShipmentSettingsClient<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ShipmentSettings.
     * @param {ShipmentSettingsCreateManyArgs} args - Arguments to create many ShipmentSettings.
     * @example
     * // Create many ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShipmentSettingsCreateManyArgs>(args?: SelectSubset<T, ShipmentSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ShipmentSettings and returns the data saved in the database.
     * @param {ShipmentSettingsCreateManyAndReturnArgs} args - Arguments to create many ShipmentSettings.
     * @example
     * // Create many ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ShipmentSettings and only return the `id`
     * const shipmentSettingsWithIdOnly = await prisma.shipmentSettings.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShipmentSettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, ShipmentSettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ShipmentSettings.
     * @param {ShipmentSettingsDeleteArgs} args - Arguments to delete one ShipmentSettings.
     * @example
     * // Delete one ShipmentSettings
     * const ShipmentSettings = await prisma.shipmentSettings.delete({
     *   where: {
     *     // ... filter to delete one ShipmentSettings
     *   }
     * })
     * 
     */
    delete<T extends ShipmentSettingsDeleteArgs>(args: SelectSubset<T, ShipmentSettingsDeleteArgs<ExtArgs>>): Prisma__ShipmentSettingsClient<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ShipmentSettings.
     * @param {ShipmentSettingsUpdateArgs} args - Arguments to update one ShipmentSettings.
     * @example
     * // Update one ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShipmentSettingsUpdateArgs>(args: SelectSubset<T, ShipmentSettingsUpdateArgs<ExtArgs>>): Prisma__ShipmentSettingsClient<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ShipmentSettings.
     * @param {ShipmentSettingsDeleteManyArgs} args - Arguments to filter ShipmentSettings to delete.
     * @example
     * // Delete a few ShipmentSettings
     * const { count } = await prisma.shipmentSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShipmentSettingsDeleteManyArgs>(args?: SelectSubset<T, ShipmentSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShipmentSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShipmentSettingsUpdateManyArgs>(args: SelectSubset<T, ShipmentSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ShipmentSettings.
     * @param {ShipmentSettingsUpsertArgs} args - Arguments to update or create a ShipmentSettings.
     * @example
     * // Update or create a ShipmentSettings
     * const shipmentSettings = await prisma.shipmentSettings.upsert({
     *   create: {
     *     // ... data to create a ShipmentSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShipmentSettings we want to update
     *   }
     * })
     */
    upsert<T extends ShipmentSettingsUpsertArgs>(args: SelectSubset<T, ShipmentSettingsUpsertArgs<ExtArgs>>): Prisma__ShipmentSettingsClient<$Result.GetResult<Prisma.$ShipmentSettingsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ShipmentSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentSettingsCountArgs} args - Arguments to filter ShipmentSettings to count.
     * @example
     * // Count the number of ShipmentSettings
     * const count = await prisma.shipmentSettings.count({
     *   where: {
     *     // ... the filter for the ShipmentSettings we want to count
     *   }
     * })
    **/
    count<T extends ShipmentSettingsCountArgs>(
      args?: Subset<T, ShipmentSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShipmentSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShipmentSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShipmentSettingsAggregateArgs>(args: Subset<T, ShipmentSettingsAggregateArgs>): Prisma.PrismaPromise<GetShipmentSettingsAggregateType<T>>

    /**
     * Group by ShipmentSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShipmentSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShipmentSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShipmentSettingsGroupByArgs['orderBy'] }
        : { orderBy?: ShipmentSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShipmentSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipmentSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShipmentSettings model
   */
  readonly fields: ShipmentSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShipmentSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShipmentSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ShipmentSettings model
   */ 
  interface ShipmentSettingsFieldRefs {
    readonly id: FieldRef<"ShipmentSettings", 'String'>
    readonly companyId: FieldRef<"ShipmentSettings", 'String'>
    readonly requireClientEmail: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireClientPhone: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireEstimatedValue: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requirePhotos: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly autoGenerateQR: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly qrCodePrefix: FieldRef<"ShipmentSettings", 'String'>
    readonly showClientAddress: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireClientAddress: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showDescription: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireDescription: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showReferenceId: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireReferenceId: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showNotes: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireNotes: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showWarehouseMode: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showShipperDetails: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireShipperDetails: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showConsigneeDetails: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireConsigneeDetails: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showWeight: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireWeight: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showDimensions: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireDimensions: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showStorageType: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showSpecialInstructions: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly showEstimatedDays: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireEstimatedDays: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly defaultEstimatedDays: FieldRef<"ShipmentSettings", 'Int'>
    readonly formSectionOrder: FieldRef<"ShipmentSettings", 'String'>
    readonly defaultStorageType: FieldRef<"ShipmentSettings", 'String'>
    readonly allowMultipleRacks: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireRackAssignment: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly autoAssignRack: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly notifyOnLowCapacity: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly lowCapacityThreshold: FieldRef<"ShipmentSettings", 'Int'>
    readonly requireReleaseApproval: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly releaseApproverRole: FieldRef<"ShipmentSettings", 'String'>
    readonly requireReleasePhotos: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireIDVerification: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly generateReleaseInvoice: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly autoSendInvoiceEmail: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly storageRatePerDay: FieldRef<"ShipmentSettings", 'Float'>
    readonly storageRatePerBox: FieldRef<"ShipmentSettings", 'Float'>
    readonly chargePartialDay: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly minimumChargeDays: FieldRef<"ShipmentSettings", 'Int'>
    readonly releaseHandlingFee: FieldRef<"ShipmentSettings", 'Float'>
    readonly releasePerBoxFee: FieldRef<"ShipmentSettings", 'Float'>
    readonly releaseTransportFee: FieldRef<"ShipmentSettings", 'Float'>
    readonly notifyClientOnIntake: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly notifyClientOnRelease: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly notifyOnStorageAlert: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly storageAlertDays: FieldRef<"ShipmentSettings", 'Int'>
    readonly enableCustomFields: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requiredCustomFields: FieldRef<"ShipmentSettings", 'String'>
    readonly allowPartialRelease: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly partialReleaseMinBoxes: FieldRef<"ShipmentSettings", 'Int'>
    readonly requirePartialApproval: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireReleaseSignature: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly requireCollectorID: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly allowProxyCollection: FieldRef<"ShipmentSettings", 'Boolean'>
    readonly createdAt: FieldRef<"ShipmentSettings", 'DateTime'>
    readonly updatedAt: FieldRef<"ShipmentSettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ShipmentSettings findUnique
   */
  export type ShipmentSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentSettings to fetch.
     */
    where: ShipmentSettingsWhereUniqueInput
  }

  /**
   * ShipmentSettings findUniqueOrThrow
   */
  export type ShipmentSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentSettings to fetch.
     */
    where: ShipmentSettingsWhereUniqueInput
  }

  /**
   * ShipmentSettings findFirst
   */
  export type ShipmentSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentSettings to fetch.
     */
    where?: ShipmentSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentSettings to fetch.
     */
    orderBy?: ShipmentSettingsOrderByWithRelationInput | ShipmentSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShipmentSettings.
     */
    cursor?: ShipmentSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShipmentSettings.
     */
    distinct?: ShipmentSettingsScalarFieldEnum | ShipmentSettingsScalarFieldEnum[]
  }

  /**
   * ShipmentSettings findFirstOrThrow
   */
  export type ShipmentSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentSettings to fetch.
     */
    where?: ShipmentSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentSettings to fetch.
     */
    orderBy?: ShipmentSettingsOrderByWithRelationInput | ShipmentSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShipmentSettings.
     */
    cursor?: ShipmentSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShipmentSettings.
     */
    distinct?: ShipmentSettingsScalarFieldEnum | ShipmentSettingsScalarFieldEnum[]
  }

  /**
   * ShipmentSettings findMany
   */
  export type ShipmentSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
    /**
     * Filter, which ShipmentSettings to fetch.
     */
    where?: ShipmentSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShipmentSettings to fetch.
     */
    orderBy?: ShipmentSettingsOrderByWithRelationInput | ShipmentSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShipmentSettings.
     */
    cursor?: ShipmentSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShipmentSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShipmentSettings.
     */
    skip?: number
    distinct?: ShipmentSettingsScalarFieldEnum | ShipmentSettingsScalarFieldEnum[]
  }

  /**
   * ShipmentSettings create
   */
  export type ShipmentSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a ShipmentSettings.
     */
    data: XOR<ShipmentSettingsCreateInput, ShipmentSettingsUncheckedCreateInput>
  }

  /**
   * ShipmentSettings createMany
   */
  export type ShipmentSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShipmentSettings.
     */
    data: ShipmentSettingsCreateManyInput | ShipmentSettingsCreateManyInput[]
  }

  /**
   * ShipmentSettings createManyAndReturn
   */
  export type ShipmentSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ShipmentSettings.
     */
    data: ShipmentSettingsCreateManyInput | ShipmentSettingsCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShipmentSettings update
   */
  export type ShipmentSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a ShipmentSettings.
     */
    data: XOR<ShipmentSettingsUpdateInput, ShipmentSettingsUncheckedUpdateInput>
    /**
     * Choose, which ShipmentSettings to update.
     */
    where: ShipmentSettingsWhereUniqueInput
  }

  /**
   * ShipmentSettings updateMany
   */
  export type ShipmentSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShipmentSettings.
     */
    data: XOR<ShipmentSettingsUpdateManyMutationInput, ShipmentSettingsUncheckedUpdateManyInput>
    /**
     * Filter which ShipmentSettings to update
     */
    where?: ShipmentSettingsWhereInput
  }

  /**
   * ShipmentSettings upsert
   */
  export type ShipmentSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the ShipmentSettings to update in case it exists.
     */
    where: ShipmentSettingsWhereUniqueInput
    /**
     * In case the ShipmentSettings found by the `where` argument doesn't exist, create a new ShipmentSettings with this data.
     */
    create: XOR<ShipmentSettingsCreateInput, ShipmentSettingsUncheckedCreateInput>
    /**
     * In case the ShipmentSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShipmentSettingsUpdateInput, ShipmentSettingsUncheckedUpdateInput>
  }

  /**
   * ShipmentSettings delete
   */
  export type ShipmentSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
    /**
     * Filter which ShipmentSettings to delete.
     */
    where: ShipmentSettingsWhereUniqueInput
  }

  /**
   * ShipmentSettings deleteMany
   */
  export type ShipmentSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShipmentSettings to delete
     */
    where?: ShipmentSettingsWhereInput
  }

  /**
   * ShipmentSettings without action
   */
  export type ShipmentSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShipmentSettings
     */
    select?: ShipmentSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShipmentSettingsInclude<ExtArgs> | null
  }


  /**
   * Model TemplateSettings
   */

  export type AggregateTemplateSettings = {
    _count: TemplateSettingsCountAggregateOutputType | null
    _avg: TemplateSettingsAvgAggregateOutputType | null
    _sum: TemplateSettingsSumAggregateOutputType | null
    _min: TemplateSettingsMinAggregateOutputType | null
    _max: TemplateSettingsMaxAggregateOutputType | null
  }

  export type TemplateSettingsAvgAggregateOutputType = {
    printMarginTop: number | null
    printMarginBottom: number | null
    printMarginLeft: number | null
    printMarginRight: number | null
    signatureHeight: number | null
    qrCodeSize: number | null
    watermarkOpacity: number | null
  }

  export type TemplateSettingsSumAggregateOutputType = {
    printMarginTop: number | null
    printMarginBottom: number | null
    printMarginLeft: number | null
    printMarginRight: number | null
    signatureHeight: number | null
    qrCodeSize: number | null
    watermarkOpacity: number | null
  }

  export type TemplateSettingsMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    companyName: string | null
    companyLogo: string | null
    companyAddress: string | null
    companyPhone: string | null
    companyEmail: string | null
    companyWebsite: string | null
    companyLicense: string | null
    invoiceTemplateType: string | null
    invoiceTitle: string | null
    invoiceShowLogo: boolean | null
    invoiceShowAddress: boolean | null
    invoiceShowPhone: boolean | null
    invoiceShowEmail: boolean | null
    invoiceShowWebsite: boolean | null
    invoiceShowLicense: boolean | null
    invoiceShowFooter: boolean | null
    invoiceHeaderBg: string | null
    invoiceHeaderText: string | null
    invoiceFooterText: string | null
    invoiceTerms: string | null
    invoiceShowBorders: boolean | null
    invoiceShowGrid: boolean | null
    invoiceTableStyle: string | null
    invoiceFontSize: string | null
    invoicePaperSize: string | null
    invoicePrimaryColor: string | null
    invoiceSecondaryColor: string | null
    invoiceAccentColor: string | null
    invoiceDangerColor: string | null
    releaseNoteTemplate: string | null
    releaseNoteTitle: string | null
    releaseNoteHeaderBg: string | null
    releaseNoteShowLogo: boolean | null
    releaseShowShipment: boolean | null
    releaseShowStorage: boolean | null
    releaseShowItems: boolean | null
    releaseShowCollector: boolean | null
    releaseShowCharges: boolean | null
    releaseShowPhotos: boolean | null
    releaseShowTerms: boolean | null
    releaseShowSignatures: boolean | null
    releaseTerms: string | null
    releaseFooterText: string | null
    releasePrimaryColor: string | null
    printMarginTop: number | null
    printMarginBottom: number | null
    printMarginLeft: number | null
    printMarginRight: number | null
    language: string | null
    dateFormat: string | null
    timeFormat: string | null
    currencySymbol: string | null
    currencyPosition: string | null
    customField1Label: string | null
    customField1Value: string | null
    customField2Label: string | null
    customField2Value: string | null
    customField3Label: string | null
    customField3Value: string | null
    requireStaffSignature: boolean | null
    requireClientSignature: boolean | null
    signatureHeight: number | null
    showQRCode: boolean | null
    qrCodePosition: string | null
    qrCodeSize: number | null
    showWatermark: boolean | null
    watermarkText: string | null
    watermarkOpacity: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TemplateSettingsMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    companyName: string | null
    companyLogo: string | null
    companyAddress: string | null
    companyPhone: string | null
    companyEmail: string | null
    companyWebsite: string | null
    companyLicense: string | null
    invoiceTemplateType: string | null
    invoiceTitle: string | null
    invoiceShowLogo: boolean | null
    invoiceShowAddress: boolean | null
    invoiceShowPhone: boolean | null
    invoiceShowEmail: boolean | null
    invoiceShowWebsite: boolean | null
    invoiceShowLicense: boolean | null
    invoiceShowFooter: boolean | null
    invoiceHeaderBg: string | null
    invoiceHeaderText: string | null
    invoiceFooterText: string | null
    invoiceTerms: string | null
    invoiceShowBorders: boolean | null
    invoiceShowGrid: boolean | null
    invoiceTableStyle: string | null
    invoiceFontSize: string | null
    invoicePaperSize: string | null
    invoicePrimaryColor: string | null
    invoiceSecondaryColor: string | null
    invoiceAccentColor: string | null
    invoiceDangerColor: string | null
    releaseNoteTemplate: string | null
    releaseNoteTitle: string | null
    releaseNoteHeaderBg: string | null
    releaseNoteShowLogo: boolean | null
    releaseShowShipment: boolean | null
    releaseShowStorage: boolean | null
    releaseShowItems: boolean | null
    releaseShowCollector: boolean | null
    releaseShowCharges: boolean | null
    releaseShowPhotos: boolean | null
    releaseShowTerms: boolean | null
    releaseShowSignatures: boolean | null
    releaseTerms: string | null
    releaseFooterText: string | null
    releasePrimaryColor: string | null
    printMarginTop: number | null
    printMarginBottom: number | null
    printMarginLeft: number | null
    printMarginRight: number | null
    language: string | null
    dateFormat: string | null
    timeFormat: string | null
    currencySymbol: string | null
    currencyPosition: string | null
    customField1Label: string | null
    customField1Value: string | null
    customField2Label: string | null
    customField2Value: string | null
    customField3Label: string | null
    customField3Value: string | null
    requireStaffSignature: boolean | null
    requireClientSignature: boolean | null
    signatureHeight: number | null
    showQRCode: boolean | null
    qrCodePosition: string | null
    qrCodeSize: number | null
    showWatermark: boolean | null
    watermarkText: string | null
    watermarkOpacity: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TemplateSettingsCountAggregateOutputType = {
    id: number
    companyId: number
    companyName: number
    companyLogo: number
    companyAddress: number
    companyPhone: number
    companyEmail: number
    companyWebsite: number
    companyLicense: number
    invoiceTemplateType: number
    invoiceTitle: number
    invoiceShowLogo: number
    invoiceShowAddress: number
    invoiceShowPhone: number
    invoiceShowEmail: number
    invoiceShowWebsite: number
    invoiceShowLicense: number
    invoiceShowFooter: number
    invoiceHeaderBg: number
    invoiceHeaderText: number
    invoiceFooterText: number
    invoiceTerms: number
    invoiceShowBorders: number
    invoiceShowGrid: number
    invoiceTableStyle: number
    invoiceFontSize: number
    invoicePaperSize: number
    invoicePrimaryColor: number
    invoiceSecondaryColor: number
    invoiceAccentColor: number
    invoiceDangerColor: number
    releaseNoteTemplate: number
    releaseNoteTitle: number
    releaseNoteHeaderBg: number
    releaseNoteShowLogo: number
    releaseShowShipment: number
    releaseShowStorage: number
    releaseShowItems: number
    releaseShowCollector: number
    releaseShowCharges: number
    releaseShowPhotos: number
    releaseShowTerms: number
    releaseShowSignatures: number
    releaseTerms: number
    releaseFooterText: number
    releasePrimaryColor: number
    printMarginTop: number
    printMarginBottom: number
    printMarginLeft: number
    printMarginRight: number
    language: number
    dateFormat: number
    timeFormat: number
    currencySymbol: number
    currencyPosition: number
    customField1Label: number
    customField1Value: number
    customField2Label: number
    customField2Value: number
    customField3Label: number
    customField3Value: number
    requireStaffSignature: number
    requireClientSignature: number
    signatureHeight: number
    showQRCode: number
    qrCodePosition: number
    qrCodeSize: number
    showWatermark: number
    watermarkText: number
    watermarkOpacity: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TemplateSettingsAvgAggregateInputType = {
    printMarginTop?: true
    printMarginBottom?: true
    printMarginLeft?: true
    printMarginRight?: true
    signatureHeight?: true
    qrCodeSize?: true
    watermarkOpacity?: true
  }

  export type TemplateSettingsSumAggregateInputType = {
    printMarginTop?: true
    printMarginBottom?: true
    printMarginLeft?: true
    printMarginRight?: true
    signatureHeight?: true
    qrCodeSize?: true
    watermarkOpacity?: true
  }

  export type TemplateSettingsMinAggregateInputType = {
    id?: true
    companyId?: true
    companyName?: true
    companyLogo?: true
    companyAddress?: true
    companyPhone?: true
    companyEmail?: true
    companyWebsite?: true
    companyLicense?: true
    invoiceTemplateType?: true
    invoiceTitle?: true
    invoiceShowLogo?: true
    invoiceShowAddress?: true
    invoiceShowPhone?: true
    invoiceShowEmail?: true
    invoiceShowWebsite?: true
    invoiceShowLicense?: true
    invoiceShowFooter?: true
    invoiceHeaderBg?: true
    invoiceHeaderText?: true
    invoiceFooterText?: true
    invoiceTerms?: true
    invoiceShowBorders?: true
    invoiceShowGrid?: true
    invoiceTableStyle?: true
    invoiceFontSize?: true
    invoicePaperSize?: true
    invoicePrimaryColor?: true
    invoiceSecondaryColor?: true
    invoiceAccentColor?: true
    invoiceDangerColor?: true
    releaseNoteTemplate?: true
    releaseNoteTitle?: true
    releaseNoteHeaderBg?: true
    releaseNoteShowLogo?: true
    releaseShowShipment?: true
    releaseShowStorage?: true
    releaseShowItems?: true
    releaseShowCollector?: true
    releaseShowCharges?: true
    releaseShowPhotos?: true
    releaseShowTerms?: true
    releaseShowSignatures?: true
    releaseTerms?: true
    releaseFooterText?: true
    releasePrimaryColor?: true
    printMarginTop?: true
    printMarginBottom?: true
    printMarginLeft?: true
    printMarginRight?: true
    language?: true
    dateFormat?: true
    timeFormat?: true
    currencySymbol?: true
    currencyPosition?: true
    customField1Label?: true
    customField1Value?: true
    customField2Label?: true
    customField2Value?: true
    customField3Label?: true
    customField3Value?: true
    requireStaffSignature?: true
    requireClientSignature?: true
    signatureHeight?: true
    showQRCode?: true
    qrCodePosition?: true
    qrCodeSize?: true
    showWatermark?: true
    watermarkText?: true
    watermarkOpacity?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TemplateSettingsMaxAggregateInputType = {
    id?: true
    companyId?: true
    companyName?: true
    companyLogo?: true
    companyAddress?: true
    companyPhone?: true
    companyEmail?: true
    companyWebsite?: true
    companyLicense?: true
    invoiceTemplateType?: true
    invoiceTitle?: true
    invoiceShowLogo?: true
    invoiceShowAddress?: true
    invoiceShowPhone?: true
    invoiceShowEmail?: true
    invoiceShowWebsite?: true
    invoiceShowLicense?: true
    invoiceShowFooter?: true
    invoiceHeaderBg?: true
    invoiceHeaderText?: true
    invoiceFooterText?: true
    invoiceTerms?: true
    invoiceShowBorders?: true
    invoiceShowGrid?: true
    invoiceTableStyle?: true
    invoiceFontSize?: true
    invoicePaperSize?: true
    invoicePrimaryColor?: true
    invoiceSecondaryColor?: true
    invoiceAccentColor?: true
    invoiceDangerColor?: true
    releaseNoteTemplate?: true
    releaseNoteTitle?: true
    releaseNoteHeaderBg?: true
    releaseNoteShowLogo?: true
    releaseShowShipment?: true
    releaseShowStorage?: true
    releaseShowItems?: true
    releaseShowCollector?: true
    releaseShowCharges?: true
    releaseShowPhotos?: true
    releaseShowTerms?: true
    releaseShowSignatures?: true
    releaseTerms?: true
    releaseFooterText?: true
    releasePrimaryColor?: true
    printMarginTop?: true
    printMarginBottom?: true
    printMarginLeft?: true
    printMarginRight?: true
    language?: true
    dateFormat?: true
    timeFormat?: true
    currencySymbol?: true
    currencyPosition?: true
    customField1Label?: true
    customField1Value?: true
    customField2Label?: true
    customField2Value?: true
    customField3Label?: true
    customField3Value?: true
    requireStaffSignature?: true
    requireClientSignature?: true
    signatureHeight?: true
    showQRCode?: true
    qrCodePosition?: true
    qrCodeSize?: true
    showWatermark?: true
    watermarkText?: true
    watermarkOpacity?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TemplateSettingsCountAggregateInputType = {
    id?: true
    companyId?: true
    companyName?: true
    companyLogo?: true
    companyAddress?: true
    companyPhone?: true
    companyEmail?: true
    companyWebsite?: true
    companyLicense?: true
    invoiceTemplateType?: true
    invoiceTitle?: true
    invoiceShowLogo?: true
    invoiceShowAddress?: true
    invoiceShowPhone?: true
    invoiceShowEmail?: true
    invoiceShowWebsite?: true
    invoiceShowLicense?: true
    invoiceShowFooter?: true
    invoiceHeaderBg?: true
    invoiceHeaderText?: true
    invoiceFooterText?: true
    invoiceTerms?: true
    invoiceShowBorders?: true
    invoiceShowGrid?: true
    invoiceTableStyle?: true
    invoiceFontSize?: true
    invoicePaperSize?: true
    invoicePrimaryColor?: true
    invoiceSecondaryColor?: true
    invoiceAccentColor?: true
    invoiceDangerColor?: true
    releaseNoteTemplate?: true
    releaseNoteTitle?: true
    releaseNoteHeaderBg?: true
    releaseNoteShowLogo?: true
    releaseShowShipment?: true
    releaseShowStorage?: true
    releaseShowItems?: true
    releaseShowCollector?: true
    releaseShowCharges?: true
    releaseShowPhotos?: true
    releaseShowTerms?: true
    releaseShowSignatures?: true
    releaseTerms?: true
    releaseFooterText?: true
    releasePrimaryColor?: true
    printMarginTop?: true
    printMarginBottom?: true
    printMarginLeft?: true
    printMarginRight?: true
    language?: true
    dateFormat?: true
    timeFormat?: true
    currencySymbol?: true
    currencyPosition?: true
    customField1Label?: true
    customField1Value?: true
    customField2Label?: true
    customField2Value?: true
    customField3Label?: true
    customField3Value?: true
    requireStaffSignature?: true
    requireClientSignature?: true
    signatureHeight?: true
    showQRCode?: true
    qrCodePosition?: true
    qrCodeSize?: true
    showWatermark?: true
    watermarkText?: true
    watermarkOpacity?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TemplateSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TemplateSettings to aggregate.
     */
    where?: TemplateSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TemplateSettings to fetch.
     */
    orderBy?: TemplateSettingsOrderByWithRelationInput | TemplateSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TemplateSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TemplateSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TemplateSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TemplateSettings
    **/
    _count?: true | TemplateSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TemplateSettingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TemplateSettingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TemplateSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TemplateSettingsMaxAggregateInputType
  }

  export type GetTemplateSettingsAggregateType<T extends TemplateSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateTemplateSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTemplateSettings[P]>
      : GetScalarType<T[P], AggregateTemplateSettings[P]>
  }




  export type TemplateSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TemplateSettingsWhereInput
    orderBy?: TemplateSettingsOrderByWithAggregationInput | TemplateSettingsOrderByWithAggregationInput[]
    by: TemplateSettingsScalarFieldEnum[] | TemplateSettingsScalarFieldEnum
    having?: TemplateSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TemplateSettingsCountAggregateInputType | true
    _avg?: TemplateSettingsAvgAggregateInputType
    _sum?: TemplateSettingsSumAggregateInputType
    _min?: TemplateSettingsMinAggregateInputType
    _max?: TemplateSettingsMaxAggregateInputType
  }

  export type TemplateSettingsGroupByOutputType = {
    id: string
    companyId: string
    companyName: string | null
    companyLogo: string | null
    companyAddress: string | null
    companyPhone: string | null
    companyEmail: string | null
    companyWebsite: string | null
    companyLicense: string | null
    invoiceTemplateType: string | null
    invoiceTitle: string | null
    invoiceShowLogo: boolean | null
    invoiceShowAddress: boolean | null
    invoiceShowPhone: boolean | null
    invoiceShowEmail: boolean | null
    invoiceShowWebsite: boolean | null
    invoiceShowLicense: boolean | null
    invoiceShowFooter: boolean | null
    invoiceHeaderBg: string | null
    invoiceHeaderText: string | null
    invoiceFooterText: string | null
    invoiceTerms: string | null
    invoiceShowBorders: boolean | null
    invoiceShowGrid: boolean | null
    invoiceTableStyle: string | null
    invoiceFontSize: string | null
    invoicePaperSize: string | null
    invoicePrimaryColor: string | null
    invoiceSecondaryColor: string | null
    invoiceAccentColor: string | null
    invoiceDangerColor: string | null
    releaseNoteTemplate: string | null
    releaseNoteTitle: string | null
    releaseNoteHeaderBg: string | null
    releaseNoteShowLogo: boolean | null
    releaseShowShipment: boolean | null
    releaseShowStorage: boolean | null
    releaseShowItems: boolean | null
    releaseShowCollector: boolean | null
    releaseShowCharges: boolean | null
    releaseShowPhotos: boolean | null
    releaseShowTerms: boolean | null
    releaseShowSignatures: boolean | null
    releaseTerms: string | null
    releaseFooterText: string | null
    releasePrimaryColor: string | null
    printMarginTop: number | null
    printMarginBottom: number | null
    printMarginLeft: number | null
    printMarginRight: number | null
    language: string | null
    dateFormat: string | null
    timeFormat: string | null
    currencySymbol: string | null
    currencyPosition: string | null
    customField1Label: string | null
    customField1Value: string | null
    customField2Label: string | null
    customField2Value: string | null
    customField3Label: string | null
    customField3Value: string | null
    requireStaffSignature: boolean | null
    requireClientSignature: boolean | null
    signatureHeight: number | null
    showQRCode: boolean | null
    qrCodePosition: string | null
    qrCodeSize: number | null
    showWatermark: boolean | null
    watermarkText: string | null
    watermarkOpacity: number | null
    createdAt: Date
    updatedAt: Date
    _count: TemplateSettingsCountAggregateOutputType | null
    _avg: TemplateSettingsAvgAggregateOutputType | null
    _sum: TemplateSettingsSumAggregateOutputType | null
    _min: TemplateSettingsMinAggregateOutputType | null
    _max: TemplateSettingsMaxAggregateOutputType | null
  }

  type GetTemplateSettingsGroupByPayload<T extends TemplateSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TemplateSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TemplateSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TemplateSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], TemplateSettingsGroupByOutputType[P]>
        }
      >
    >


  export type TemplateSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    companyName?: boolean
    companyLogo?: boolean
    companyAddress?: boolean
    companyPhone?: boolean
    companyEmail?: boolean
    companyWebsite?: boolean
    companyLicense?: boolean
    invoiceTemplateType?: boolean
    invoiceTitle?: boolean
    invoiceShowLogo?: boolean
    invoiceShowAddress?: boolean
    invoiceShowPhone?: boolean
    invoiceShowEmail?: boolean
    invoiceShowWebsite?: boolean
    invoiceShowLicense?: boolean
    invoiceShowFooter?: boolean
    invoiceHeaderBg?: boolean
    invoiceHeaderText?: boolean
    invoiceFooterText?: boolean
    invoiceTerms?: boolean
    invoiceShowBorders?: boolean
    invoiceShowGrid?: boolean
    invoiceTableStyle?: boolean
    invoiceFontSize?: boolean
    invoicePaperSize?: boolean
    invoicePrimaryColor?: boolean
    invoiceSecondaryColor?: boolean
    invoiceAccentColor?: boolean
    invoiceDangerColor?: boolean
    releaseNoteTemplate?: boolean
    releaseNoteTitle?: boolean
    releaseNoteHeaderBg?: boolean
    releaseNoteShowLogo?: boolean
    releaseShowShipment?: boolean
    releaseShowStorage?: boolean
    releaseShowItems?: boolean
    releaseShowCollector?: boolean
    releaseShowCharges?: boolean
    releaseShowPhotos?: boolean
    releaseShowTerms?: boolean
    releaseShowSignatures?: boolean
    releaseTerms?: boolean
    releaseFooterText?: boolean
    releasePrimaryColor?: boolean
    printMarginTop?: boolean
    printMarginBottom?: boolean
    printMarginLeft?: boolean
    printMarginRight?: boolean
    language?: boolean
    dateFormat?: boolean
    timeFormat?: boolean
    currencySymbol?: boolean
    currencyPosition?: boolean
    customField1Label?: boolean
    customField1Value?: boolean
    customField2Label?: boolean
    customField2Value?: boolean
    customField3Label?: boolean
    customField3Value?: boolean
    requireStaffSignature?: boolean
    requireClientSignature?: boolean
    signatureHeight?: boolean
    showQRCode?: boolean
    qrCodePosition?: boolean
    qrCodeSize?: boolean
    showWatermark?: boolean
    watermarkText?: boolean
    watermarkOpacity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["templateSettings"]>

  export type TemplateSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    companyName?: boolean
    companyLogo?: boolean
    companyAddress?: boolean
    companyPhone?: boolean
    companyEmail?: boolean
    companyWebsite?: boolean
    companyLicense?: boolean
    invoiceTemplateType?: boolean
    invoiceTitle?: boolean
    invoiceShowLogo?: boolean
    invoiceShowAddress?: boolean
    invoiceShowPhone?: boolean
    invoiceShowEmail?: boolean
    invoiceShowWebsite?: boolean
    invoiceShowLicense?: boolean
    invoiceShowFooter?: boolean
    invoiceHeaderBg?: boolean
    invoiceHeaderText?: boolean
    invoiceFooterText?: boolean
    invoiceTerms?: boolean
    invoiceShowBorders?: boolean
    invoiceShowGrid?: boolean
    invoiceTableStyle?: boolean
    invoiceFontSize?: boolean
    invoicePaperSize?: boolean
    invoicePrimaryColor?: boolean
    invoiceSecondaryColor?: boolean
    invoiceAccentColor?: boolean
    invoiceDangerColor?: boolean
    releaseNoteTemplate?: boolean
    releaseNoteTitle?: boolean
    releaseNoteHeaderBg?: boolean
    releaseNoteShowLogo?: boolean
    releaseShowShipment?: boolean
    releaseShowStorage?: boolean
    releaseShowItems?: boolean
    releaseShowCollector?: boolean
    releaseShowCharges?: boolean
    releaseShowPhotos?: boolean
    releaseShowTerms?: boolean
    releaseShowSignatures?: boolean
    releaseTerms?: boolean
    releaseFooterText?: boolean
    releasePrimaryColor?: boolean
    printMarginTop?: boolean
    printMarginBottom?: boolean
    printMarginLeft?: boolean
    printMarginRight?: boolean
    language?: boolean
    dateFormat?: boolean
    timeFormat?: boolean
    currencySymbol?: boolean
    currencyPosition?: boolean
    customField1Label?: boolean
    customField1Value?: boolean
    customField2Label?: boolean
    customField2Value?: boolean
    customField3Label?: boolean
    customField3Value?: boolean
    requireStaffSignature?: boolean
    requireClientSignature?: boolean
    signatureHeight?: boolean
    showQRCode?: boolean
    qrCodePosition?: boolean
    qrCodeSize?: boolean
    showWatermark?: boolean
    watermarkText?: boolean
    watermarkOpacity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["templateSettings"]>

  export type TemplateSettingsSelectScalar = {
    id?: boolean
    companyId?: boolean
    companyName?: boolean
    companyLogo?: boolean
    companyAddress?: boolean
    companyPhone?: boolean
    companyEmail?: boolean
    companyWebsite?: boolean
    companyLicense?: boolean
    invoiceTemplateType?: boolean
    invoiceTitle?: boolean
    invoiceShowLogo?: boolean
    invoiceShowAddress?: boolean
    invoiceShowPhone?: boolean
    invoiceShowEmail?: boolean
    invoiceShowWebsite?: boolean
    invoiceShowLicense?: boolean
    invoiceShowFooter?: boolean
    invoiceHeaderBg?: boolean
    invoiceHeaderText?: boolean
    invoiceFooterText?: boolean
    invoiceTerms?: boolean
    invoiceShowBorders?: boolean
    invoiceShowGrid?: boolean
    invoiceTableStyle?: boolean
    invoiceFontSize?: boolean
    invoicePaperSize?: boolean
    invoicePrimaryColor?: boolean
    invoiceSecondaryColor?: boolean
    invoiceAccentColor?: boolean
    invoiceDangerColor?: boolean
    releaseNoteTemplate?: boolean
    releaseNoteTitle?: boolean
    releaseNoteHeaderBg?: boolean
    releaseNoteShowLogo?: boolean
    releaseShowShipment?: boolean
    releaseShowStorage?: boolean
    releaseShowItems?: boolean
    releaseShowCollector?: boolean
    releaseShowCharges?: boolean
    releaseShowPhotos?: boolean
    releaseShowTerms?: boolean
    releaseShowSignatures?: boolean
    releaseTerms?: boolean
    releaseFooterText?: boolean
    releasePrimaryColor?: boolean
    printMarginTop?: boolean
    printMarginBottom?: boolean
    printMarginLeft?: boolean
    printMarginRight?: boolean
    language?: boolean
    dateFormat?: boolean
    timeFormat?: boolean
    currencySymbol?: boolean
    currencyPosition?: boolean
    customField1Label?: boolean
    customField1Value?: boolean
    customField2Label?: boolean
    customField2Value?: boolean
    customField3Label?: boolean
    customField3Value?: boolean
    requireStaffSignature?: boolean
    requireClientSignature?: boolean
    signatureHeight?: boolean
    showQRCode?: boolean
    qrCodePosition?: boolean
    qrCodeSize?: boolean
    showWatermark?: boolean
    watermarkText?: boolean
    watermarkOpacity?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TemplateSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type TemplateSettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $TemplateSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TemplateSettings"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      companyName: string | null
      companyLogo: string | null
      companyAddress: string | null
      companyPhone: string | null
      companyEmail: string | null
      companyWebsite: string | null
      companyLicense: string | null
      invoiceTemplateType: string | null
      invoiceTitle: string | null
      invoiceShowLogo: boolean | null
      invoiceShowAddress: boolean | null
      invoiceShowPhone: boolean | null
      invoiceShowEmail: boolean | null
      invoiceShowWebsite: boolean | null
      invoiceShowLicense: boolean | null
      invoiceShowFooter: boolean | null
      invoiceHeaderBg: string | null
      invoiceHeaderText: string | null
      invoiceFooterText: string | null
      invoiceTerms: string | null
      invoiceShowBorders: boolean | null
      invoiceShowGrid: boolean | null
      invoiceTableStyle: string | null
      invoiceFontSize: string | null
      invoicePaperSize: string | null
      invoicePrimaryColor: string | null
      invoiceSecondaryColor: string | null
      invoiceAccentColor: string | null
      invoiceDangerColor: string | null
      releaseNoteTemplate: string | null
      releaseNoteTitle: string | null
      releaseNoteHeaderBg: string | null
      releaseNoteShowLogo: boolean | null
      releaseShowShipment: boolean | null
      releaseShowStorage: boolean | null
      releaseShowItems: boolean | null
      releaseShowCollector: boolean | null
      releaseShowCharges: boolean | null
      releaseShowPhotos: boolean | null
      releaseShowTerms: boolean | null
      releaseShowSignatures: boolean | null
      releaseTerms: string | null
      releaseFooterText: string | null
      releasePrimaryColor: string | null
      printMarginTop: number | null
      printMarginBottom: number | null
      printMarginLeft: number | null
      printMarginRight: number | null
      language: string | null
      dateFormat: string | null
      timeFormat: string | null
      currencySymbol: string | null
      currencyPosition: string | null
      customField1Label: string | null
      customField1Value: string | null
      customField2Label: string | null
      customField2Value: string | null
      customField3Label: string | null
      customField3Value: string | null
      requireStaffSignature: boolean | null
      requireClientSignature: boolean | null
      signatureHeight: number | null
      showQRCode: boolean | null
      qrCodePosition: string | null
      qrCodeSize: number | null
      showWatermark: boolean | null
      watermarkText: string | null
      watermarkOpacity: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["templateSettings"]>
    composites: {}
  }

  type TemplateSettingsGetPayload<S extends boolean | null | undefined | TemplateSettingsDefaultArgs> = $Result.GetResult<Prisma.$TemplateSettingsPayload, S>

  type TemplateSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TemplateSettingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TemplateSettingsCountAggregateInputType | true
    }

  export interface TemplateSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TemplateSettings'], meta: { name: 'TemplateSettings' } }
    /**
     * Find zero or one TemplateSettings that matches the filter.
     * @param {TemplateSettingsFindUniqueArgs} args - Arguments to find a TemplateSettings
     * @example
     * // Get one TemplateSettings
     * const templateSettings = await prisma.templateSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TemplateSettingsFindUniqueArgs>(args: SelectSubset<T, TemplateSettingsFindUniqueArgs<ExtArgs>>): Prisma__TemplateSettingsClient<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TemplateSettings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TemplateSettingsFindUniqueOrThrowArgs} args - Arguments to find a TemplateSettings
     * @example
     * // Get one TemplateSettings
     * const templateSettings = await prisma.templateSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TemplateSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, TemplateSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TemplateSettingsClient<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TemplateSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateSettingsFindFirstArgs} args - Arguments to find a TemplateSettings
     * @example
     * // Get one TemplateSettings
     * const templateSettings = await prisma.templateSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TemplateSettingsFindFirstArgs>(args?: SelectSubset<T, TemplateSettingsFindFirstArgs<ExtArgs>>): Prisma__TemplateSettingsClient<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TemplateSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateSettingsFindFirstOrThrowArgs} args - Arguments to find a TemplateSettings
     * @example
     * // Get one TemplateSettings
     * const templateSettings = await prisma.templateSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TemplateSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, TemplateSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__TemplateSettingsClient<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TemplateSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TemplateSettings
     * const templateSettings = await prisma.templateSettings.findMany()
     * 
     * // Get first 10 TemplateSettings
     * const templateSettings = await prisma.templateSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const templateSettingsWithIdOnly = await prisma.templateSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TemplateSettingsFindManyArgs>(args?: SelectSubset<T, TemplateSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TemplateSettings.
     * @param {TemplateSettingsCreateArgs} args - Arguments to create a TemplateSettings.
     * @example
     * // Create one TemplateSettings
     * const TemplateSettings = await prisma.templateSettings.create({
     *   data: {
     *     // ... data to create a TemplateSettings
     *   }
     * })
     * 
     */
    create<T extends TemplateSettingsCreateArgs>(args: SelectSubset<T, TemplateSettingsCreateArgs<ExtArgs>>): Prisma__TemplateSettingsClient<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TemplateSettings.
     * @param {TemplateSettingsCreateManyArgs} args - Arguments to create many TemplateSettings.
     * @example
     * // Create many TemplateSettings
     * const templateSettings = await prisma.templateSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TemplateSettingsCreateManyArgs>(args?: SelectSubset<T, TemplateSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TemplateSettings and returns the data saved in the database.
     * @param {TemplateSettingsCreateManyAndReturnArgs} args - Arguments to create many TemplateSettings.
     * @example
     * // Create many TemplateSettings
     * const templateSettings = await prisma.templateSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TemplateSettings and only return the `id`
     * const templateSettingsWithIdOnly = await prisma.templateSettings.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TemplateSettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, TemplateSettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TemplateSettings.
     * @param {TemplateSettingsDeleteArgs} args - Arguments to delete one TemplateSettings.
     * @example
     * // Delete one TemplateSettings
     * const TemplateSettings = await prisma.templateSettings.delete({
     *   where: {
     *     // ... filter to delete one TemplateSettings
     *   }
     * })
     * 
     */
    delete<T extends TemplateSettingsDeleteArgs>(args: SelectSubset<T, TemplateSettingsDeleteArgs<ExtArgs>>): Prisma__TemplateSettingsClient<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TemplateSettings.
     * @param {TemplateSettingsUpdateArgs} args - Arguments to update one TemplateSettings.
     * @example
     * // Update one TemplateSettings
     * const templateSettings = await prisma.templateSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TemplateSettingsUpdateArgs>(args: SelectSubset<T, TemplateSettingsUpdateArgs<ExtArgs>>): Prisma__TemplateSettingsClient<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TemplateSettings.
     * @param {TemplateSettingsDeleteManyArgs} args - Arguments to filter TemplateSettings to delete.
     * @example
     * // Delete a few TemplateSettings
     * const { count } = await prisma.templateSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TemplateSettingsDeleteManyArgs>(args?: SelectSubset<T, TemplateSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TemplateSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TemplateSettings
     * const templateSettings = await prisma.templateSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TemplateSettingsUpdateManyArgs>(args: SelectSubset<T, TemplateSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TemplateSettings.
     * @param {TemplateSettingsUpsertArgs} args - Arguments to update or create a TemplateSettings.
     * @example
     * // Update or create a TemplateSettings
     * const templateSettings = await prisma.templateSettings.upsert({
     *   create: {
     *     // ... data to create a TemplateSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TemplateSettings we want to update
     *   }
     * })
     */
    upsert<T extends TemplateSettingsUpsertArgs>(args: SelectSubset<T, TemplateSettingsUpsertArgs<ExtArgs>>): Prisma__TemplateSettingsClient<$Result.GetResult<Prisma.$TemplateSettingsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TemplateSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateSettingsCountArgs} args - Arguments to filter TemplateSettings to count.
     * @example
     * // Count the number of TemplateSettings
     * const count = await prisma.templateSettings.count({
     *   where: {
     *     // ... the filter for the TemplateSettings we want to count
     *   }
     * })
    **/
    count<T extends TemplateSettingsCountArgs>(
      args?: Subset<T, TemplateSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TemplateSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TemplateSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TemplateSettingsAggregateArgs>(args: Subset<T, TemplateSettingsAggregateArgs>): Prisma.PrismaPromise<GetTemplateSettingsAggregateType<T>>

    /**
     * Group by TemplateSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TemplateSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TemplateSettingsGroupByArgs['orderBy'] }
        : { orderBy?: TemplateSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TemplateSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTemplateSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TemplateSettings model
   */
  readonly fields: TemplateSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TemplateSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TemplateSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TemplateSettings model
   */ 
  interface TemplateSettingsFieldRefs {
    readonly id: FieldRef<"TemplateSettings", 'String'>
    readonly companyId: FieldRef<"TemplateSettings", 'String'>
    readonly companyName: FieldRef<"TemplateSettings", 'String'>
    readonly companyLogo: FieldRef<"TemplateSettings", 'String'>
    readonly companyAddress: FieldRef<"TemplateSettings", 'String'>
    readonly companyPhone: FieldRef<"TemplateSettings", 'String'>
    readonly companyEmail: FieldRef<"TemplateSettings", 'String'>
    readonly companyWebsite: FieldRef<"TemplateSettings", 'String'>
    readonly companyLicense: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceTemplateType: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceTitle: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceShowLogo: FieldRef<"TemplateSettings", 'Boolean'>
    readonly invoiceShowAddress: FieldRef<"TemplateSettings", 'Boolean'>
    readonly invoiceShowPhone: FieldRef<"TemplateSettings", 'Boolean'>
    readonly invoiceShowEmail: FieldRef<"TemplateSettings", 'Boolean'>
    readonly invoiceShowWebsite: FieldRef<"TemplateSettings", 'Boolean'>
    readonly invoiceShowLicense: FieldRef<"TemplateSettings", 'Boolean'>
    readonly invoiceShowFooter: FieldRef<"TemplateSettings", 'Boolean'>
    readonly invoiceHeaderBg: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceHeaderText: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceFooterText: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceTerms: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceShowBorders: FieldRef<"TemplateSettings", 'Boolean'>
    readonly invoiceShowGrid: FieldRef<"TemplateSettings", 'Boolean'>
    readonly invoiceTableStyle: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceFontSize: FieldRef<"TemplateSettings", 'String'>
    readonly invoicePaperSize: FieldRef<"TemplateSettings", 'String'>
    readonly invoicePrimaryColor: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceSecondaryColor: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceAccentColor: FieldRef<"TemplateSettings", 'String'>
    readonly invoiceDangerColor: FieldRef<"TemplateSettings", 'String'>
    readonly releaseNoteTemplate: FieldRef<"TemplateSettings", 'String'>
    readonly releaseNoteTitle: FieldRef<"TemplateSettings", 'String'>
    readonly releaseNoteHeaderBg: FieldRef<"TemplateSettings", 'String'>
    readonly releaseNoteShowLogo: FieldRef<"TemplateSettings", 'Boolean'>
    readonly releaseShowShipment: FieldRef<"TemplateSettings", 'Boolean'>
    readonly releaseShowStorage: FieldRef<"TemplateSettings", 'Boolean'>
    readonly releaseShowItems: FieldRef<"TemplateSettings", 'Boolean'>
    readonly releaseShowCollector: FieldRef<"TemplateSettings", 'Boolean'>
    readonly releaseShowCharges: FieldRef<"TemplateSettings", 'Boolean'>
    readonly releaseShowPhotos: FieldRef<"TemplateSettings", 'Boolean'>
    readonly releaseShowTerms: FieldRef<"TemplateSettings", 'Boolean'>
    readonly releaseShowSignatures: FieldRef<"TemplateSettings", 'Boolean'>
    readonly releaseTerms: FieldRef<"TemplateSettings", 'String'>
    readonly releaseFooterText: FieldRef<"TemplateSettings", 'String'>
    readonly releasePrimaryColor: FieldRef<"TemplateSettings", 'String'>
    readonly printMarginTop: FieldRef<"TemplateSettings", 'Int'>
    readonly printMarginBottom: FieldRef<"TemplateSettings", 'Int'>
    readonly printMarginLeft: FieldRef<"TemplateSettings", 'Int'>
    readonly printMarginRight: FieldRef<"TemplateSettings", 'Int'>
    readonly language: FieldRef<"TemplateSettings", 'String'>
    readonly dateFormat: FieldRef<"TemplateSettings", 'String'>
    readonly timeFormat: FieldRef<"TemplateSettings", 'String'>
    readonly currencySymbol: FieldRef<"TemplateSettings", 'String'>
    readonly currencyPosition: FieldRef<"TemplateSettings", 'String'>
    readonly customField1Label: FieldRef<"TemplateSettings", 'String'>
    readonly customField1Value: FieldRef<"TemplateSettings", 'String'>
    readonly customField2Label: FieldRef<"TemplateSettings", 'String'>
    readonly customField2Value: FieldRef<"TemplateSettings", 'String'>
    readonly customField3Label: FieldRef<"TemplateSettings", 'String'>
    readonly customField3Value: FieldRef<"TemplateSettings", 'String'>
    readonly requireStaffSignature: FieldRef<"TemplateSettings", 'Boolean'>
    readonly requireClientSignature: FieldRef<"TemplateSettings", 'Boolean'>
    readonly signatureHeight: FieldRef<"TemplateSettings", 'Int'>
    readonly showQRCode: FieldRef<"TemplateSettings", 'Boolean'>
    readonly qrCodePosition: FieldRef<"TemplateSettings", 'String'>
    readonly qrCodeSize: FieldRef<"TemplateSettings", 'Int'>
    readonly showWatermark: FieldRef<"TemplateSettings", 'Boolean'>
    readonly watermarkText: FieldRef<"TemplateSettings", 'String'>
    readonly watermarkOpacity: FieldRef<"TemplateSettings", 'Float'>
    readonly createdAt: FieldRef<"TemplateSettings", 'DateTime'>
    readonly updatedAt: FieldRef<"TemplateSettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TemplateSettings findUnique
   */
  export type TemplateSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
    /**
     * Filter, which TemplateSettings to fetch.
     */
    where: TemplateSettingsWhereUniqueInput
  }

  /**
   * TemplateSettings findUniqueOrThrow
   */
  export type TemplateSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
    /**
     * Filter, which TemplateSettings to fetch.
     */
    where: TemplateSettingsWhereUniqueInput
  }

  /**
   * TemplateSettings findFirst
   */
  export type TemplateSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
    /**
     * Filter, which TemplateSettings to fetch.
     */
    where?: TemplateSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TemplateSettings to fetch.
     */
    orderBy?: TemplateSettingsOrderByWithRelationInput | TemplateSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TemplateSettings.
     */
    cursor?: TemplateSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TemplateSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TemplateSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TemplateSettings.
     */
    distinct?: TemplateSettingsScalarFieldEnum | TemplateSettingsScalarFieldEnum[]
  }

  /**
   * TemplateSettings findFirstOrThrow
   */
  export type TemplateSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
    /**
     * Filter, which TemplateSettings to fetch.
     */
    where?: TemplateSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TemplateSettings to fetch.
     */
    orderBy?: TemplateSettingsOrderByWithRelationInput | TemplateSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TemplateSettings.
     */
    cursor?: TemplateSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TemplateSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TemplateSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TemplateSettings.
     */
    distinct?: TemplateSettingsScalarFieldEnum | TemplateSettingsScalarFieldEnum[]
  }

  /**
   * TemplateSettings findMany
   */
  export type TemplateSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
    /**
     * Filter, which TemplateSettings to fetch.
     */
    where?: TemplateSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TemplateSettings to fetch.
     */
    orderBy?: TemplateSettingsOrderByWithRelationInput | TemplateSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TemplateSettings.
     */
    cursor?: TemplateSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TemplateSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TemplateSettings.
     */
    skip?: number
    distinct?: TemplateSettingsScalarFieldEnum | TemplateSettingsScalarFieldEnum[]
  }

  /**
   * TemplateSettings create
   */
  export type TemplateSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a TemplateSettings.
     */
    data: XOR<TemplateSettingsCreateInput, TemplateSettingsUncheckedCreateInput>
  }

  /**
   * TemplateSettings createMany
   */
  export type TemplateSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TemplateSettings.
     */
    data: TemplateSettingsCreateManyInput | TemplateSettingsCreateManyInput[]
  }

  /**
   * TemplateSettings createManyAndReturn
   */
  export type TemplateSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TemplateSettings.
     */
    data: TemplateSettingsCreateManyInput | TemplateSettingsCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TemplateSettings update
   */
  export type TemplateSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a TemplateSettings.
     */
    data: XOR<TemplateSettingsUpdateInput, TemplateSettingsUncheckedUpdateInput>
    /**
     * Choose, which TemplateSettings to update.
     */
    where: TemplateSettingsWhereUniqueInput
  }

  /**
   * TemplateSettings updateMany
   */
  export type TemplateSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TemplateSettings.
     */
    data: XOR<TemplateSettingsUpdateManyMutationInput, TemplateSettingsUncheckedUpdateManyInput>
    /**
     * Filter which TemplateSettings to update
     */
    where?: TemplateSettingsWhereInput
  }

  /**
   * TemplateSettings upsert
   */
  export type TemplateSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the TemplateSettings to update in case it exists.
     */
    where: TemplateSettingsWhereUniqueInput
    /**
     * In case the TemplateSettings found by the `where` argument doesn't exist, create a new TemplateSettings with this data.
     */
    create: XOR<TemplateSettingsCreateInput, TemplateSettingsUncheckedCreateInput>
    /**
     * In case the TemplateSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TemplateSettingsUpdateInput, TemplateSettingsUncheckedUpdateInput>
  }

  /**
   * TemplateSettings delete
   */
  export type TemplateSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
    /**
     * Filter which TemplateSettings to delete.
     */
    where: TemplateSettingsWhereUniqueInput
  }

  /**
   * TemplateSettings deleteMany
   */
  export type TemplateSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TemplateSettings to delete
     */
    where?: TemplateSettingsWhereInput
  }

  /**
   * TemplateSettings without action
   */
  export type TemplateSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateSettings
     */
    select?: TemplateSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateSettingsInclude<ExtArgs> | null
  }


  /**
   * Model Permission
   */

  export type AggregatePermission = {
    _count: PermissionCountAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  export type PermissionMinAggregateOutputType = {
    id: string | null
    resource: string | null
    action: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PermissionMaxAggregateOutputType = {
    id: string | null
    resource: string | null
    action: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PermissionCountAggregateOutputType = {
    id: number
    resource: number
    action: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PermissionMinAggregateInputType = {
    id?: true
    resource?: true
    action?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PermissionMaxAggregateInputType = {
    id?: true
    resource?: true
    action?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PermissionCountAggregateInputType = {
    id?: true
    resource?: true
    action?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permission to aggregate.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permissions
    **/
    _count?: true | PermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionMaxAggregateInputType
  }

  export type GetPermissionAggregateType<T extends PermissionAggregateArgs> = {
        [P in keyof T & keyof AggregatePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermission[P]>
      : GetScalarType<T[P], AggregatePermission[P]>
  }




  export type PermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithAggregationInput | PermissionOrderByWithAggregationInput[]
    by: PermissionScalarFieldEnum[] | PermissionScalarFieldEnum
    having?: PermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionCountAggregateInputType | true
    _min?: PermissionMinAggregateInputType
    _max?: PermissionMaxAggregateInputType
  }

  export type PermissionGroupByOutputType = {
    id: string
    resource: string
    action: string
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: PermissionCountAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  type GetPermissionGroupByPayload<T extends PermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionGroupByOutputType[P]>
        }
      >
    >


  export type PermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    resource?: boolean
    action?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    rolePermissions?: boolean | Permission$rolePermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    resource?: boolean
    action?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectScalar = {
    id?: boolean
    resource?: boolean
    action?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rolePermissions?: boolean | Permission$rolePermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permission"
    objects: {
      rolePermissions: Prisma.$RolePermissionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      resource: string
      action: string
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["permission"]>
    composites: {}
  }

  type PermissionGetPayload<S extends boolean | null | undefined | PermissionDefaultArgs> = $Result.GetResult<Prisma.$PermissionPayload, S>

  type PermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PermissionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PermissionCountAggregateInputType | true
    }

  export interface PermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permission'], meta: { name: 'Permission' } }
    /**
     * Find zero or one Permission that matches the filter.
     * @param {PermissionFindUniqueArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermissionFindUniqueArgs>(args: SelectSubset<T, PermissionFindUniqueArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Permission that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PermissionFindUniqueOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, PermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Permission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermissionFindFirstArgs>(args?: SelectSubset<T, PermissionFindFirstArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Permission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, PermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permission.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissionWithIdOnly = await prisma.permission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermissionFindManyArgs>(args?: SelectSubset<T, PermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Permission.
     * @param {PermissionCreateArgs} args - Arguments to create a Permission.
     * @example
     * // Create one Permission
     * const Permission = await prisma.permission.create({
     *   data: {
     *     // ... data to create a Permission
     *   }
     * })
     * 
     */
    create<T extends PermissionCreateArgs>(args: SelectSubset<T, PermissionCreateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Permissions.
     * @param {PermissionCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermissionCreateManyArgs>(args?: SelectSubset<T, PermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permissions and returns the data saved in the database.
     * @param {PermissionCreateManyAndReturnArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permissions and only return the `id`
     * const permissionWithIdOnly = await prisma.permission.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, PermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Permission.
     * @param {PermissionDeleteArgs} args - Arguments to delete one Permission.
     * @example
     * // Delete one Permission
     * const Permission = await prisma.permission.delete({
     *   where: {
     *     // ... filter to delete one Permission
     *   }
     * })
     * 
     */
    delete<T extends PermissionDeleteArgs>(args: SelectSubset<T, PermissionDeleteArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Permission.
     * @param {PermissionUpdateArgs} args - Arguments to update one Permission.
     * @example
     * // Update one Permission
     * const permission = await prisma.permission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermissionUpdateArgs>(args: SelectSubset<T, PermissionUpdateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Permissions.
     * @param {PermissionDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermissionDeleteManyArgs>(args?: SelectSubset<T, PermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermissionUpdateManyArgs>(args: SelectSubset<T, PermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Permission.
     * @param {PermissionUpsertArgs} args - Arguments to update or create a Permission.
     * @example
     * // Update or create a Permission
     * const permission = await prisma.permission.upsert({
     *   create: {
     *     // ... data to create a Permission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permission we want to update
     *   }
     * })
     */
    upsert<T extends PermissionUpsertArgs>(args: SelectSubset<T, PermissionUpsertArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permission.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends PermissionCountArgs>(
      args?: Subset<T, PermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionAggregateArgs>(args: Subset<T, PermissionAggregateArgs>): Prisma.PrismaPromise<GetPermissionAggregateType<T>>

    /**
     * Group by Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermissionGroupByArgs['orderBy'] }
        : { orderBy?: PermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permission model
   */
  readonly fields: PermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rolePermissions<T extends Permission$rolePermissionsArgs<ExtArgs> = {}>(args?: Subset<T, Permission$rolePermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permission model
   */ 
  interface PermissionFieldRefs {
    readonly id: FieldRef<"Permission", 'String'>
    readonly resource: FieldRef<"Permission", 'String'>
    readonly action: FieldRef<"Permission", 'String'>
    readonly description: FieldRef<"Permission", 'String'>
    readonly createdAt: FieldRef<"Permission", 'DateTime'>
    readonly updatedAt: FieldRef<"Permission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Permission findUnique
   */
  export type PermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findUniqueOrThrow
   */
  export type PermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findFirst
   */
  export type PermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findFirstOrThrow
   */
  export type PermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findMany
   */
  export type PermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permissions to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission create
   */
  export type PermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a Permission.
     */
    data: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
  }

  /**
   * Permission createMany
   */
  export type PermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
  }

  /**
   * Permission createManyAndReturn
   */
  export type PermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
  }

  /**
   * Permission update
   */
  export type PermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a Permission.
     */
    data: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
    /**
     * Choose, which Permission to update.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission updateMany
   */
  export type PermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
  }

  /**
   * Permission upsert
   */
  export type PermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the Permission to update in case it exists.
     */
    where: PermissionWhereUniqueInput
    /**
     * In case the Permission found by the `where` argument doesn't exist, create a new Permission with this data.
     */
    create: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
    /**
     * In case the Permission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
  }

  /**
   * Permission delete
   */
  export type PermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter which Permission to delete.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission deleteMany
   */
  export type PermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permissions to delete
     */
    where?: PermissionWhereInput
  }

  /**
   * Permission.rolePermissions
   */
  export type Permission$rolePermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    where?: RolePermissionWhereInput
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    cursor?: RolePermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * Permission without action
   */
  export type PermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
  }


  /**
   * Model RolePermission
   */

  export type AggregateRolePermission = {
    _count: RolePermissionCountAggregateOutputType | null
    _min: RolePermissionMinAggregateOutputType | null
    _max: RolePermissionMaxAggregateOutputType | null
  }

  export type RolePermissionMinAggregateOutputType = {
    id: string | null
    role: string | null
    permissionId: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RolePermissionMaxAggregateOutputType = {
    id: string | null
    role: string | null
    permissionId: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RolePermissionCountAggregateOutputType = {
    id: number
    role: number
    permissionId: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RolePermissionMinAggregateInputType = {
    id?: true
    role?: true
    permissionId?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RolePermissionMaxAggregateInputType = {
    id?: true
    role?: true
    permissionId?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RolePermissionCountAggregateInputType = {
    id?: true
    role?: true
    permissionId?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RolePermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolePermission to aggregate.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RolePermissions
    **/
    _count?: true | RolePermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolePermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolePermissionMaxAggregateInputType
  }

  export type GetRolePermissionAggregateType<T extends RolePermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateRolePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRolePermission[P]>
      : GetScalarType<T[P], AggregateRolePermission[P]>
  }




  export type RolePermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolePermissionWhereInput
    orderBy?: RolePermissionOrderByWithAggregationInput | RolePermissionOrderByWithAggregationInput[]
    by: RolePermissionScalarFieldEnum[] | RolePermissionScalarFieldEnum
    having?: RolePermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolePermissionCountAggregateInputType | true
    _min?: RolePermissionMinAggregateInputType
    _max?: RolePermissionMaxAggregateInputType
  }

  export type RolePermissionGroupByOutputType = {
    id: string
    role: string
    permissionId: string
    companyId: string
    createdAt: Date
    updatedAt: Date
    _count: RolePermissionCountAggregateOutputType | null
    _min: RolePermissionMinAggregateOutputType | null
    _max: RolePermissionMaxAggregateOutputType | null
  }

  type GetRolePermissionGroupByPayload<T extends RolePermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolePermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolePermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolePermissionGroupByOutputType[P]>
            : GetScalarType<T[P], RolePermissionGroupByOutputType[P]>
        }
      >
    >


  export type RolePermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    permissionId?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolePermission"]>

  export type RolePermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    permissionId?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolePermission"]>

  export type RolePermissionSelectScalar = {
    id?: boolean
    role?: boolean
    permissionId?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RolePermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type RolePermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $RolePermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RolePermission"
    objects: {
      permission: Prisma.$PermissionPayload<ExtArgs>
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      role: string
      permissionId: string
      companyId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["rolePermission"]>
    composites: {}
  }

  type RolePermissionGetPayload<S extends boolean | null | undefined | RolePermissionDefaultArgs> = $Result.GetResult<Prisma.$RolePermissionPayload, S>

  type RolePermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RolePermissionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RolePermissionCountAggregateInputType | true
    }

  export interface RolePermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RolePermission'], meta: { name: 'RolePermission' } }
    /**
     * Find zero or one RolePermission that matches the filter.
     * @param {RolePermissionFindUniqueArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolePermissionFindUniqueArgs>(args: SelectSubset<T, RolePermissionFindUniqueArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RolePermission that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RolePermissionFindUniqueOrThrowArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolePermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, RolePermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RolePermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindFirstArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolePermissionFindFirstArgs>(args?: SelectSubset<T, RolePermissionFindFirstArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RolePermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindFirstOrThrowArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolePermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, RolePermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RolePermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RolePermissions
     * const rolePermissions = await prisma.rolePermission.findMany()
     * 
     * // Get first 10 RolePermissions
     * const rolePermissions = await prisma.rolePermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolePermissionWithIdOnly = await prisma.rolePermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RolePermissionFindManyArgs>(args?: SelectSubset<T, RolePermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RolePermission.
     * @param {RolePermissionCreateArgs} args - Arguments to create a RolePermission.
     * @example
     * // Create one RolePermission
     * const RolePermission = await prisma.rolePermission.create({
     *   data: {
     *     // ... data to create a RolePermission
     *   }
     * })
     * 
     */
    create<T extends RolePermissionCreateArgs>(args: SelectSubset<T, RolePermissionCreateArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RolePermissions.
     * @param {RolePermissionCreateManyArgs} args - Arguments to create many RolePermissions.
     * @example
     * // Create many RolePermissions
     * const rolePermission = await prisma.rolePermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolePermissionCreateManyArgs>(args?: SelectSubset<T, RolePermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RolePermissions and returns the data saved in the database.
     * @param {RolePermissionCreateManyAndReturnArgs} args - Arguments to create many RolePermissions.
     * @example
     * // Create many RolePermissions
     * const rolePermission = await prisma.rolePermission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RolePermissions and only return the `id`
     * const rolePermissionWithIdOnly = await prisma.rolePermission.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RolePermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, RolePermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RolePermission.
     * @param {RolePermissionDeleteArgs} args - Arguments to delete one RolePermission.
     * @example
     * // Delete one RolePermission
     * const RolePermission = await prisma.rolePermission.delete({
     *   where: {
     *     // ... filter to delete one RolePermission
     *   }
     * })
     * 
     */
    delete<T extends RolePermissionDeleteArgs>(args: SelectSubset<T, RolePermissionDeleteArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RolePermission.
     * @param {RolePermissionUpdateArgs} args - Arguments to update one RolePermission.
     * @example
     * // Update one RolePermission
     * const rolePermission = await prisma.rolePermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolePermissionUpdateArgs>(args: SelectSubset<T, RolePermissionUpdateArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RolePermissions.
     * @param {RolePermissionDeleteManyArgs} args - Arguments to filter RolePermissions to delete.
     * @example
     * // Delete a few RolePermissions
     * const { count } = await prisma.rolePermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolePermissionDeleteManyArgs>(args?: SelectSubset<T, RolePermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RolePermissions
     * const rolePermission = await prisma.rolePermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolePermissionUpdateManyArgs>(args: SelectSubset<T, RolePermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RolePermission.
     * @param {RolePermissionUpsertArgs} args - Arguments to update or create a RolePermission.
     * @example
     * // Update or create a RolePermission
     * const rolePermission = await prisma.rolePermission.upsert({
     *   create: {
     *     // ... data to create a RolePermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RolePermission we want to update
     *   }
     * })
     */
    upsert<T extends RolePermissionUpsertArgs>(args: SelectSubset<T, RolePermissionUpsertArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RolePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionCountArgs} args - Arguments to filter RolePermissions to count.
     * @example
     * // Count the number of RolePermissions
     * const count = await prisma.rolePermission.count({
     *   where: {
     *     // ... the filter for the RolePermissions we want to count
     *   }
     * })
    **/
    count<T extends RolePermissionCountArgs>(
      args?: Subset<T, RolePermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolePermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RolePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolePermissionAggregateArgs>(args: Subset<T, RolePermissionAggregateArgs>): Prisma.PrismaPromise<GetRolePermissionAggregateType<T>>

    /**
     * Group by RolePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolePermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolePermissionGroupByArgs['orderBy'] }
        : { orderBy?: RolePermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolePermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolePermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RolePermission model
   */
  readonly fields: RolePermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RolePermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolePermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permission<T extends PermissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PermissionDefaultArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RolePermission model
   */ 
  interface RolePermissionFieldRefs {
    readonly id: FieldRef<"RolePermission", 'String'>
    readonly role: FieldRef<"RolePermission", 'String'>
    readonly permissionId: FieldRef<"RolePermission", 'String'>
    readonly companyId: FieldRef<"RolePermission", 'String'>
    readonly createdAt: FieldRef<"RolePermission", 'DateTime'>
    readonly updatedAt: FieldRef<"RolePermission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RolePermission findUnique
   */
  export type RolePermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission findUniqueOrThrow
   */
  export type RolePermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission findFirst
   */
  export type RolePermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolePermissions.
     */
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission findFirstOrThrow
   */
  export type RolePermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolePermissions.
     */
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission findMany
   */
  export type RolePermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermissions to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission create
   */
  export type RolePermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a RolePermission.
     */
    data: XOR<RolePermissionCreateInput, RolePermissionUncheckedCreateInput>
  }

  /**
   * RolePermission createMany
   */
  export type RolePermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RolePermissions.
     */
    data: RolePermissionCreateManyInput | RolePermissionCreateManyInput[]
  }

  /**
   * RolePermission createManyAndReturn
   */
  export type RolePermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RolePermissions.
     */
    data: RolePermissionCreateManyInput | RolePermissionCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RolePermission update
   */
  export type RolePermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a RolePermission.
     */
    data: XOR<RolePermissionUpdateInput, RolePermissionUncheckedUpdateInput>
    /**
     * Choose, which RolePermission to update.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission updateMany
   */
  export type RolePermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RolePermissions.
     */
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyInput>
    /**
     * Filter which RolePermissions to update
     */
    where?: RolePermissionWhereInput
  }

  /**
   * RolePermission upsert
   */
  export type RolePermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the RolePermission to update in case it exists.
     */
    where: RolePermissionWhereUniqueInput
    /**
     * In case the RolePermission found by the `where` argument doesn't exist, create a new RolePermission with this data.
     */
    create: XOR<RolePermissionCreateInput, RolePermissionUncheckedCreateInput>
    /**
     * In case the RolePermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolePermissionUpdateInput, RolePermissionUncheckedUpdateInput>
  }

  /**
   * RolePermission delete
   */
  export type RolePermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter which RolePermission to delete.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission deleteMany
   */
  export type RolePermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolePermissions to delete
     */
    where?: RolePermissionWhereInput
  }

  /**
   * RolePermission without action
   */
  export type RolePermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
  }


  /**
   * Model MovingJob
   */

  export type AggregateMovingJob = {
    _count: MovingJobCountAggregateOutputType | null
    _min: MovingJobMinAggregateOutputType | null
    _max: MovingJobMaxAggregateOutputType | null
  }

  export type MovingJobMinAggregateOutputType = {
    id: string | null
    jobCode: string | null
    jobTitle: string | null
    clientName: string | null
    clientPhone: string | null
    clientEmail: string | null
    jobDate: Date | null
    jobAddress: string | null
    dropoffAddress: string | null
    status: string | null
    teamLeaderId: string | null
    driverName: string | null
    vehicleNumber: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    companyId: string | null
  }

  export type MovingJobMaxAggregateOutputType = {
    id: string | null
    jobCode: string | null
    jobTitle: string | null
    clientName: string | null
    clientPhone: string | null
    clientEmail: string | null
    jobDate: Date | null
    jobAddress: string | null
    dropoffAddress: string | null
    status: string | null
    teamLeaderId: string | null
    driverName: string | null
    vehicleNumber: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    companyId: string | null
  }

  export type MovingJobCountAggregateOutputType = {
    id: number
    jobCode: number
    jobTitle: number
    clientName: number
    clientPhone: number
    clientEmail: number
    jobDate: number
    jobAddress: number
    dropoffAddress: number
    status: number
    teamLeaderId: number
    driverName: number
    vehicleNumber: number
    notes: number
    createdAt: number
    updatedAt: number
    companyId: number
    _all: number
  }


  export type MovingJobMinAggregateInputType = {
    id?: true
    jobCode?: true
    jobTitle?: true
    clientName?: true
    clientPhone?: true
    clientEmail?: true
    jobDate?: true
    jobAddress?: true
    dropoffAddress?: true
    status?: true
    teamLeaderId?: true
    driverName?: true
    vehicleNumber?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
  }

  export type MovingJobMaxAggregateInputType = {
    id?: true
    jobCode?: true
    jobTitle?: true
    clientName?: true
    clientPhone?: true
    clientEmail?: true
    jobDate?: true
    jobAddress?: true
    dropoffAddress?: true
    status?: true
    teamLeaderId?: true
    driverName?: true
    vehicleNumber?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
  }

  export type MovingJobCountAggregateInputType = {
    id?: true
    jobCode?: true
    jobTitle?: true
    clientName?: true
    clientPhone?: true
    clientEmail?: true
    jobDate?: true
    jobAddress?: true
    dropoffAddress?: true
    status?: true
    teamLeaderId?: true
    driverName?: true
    vehicleNumber?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
    _all?: true
  }

  export type MovingJobAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MovingJob to aggregate.
     */
    where?: MovingJobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovingJobs to fetch.
     */
    orderBy?: MovingJobOrderByWithRelationInput | MovingJobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MovingJobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovingJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovingJobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MovingJobs
    **/
    _count?: true | MovingJobCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MovingJobMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MovingJobMaxAggregateInputType
  }

  export type GetMovingJobAggregateType<T extends MovingJobAggregateArgs> = {
        [P in keyof T & keyof AggregateMovingJob]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMovingJob[P]>
      : GetScalarType<T[P], AggregateMovingJob[P]>
  }




  export type MovingJobGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovingJobWhereInput
    orderBy?: MovingJobOrderByWithAggregationInput | MovingJobOrderByWithAggregationInput[]
    by: MovingJobScalarFieldEnum[] | MovingJobScalarFieldEnum
    having?: MovingJobScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MovingJobCountAggregateInputType | true
    _min?: MovingJobMinAggregateInputType
    _max?: MovingJobMaxAggregateInputType
  }

  export type MovingJobGroupByOutputType = {
    id: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail: string | null
    jobDate: Date
    jobAddress: string
    dropoffAddress: string | null
    status: string
    teamLeaderId: string | null
    driverName: string | null
    vehicleNumber: string | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    companyId: string
    _count: MovingJobCountAggregateOutputType | null
    _min: MovingJobMinAggregateOutputType | null
    _max: MovingJobMaxAggregateOutputType | null
  }

  type GetMovingJobGroupByPayload<T extends MovingJobGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MovingJobGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MovingJobGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MovingJobGroupByOutputType[P]>
            : GetScalarType<T[P], MovingJobGroupByOutputType[P]>
        }
      >
    >


  export type MovingJobSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobCode?: boolean
    jobTitle?: boolean
    clientName?: boolean
    clientPhone?: boolean
    clientEmail?: boolean
    jobDate?: boolean
    jobAddress?: boolean
    dropoffAddress?: boolean
    status?: boolean
    teamLeaderId?: boolean
    driverName?: boolean
    vehicleNumber?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companyId?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    teamLeader?: boolean | MovingJob$teamLeaderArgs<ExtArgs>
    assignments?: boolean | MovingJob$assignmentsArgs<ExtArgs>
    materialIssues?: boolean | MovingJob$materialIssuesArgs<ExtArgs>
    materialReturns?: boolean | MovingJob$materialReturnsArgs<ExtArgs>
    costSnapshots?: boolean | MovingJob$costSnapshotsArgs<ExtArgs>
    approvals?: boolean | MovingJob$approvalsArgs<ExtArgs>
    _count?: boolean | MovingJobCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movingJob"]>

  export type MovingJobSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobCode?: boolean
    jobTitle?: boolean
    clientName?: boolean
    clientPhone?: boolean
    clientEmail?: boolean
    jobDate?: boolean
    jobAddress?: boolean
    dropoffAddress?: boolean
    status?: boolean
    teamLeaderId?: boolean
    driverName?: boolean
    vehicleNumber?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companyId?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    teamLeader?: boolean | MovingJob$teamLeaderArgs<ExtArgs>
  }, ExtArgs["result"]["movingJob"]>

  export type MovingJobSelectScalar = {
    id?: boolean
    jobCode?: boolean
    jobTitle?: boolean
    clientName?: boolean
    clientPhone?: boolean
    clientEmail?: boolean
    jobDate?: boolean
    jobAddress?: boolean
    dropoffAddress?: boolean
    status?: boolean
    teamLeaderId?: boolean
    driverName?: boolean
    vehicleNumber?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companyId?: boolean
  }

  export type MovingJobInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    teamLeader?: boolean | MovingJob$teamLeaderArgs<ExtArgs>
    assignments?: boolean | MovingJob$assignmentsArgs<ExtArgs>
    materialIssues?: boolean | MovingJob$materialIssuesArgs<ExtArgs>
    materialReturns?: boolean | MovingJob$materialReturnsArgs<ExtArgs>
    costSnapshots?: boolean | MovingJob$costSnapshotsArgs<ExtArgs>
    approvals?: boolean | MovingJob$approvalsArgs<ExtArgs>
    _count?: boolean | MovingJobCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MovingJobIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    teamLeader?: boolean | MovingJob$teamLeaderArgs<ExtArgs>
  }

  export type $MovingJobPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MovingJob"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      teamLeader: Prisma.$UserPayload<ExtArgs> | null
      assignments: Prisma.$JobAssignmentPayload<ExtArgs>[]
      materialIssues: Prisma.$MaterialIssuePayload<ExtArgs>[]
      materialReturns: Prisma.$MaterialReturnPayload<ExtArgs>[]
      costSnapshots: Prisma.$JobCostSnapshotPayload<ExtArgs>[]
      approvals: Prisma.$MaterialApprovalPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      jobCode: string
      jobTitle: string
      clientName: string
      clientPhone: string
      clientEmail: string | null
      jobDate: Date
      jobAddress: string
      dropoffAddress: string | null
      status: string
      teamLeaderId: string | null
      driverName: string | null
      vehicleNumber: string | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
      companyId: string
    }, ExtArgs["result"]["movingJob"]>
    composites: {}
  }

  type MovingJobGetPayload<S extends boolean | null | undefined | MovingJobDefaultArgs> = $Result.GetResult<Prisma.$MovingJobPayload, S>

  type MovingJobCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MovingJobFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MovingJobCountAggregateInputType | true
    }

  export interface MovingJobDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MovingJob'], meta: { name: 'MovingJob' } }
    /**
     * Find zero or one MovingJob that matches the filter.
     * @param {MovingJobFindUniqueArgs} args - Arguments to find a MovingJob
     * @example
     * // Get one MovingJob
     * const movingJob = await prisma.movingJob.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MovingJobFindUniqueArgs>(args: SelectSubset<T, MovingJobFindUniqueArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MovingJob that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MovingJobFindUniqueOrThrowArgs} args - Arguments to find a MovingJob
     * @example
     * // Get one MovingJob
     * const movingJob = await prisma.movingJob.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MovingJobFindUniqueOrThrowArgs>(args: SelectSubset<T, MovingJobFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MovingJob that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovingJobFindFirstArgs} args - Arguments to find a MovingJob
     * @example
     * // Get one MovingJob
     * const movingJob = await prisma.movingJob.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MovingJobFindFirstArgs>(args?: SelectSubset<T, MovingJobFindFirstArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MovingJob that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovingJobFindFirstOrThrowArgs} args - Arguments to find a MovingJob
     * @example
     * // Get one MovingJob
     * const movingJob = await prisma.movingJob.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MovingJobFindFirstOrThrowArgs>(args?: SelectSubset<T, MovingJobFindFirstOrThrowArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MovingJobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovingJobFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MovingJobs
     * const movingJobs = await prisma.movingJob.findMany()
     * 
     * // Get first 10 MovingJobs
     * const movingJobs = await prisma.movingJob.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const movingJobWithIdOnly = await prisma.movingJob.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MovingJobFindManyArgs>(args?: SelectSubset<T, MovingJobFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MovingJob.
     * @param {MovingJobCreateArgs} args - Arguments to create a MovingJob.
     * @example
     * // Create one MovingJob
     * const MovingJob = await prisma.movingJob.create({
     *   data: {
     *     // ... data to create a MovingJob
     *   }
     * })
     * 
     */
    create<T extends MovingJobCreateArgs>(args: SelectSubset<T, MovingJobCreateArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MovingJobs.
     * @param {MovingJobCreateManyArgs} args - Arguments to create many MovingJobs.
     * @example
     * // Create many MovingJobs
     * const movingJob = await prisma.movingJob.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MovingJobCreateManyArgs>(args?: SelectSubset<T, MovingJobCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MovingJobs and returns the data saved in the database.
     * @param {MovingJobCreateManyAndReturnArgs} args - Arguments to create many MovingJobs.
     * @example
     * // Create many MovingJobs
     * const movingJob = await prisma.movingJob.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MovingJobs and only return the `id`
     * const movingJobWithIdOnly = await prisma.movingJob.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MovingJobCreateManyAndReturnArgs>(args?: SelectSubset<T, MovingJobCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MovingJob.
     * @param {MovingJobDeleteArgs} args - Arguments to delete one MovingJob.
     * @example
     * // Delete one MovingJob
     * const MovingJob = await prisma.movingJob.delete({
     *   where: {
     *     // ... filter to delete one MovingJob
     *   }
     * })
     * 
     */
    delete<T extends MovingJobDeleteArgs>(args: SelectSubset<T, MovingJobDeleteArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MovingJob.
     * @param {MovingJobUpdateArgs} args - Arguments to update one MovingJob.
     * @example
     * // Update one MovingJob
     * const movingJob = await prisma.movingJob.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MovingJobUpdateArgs>(args: SelectSubset<T, MovingJobUpdateArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MovingJobs.
     * @param {MovingJobDeleteManyArgs} args - Arguments to filter MovingJobs to delete.
     * @example
     * // Delete a few MovingJobs
     * const { count } = await prisma.movingJob.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MovingJobDeleteManyArgs>(args?: SelectSubset<T, MovingJobDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MovingJobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovingJobUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MovingJobs
     * const movingJob = await prisma.movingJob.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MovingJobUpdateManyArgs>(args: SelectSubset<T, MovingJobUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MovingJob.
     * @param {MovingJobUpsertArgs} args - Arguments to update or create a MovingJob.
     * @example
     * // Update or create a MovingJob
     * const movingJob = await prisma.movingJob.upsert({
     *   create: {
     *     // ... data to create a MovingJob
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MovingJob we want to update
     *   }
     * })
     */
    upsert<T extends MovingJobUpsertArgs>(args: SelectSubset<T, MovingJobUpsertArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MovingJobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovingJobCountArgs} args - Arguments to filter MovingJobs to count.
     * @example
     * // Count the number of MovingJobs
     * const count = await prisma.movingJob.count({
     *   where: {
     *     // ... the filter for the MovingJobs we want to count
     *   }
     * })
    **/
    count<T extends MovingJobCountArgs>(
      args?: Subset<T, MovingJobCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MovingJobCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MovingJob.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovingJobAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MovingJobAggregateArgs>(args: Subset<T, MovingJobAggregateArgs>): Prisma.PrismaPromise<GetMovingJobAggregateType<T>>

    /**
     * Group by MovingJob.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovingJobGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MovingJobGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MovingJobGroupByArgs['orderBy'] }
        : { orderBy?: MovingJobGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MovingJobGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMovingJobGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MovingJob model
   */
  readonly fields: MovingJobFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MovingJob.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MovingJobClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    teamLeader<T extends MovingJob$teamLeaderArgs<ExtArgs> = {}>(args?: Subset<T, MovingJob$teamLeaderArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    assignments<T extends MovingJob$assignmentsArgs<ExtArgs> = {}>(args?: Subset<T, MovingJob$assignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "findMany"> | Null>
    materialIssues<T extends MovingJob$materialIssuesArgs<ExtArgs> = {}>(args?: Subset<T, MovingJob$materialIssuesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findMany"> | Null>
    materialReturns<T extends MovingJob$materialReturnsArgs<ExtArgs> = {}>(args?: Subset<T, MovingJob$materialReturnsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findMany"> | Null>
    costSnapshots<T extends MovingJob$costSnapshotsArgs<ExtArgs> = {}>(args?: Subset<T, MovingJob$costSnapshotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "findMany"> | Null>
    approvals<T extends MovingJob$approvalsArgs<ExtArgs> = {}>(args?: Subset<T, MovingJob$approvalsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MovingJob model
   */ 
  interface MovingJobFieldRefs {
    readonly id: FieldRef<"MovingJob", 'String'>
    readonly jobCode: FieldRef<"MovingJob", 'String'>
    readonly jobTitle: FieldRef<"MovingJob", 'String'>
    readonly clientName: FieldRef<"MovingJob", 'String'>
    readonly clientPhone: FieldRef<"MovingJob", 'String'>
    readonly clientEmail: FieldRef<"MovingJob", 'String'>
    readonly jobDate: FieldRef<"MovingJob", 'DateTime'>
    readonly jobAddress: FieldRef<"MovingJob", 'String'>
    readonly dropoffAddress: FieldRef<"MovingJob", 'String'>
    readonly status: FieldRef<"MovingJob", 'String'>
    readonly teamLeaderId: FieldRef<"MovingJob", 'String'>
    readonly driverName: FieldRef<"MovingJob", 'String'>
    readonly vehicleNumber: FieldRef<"MovingJob", 'String'>
    readonly notes: FieldRef<"MovingJob", 'String'>
    readonly createdAt: FieldRef<"MovingJob", 'DateTime'>
    readonly updatedAt: FieldRef<"MovingJob", 'DateTime'>
    readonly companyId: FieldRef<"MovingJob", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MovingJob findUnique
   */
  export type MovingJobFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    /**
     * Filter, which MovingJob to fetch.
     */
    where: MovingJobWhereUniqueInput
  }

  /**
   * MovingJob findUniqueOrThrow
   */
  export type MovingJobFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    /**
     * Filter, which MovingJob to fetch.
     */
    where: MovingJobWhereUniqueInput
  }

  /**
   * MovingJob findFirst
   */
  export type MovingJobFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    /**
     * Filter, which MovingJob to fetch.
     */
    where?: MovingJobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovingJobs to fetch.
     */
    orderBy?: MovingJobOrderByWithRelationInput | MovingJobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MovingJobs.
     */
    cursor?: MovingJobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovingJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovingJobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MovingJobs.
     */
    distinct?: MovingJobScalarFieldEnum | MovingJobScalarFieldEnum[]
  }

  /**
   * MovingJob findFirstOrThrow
   */
  export type MovingJobFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    /**
     * Filter, which MovingJob to fetch.
     */
    where?: MovingJobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovingJobs to fetch.
     */
    orderBy?: MovingJobOrderByWithRelationInput | MovingJobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MovingJobs.
     */
    cursor?: MovingJobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovingJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovingJobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MovingJobs.
     */
    distinct?: MovingJobScalarFieldEnum | MovingJobScalarFieldEnum[]
  }

  /**
   * MovingJob findMany
   */
  export type MovingJobFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    /**
     * Filter, which MovingJobs to fetch.
     */
    where?: MovingJobWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovingJobs to fetch.
     */
    orderBy?: MovingJobOrderByWithRelationInput | MovingJobOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MovingJobs.
     */
    cursor?: MovingJobWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovingJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovingJobs.
     */
    skip?: number
    distinct?: MovingJobScalarFieldEnum | MovingJobScalarFieldEnum[]
  }

  /**
   * MovingJob create
   */
  export type MovingJobCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    /**
     * The data needed to create a MovingJob.
     */
    data: XOR<MovingJobCreateInput, MovingJobUncheckedCreateInput>
  }

  /**
   * MovingJob createMany
   */
  export type MovingJobCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MovingJobs.
     */
    data: MovingJobCreateManyInput | MovingJobCreateManyInput[]
  }

  /**
   * MovingJob createManyAndReturn
   */
  export type MovingJobCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MovingJobs.
     */
    data: MovingJobCreateManyInput | MovingJobCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MovingJob update
   */
  export type MovingJobUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    /**
     * The data needed to update a MovingJob.
     */
    data: XOR<MovingJobUpdateInput, MovingJobUncheckedUpdateInput>
    /**
     * Choose, which MovingJob to update.
     */
    where: MovingJobWhereUniqueInput
  }

  /**
   * MovingJob updateMany
   */
  export type MovingJobUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MovingJobs.
     */
    data: XOR<MovingJobUpdateManyMutationInput, MovingJobUncheckedUpdateManyInput>
    /**
     * Filter which MovingJobs to update
     */
    where?: MovingJobWhereInput
  }

  /**
   * MovingJob upsert
   */
  export type MovingJobUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    /**
     * The filter to search for the MovingJob to update in case it exists.
     */
    where: MovingJobWhereUniqueInput
    /**
     * In case the MovingJob found by the `where` argument doesn't exist, create a new MovingJob with this data.
     */
    create: XOR<MovingJobCreateInput, MovingJobUncheckedCreateInput>
    /**
     * In case the MovingJob was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MovingJobUpdateInput, MovingJobUncheckedUpdateInput>
  }

  /**
   * MovingJob delete
   */
  export type MovingJobDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
    /**
     * Filter which MovingJob to delete.
     */
    where: MovingJobWhereUniqueInput
  }

  /**
   * MovingJob deleteMany
   */
  export type MovingJobDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MovingJobs to delete
     */
    where?: MovingJobWhereInput
  }

  /**
   * MovingJob.teamLeader
   */
  export type MovingJob$teamLeaderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * MovingJob.assignments
   */
  export type MovingJob$assignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    where?: JobAssignmentWhereInput
    orderBy?: JobAssignmentOrderByWithRelationInput | JobAssignmentOrderByWithRelationInput[]
    cursor?: JobAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobAssignmentScalarFieldEnum | JobAssignmentScalarFieldEnum[]
  }

  /**
   * MovingJob.materialIssues
   */
  export type MovingJob$materialIssuesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    where?: MaterialIssueWhereInput
    orderBy?: MaterialIssueOrderByWithRelationInput | MaterialIssueOrderByWithRelationInput[]
    cursor?: MaterialIssueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialIssueScalarFieldEnum | MaterialIssueScalarFieldEnum[]
  }

  /**
   * MovingJob.materialReturns
   */
  export type MovingJob$materialReturnsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    where?: MaterialReturnWhereInput
    orderBy?: MaterialReturnOrderByWithRelationInput | MaterialReturnOrderByWithRelationInput[]
    cursor?: MaterialReturnWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialReturnScalarFieldEnum | MaterialReturnScalarFieldEnum[]
  }

  /**
   * MovingJob.costSnapshots
   */
  export type MovingJob$costSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    where?: JobCostSnapshotWhereInput
    orderBy?: JobCostSnapshotOrderByWithRelationInput | JobCostSnapshotOrderByWithRelationInput[]
    cursor?: JobCostSnapshotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobCostSnapshotScalarFieldEnum | JobCostSnapshotScalarFieldEnum[]
  }

  /**
   * MovingJob.approvals
   */
  export type MovingJob$approvalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    where?: MaterialApprovalWhereInput
    orderBy?: MaterialApprovalOrderByWithRelationInput | MaterialApprovalOrderByWithRelationInput[]
    cursor?: MaterialApprovalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialApprovalScalarFieldEnum | MaterialApprovalScalarFieldEnum[]
  }

  /**
   * MovingJob without action
   */
  export type MovingJobDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovingJob
     */
    select?: MovingJobSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovingJobInclude<ExtArgs> | null
  }


  /**
   * Model JobAssignment
   */

  export type AggregateJobAssignment = {
    _count: JobAssignmentCountAggregateOutputType | null
    _avg: JobAssignmentAvgAggregateOutputType | null
    _sum: JobAssignmentSumAggregateOutputType | null
    _min: JobAssignmentMinAggregateOutputType | null
    _max: JobAssignmentMaxAggregateOutputType | null
  }

  export type JobAssignmentAvgAggregateOutputType = {
    hourlyRate: number | null
    hoursWorked: number | null
  }

  export type JobAssignmentSumAggregateOutputType = {
    hourlyRate: number | null
    hoursWorked: number | null
  }

  export type JobAssignmentMinAggregateOutputType = {
    id: string | null
    jobId: string | null
    userId: string | null
    role: string | null
    checkInAt: Date | null
    checkOutAt: Date | null
    hourlyRate: number | null
    hoursWorked: number | null
    createdAt: Date | null
    updatedAt: Date | null
    companyId: string | null
  }

  export type JobAssignmentMaxAggregateOutputType = {
    id: string | null
    jobId: string | null
    userId: string | null
    role: string | null
    checkInAt: Date | null
    checkOutAt: Date | null
    hourlyRate: number | null
    hoursWorked: number | null
    createdAt: Date | null
    updatedAt: Date | null
    companyId: string | null
  }

  export type JobAssignmentCountAggregateOutputType = {
    id: number
    jobId: number
    userId: number
    role: number
    checkInAt: number
    checkOutAt: number
    hourlyRate: number
    hoursWorked: number
    createdAt: number
    updatedAt: number
    companyId: number
    _all: number
  }


  export type JobAssignmentAvgAggregateInputType = {
    hourlyRate?: true
    hoursWorked?: true
  }

  export type JobAssignmentSumAggregateInputType = {
    hourlyRate?: true
    hoursWorked?: true
  }

  export type JobAssignmentMinAggregateInputType = {
    id?: true
    jobId?: true
    userId?: true
    role?: true
    checkInAt?: true
    checkOutAt?: true
    hourlyRate?: true
    hoursWorked?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
  }

  export type JobAssignmentMaxAggregateInputType = {
    id?: true
    jobId?: true
    userId?: true
    role?: true
    checkInAt?: true
    checkOutAt?: true
    hourlyRate?: true
    hoursWorked?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
  }

  export type JobAssignmentCountAggregateInputType = {
    id?: true
    jobId?: true
    userId?: true
    role?: true
    checkInAt?: true
    checkOutAt?: true
    hourlyRate?: true
    hoursWorked?: true
    createdAt?: true
    updatedAt?: true
    companyId?: true
    _all?: true
  }

  export type JobAssignmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobAssignment to aggregate.
     */
    where?: JobAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobAssignments to fetch.
     */
    orderBy?: JobAssignmentOrderByWithRelationInput | JobAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobAssignments
    **/
    _count?: true | JobAssignmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobAssignmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobAssignmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobAssignmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobAssignmentMaxAggregateInputType
  }

  export type GetJobAssignmentAggregateType<T extends JobAssignmentAggregateArgs> = {
        [P in keyof T & keyof AggregateJobAssignment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobAssignment[P]>
      : GetScalarType<T[P], AggregateJobAssignment[P]>
  }




  export type JobAssignmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobAssignmentWhereInput
    orderBy?: JobAssignmentOrderByWithAggregationInput | JobAssignmentOrderByWithAggregationInput[]
    by: JobAssignmentScalarFieldEnum[] | JobAssignmentScalarFieldEnum
    having?: JobAssignmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobAssignmentCountAggregateInputType | true
    _avg?: JobAssignmentAvgAggregateInputType
    _sum?: JobAssignmentSumAggregateInputType
    _min?: JobAssignmentMinAggregateInputType
    _max?: JobAssignmentMaxAggregateInputType
  }

  export type JobAssignmentGroupByOutputType = {
    id: string
    jobId: string
    userId: string
    role: string
    checkInAt: Date | null
    checkOutAt: Date | null
    hourlyRate: number | null
    hoursWorked: number | null
    createdAt: Date
    updatedAt: Date
    companyId: string
    _count: JobAssignmentCountAggregateOutputType | null
    _avg: JobAssignmentAvgAggregateOutputType | null
    _sum: JobAssignmentSumAggregateOutputType | null
    _min: JobAssignmentMinAggregateOutputType | null
    _max: JobAssignmentMaxAggregateOutputType | null
  }

  type GetJobAssignmentGroupByPayload<T extends JobAssignmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobAssignmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobAssignmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobAssignmentGroupByOutputType[P]>
            : GetScalarType<T[P], JobAssignmentGroupByOutputType[P]>
        }
      >
    >


  export type JobAssignmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    userId?: boolean
    role?: boolean
    checkInAt?: boolean
    checkOutAt?: boolean
    hourlyRate?: boolean
    hoursWorked?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companyId?: boolean
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobAssignment"]>

  export type JobAssignmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    userId?: boolean
    role?: boolean
    checkInAt?: boolean
    checkOutAt?: boolean
    hourlyRate?: boolean
    hoursWorked?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companyId?: boolean
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobAssignment"]>

  export type JobAssignmentSelectScalar = {
    id?: boolean
    jobId?: boolean
    userId?: boolean
    role?: boolean
    checkInAt?: boolean
    checkOutAt?: boolean
    hourlyRate?: boolean
    hoursWorked?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    companyId?: boolean
  }

  export type JobAssignmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type JobAssignmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $JobAssignmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobAssignment"
    objects: {
      job: Prisma.$MovingJobPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      jobId: string
      userId: string
      role: string
      checkInAt: Date | null
      checkOutAt: Date | null
      hourlyRate: number | null
      hoursWorked: number | null
      createdAt: Date
      updatedAt: Date
      companyId: string
    }, ExtArgs["result"]["jobAssignment"]>
    composites: {}
  }

  type JobAssignmentGetPayload<S extends boolean | null | undefined | JobAssignmentDefaultArgs> = $Result.GetResult<Prisma.$JobAssignmentPayload, S>

  type JobAssignmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<JobAssignmentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JobAssignmentCountAggregateInputType | true
    }

  export interface JobAssignmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobAssignment'], meta: { name: 'JobAssignment' } }
    /**
     * Find zero or one JobAssignment that matches the filter.
     * @param {JobAssignmentFindUniqueArgs} args - Arguments to find a JobAssignment
     * @example
     * // Get one JobAssignment
     * const jobAssignment = await prisma.jobAssignment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobAssignmentFindUniqueArgs>(args: SelectSubset<T, JobAssignmentFindUniqueArgs<ExtArgs>>): Prisma__JobAssignmentClient<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one JobAssignment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {JobAssignmentFindUniqueOrThrowArgs} args - Arguments to find a JobAssignment
     * @example
     * // Get one JobAssignment
     * const jobAssignment = await prisma.jobAssignment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobAssignmentFindUniqueOrThrowArgs>(args: SelectSubset<T, JobAssignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobAssignmentClient<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first JobAssignment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobAssignmentFindFirstArgs} args - Arguments to find a JobAssignment
     * @example
     * // Get one JobAssignment
     * const jobAssignment = await prisma.jobAssignment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobAssignmentFindFirstArgs>(args?: SelectSubset<T, JobAssignmentFindFirstArgs<ExtArgs>>): Prisma__JobAssignmentClient<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first JobAssignment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobAssignmentFindFirstOrThrowArgs} args - Arguments to find a JobAssignment
     * @example
     * // Get one JobAssignment
     * const jobAssignment = await prisma.jobAssignment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobAssignmentFindFirstOrThrowArgs>(args?: SelectSubset<T, JobAssignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobAssignmentClient<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more JobAssignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobAssignmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobAssignments
     * const jobAssignments = await prisma.jobAssignment.findMany()
     * 
     * // Get first 10 JobAssignments
     * const jobAssignments = await prisma.jobAssignment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobAssignmentWithIdOnly = await prisma.jobAssignment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobAssignmentFindManyArgs>(args?: SelectSubset<T, JobAssignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a JobAssignment.
     * @param {JobAssignmentCreateArgs} args - Arguments to create a JobAssignment.
     * @example
     * // Create one JobAssignment
     * const JobAssignment = await prisma.jobAssignment.create({
     *   data: {
     *     // ... data to create a JobAssignment
     *   }
     * })
     * 
     */
    create<T extends JobAssignmentCreateArgs>(args: SelectSubset<T, JobAssignmentCreateArgs<ExtArgs>>): Prisma__JobAssignmentClient<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many JobAssignments.
     * @param {JobAssignmentCreateManyArgs} args - Arguments to create many JobAssignments.
     * @example
     * // Create many JobAssignments
     * const jobAssignment = await prisma.jobAssignment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobAssignmentCreateManyArgs>(args?: SelectSubset<T, JobAssignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobAssignments and returns the data saved in the database.
     * @param {JobAssignmentCreateManyAndReturnArgs} args - Arguments to create many JobAssignments.
     * @example
     * // Create many JobAssignments
     * const jobAssignment = await prisma.jobAssignment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobAssignments and only return the `id`
     * const jobAssignmentWithIdOnly = await prisma.jobAssignment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobAssignmentCreateManyAndReturnArgs>(args?: SelectSubset<T, JobAssignmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a JobAssignment.
     * @param {JobAssignmentDeleteArgs} args - Arguments to delete one JobAssignment.
     * @example
     * // Delete one JobAssignment
     * const JobAssignment = await prisma.jobAssignment.delete({
     *   where: {
     *     // ... filter to delete one JobAssignment
     *   }
     * })
     * 
     */
    delete<T extends JobAssignmentDeleteArgs>(args: SelectSubset<T, JobAssignmentDeleteArgs<ExtArgs>>): Prisma__JobAssignmentClient<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one JobAssignment.
     * @param {JobAssignmentUpdateArgs} args - Arguments to update one JobAssignment.
     * @example
     * // Update one JobAssignment
     * const jobAssignment = await prisma.jobAssignment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobAssignmentUpdateArgs>(args: SelectSubset<T, JobAssignmentUpdateArgs<ExtArgs>>): Prisma__JobAssignmentClient<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more JobAssignments.
     * @param {JobAssignmentDeleteManyArgs} args - Arguments to filter JobAssignments to delete.
     * @example
     * // Delete a few JobAssignments
     * const { count } = await prisma.jobAssignment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobAssignmentDeleteManyArgs>(args?: SelectSubset<T, JobAssignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobAssignmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobAssignments
     * const jobAssignment = await prisma.jobAssignment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobAssignmentUpdateManyArgs>(args: SelectSubset<T, JobAssignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one JobAssignment.
     * @param {JobAssignmentUpsertArgs} args - Arguments to update or create a JobAssignment.
     * @example
     * // Update or create a JobAssignment
     * const jobAssignment = await prisma.jobAssignment.upsert({
     *   create: {
     *     // ... data to create a JobAssignment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobAssignment we want to update
     *   }
     * })
     */
    upsert<T extends JobAssignmentUpsertArgs>(args: SelectSubset<T, JobAssignmentUpsertArgs<ExtArgs>>): Prisma__JobAssignmentClient<$Result.GetResult<Prisma.$JobAssignmentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of JobAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobAssignmentCountArgs} args - Arguments to filter JobAssignments to count.
     * @example
     * // Count the number of JobAssignments
     * const count = await prisma.jobAssignment.count({
     *   where: {
     *     // ... the filter for the JobAssignments we want to count
     *   }
     * })
    **/
    count<T extends JobAssignmentCountArgs>(
      args?: Subset<T, JobAssignmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobAssignmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobAssignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobAssignmentAggregateArgs>(args: Subset<T, JobAssignmentAggregateArgs>): Prisma.PrismaPromise<GetJobAssignmentAggregateType<T>>

    /**
     * Group by JobAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobAssignmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobAssignmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobAssignmentGroupByArgs['orderBy'] }
        : { orderBy?: JobAssignmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobAssignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobAssignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobAssignment model
   */
  readonly fields: JobAssignmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobAssignment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobAssignmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    job<T extends MovingJobDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MovingJobDefaultArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobAssignment model
   */ 
  interface JobAssignmentFieldRefs {
    readonly id: FieldRef<"JobAssignment", 'String'>
    readonly jobId: FieldRef<"JobAssignment", 'String'>
    readonly userId: FieldRef<"JobAssignment", 'String'>
    readonly role: FieldRef<"JobAssignment", 'String'>
    readonly checkInAt: FieldRef<"JobAssignment", 'DateTime'>
    readonly checkOutAt: FieldRef<"JobAssignment", 'DateTime'>
    readonly hourlyRate: FieldRef<"JobAssignment", 'Float'>
    readonly hoursWorked: FieldRef<"JobAssignment", 'Float'>
    readonly createdAt: FieldRef<"JobAssignment", 'DateTime'>
    readonly updatedAt: FieldRef<"JobAssignment", 'DateTime'>
    readonly companyId: FieldRef<"JobAssignment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * JobAssignment findUnique
   */
  export type JobAssignmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which JobAssignment to fetch.
     */
    where: JobAssignmentWhereUniqueInput
  }

  /**
   * JobAssignment findUniqueOrThrow
   */
  export type JobAssignmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which JobAssignment to fetch.
     */
    where: JobAssignmentWhereUniqueInput
  }

  /**
   * JobAssignment findFirst
   */
  export type JobAssignmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which JobAssignment to fetch.
     */
    where?: JobAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobAssignments to fetch.
     */
    orderBy?: JobAssignmentOrderByWithRelationInput | JobAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobAssignments.
     */
    cursor?: JobAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobAssignments.
     */
    distinct?: JobAssignmentScalarFieldEnum | JobAssignmentScalarFieldEnum[]
  }

  /**
   * JobAssignment findFirstOrThrow
   */
  export type JobAssignmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which JobAssignment to fetch.
     */
    where?: JobAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobAssignments to fetch.
     */
    orderBy?: JobAssignmentOrderByWithRelationInput | JobAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobAssignments.
     */
    cursor?: JobAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobAssignments.
     */
    distinct?: JobAssignmentScalarFieldEnum | JobAssignmentScalarFieldEnum[]
  }

  /**
   * JobAssignment findMany
   */
  export type JobAssignmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which JobAssignments to fetch.
     */
    where?: JobAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobAssignments to fetch.
     */
    orderBy?: JobAssignmentOrderByWithRelationInput | JobAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobAssignments.
     */
    cursor?: JobAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobAssignments.
     */
    skip?: number
    distinct?: JobAssignmentScalarFieldEnum | JobAssignmentScalarFieldEnum[]
  }

  /**
   * JobAssignment create
   */
  export type JobAssignmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to create a JobAssignment.
     */
    data: XOR<JobAssignmentCreateInput, JobAssignmentUncheckedCreateInput>
  }

  /**
   * JobAssignment createMany
   */
  export type JobAssignmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobAssignments.
     */
    data: JobAssignmentCreateManyInput | JobAssignmentCreateManyInput[]
  }

  /**
   * JobAssignment createManyAndReturn
   */
  export type JobAssignmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many JobAssignments.
     */
    data: JobAssignmentCreateManyInput | JobAssignmentCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobAssignment update
   */
  export type JobAssignmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to update a JobAssignment.
     */
    data: XOR<JobAssignmentUpdateInput, JobAssignmentUncheckedUpdateInput>
    /**
     * Choose, which JobAssignment to update.
     */
    where: JobAssignmentWhereUniqueInput
  }

  /**
   * JobAssignment updateMany
   */
  export type JobAssignmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobAssignments.
     */
    data: XOR<JobAssignmentUpdateManyMutationInput, JobAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which JobAssignments to update
     */
    where?: JobAssignmentWhereInput
  }

  /**
   * JobAssignment upsert
   */
  export type JobAssignmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    /**
     * The filter to search for the JobAssignment to update in case it exists.
     */
    where: JobAssignmentWhereUniqueInput
    /**
     * In case the JobAssignment found by the `where` argument doesn't exist, create a new JobAssignment with this data.
     */
    create: XOR<JobAssignmentCreateInput, JobAssignmentUncheckedCreateInput>
    /**
     * In case the JobAssignment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobAssignmentUpdateInput, JobAssignmentUncheckedUpdateInput>
  }

  /**
   * JobAssignment delete
   */
  export type JobAssignmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
    /**
     * Filter which JobAssignment to delete.
     */
    where: JobAssignmentWhereUniqueInput
  }

  /**
   * JobAssignment deleteMany
   */
  export type JobAssignmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobAssignments to delete
     */
    where?: JobAssignmentWhereInput
  }

  /**
   * JobAssignment without action
   */
  export type JobAssignmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobAssignment
     */
    select?: JobAssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobAssignmentInclude<ExtArgs> | null
  }


  /**
   * Model PackingMaterial
   */

  export type AggregatePackingMaterial = {
    _count: PackingMaterialCountAggregateOutputType | null
    _avg: PackingMaterialAvgAggregateOutputType | null
    _sum: PackingMaterialSumAggregateOutputType | null
    _min: PackingMaterialMinAggregateOutputType | null
    _max: PackingMaterialMaxAggregateOutputType | null
  }

  export type PackingMaterialAvgAggregateOutputType = {
    minStockLevel: number | null
    totalQuantity: number | null
    unitCost: number | null
    sellingPrice: number | null
  }

  export type PackingMaterialSumAggregateOutputType = {
    minStockLevel: number | null
    totalQuantity: number | null
    unitCost: number | null
    sellingPrice: number | null
  }

  export type PackingMaterialMinAggregateOutputType = {
    id: string | null
    sku: string | null
    name: string | null
    description: string | null
    unit: string | null
    category: string | null
    minStockLevel: number | null
    totalQuantity: number | null
    unitCost: number | null
    sellingPrice: number | null
    isActive: boolean | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PackingMaterialMaxAggregateOutputType = {
    id: string | null
    sku: string | null
    name: string | null
    description: string | null
    unit: string | null
    category: string | null
    minStockLevel: number | null
    totalQuantity: number | null
    unitCost: number | null
    sellingPrice: number | null
    isActive: boolean | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PackingMaterialCountAggregateOutputType = {
    id: number
    sku: number
    name: number
    description: number
    unit: number
    category: number
    minStockLevel: number
    totalQuantity: number
    unitCost: number
    sellingPrice: number
    isActive: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PackingMaterialAvgAggregateInputType = {
    minStockLevel?: true
    totalQuantity?: true
    unitCost?: true
    sellingPrice?: true
  }

  export type PackingMaterialSumAggregateInputType = {
    minStockLevel?: true
    totalQuantity?: true
    unitCost?: true
    sellingPrice?: true
  }

  export type PackingMaterialMinAggregateInputType = {
    id?: true
    sku?: true
    name?: true
    description?: true
    unit?: true
    category?: true
    minStockLevel?: true
    totalQuantity?: true
    unitCost?: true
    sellingPrice?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PackingMaterialMaxAggregateInputType = {
    id?: true
    sku?: true
    name?: true
    description?: true
    unit?: true
    category?: true
    minStockLevel?: true
    totalQuantity?: true
    unitCost?: true
    sellingPrice?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PackingMaterialCountAggregateInputType = {
    id?: true
    sku?: true
    name?: true
    description?: true
    unit?: true
    category?: true
    minStockLevel?: true
    totalQuantity?: true
    unitCost?: true
    sellingPrice?: true
    isActive?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PackingMaterialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PackingMaterial to aggregate.
     */
    where?: PackingMaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PackingMaterials to fetch.
     */
    orderBy?: PackingMaterialOrderByWithRelationInput | PackingMaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PackingMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PackingMaterials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PackingMaterials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PackingMaterials
    **/
    _count?: true | PackingMaterialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PackingMaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PackingMaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PackingMaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PackingMaterialMaxAggregateInputType
  }

  export type GetPackingMaterialAggregateType<T extends PackingMaterialAggregateArgs> = {
        [P in keyof T & keyof AggregatePackingMaterial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePackingMaterial[P]>
      : GetScalarType<T[P], AggregatePackingMaterial[P]>
  }




  export type PackingMaterialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PackingMaterialWhereInput
    orderBy?: PackingMaterialOrderByWithAggregationInput | PackingMaterialOrderByWithAggregationInput[]
    by: PackingMaterialScalarFieldEnum[] | PackingMaterialScalarFieldEnum
    having?: PackingMaterialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PackingMaterialCountAggregateInputType | true
    _avg?: PackingMaterialAvgAggregateInputType
    _sum?: PackingMaterialSumAggregateInputType
    _min?: PackingMaterialMinAggregateInputType
    _max?: PackingMaterialMaxAggregateInputType
  }

  export type PackingMaterialGroupByOutputType = {
    id: string
    sku: string
    name: string
    description: string | null
    unit: string
    category: string
    minStockLevel: number
    totalQuantity: number
    unitCost: number | null
    sellingPrice: number | null
    isActive: boolean
    companyId: string
    createdAt: Date
    updatedAt: Date
    _count: PackingMaterialCountAggregateOutputType | null
    _avg: PackingMaterialAvgAggregateOutputType | null
    _sum: PackingMaterialSumAggregateOutputType | null
    _min: PackingMaterialMinAggregateOutputType | null
    _max: PackingMaterialMaxAggregateOutputType | null
  }

  type GetPackingMaterialGroupByPayload<T extends PackingMaterialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PackingMaterialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PackingMaterialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PackingMaterialGroupByOutputType[P]>
            : GetScalarType<T[P], PackingMaterialGroupByOutputType[P]>
        }
      >
    >


  export type PackingMaterialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sku?: boolean
    name?: boolean
    description?: boolean
    unit?: boolean
    category?: boolean
    minStockLevel?: boolean
    totalQuantity?: boolean
    unitCost?: boolean
    sellingPrice?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    stockBatches?: boolean | PackingMaterial$stockBatchesArgs<ExtArgs>
    rackLevels?: boolean | PackingMaterial$rackLevelsArgs<ExtArgs>
    materialIssues?: boolean | PackingMaterial$materialIssuesArgs<ExtArgs>
    materialReturns?: boolean | PackingMaterial$materialReturnsArgs<ExtArgs>
    materialDamages?: boolean | PackingMaterial$materialDamagesArgs<ExtArgs>
    _count?: boolean | PackingMaterialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["packingMaterial"]>

  export type PackingMaterialSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sku?: boolean
    name?: boolean
    description?: boolean
    unit?: boolean
    category?: boolean
    minStockLevel?: boolean
    totalQuantity?: boolean
    unitCost?: boolean
    sellingPrice?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["packingMaterial"]>

  export type PackingMaterialSelectScalar = {
    id?: boolean
    sku?: boolean
    name?: boolean
    description?: boolean
    unit?: boolean
    category?: boolean
    minStockLevel?: boolean
    totalQuantity?: boolean
    unitCost?: boolean
    sellingPrice?: boolean
    isActive?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PackingMaterialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    stockBatches?: boolean | PackingMaterial$stockBatchesArgs<ExtArgs>
    rackLevels?: boolean | PackingMaterial$rackLevelsArgs<ExtArgs>
    materialIssues?: boolean | PackingMaterial$materialIssuesArgs<ExtArgs>
    materialReturns?: boolean | PackingMaterial$materialReturnsArgs<ExtArgs>
    materialDamages?: boolean | PackingMaterial$materialDamagesArgs<ExtArgs>
    _count?: boolean | PackingMaterialCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PackingMaterialIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $PackingMaterialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PackingMaterial"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      stockBatches: Prisma.$StockBatchPayload<ExtArgs>[]
      rackLevels: Prisma.$RackStockLevelPayload<ExtArgs>[]
      materialIssues: Prisma.$MaterialIssuePayload<ExtArgs>[]
      materialReturns: Prisma.$MaterialReturnPayload<ExtArgs>[]
      materialDamages: Prisma.$MaterialDamagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sku: string
      name: string
      description: string | null
      unit: string
      category: string
      minStockLevel: number
      totalQuantity: number
      unitCost: number | null
      sellingPrice: number | null
      isActive: boolean
      companyId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["packingMaterial"]>
    composites: {}
  }

  type PackingMaterialGetPayload<S extends boolean | null | undefined | PackingMaterialDefaultArgs> = $Result.GetResult<Prisma.$PackingMaterialPayload, S>

  type PackingMaterialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PackingMaterialFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PackingMaterialCountAggregateInputType | true
    }

  export interface PackingMaterialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PackingMaterial'], meta: { name: 'PackingMaterial' } }
    /**
     * Find zero or one PackingMaterial that matches the filter.
     * @param {PackingMaterialFindUniqueArgs} args - Arguments to find a PackingMaterial
     * @example
     * // Get one PackingMaterial
     * const packingMaterial = await prisma.packingMaterial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PackingMaterialFindUniqueArgs>(args: SelectSubset<T, PackingMaterialFindUniqueArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PackingMaterial that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PackingMaterialFindUniqueOrThrowArgs} args - Arguments to find a PackingMaterial
     * @example
     * // Get one PackingMaterial
     * const packingMaterial = await prisma.packingMaterial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PackingMaterialFindUniqueOrThrowArgs>(args: SelectSubset<T, PackingMaterialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PackingMaterial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackingMaterialFindFirstArgs} args - Arguments to find a PackingMaterial
     * @example
     * // Get one PackingMaterial
     * const packingMaterial = await prisma.packingMaterial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PackingMaterialFindFirstArgs>(args?: SelectSubset<T, PackingMaterialFindFirstArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PackingMaterial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackingMaterialFindFirstOrThrowArgs} args - Arguments to find a PackingMaterial
     * @example
     * // Get one PackingMaterial
     * const packingMaterial = await prisma.packingMaterial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PackingMaterialFindFirstOrThrowArgs>(args?: SelectSubset<T, PackingMaterialFindFirstOrThrowArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PackingMaterials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackingMaterialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PackingMaterials
     * const packingMaterials = await prisma.packingMaterial.findMany()
     * 
     * // Get first 10 PackingMaterials
     * const packingMaterials = await prisma.packingMaterial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const packingMaterialWithIdOnly = await prisma.packingMaterial.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PackingMaterialFindManyArgs>(args?: SelectSubset<T, PackingMaterialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PackingMaterial.
     * @param {PackingMaterialCreateArgs} args - Arguments to create a PackingMaterial.
     * @example
     * // Create one PackingMaterial
     * const PackingMaterial = await prisma.packingMaterial.create({
     *   data: {
     *     // ... data to create a PackingMaterial
     *   }
     * })
     * 
     */
    create<T extends PackingMaterialCreateArgs>(args: SelectSubset<T, PackingMaterialCreateArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PackingMaterials.
     * @param {PackingMaterialCreateManyArgs} args - Arguments to create many PackingMaterials.
     * @example
     * // Create many PackingMaterials
     * const packingMaterial = await prisma.packingMaterial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PackingMaterialCreateManyArgs>(args?: SelectSubset<T, PackingMaterialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PackingMaterials and returns the data saved in the database.
     * @param {PackingMaterialCreateManyAndReturnArgs} args - Arguments to create many PackingMaterials.
     * @example
     * // Create many PackingMaterials
     * const packingMaterial = await prisma.packingMaterial.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PackingMaterials and only return the `id`
     * const packingMaterialWithIdOnly = await prisma.packingMaterial.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PackingMaterialCreateManyAndReturnArgs>(args?: SelectSubset<T, PackingMaterialCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PackingMaterial.
     * @param {PackingMaterialDeleteArgs} args - Arguments to delete one PackingMaterial.
     * @example
     * // Delete one PackingMaterial
     * const PackingMaterial = await prisma.packingMaterial.delete({
     *   where: {
     *     // ... filter to delete one PackingMaterial
     *   }
     * })
     * 
     */
    delete<T extends PackingMaterialDeleteArgs>(args: SelectSubset<T, PackingMaterialDeleteArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PackingMaterial.
     * @param {PackingMaterialUpdateArgs} args - Arguments to update one PackingMaterial.
     * @example
     * // Update one PackingMaterial
     * const packingMaterial = await prisma.packingMaterial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PackingMaterialUpdateArgs>(args: SelectSubset<T, PackingMaterialUpdateArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PackingMaterials.
     * @param {PackingMaterialDeleteManyArgs} args - Arguments to filter PackingMaterials to delete.
     * @example
     * // Delete a few PackingMaterials
     * const { count } = await prisma.packingMaterial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PackingMaterialDeleteManyArgs>(args?: SelectSubset<T, PackingMaterialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PackingMaterials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackingMaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PackingMaterials
     * const packingMaterial = await prisma.packingMaterial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PackingMaterialUpdateManyArgs>(args: SelectSubset<T, PackingMaterialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PackingMaterial.
     * @param {PackingMaterialUpsertArgs} args - Arguments to update or create a PackingMaterial.
     * @example
     * // Update or create a PackingMaterial
     * const packingMaterial = await prisma.packingMaterial.upsert({
     *   create: {
     *     // ... data to create a PackingMaterial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PackingMaterial we want to update
     *   }
     * })
     */
    upsert<T extends PackingMaterialUpsertArgs>(args: SelectSubset<T, PackingMaterialUpsertArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PackingMaterials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackingMaterialCountArgs} args - Arguments to filter PackingMaterials to count.
     * @example
     * // Count the number of PackingMaterials
     * const count = await prisma.packingMaterial.count({
     *   where: {
     *     // ... the filter for the PackingMaterials we want to count
     *   }
     * })
    **/
    count<T extends PackingMaterialCountArgs>(
      args?: Subset<T, PackingMaterialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PackingMaterialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PackingMaterial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackingMaterialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PackingMaterialAggregateArgs>(args: Subset<T, PackingMaterialAggregateArgs>): Prisma.PrismaPromise<GetPackingMaterialAggregateType<T>>

    /**
     * Group by PackingMaterial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackingMaterialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PackingMaterialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PackingMaterialGroupByArgs['orderBy'] }
        : { orderBy?: PackingMaterialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PackingMaterialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPackingMaterialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PackingMaterial model
   */
  readonly fields: PackingMaterialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PackingMaterial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PackingMaterialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    stockBatches<T extends PackingMaterial$stockBatchesArgs<ExtArgs> = {}>(args?: Subset<T, PackingMaterial$stockBatchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findMany"> | Null>
    rackLevels<T extends PackingMaterial$rackLevelsArgs<ExtArgs> = {}>(args?: Subset<T, PackingMaterial$rackLevelsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "findMany"> | Null>
    materialIssues<T extends PackingMaterial$materialIssuesArgs<ExtArgs> = {}>(args?: Subset<T, PackingMaterial$materialIssuesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findMany"> | Null>
    materialReturns<T extends PackingMaterial$materialReturnsArgs<ExtArgs> = {}>(args?: Subset<T, PackingMaterial$materialReturnsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findMany"> | Null>
    materialDamages<T extends PackingMaterial$materialDamagesArgs<ExtArgs> = {}>(args?: Subset<T, PackingMaterial$materialDamagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PackingMaterial model
   */ 
  interface PackingMaterialFieldRefs {
    readonly id: FieldRef<"PackingMaterial", 'String'>
    readonly sku: FieldRef<"PackingMaterial", 'String'>
    readonly name: FieldRef<"PackingMaterial", 'String'>
    readonly description: FieldRef<"PackingMaterial", 'String'>
    readonly unit: FieldRef<"PackingMaterial", 'String'>
    readonly category: FieldRef<"PackingMaterial", 'String'>
    readonly minStockLevel: FieldRef<"PackingMaterial", 'Int'>
    readonly totalQuantity: FieldRef<"PackingMaterial", 'Int'>
    readonly unitCost: FieldRef<"PackingMaterial", 'Float'>
    readonly sellingPrice: FieldRef<"PackingMaterial", 'Float'>
    readonly isActive: FieldRef<"PackingMaterial", 'Boolean'>
    readonly companyId: FieldRef<"PackingMaterial", 'String'>
    readonly createdAt: FieldRef<"PackingMaterial", 'DateTime'>
    readonly updatedAt: FieldRef<"PackingMaterial", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PackingMaterial findUnique
   */
  export type PackingMaterialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
    /**
     * Filter, which PackingMaterial to fetch.
     */
    where: PackingMaterialWhereUniqueInput
  }

  /**
   * PackingMaterial findUniqueOrThrow
   */
  export type PackingMaterialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
    /**
     * Filter, which PackingMaterial to fetch.
     */
    where: PackingMaterialWhereUniqueInput
  }

  /**
   * PackingMaterial findFirst
   */
  export type PackingMaterialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
    /**
     * Filter, which PackingMaterial to fetch.
     */
    where?: PackingMaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PackingMaterials to fetch.
     */
    orderBy?: PackingMaterialOrderByWithRelationInput | PackingMaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PackingMaterials.
     */
    cursor?: PackingMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PackingMaterials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PackingMaterials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PackingMaterials.
     */
    distinct?: PackingMaterialScalarFieldEnum | PackingMaterialScalarFieldEnum[]
  }

  /**
   * PackingMaterial findFirstOrThrow
   */
  export type PackingMaterialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
    /**
     * Filter, which PackingMaterial to fetch.
     */
    where?: PackingMaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PackingMaterials to fetch.
     */
    orderBy?: PackingMaterialOrderByWithRelationInput | PackingMaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PackingMaterials.
     */
    cursor?: PackingMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PackingMaterials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PackingMaterials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PackingMaterials.
     */
    distinct?: PackingMaterialScalarFieldEnum | PackingMaterialScalarFieldEnum[]
  }

  /**
   * PackingMaterial findMany
   */
  export type PackingMaterialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
    /**
     * Filter, which PackingMaterials to fetch.
     */
    where?: PackingMaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PackingMaterials to fetch.
     */
    orderBy?: PackingMaterialOrderByWithRelationInput | PackingMaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PackingMaterials.
     */
    cursor?: PackingMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PackingMaterials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PackingMaterials.
     */
    skip?: number
    distinct?: PackingMaterialScalarFieldEnum | PackingMaterialScalarFieldEnum[]
  }

  /**
   * PackingMaterial create
   */
  export type PackingMaterialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
    /**
     * The data needed to create a PackingMaterial.
     */
    data: XOR<PackingMaterialCreateInput, PackingMaterialUncheckedCreateInput>
  }

  /**
   * PackingMaterial createMany
   */
  export type PackingMaterialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PackingMaterials.
     */
    data: PackingMaterialCreateManyInput | PackingMaterialCreateManyInput[]
  }

  /**
   * PackingMaterial createManyAndReturn
   */
  export type PackingMaterialCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PackingMaterials.
     */
    data: PackingMaterialCreateManyInput | PackingMaterialCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PackingMaterial update
   */
  export type PackingMaterialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
    /**
     * The data needed to update a PackingMaterial.
     */
    data: XOR<PackingMaterialUpdateInput, PackingMaterialUncheckedUpdateInput>
    /**
     * Choose, which PackingMaterial to update.
     */
    where: PackingMaterialWhereUniqueInput
  }

  /**
   * PackingMaterial updateMany
   */
  export type PackingMaterialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PackingMaterials.
     */
    data: XOR<PackingMaterialUpdateManyMutationInput, PackingMaterialUncheckedUpdateManyInput>
    /**
     * Filter which PackingMaterials to update
     */
    where?: PackingMaterialWhereInput
  }

  /**
   * PackingMaterial upsert
   */
  export type PackingMaterialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
    /**
     * The filter to search for the PackingMaterial to update in case it exists.
     */
    where: PackingMaterialWhereUniqueInput
    /**
     * In case the PackingMaterial found by the `where` argument doesn't exist, create a new PackingMaterial with this data.
     */
    create: XOR<PackingMaterialCreateInput, PackingMaterialUncheckedCreateInput>
    /**
     * In case the PackingMaterial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PackingMaterialUpdateInput, PackingMaterialUncheckedUpdateInput>
  }

  /**
   * PackingMaterial delete
   */
  export type PackingMaterialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
    /**
     * Filter which PackingMaterial to delete.
     */
    where: PackingMaterialWhereUniqueInput
  }

  /**
   * PackingMaterial deleteMany
   */
  export type PackingMaterialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PackingMaterials to delete
     */
    where?: PackingMaterialWhereInput
  }

  /**
   * PackingMaterial.stockBatches
   */
  export type PackingMaterial$stockBatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    where?: StockBatchWhereInput
    orderBy?: StockBatchOrderByWithRelationInput | StockBatchOrderByWithRelationInput[]
    cursor?: StockBatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockBatchScalarFieldEnum | StockBatchScalarFieldEnum[]
  }

  /**
   * PackingMaterial.rackLevels
   */
  export type PackingMaterial$rackLevelsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    where?: RackStockLevelWhereInput
    orderBy?: RackStockLevelOrderByWithRelationInput | RackStockLevelOrderByWithRelationInput[]
    cursor?: RackStockLevelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RackStockLevelScalarFieldEnum | RackStockLevelScalarFieldEnum[]
  }

  /**
   * PackingMaterial.materialIssues
   */
  export type PackingMaterial$materialIssuesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    where?: MaterialIssueWhereInput
    orderBy?: MaterialIssueOrderByWithRelationInput | MaterialIssueOrderByWithRelationInput[]
    cursor?: MaterialIssueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialIssueScalarFieldEnum | MaterialIssueScalarFieldEnum[]
  }

  /**
   * PackingMaterial.materialReturns
   */
  export type PackingMaterial$materialReturnsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    where?: MaterialReturnWhereInput
    orderBy?: MaterialReturnOrderByWithRelationInput | MaterialReturnOrderByWithRelationInput[]
    cursor?: MaterialReturnWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialReturnScalarFieldEnum | MaterialReturnScalarFieldEnum[]
  }

  /**
   * PackingMaterial.materialDamages
   */
  export type PackingMaterial$materialDamagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    where?: MaterialDamageWhereInput
    orderBy?: MaterialDamageOrderByWithRelationInput | MaterialDamageOrderByWithRelationInput[]
    cursor?: MaterialDamageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialDamageScalarFieldEnum | MaterialDamageScalarFieldEnum[]
  }

  /**
   * PackingMaterial without action
   */
  export type PackingMaterialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackingMaterial
     */
    select?: PackingMaterialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackingMaterialInclude<ExtArgs> | null
  }


  /**
   * Model Vendor
   */

  export type AggregateVendor = {
    _count: VendorCountAggregateOutputType | null
    _min: VendorMinAggregateOutputType | null
    _max: VendorMaxAggregateOutputType | null
  }

  export type VendorMinAggregateOutputType = {
    id: string | null
    name: string | null
    contact: string | null
    phone: string | null
    email: string | null
    notes: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VendorMaxAggregateOutputType = {
    id: string | null
    name: string | null
    contact: string | null
    phone: string | null
    email: string | null
    notes: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VendorCountAggregateOutputType = {
    id: number
    name: number
    contact: number
    phone: number
    email: number
    notes: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VendorMinAggregateInputType = {
    id?: true
    name?: true
    contact?: true
    phone?: true
    email?: true
    notes?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VendorMaxAggregateInputType = {
    id?: true
    name?: true
    contact?: true
    phone?: true
    email?: true
    notes?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VendorCountAggregateInputType = {
    id?: true
    name?: true
    contact?: true
    phone?: true
    email?: true
    notes?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VendorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vendor to aggregate.
     */
    where?: VendorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendors to fetch.
     */
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VendorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Vendors
    **/
    _count?: true | VendorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VendorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VendorMaxAggregateInputType
  }

  export type GetVendorAggregateType<T extends VendorAggregateArgs> = {
        [P in keyof T & keyof AggregateVendor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVendor[P]>
      : GetScalarType<T[P], AggregateVendor[P]>
  }




  export type VendorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VendorWhereInput
    orderBy?: VendorOrderByWithAggregationInput | VendorOrderByWithAggregationInput[]
    by: VendorScalarFieldEnum[] | VendorScalarFieldEnum
    having?: VendorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VendorCountAggregateInputType | true
    _min?: VendorMinAggregateInputType
    _max?: VendorMaxAggregateInputType
  }

  export type VendorGroupByOutputType = {
    id: string
    name: string
    contact: string | null
    phone: string | null
    email: string | null
    notes: string | null
    companyId: string
    createdAt: Date
    updatedAt: Date
    _count: VendorCountAggregateOutputType | null
    _min: VendorMinAggregateOutputType | null
    _max: VendorMaxAggregateOutputType | null
  }

  type GetVendorGroupByPayload<T extends VendorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VendorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VendorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VendorGroupByOutputType[P]>
            : GetScalarType<T[P], VendorGroupByOutputType[P]>
        }
      >
    >


  export type VendorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    contact?: boolean
    phone?: boolean
    email?: boolean
    notes?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    stockBatches?: boolean | Vendor$stockBatchesArgs<ExtArgs>
    _count?: boolean | VendorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vendor"]>

  export type VendorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    contact?: boolean
    phone?: boolean
    email?: boolean
    notes?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vendor"]>

  export type VendorSelectScalar = {
    id?: boolean
    name?: boolean
    contact?: boolean
    phone?: boolean
    email?: boolean
    notes?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VendorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    stockBatches?: boolean | Vendor$stockBatchesArgs<ExtArgs>
    _count?: boolean | VendorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VendorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $VendorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Vendor"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      stockBatches: Prisma.$StockBatchPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      contact: string | null
      phone: string | null
      email: string | null
      notes: string | null
      companyId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["vendor"]>
    composites: {}
  }

  type VendorGetPayload<S extends boolean | null | undefined | VendorDefaultArgs> = $Result.GetResult<Prisma.$VendorPayload, S>

  type VendorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VendorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VendorCountAggregateInputType | true
    }

  export interface VendorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Vendor'], meta: { name: 'Vendor' } }
    /**
     * Find zero or one Vendor that matches the filter.
     * @param {VendorFindUniqueArgs} args - Arguments to find a Vendor
     * @example
     * // Get one Vendor
     * const vendor = await prisma.vendor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VendorFindUniqueArgs>(args: SelectSubset<T, VendorFindUniqueArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Vendor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VendorFindUniqueOrThrowArgs} args - Arguments to find a Vendor
     * @example
     * // Get one Vendor
     * const vendor = await prisma.vendor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VendorFindUniqueOrThrowArgs>(args: SelectSubset<T, VendorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Vendor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorFindFirstArgs} args - Arguments to find a Vendor
     * @example
     * // Get one Vendor
     * const vendor = await prisma.vendor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VendorFindFirstArgs>(args?: SelectSubset<T, VendorFindFirstArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Vendor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorFindFirstOrThrowArgs} args - Arguments to find a Vendor
     * @example
     * // Get one Vendor
     * const vendor = await prisma.vendor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VendorFindFirstOrThrowArgs>(args?: SelectSubset<T, VendorFindFirstOrThrowArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Vendors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vendors
     * const vendors = await prisma.vendor.findMany()
     * 
     * // Get first 10 Vendors
     * const vendors = await prisma.vendor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vendorWithIdOnly = await prisma.vendor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VendorFindManyArgs>(args?: SelectSubset<T, VendorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Vendor.
     * @param {VendorCreateArgs} args - Arguments to create a Vendor.
     * @example
     * // Create one Vendor
     * const Vendor = await prisma.vendor.create({
     *   data: {
     *     // ... data to create a Vendor
     *   }
     * })
     * 
     */
    create<T extends VendorCreateArgs>(args: SelectSubset<T, VendorCreateArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Vendors.
     * @param {VendorCreateManyArgs} args - Arguments to create many Vendors.
     * @example
     * // Create many Vendors
     * const vendor = await prisma.vendor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VendorCreateManyArgs>(args?: SelectSubset<T, VendorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Vendors and returns the data saved in the database.
     * @param {VendorCreateManyAndReturnArgs} args - Arguments to create many Vendors.
     * @example
     * // Create many Vendors
     * const vendor = await prisma.vendor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Vendors and only return the `id`
     * const vendorWithIdOnly = await prisma.vendor.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VendorCreateManyAndReturnArgs>(args?: SelectSubset<T, VendorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Vendor.
     * @param {VendorDeleteArgs} args - Arguments to delete one Vendor.
     * @example
     * // Delete one Vendor
     * const Vendor = await prisma.vendor.delete({
     *   where: {
     *     // ... filter to delete one Vendor
     *   }
     * })
     * 
     */
    delete<T extends VendorDeleteArgs>(args: SelectSubset<T, VendorDeleteArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Vendor.
     * @param {VendorUpdateArgs} args - Arguments to update one Vendor.
     * @example
     * // Update one Vendor
     * const vendor = await prisma.vendor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VendorUpdateArgs>(args: SelectSubset<T, VendorUpdateArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Vendors.
     * @param {VendorDeleteManyArgs} args - Arguments to filter Vendors to delete.
     * @example
     * // Delete a few Vendors
     * const { count } = await prisma.vendor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VendorDeleteManyArgs>(args?: SelectSubset<T, VendorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vendors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vendors
     * const vendor = await prisma.vendor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VendorUpdateManyArgs>(args: SelectSubset<T, VendorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Vendor.
     * @param {VendorUpsertArgs} args - Arguments to update or create a Vendor.
     * @example
     * // Update or create a Vendor
     * const vendor = await prisma.vendor.upsert({
     *   create: {
     *     // ... data to create a Vendor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vendor we want to update
     *   }
     * })
     */
    upsert<T extends VendorUpsertArgs>(args: SelectSubset<T, VendorUpsertArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Vendors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorCountArgs} args - Arguments to filter Vendors to count.
     * @example
     * // Count the number of Vendors
     * const count = await prisma.vendor.count({
     *   where: {
     *     // ... the filter for the Vendors we want to count
     *   }
     * })
    **/
    count<T extends VendorCountArgs>(
      args?: Subset<T, VendorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VendorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vendor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VendorAggregateArgs>(args: Subset<T, VendorAggregateArgs>): Prisma.PrismaPromise<GetVendorAggregateType<T>>

    /**
     * Group by Vendor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VendorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VendorGroupByArgs['orderBy'] }
        : { orderBy?: VendorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VendorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVendorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Vendor model
   */
  readonly fields: VendorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Vendor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VendorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    stockBatches<T extends Vendor$stockBatchesArgs<ExtArgs> = {}>(args?: Subset<T, Vendor$stockBatchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Vendor model
   */ 
  interface VendorFieldRefs {
    readonly id: FieldRef<"Vendor", 'String'>
    readonly name: FieldRef<"Vendor", 'String'>
    readonly contact: FieldRef<"Vendor", 'String'>
    readonly phone: FieldRef<"Vendor", 'String'>
    readonly email: FieldRef<"Vendor", 'String'>
    readonly notes: FieldRef<"Vendor", 'String'>
    readonly companyId: FieldRef<"Vendor", 'String'>
    readonly createdAt: FieldRef<"Vendor", 'DateTime'>
    readonly updatedAt: FieldRef<"Vendor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Vendor findUnique
   */
  export type VendorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter, which Vendor to fetch.
     */
    where: VendorWhereUniqueInput
  }

  /**
   * Vendor findUniqueOrThrow
   */
  export type VendorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter, which Vendor to fetch.
     */
    where: VendorWhereUniqueInput
  }

  /**
   * Vendor findFirst
   */
  export type VendorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter, which Vendor to fetch.
     */
    where?: VendorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendors to fetch.
     */
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vendors.
     */
    cursor?: VendorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vendors.
     */
    distinct?: VendorScalarFieldEnum | VendorScalarFieldEnum[]
  }

  /**
   * Vendor findFirstOrThrow
   */
  export type VendorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter, which Vendor to fetch.
     */
    where?: VendorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendors to fetch.
     */
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vendors.
     */
    cursor?: VendorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vendors.
     */
    distinct?: VendorScalarFieldEnum | VendorScalarFieldEnum[]
  }

  /**
   * Vendor findMany
   */
  export type VendorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter, which Vendors to fetch.
     */
    where?: VendorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendors to fetch.
     */
    orderBy?: VendorOrderByWithRelationInput | VendorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Vendors.
     */
    cursor?: VendorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendors.
     */
    skip?: number
    distinct?: VendorScalarFieldEnum | VendorScalarFieldEnum[]
  }

  /**
   * Vendor create
   */
  export type VendorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * The data needed to create a Vendor.
     */
    data: XOR<VendorCreateInput, VendorUncheckedCreateInput>
  }

  /**
   * Vendor createMany
   */
  export type VendorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Vendors.
     */
    data: VendorCreateManyInput | VendorCreateManyInput[]
  }

  /**
   * Vendor createManyAndReturn
   */
  export type VendorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Vendors.
     */
    data: VendorCreateManyInput | VendorCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Vendor update
   */
  export type VendorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * The data needed to update a Vendor.
     */
    data: XOR<VendorUpdateInput, VendorUncheckedUpdateInput>
    /**
     * Choose, which Vendor to update.
     */
    where: VendorWhereUniqueInput
  }

  /**
   * Vendor updateMany
   */
  export type VendorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Vendors.
     */
    data: XOR<VendorUpdateManyMutationInput, VendorUncheckedUpdateManyInput>
    /**
     * Filter which Vendors to update
     */
    where?: VendorWhereInput
  }

  /**
   * Vendor upsert
   */
  export type VendorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * The filter to search for the Vendor to update in case it exists.
     */
    where: VendorWhereUniqueInput
    /**
     * In case the Vendor found by the `where` argument doesn't exist, create a new Vendor with this data.
     */
    create: XOR<VendorCreateInput, VendorUncheckedCreateInput>
    /**
     * In case the Vendor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VendorUpdateInput, VendorUncheckedUpdateInput>
  }

  /**
   * Vendor delete
   */
  export type VendorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    /**
     * Filter which Vendor to delete.
     */
    where: VendorWhereUniqueInput
  }

  /**
   * Vendor deleteMany
   */
  export type VendorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vendors to delete
     */
    where?: VendorWhereInput
  }

  /**
   * Vendor.stockBatches
   */
  export type Vendor$stockBatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    where?: StockBatchWhereInput
    orderBy?: StockBatchOrderByWithRelationInput | StockBatchOrderByWithRelationInput[]
    cursor?: StockBatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockBatchScalarFieldEnum | StockBatchScalarFieldEnum[]
  }

  /**
   * Vendor without action
   */
  export type VendorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
  }


  /**
   * Model StockBatch
   */

  export type AggregateStockBatch = {
    _count: StockBatchCountAggregateOutputType | null
    _avg: StockBatchAvgAggregateOutputType | null
    _sum: StockBatchSumAggregateOutputType | null
    _min: StockBatchMinAggregateOutputType | null
    _max: StockBatchMaxAggregateOutputType | null
  }

  export type StockBatchAvgAggregateOutputType = {
    quantityPurchased: number | null
    quantityRemaining: number | null
    unitCost: number | null
    sellingPrice: number | null
  }

  export type StockBatchSumAggregateOutputType = {
    quantityPurchased: number | null
    quantityRemaining: number | null
    unitCost: number | null
    sellingPrice: number | null
  }

  export type StockBatchMinAggregateOutputType = {
    id: string | null
    materialId: string | null
    vendorId: string | null
    vendorName: string | null
    purchaseOrder: string | null
    purchaseDate: Date | null
    quantityPurchased: number | null
    quantityRemaining: number | null
    unitCost: number | null
    sellingPrice: number | null
    receivedById: string | null
    notes: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StockBatchMaxAggregateOutputType = {
    id: string | null
    materialId: string | null
    vendorId: string | null
    vendorName: string | null
    purchaseOrder: string | null
    purchaseDate: Date | null
    quantityPurchased: number | null
    quantityRemaining: number | null
    unitCost: number | null
    sellingPrice: number | null
    receivedById: string | null
    notes: string | null
    companyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StockBatchCountAggregateOutputType = {
    id: number
    materialId: number
    vendorId: number
    vendorName: number
    purchaseOrder: number
    purchaseDate: number
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice: number
    receivedById: number
    notes: number
    companyId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type StockBatchAvgAggregateInputType = {
    quantityPurchased?: true
    quantityRemaining?: true
    unitCost?: true
    sellingPrice?: true
  }

  export type StockBatchSumAggregateInputType = {
    quantityPurchased?: true
    quantityRemaining?: true
    unitCost?: true
    sellingPrice?: true
  }

  export type StockBatchMinAggregateInputType = {
    id?: true
    materialId?: true
    vendorId?: true
    vendorName?: true
    purchaseOrder?: true
    purchaseDate?: true
    quantityPurchased?: true
    quantityRemaining?: true
    unitCost?: true
    sellingPrice?: true
    receivedById?: true
    notes?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StockBatchMaxAggregateInputType = {
    id?: true
    materialId?: true
    vendorId?: true
    vendorName?: true
    purchaseOrder?: true
    purchaseDate?: true
    quantityPurchased?: true
    quantityRemaining?: true
    unitCost?: true
    sellingPrice?: true
    receivedById?: true
    notes?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StockBatchCountAggregateInputType = {
    id?: true
    materialId?: true
    vendorId?: true
    vendorName?: true
    purchaseOrder?: true
    purchaseDate?: true
    quantityPurchased?: true
    quantityRemaining?: true
    unitCost?: true
    sellingPrice?: true
    receivedById?: true
    notes?: true
    companyId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type StockBatchAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockBatch to aggregate.
     */
    where?: StockBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBatches to fetch.
     */
    orderBy?: StockBatchOrderByWithRelationInput | StockBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockBatches
    **/
    _count?: true | StockBatchCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockBatchAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockBatchSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockBatchMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockBatchMaxAggregateInputType
  }

  export type GetStockBatchAggregateType<T extends StockBatchAggregateArgs> = {
        [P in keyof T & keyof AggregateStockBatch]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockBatch[P]>
      : GetScalarType<T[P], AggregateStockBatch[P]>
  }




  export type StockBatchGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBatchWhereInput
    orderBy?: StockBatchOrderByWithAggregationInput | StockBatchOrderByWithAggregationInput[]
    by: StockBatchScalarFieldEnum[] | StockBatchScalarFieldEnum
    having?: StockBatchScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockBatchCountAggregateInputType | true
    _avg?: StockBatchAvgAggregateInputType
    _sum?: StockBatchSumAggregateInputType
    _min?: StockBatchMinAggregateInputType
    _max?: StockBatchMaxAggregateInputType
  }

  export type StockBatchGroupByOutputType = {
    id: string
    materialId: string
    vendorId: string | null
    vendorName: string | null
    purchaseOrder: string | null
    purchaseDate: Date
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice: number | null
    receivedById: string | null
    notes: string | null
    companyId: string
    createdAt: Date
    updatedAt: Date
    _count: StockBatchCountAggregateOutputType | null
    _avg: StockBatchAvgAggregateOutputType | null
    _sum: StockBatchSumAggregateOutputType | null
    _min: StockBatchMinAggregateOutputType | null
    _max: StockBatchMaxAggregateOutputType | null
  }

  type GetStockBatchGroupByPayload<T extends StockBatchGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockBatchGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockBatchGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockBatchGroupByOutputType[P]>
            : GetScalarType<T[P], StockBatchGroupByOutputType[P]>
        }
      >
    >


  export type StockBatchSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    materialId?: boolean
    vendorId?: boolean
    vendorName?: boolean
    purchaseOrder?: boolean
    purchaseDate?: boolean
    quantityPurchased?: boolean
    quantityRemaining?: boolean
    unitCost?: boolean
    sellingPrice?: boolean
    receivedById?: boolean
    notes?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    vendor?: boolean | StockBatch$vendorArgs<ExtArgs>
    receivedBy?: boolean | StockBatch$receivedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    rackAllocations?: boolean | StockBatch$rackAllocationsArgs<ExtArgs>
    issues?: boolean | StockBatch$issuesArgs<ExtArgs>
    _count?: boolean | StockBatchCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockBatch"]>

  export type StockBatchSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    materialId?: boolean
    vendorId?: boolean
    vendorName?: boolean
    purchaseOrder?: boolean
    purchaseDate?: boolean
    quantityPurchased?: boolean
    quantityRemaining?: boolean
    unitCost?: boolean
    sellingPrice?: boolean
    receivedById?: boolean
    notes?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    vendor?: boolean | StockBatch$vendorArgs<ExtArgs>
    receivedBy?: boolean | StockBatch$receivedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockBatch"]>

  export type StockBatchSelectScalar = {
    id?: boolean
    materialId?: boolean
    vendorId?: boolean
    vendorName?: boolean
    purchaseOrder?: boolean
    purchaseDate?: boolean
    quantityPurchased?: boolean
    quantityRemaining?: boolean
    unitCost?: boolean
    sellingPrice?: boolean
    receivedById?: boolean
    notes?: boolean
    companyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type StockBatchInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    vendor?: boolean | StockBatch$vendorArgs<ExtArgs>
    receivedBy?: boolean | StockBatch$receivedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    rackAllocations?: boolean | StockBatch$rackAllocationsArgs<ExtArgs>
    issues?: boolean | StockBatch$issuesArgs<ExtArgs>
    _count?: boolean | StockBatchCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StockBatchIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    vendor?: boolean | StockBatch$vendorArgs<ExtArgs>
    receivedBy?: boolean | StockBatch$receivedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $StockBatchPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockBatch"
    objects: {
      material: Prisma.$PackingMaterialPayload<ExtArgs>
      vendor: Prisma.$VendorPayload<ExtArgs> | null
      receivedBy: Prisma.$UserPayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs>
      rackAllocations: Prisma.$RackStockLevelPayload<ExtArgs>[]
      issues: Prisma.$MaterialIssuePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      materialId: string
      vendorId: string | null
      vendorName: string | null
      purchaseOrder: string | null
      purchaseDate: Date
      quantityPurchased: number
      quantityRemaining: number
      unitCost: number
      sellingPrice: number | null
      receivedById: string | null
      notes: string | null
      companyId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["stockBatch"]>
    composites: {}
  }

  type StockBatchGetPayload<S extends boolean | null | undefined | StockBatchDefaultArgs> = $Result.GetResult<Prisma.$StockBatchPayload, S>

  type StockBatchCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<StockBatchFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: StockBatchCountAggregateInputType | true
    }

  export interface StockBatchDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockBatch'], meta: { name: 'StockBatch' } }
    /**
     * Find zero or one StockBatch that matches the filter.
     * @param {StockBatchFindUniqueArgs} args - Arguments to find a StockBatch
     * @example
     * // Get one StockBatch
     * const stockBatch = await prisma.stockBatch.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockBatchFindUniqueArgs>(args: SelectSubset<T, StockBatchFindUniqueArgs<ExtArgs>>): Prisma__StockBatchClient<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one StockBatch that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {StockBatchFindUniqueOrThrowArgs} args - Arguments to find a StockBatch
     * @example
     * // Get one StockBatch
     * const stockBatch = await prisma.stockBatch.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockBatchFindUniqueOrThrowArgs>(args: SelectSubset<T, StockBatchFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockBatchClient<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first StockBatch that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBatchFindFirstArgs} args - Arguments to find a StockBatch
     * @example
     * // Get one StockBatch
     * const stockBatch = await prisma.stockBatch.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockBatchFindFirstArgs>(args?: SelectSubset<T, StockBatchFindFirstArgs<ExtArgs>>): Prisma__StockBatchClient<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first StockBatch that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBatchFindFirstOrThrowArgs} args - Arguments to find a StockBatch
     * @example
     * // Get one StockBatch
     * const stockBatch = await prisma.stockBatch.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockBatchFindFirstOrThrowArgs>(args?: SelectSubset<T, StockBatchFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockBatchClient<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more StockBatches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBatchFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockBatches
     * const stockBatches = await prisma.stockBatch.findMany()
     * 
     * // Get first 10 StockBatches
     * const stockBatches = await prisma.stockBatch.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockBatchWithIdOnly = await prisma.stockBatch.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockBatchFindManyArgs>(args?: SelectSubset<T, StockBatchFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a StockBatch.
     * @param {StockBatchCreateArgs} args - Arguments to create a StockBatch.
     * @example
     * // Create one StockBatch
     * const StockBatch = await prisma.stockBatch.create({
     *   data: {
     *     // ... data to create a StockBatch
     *   }
     * })
     * 
     */
    create<T extends StockBatchCreateArgs>(args: SelectSubset<T, StockBatchCreateArgs<ExtArgs>>): Prisma__StockBatchClient<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many StockBatches.
     * @param {StockBatchCreateManyArgs} args - Arguments to create many StockBatches.
     * @example
     * // Create many StockBatches
     * const stockBatch = await prisma.stockBatch.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockBatchCreateManyArgs>(args?: SelectSubset<T, StockBatchCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StockBatches and returns the data saved in the database.
     * @param {StockBatchCreateManyAndReturnArgs} args - Arguments to create many StockBatches.
     * @example
     * // Create many StockBatches
     * const stockBatch = await prisma.stockBatch.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StockBatches and only return the `id`
     * const stockBatchWithIdOnly = await prisma.stockBatch.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StockBatchCreateManyAndReturnArgs>(args?: SelectSubset<T, StockBatchCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a StockBatch.
     * @param {StockBatchDeleteArgs} args - Arguments to delete one StockBatch.
     * @example
     * // Delete one StockBatch
     * const StockBatch = await prisma.stockBatch.delete({
     *   where: {
     *     // ... filter to delete one StockBatch
     *   }
     * })
     * 
     */
    delete<T extends StockBatchDeleteArgs>(args: SelectSubset<T, StockBatchDeleteArgs<ExtArgs>>): Prisma__StockBatchClient<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one StockBatch.
     * @param {StockBatchUpdateArgs} args - Arguments to update one StockBatch.
     * @example
     * // Update one StockBatch
     * const stockBatch = await prisma.stockBatch.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockBatchUpdateArgs>(args: SelectSubset<T, StockBatchUpdateArgs<ExtArgs>>): Prisma__StockBatchClient<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more StockBatches.
     * @param {StockBatchDeleteManyArgs} args - Arguments to filter StockBatches to delete.
     * @example
     * // Delete a few StockBatches
     * const { count } = await prisma.stockBatch.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockBatchDeleteManyArgs>(args?: SelectSubset<T, StockBatchDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockBatches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBatchUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockBatches
     * const stockBatch = await prisma.stockBatch.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockBatchUpdateManyArgs>(args: SelectSubset<T, StockBatchUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StockBatch.
     * @param {StockBatchUpsertArgs} args - Arguments to update or create a StockBatch.
     * @example
     * // Update or create a StockBatch
     * const stockBatch = await prisma.stockBatch.upsert({
     *   create: {
     *     // ... data to create a StockBatch
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockBatch we want to update
     *   }
     * })
     */
    upsert<T extends StockBatchUpsertArgs>(args: SelectSubset<T, StockBatchUpsertArgs<ExtArgs>>): Prisma__StockBatchClient<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of StockBatches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBatchCountArgs} args - Arguments to filter StockBatches to count.
     * @example
     * // Count the number of StockBatches
     * const count = await prisma.stockBatch.count({
     *   where: {
     *     // ... the filter for the StockBatches we want to count
     *   }
     * })
    **/
    count<T extends StockBatchCountArgs>(
      args?: Subset<T, StockBatchCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockBatchCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockBatch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBatchAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockBatchAggregateArgs>(args: Subset<T, StockBatchAggregateArgs>): Prisma.PrismaPromise<GetStockBatchAggregateType<T>>

    /**
     * Group by StockBatch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBatchGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockBatchGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockBatchGroupByArgs['orderBy'] }
        : { orderBy?: StockBatchGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockBatchGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockBatchGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockBatch model
   */
  readonly fields: StockBatchFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockBatch.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockBatchClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    material<T extends PackingMaterialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PackingMaterialDefaultArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    vendor<T extends StockBatch$vendorArgs<ExtArgs> = {}>(args?: Subset<T, StockBatch$vendorArgs<ExtArgs>>): Prisma__VendorClient<$Result.GetResult<Prisma.$VendorPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    receivedBy<T extends StockBatch$receivedByArgs<ExtArgs> = {}>(args?: Subset<T, StockBatch$receivedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    rackAllocations<T extends StockBatch$rackAllocationsArgs<ExtArgs> = {}>(args?: Subset<T, StockBatch$rackAllocationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "findMany"> | Null>
    issues<T extends StockBatch$issuesArgs<ExtArgs> = {}>(args?: Subset<T, StockBatch$issuesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockBatch model
   */ 
  interface StockBatchFieldRefs {
    readonly id: FieldRef<"StockBatch", 'String'>
    readonly materialId: FieldRef<"StockBatch", 'String'>
    readonly vendorId: FieldRef<"StockBatch", 'String'>
    readonly vendorName: FieldRef<"StockBatch", 'String'>
    readonly purchaseOrder: FieldRef<"StockBatch", 'String'>
    readonly purchaseDate: FieldRef<"StockBatch", 'DateTime'>
    readonly quantityPurchased: FieldRef<"StockBatch", 'Int'>
    readonly quantityRemaining: FieldRef<"StockBatch", 'Int'>
    readonly unitCost: FieldRef<"StockBatch", 'Float'>
    readonly sellingPrice: FieldRef<"StockBatch", 'Float'>
    readonly receivedById: FieldRef<"StockBatch", 'String'>
    readonly notes: FieldRef<"StockBatch", 'String'>
    readonly companyId: FieldRef<"StockBatch", 'String'>
    readonly createdAt: FieldRef<"StockBatch", 'DateTime'>
    readonly updatedAt: FieldRef<"StockBatch", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * StockBatch findUnique
   */
  export type StockBatchFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    /**
     * Filter, which StockBatch to fetch.
     */
    where: StockBatchWhereUniqueInput
  }

  /**
   * StockBatch findUniqueOrThrow
   */
  export type StockBatchFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    /**
     * Filter, which StockBatch to fetch.
     */
    where: StockBatchWhereUniqueInput
  }

  /**
   * StockBatch findFirst
   */
  export type StockBatchFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    /**
     * Filter, which StockBatch to fetch.
     */
    where?: StockBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBatches to fetch.
     */
    orderBy?: StockBatchOrderByWithRelationInput | StockBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockBatches.
     */
    cursor?: StockBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockBatches.
     */
    distinct?: StockBatchScalarFieldEnum | StockBatchScalarFieldEnum[]
  }

  /**
   * StockBatch findFirstOrThrow
   */
  export type StockBatchFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    /**
     * Filter, which StockBatch to fetch.
     */
    where?: StockBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBatches to fetch.
     */
    orderBy?: StockBatchOrderByWithRelationInput | StockBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockBatches.
     */
    cursor?: StockBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockBatches.
     */
    distinct?: StockBatchScalarFieldEnum | StockBatchScalarFieldEnum[]
  }

  /**
   * StockBatch findMany
   */
  export type StockBatchFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    /**
     * Filter, which StockBatches to fetch.
     */
    where?: StockBatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBatches to fetch.
     */
    orderBy?: StockBatchOrderByWithRelationInput | StockBatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockBatches.
     */
    cursor?: StockBatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBatches.
     */
    skip?: number
    distinct?: StockBatchScalarFieldEnum | StockBatchScalarFieldEnum[]
  }

  /**
   * StockBatch create
   */
  export type StockBatchCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    /**
     * The data needed to create a StockBatch.
     */
    data: XOR<StockBatchCreateInput, StockBatchUncheckedCreateInput>
  }

  /**
   * StockBatch createMany
   */
  export type StockBatchCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockBatches.
     */
    data: StockBatchCreateManyInput | StockBatchCreateManyInput[]
  }

  /**
   * StockBatch createManyAndReturn
   */
  export type StockBatchCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many StockBatches.
     */
    data: StockBatchCreateManyInput | StockBatchCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StockBatch update
   */
  export type StockBatchUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    /**
     * The data needed to update a StockBatch.
     */
    data: XOR<StockBatchUpdateInput, StockBatchUncheckedUpdateInput>
    /**
     * Choose, which StockBatch to update.
     */
    where: StockBatchWhereUniqueInput
  }

  /**
   * StockBatch updateMany
   */
  export type StockBatchUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockBatches.
     */
    data: XOR<StockBatchUpdateManyMutationInput, StockBatchUncheckedUpdateManyInput>
    /**
     * Filter which StockBatches to update
     */
    where?: StockBatchWhereInput
  }

  /**
   * StockBatch upsert
   */
  export type StockBatchUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    /**
     * The filter to search for the StockBatch to update in case it exists.
     */
    where: StockBatchWhereUniqueInput
    /**
     * In case the StockBatch found by the `where` argument doesn't exist, create a new StockBatch with this data.
     */
    create: XOR<StockBatchCreateInput, StockBatchUncheckedCreateInput>
    /**
     * In case the StockBatch was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockBatchUpdateInput, StockBatchUncheckedUpdateInput>
  }

  /**
   * StockBatch delete
   */
  export type StockBatchDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    /**
     * Filter which StockBatch to delete.
     */
    where: StockBatchWhereUniqueInput
  }

  /**
   * StockBatch deleteMany
   */
  export type StockBatchDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockBatches to delete
     */
    where?: StockBatchWhereInput
  }

  /**
   * StockBatch.vendor
   */
  export type StockBatch$vendorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendor
     */
    select?: VendorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendorInclude<ExtArgs> | null
    where?: VendorWhereInput
  }

  /**
   * StockBatch.receivedBy
   */
  export type StockBatch$receivedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StockBatch.rackAllocations
   */
  export type StockBatch$rackAllocationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    where?: RackStockLevelWhereInput
    orderBy?: RackStockLevelOrderByWithRelationInput | RackStockLevelOrderByWithRelationInput[]
    cursor?: RackStockLevelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RackStockLevelScalarFieldEnum | RackStockLevelScalarFieldEnum[]
  }

  /**
   * StockBatch.issues
   */
  export type StockBatch$issuesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    where?: MaterialIssueWhereInput
    orderBy?: MaterialIssueOrderByWithRelationInput | MaterialIssueOrderByWithRelationInput[]
    cursor?: MaterialIssueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialIssueScalarFieldEnum | MaterialIssueScalarFieldEnum[]
  }

  /**
   * StockBatch without action
   */
  export type StockBatchDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
  }


  /**
   * Model RackStockLevel
   */

  export type AggregateRackStockLevel = {
    _count: RackStockLevelCountAggregateOutputType | null
    _avg: RackStockLevelAvgAggregateOutputType | null
    _sum: RackStockLevelSumAggregateOutputType | null
    _min: RackStockLevelMinAggregateOutputType | null
    _max: RackStockLevelMaxAggregateOutputType | null
  }

  export type RackStockLevelAvgAggregateOutputType = {
    quantity: number | null
  }

  export type RackStockLevelSumAggregateOutputType = {
    quantity: number | null
  }

  export type RackStockLevelMinAggregateOutputType = {
    id: string | null
    materialId: string | null
    rackId: string | null
    stockBatchId: string | null
    quantity: number | null
    lastUpdated: Date | null
    companyId: string | null
  }

  export type RackStockLevelMaxAggregateOutputType = {
    id: string | null
    materialId: string | null
    rackId: string | null
    stockBatchId: string | null
    quantity: number | null
    lastUpdated: Date | null
    companyId: string | null
  }

  export type RackStockLevelCountAggregateOutputType = {
    id: number
    materialId: number
    rackId: number
    stockBatchId: number
    quantity: number
    lastUpdated: number
    companyId: number
    _all: number
  }


  export type RackStockLevelAvgAggregateInputType = {
    quantity?: true
  }

  export type RackStockLevelSumAggregateInputType = {
    quantity?: true
  }

  export type RackStockLevelMinAggregateInputType = {
    id?: true
    materialId?: true
    rackId?: true
    stockBatchId?: true
    quantity?: true
    lastUpdated?: true
    companyId?: true
  }

  export type RackStockLevelMaxAggregateInputType = {
    id?: true
    materialId?: true
    rackId?: true
    stockBatchId?: true
    quantity?: true
    lastUpdated?: true
    companyId?: true
  }

  export type RackStockLevelCountAggregateInputType = {
    id?: true
    materialId?: true
    rackId?: true
    stockBatchId?: true
    quantity?: true
    lastUpdated?: true
    companyId?: true
    _all?: true
  }

  export type RackStockLevelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RackStockLevel to aggregate.
     */
    where?: RackStockLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackStockLevels to fetch.
     */
    orderBy?: RackStockLevelOrderByWithRelationInput | RackStockLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RackStockLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackStockLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackStockLevels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RackStockLevels
    **/
    _count?: true | RackStockLevelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RackStockLevelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RackStockLevelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RackStockLevelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RackStockLevelMaxAggregateInputType
  }

  export type GetRackStockLevelAggregateType<T extends RackStockLevelAggregateArgs> = {
        [P in keyof T & keyof AggregateRackStockLevel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRackStockLevel[P]>
      : GetScalarType<T[P], AggregateRackStockLevel[P]>
  }




  export type RackStockLevelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RackStockLevelWhereInput
    orderBy?: RackStockLevelOrderByWithAggregationInput | RackStockLevelOrderByWithAggregationInput[]
    by: RackStockLevelScalarFieldEnum[] | RackStockLevelScalarFieldEnum
    having?: RackStockLevelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RackStockLevelCountAggregateInputType | true
    _avg?: RackStockLevelAvgAggregateInputType
    _sum?: RackStockLevelSumAggregateInputType
    _min?: RackStockLevelMinAggregateInputType
    _max?: RackStockLevelMaxAggregateInputType
  }

  export type RackStockLevelGroupByOutputType = {
    id: string
    materialId: string
    rackId: string
    stockBatchId: string | null
    quantity: number
    lastUpdated: Date
    companyId: string
    _count: RackStockLevelCountAggregateOutputType | null
    _avg: RackStockLevelAvgAggregateOutputType | null
    _sum: RackStockLevelSumAggregateOutputType | null
    _min: RackStockLevelMinAggregateOutputType | null
    _max: RackStockLevelMaxAggregateOutputType | null
  }

  type GetRackStockLevelGroupByPayload<T extends RackStockLevelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RackStockLevelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RackStockLevelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RackStockLevelGroupByOutputType[P]>
            : GetScalarType<T[P], RackStockLevelGroupByOutputType[P]>
        }
      >
    >


  export type RackStockLevelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    materialId?: boolean
    rackId?: boolean
    stockBatchId?: boolean
    quantity?: boolean
    lastUpdated?: boolean
    companyId?: boolean
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    rack?: boolean | RackDefaultArgs<ExtArgs>
    stockBatch?: boolean | RackStockLevel$stockBatchArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rackStockLevel"]>

  export type RackStockLevelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    materialId?: boolean
    rackId?: boolean
    stockBatchId?: boolean
    quantity?: boolean
    lastUpdated?: boolean
    companyId?: boolean
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    rack?: boolean | RackDefaultArgs<ExtArgs>
    stockBatch?: boolean | RackStockLevel$stockBatchArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rackStockLevel"]>

  export type RackStockLevelSelectScalar = {
    id?: boolean
    materialId?: boolean
    rackId?: boolean
    stockBatchId?: boolean
    quantity?: boolean
    lastUpdated?: boolean
    companyId?: boolean
  }

  export type RackStockLevelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    rack?: boolean | RackDefaultArgs<ExtArgs>
    stockBatch?: boolean | RackStockLevel$stockBatchArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type RackStockLevelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    rack?: boolean | RackDefaultArgs<ExtArgs>
    stockBatch?: boolean | RackStockLevel$stockBatchArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $RackStockLevelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RackStockLevel"
    objects: {
      material: Prisma.$PackingMaterialPayload<ExtArgs>
      rack: Prisma.$RackPayload<ExtArgs>
      stockBatch: Prisma.$StockBatchPayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      materialId: string
      rackId: string
      stockBatchId: string | null
      quantity: number
      lastUpdated: Date
      companyId: string
    }, ExtArgs["result"]["rackStockLevel"]>
    composites: {}
  }

  type RackStockLevelGetPayload<S extends boolean | null | undefined | RackStockLevelDefaultArgs> = $Result.GetResult<Prisma.$RackStockLevelPayload, S>

  type RackStockLevelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RackStockLevelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RackStockLevelCountAggregateInputType | true
    }

  export interface RackStockLevelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RackStockLevel'], meta: { name: 'RackStockLevel' } }
    /**
     * Find zero or one RackStockLevel that matches the filter.
     * @param {RackStockLevelFindUniqueArgs} args - Arguments to find a RackStockLevel
     * @example
     * // Get one RackStockLevel
     * const rackStockLevel = await prisma.rackStockLevel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RackStockLevelFindUniqueArgs>(args: SelectSubset<T, RackStockLevelFindUniqueArgs<ExtArgs>>): Prisma__RackStockLevelClient<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RackStockLevel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RackStockLevelFindUniqueOrThrowArgs} args - Arguments to find a RackStockLevel
     * @example
     * // Get one RackStockLevel
     * const rackStockLevel = await prisma.rackStockLevel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RackStockLevelFindUniqueOrThrowArgs>(args: SelectSubset<T, RackStockLevelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RackStockLevelClient<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RackStockLevel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackStockLevelFindFirstArgs} args - Arguments to find a RackStockLevel
     * @example
     * // Get one RackStockLevel
     * const rackStockLevel = await prisma.rackStockLevel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RackStockLevelFindFirstArgs>(args?: SelectSubset<T, RackStockLevelFindFirstArgs<ExtArgs>>): Prisma__RackStockLevelClient<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RackStockLevel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackStockLevelFindFirstOrThrowArgs} args - Arguments to find a RackStockLevel
     * @example
     * // Get one RackStockLevel
     * const rackStockLevel = await prisma.rackStockLevel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RackStockLevelFindFirstOrThrowArgs>(args?: SelectSubset<T, RackStockLevelFindFirstOrThrowArgs<ExtArgs>>): Prisma__RackStockLevelClient<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RackStockLevels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackStockLevelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RackStockLevels
     * const rackStockLevels = await prisma.rackStockLevel.findMany()
     * 
     * // Get first 10 RackStockLevels
     * const rackStockLevels = await prisma.rackStockLevel.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rackStockLevelWithIdOnly = await prisma.rackStockLevel.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RackStockLevelFindManyArgs>(args?: SelectSubset<T, RackStockLevelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RackStockLevel.
     * @param {RackStockLevelCreateArgs} args - Arguments to create a RackStockLevel.
     * @example
     * // Create one RackStockLevel
     * const RackStockLevel = await prisma.rackStockLevel.create({
     *   data: {
     *     // ... data to create a RackStockLevel
     *   }
     * })
     * 
     */
    create<T extends RackStockLevelCreateArgs>(args: SelectSubset<T, RackStockLevelCreateArgs<ExtArgs>>): Prisma__RackStockLevelClient<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RackStockLevels.
     * @param {RackStockLevelCreateManyArgs} args - Arguments to create many RackStockLevels.
     * @example
     * // Create many RackStockLevels
     * const rackStockLevel = await prisma.rackStockLevel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RackStockLevelCreateManyArgs>(args?: SelectSubset<T, RackStockLevelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RackStockLevels and returns the data saved in the database.
     * @param {RackStockLevelCreateManyAndReturnArgs} args - Arguments to create many RackStockLevels.
     * @example
     * // Create many RackStockLevels
     * const rackStockLevel = await prisma.rackStockLevel.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RackStockLevels and only return the `id`
     * const rackStockLevelWithIdOnly = await prisma.rackStockLevel.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RackStockLevelCreateManyAndReturnArgs>(args?: SelectSubset<T, RackStockLevelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RackStockLevel.
     * @param {RackStockLevelDeleteArgs} args - Arguments to delete one RackStockLevel.
     * @example
     * // Delete one RackStockLevel
     * const RackStockLevel = await prisma.rackStockLevel.delete({
     *   where: {
     *     // ... filter to delete one RackStockLevel
     *   }
     * })
     * 
     */
    delete<T extends RackStockLevelDeleteArgs>(args: SelectSubset<T, RackStockLevelDeleteArgs<ExtArgs>>): Prisma__RackStockLevelClient<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RackStockLevel.
     * @param {RackStockLevelUpdateArgs} args - Arguments to update one RackStockLevel.
     * @example
     * // Update one RackStockLevel
     * const rackStockLevel = await prisma.rackStockLevel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RackStockLevelUpdateArgs>(args: SelectSubset<T, RackStockLevelUpdateArgs<ExtArgs>>): Prisma__RackStockLevelClient<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RackStockLevels.
     * @param {RackStockLevelDeleteManyArgs} args - Arguments to filter RackStockLevels to delete.
     * @example
     * // Delete a few RackStockLevels
     * const { count } = await prisma.rackStockLevel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RackStockLevelDeleteManyArgs>(args?: SelectSubset<T, RackStockLevelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RackStockLevels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackStockLevelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RackStockLevels
     * const rackStockLevel = await prisma.rackStockLevel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RackStockLevelUpdateManyArgs>(args: SelectSubset<T, RackStockLevelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RackStockLevel.
     * @param {RackStockLevelUpsertArgs} args - Arguments to update or create a RackStockLevel.
     * @example
     * // Update or create a RackStockLevel
     * const rackStockLevel = await prisma.rackStockLevel.upsert({
     *   create: {
     *     // ... data to create a RackStockLevel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RackStockLevel we want to update
     *   }
     * })
     */
    upsert<T extends RackStockLevelUpsertArgs>(args: SelectSubset<T, RackStockLevelUpsertArgs<ExtArgs>>): Prisma__RackStockLevelClient<$Result.GetResult<Prisma.$RackStockLevelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RackStockLevels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackStockLevelCountArgs} args - Arguments to filter RackStockLevels to count.
     * @example
     * // Count the number of RackStockLevels
     * const count = await prisma.rackStockLevel.count({
     *   where: {
     *     // ... the filter for the RackStockLevels we want to count
     *   }
     * })
    **/
    count<T extends RackStockLevelCountArgs>(
      args?: Subset<T, RackStockLevelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RackStockLevelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RackStockLevel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackStockLevelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RackStockLevelAggregateArgs>(args: Subset<T, RackStockLevelAggregateArgs>): Prisma.PrismaPromise<GetRackStockLevelAggregateType<T>>

    /**
     * Group by RackStockLevel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RackStockLevelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RackStockLevelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RackStockLevelGroupByArgs['orderBy'] }
        : { orderBy?: RackStockLevelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RackStockLevelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRackStockLevelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RackStockLevel model
   */
  readonly fields: RackStockLevelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RackStockLevel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RackStockLevelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    material<T extends PackingMaterialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PackingMaterialDefaultArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    rack<T extends RackDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RackDefaultArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    stockBatch<T extends RackStockLevel$stockBatchArgs<ExtArgs> = {}>(args?: Subset<T, RackStockLevel$stockBatchArgs<ExtArgs>>): Prisma__StockBatchClient<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RackStockLevel model
   */ 
  interface RackStockLevelFieldRefs {
    readonly id: FieldRef<"RackStockLevel", 'String'>
    readonly materialId: FieldRef<"RackStockLevel", 'String'>
    readonly rackId: FieldRef<"RackStockLevel", 'String'>
    readonly stockBatchId: FieldRef<"RackStockLevel", 'String'>
    readonly quantity: FieldRef<"RackStockLevel", 'Int'>
    readonly lastUpdated: FieldRef<"RackStockLevel", 'DateTime'>
    readonly companyId: FieldRef<"RackStockLevel", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RackStockLevel findUnique
   */
  export type RackStockLevelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    /**
     * Filter, which RackStockLevel to fetch.
     */
    where: RackStockLevelWhereUniqueInput
  }

  /**
   * RackStockLevel findUniqueOrThrow
   */
  export type RackStockLevelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    /**
     * Filter, which RackStockLevel to fetch.
     */
    where: RackStockLevelWhereUniqueInput
  }

  /**
   * RackStockLevel findFirst
   */
  export type RackStockLevelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    /**
     * Filter, which RackStockLevel to fetch.
     */
    where?: RackStockLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackStockLevels to fetch.
     */
    orderBy?: RackStockLevelOrderByWithRelationInput | RackStockLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RackStockLevels.
     */
    cursor?: RackStockLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackStockLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackStockLevels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RackStockLevels.
     */
    distinct?: RackStockLevelScalarFieldEnum | RackStockLevelScalarFieldEnum[]
  }

  /**
   * RackStockLevel findFirstOrThrow
   */
  export type RackStockLevelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    /**
     * Filter, which RackStockLevel to fetch.
     */
    where?: RackStockLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackStockLevels to fetch.
     */
    orderBy?: RackStockLevelOrderByWithRelationInput | RackStockLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RackStockLevels.
     */
    cursor?: RackStockLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackStockLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackStockLevels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RackStockLevels.
     */
    distinct?: RackStockLevelScalarFieldEnum | RackStockLevelScalarFieldEnum[]
  }

  /**
   * RackStockLevel findMany
   */
  export type RackStockLevelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    /**
     * Filter, which RackStockLevels to fetch.
     */
    where?: RackStockLevelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RackStockLevels to fetch.
     */
    orderBy?: RackStockLevelOrderByWithRelationInput | RackStockLevelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RackStockLevels.
     */
    cursor?: RackStockLevelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RackStockLevels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RackStockLevels.
     */
    skip?: number
    distinct?: RackStockLevelScalarFieldEnum | RackStockLevelScalarFieldEnum[]
  }

  /**
   * RackStockLevel create
   */
  export type RackStockLevelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    /**
     * The data needed to create a RackStockLevel.
     */
    data: XOR<RackStockLevelCreateInput, RackStockLevelUncheckedCreateInput>
  }

  /**
   * RackStockLevel createMany
   */
  export type RackStockLevelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RackStockLevels.
     */
    data: RackStockLevelCreateManyInput | RackStockLevelCreateManyInput[]
  }

  /**
   * RackStockLevel createManyAndReturn
   */
  export type RackStockLevelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RackStockLevels.
     */
    data: RackStockLevelCreateManyInput | RackStockLevelCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RackStockLevel update
   */
  export type RackStockLevelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    /**
     * The data needed to update a RackStockLevel.
     */
    data: XOR<RackStockLevelUpdateInput, RackStockLevelUncheckedUpdateInput>
    /**
     * Choose, which RackStockLevel to update.
     */
    where: RackStockLevelWhereUniqueInput
  }

  /**
   * RackStockLevel updateMany
   */
  export type RackStockLevelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RackStockLevels.
     */
    data: XOR<RackStockLevelUpdateManyMutationInput, RackStockLevelUncheckedUpdateManyInput>
    /**
     * Filter which RackStockLevels to update
     */
    where?: RackStockLevelWhereInput
  }

  /**
   * RackStockLevel upsert
   */
  export type RackStockLevelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    /**
     * The filter to search for the RackStockLevel to update in case it exists.
     */
    where: RackStockLevelWhereUniqueInput
    /**
     * In case the RackStockLevel found by the `where` argument doesn't exist, create a new RackStockLevel with this data.
     */
    create: XOR<RackStockLevelCreateInput, RackStockLevelUncheckedCreateInput>
    /**
     * In case the RackStockLevel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RackStockLevelUpdateInput, RackStockLevelUncheckedUpdateInput>
  }

  /**
   * RackStockLevel delete
   */
  export type RackStockLevelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
    /**
     * Filter which RackStockLevel to delete.
     */
    where: RackStockLevelWhereUniqueInput
  }

  /**
   * RackStockLevel deleteMany
   */
  export type RackStockLevelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RackStockLevels to delete
     */
    where?: RackStockLevelWhereInput
  }

  /**
   * RackStockLevel.stockBatch
   */
  export type RackStockLevel$stockBatchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    where?: StockBatchWhereInput
  }

  /**
   * RackStockLevel without action
   */
  export type RackStockLevelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RackStockLevel
     */
    select?: RackStockLevelSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackStockLevelInclude<ExtArgs> | null
  }


  /**
   * Model MaterialIssue
   */

  export type AggregateMaterialIssue = {
    _count: MaterialIssueCountAggregateOutputType | null
    _avg: MaterialIssueAvgAggregateOutputType | null
    _sum: MaterialIssueSumAggregateOutputType | null
    _min: MaterialIssueMinAggregateOutputType | null
    _max: MaterialIssueMaxAggregateOutputType | null
  }

  export type MaterialIssueAvgAggregateOutputType = {
    quantity: number | null
    unitCost: number | null
    totalCost: number | null
  }

  export type MaterialIssueSumAggregateOutputType = {
    quantity: number | null
    unitCost: number | null
    totalCost: number | null
  }

  export type MaterialIssueMinAggregateOutputType = {
    id: string | null
    jobId: string | null
    materialId: string | null
    stockBatchId: string | null
    quantity: number | null
    unitCost: number | null
    totalCost: number | null
    rackId: string | null
    issuedById: string | null
    issuedAt: Date | null
    notes: string | null
    companyId: string | null
  }

  export type MaterialIssueMaxAggregateOutputType = {
    id: string | null
    jobId: string | null
    materialId: string | null
    stockBatchId: string | null
    quantity: number | null
    unitCost: number | null
    totalCost: number | null
    rackId: string | null
    issuedById: string | null
    issuedAt: Date | null
    notes: string | null
    companyId: string | null
  }

  export type MaterialIssueCountAggregateOutputType = {
    id: number
    jobId: number
    materialId: number
    stockBatchId: number
    quantity: number
    unitCost: number
    totalCost: number
    rackId: number
    issuedById: number
    issuedAt: number
    notes: number
    companyId: number
    _all: number
  }


  export type MaterialIssueAvgAggregateInputType = {
    quantity?: true
    unitCost?: true
    totalCost?: true
  }

  export type MaterialIssueSumAggregateInputType = {
    quantity?: true
    unitCost?: true
    totalCost?: true
  }

  export type MaterialIssueMinAggregateInputType = {
    id?: true
    jobId?: true
    materialId?: true
    stockBatchId?: true
    quantity?: true
    unitCost?: true
    totalCost?: true
    rackId?: true
    issuedById?: true
    issuedAt?: true
    notes?: true
    companyId?: true
  }

  export type MaterialIssueMaxAggregateInputType = {
    id?: true
    jobId?: true
    materialId?: true
    stockBatchId?: true
    quantity?: true
    unitCost?: true
    totalCost?: true
    rackId?: true
    issuedById?: true
    issuedAt?: true
    notes?: true
    companyId?: true
  }

  export type MaterialIssueCountAggregateInputType = {
    id?: true
    jobId?: true
    materialId?: true
    stockBatchId?: true
    quantity?: true
    unitCost?: true
    totalCost?: true
    rackId?: true
    issuedById?: true
    issuedAt?: true
    notes?: true
    companyId?: true
    _all?: true
  }

  export type MaterialIssueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaterialIssue to aggregate.
     */
    where?: MaterialIssueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialIssues to fetch.
     */
    orderBy?: MaterialIssueOrderByWithRelationInput | MaterialIssueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaterialIssueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialIssues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialIssues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MaterialIssues
    **/
    _count?: true | MaterialIssueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaterialIssueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaterialIssueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaterialIssueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaterialIssueMaxAggregateInputType
  }

  export type GetMaterialIssueAggregateType<T extends MaterialIssueAggregateArgs> = {
        [P in keyof T & keyof AggregateMaterialIssue]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaterialIssue[P]>
      : GetScalarType<T[P], AggregateMaterialIssue[P]>
  }




  export type MaterialIssueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialIssueWhereInput
    orderBy?: MaterialIssueOrderByWithAggregationInput | MaterialIssueOrderByWithAggregationInput[]
    by: MaterialIssueScalarFieldEnum[] | MaterialIssueScalarFieldEnum
    having?: MaterialIssueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaterialIssueCountAggregateInputType | true
    _avg?: MaterialIssueAvgAggregateInputType
    _sum?: MaterialIssueSumAggregateInputType
    _min?: MaterialIssueMinAggregateInputType
    _max?: MaterialIssueMaxAggregateInputType
  }

  export type MaterialIssueGroupByOutputType = {
    id: string
    jobId: string
    materialId: string
    stockBatchId: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId: string | null
    issuedById: string | null
    issuedAt: Date
    notes: string | null
    companyId: string
    _count: MaterialIssueCountAggregateOutputType | null
    _avg: MaterialIssueAvgAggregateOutputType | null
    _sum: MaterialIssueSumAggregateOutputType | null
    _min: MaterialIssueMinAggregateOutputType | null
    _max: MaterialIssueMaxAggregateOutputType | null
  }

  type GetMaterialIssueGroupByPayload<T extends MaterialIssueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaterialIssueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaterialIssueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaterialIssueGroupByOutputType[P]>
            : GetScalarType<T[P], MaterialIssueGroupByOutputType[P]>
        }
      >
    >


  export type MaterialIssueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    materialId?: boolean
    stockBatchId?: boolean
    quantity?: boolean
    unitCost?: boolean
    totalCost?: boolean
    rackId?: boolean
    issuedById?: boolean
    issuedAt?: boolean
    notes?: boolean
    companyId?: boolean
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    stockBatch?: boolean | MaterialIssue$stockBatchArgs<ExtArgs>
    rack?: boolean | MaterialIssue$rackArgs<ExtArgs>
    issuedBy?: boolean | MaterialIssue$issuedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    returns?: boolean | MaterialIssue$returnsArgs<ExtArgs>
    _count?: boolean | MaterialIssueCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materialIssue"]>

  export type MaterialIssueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    materialId?: boolean
    stockBatchId?: boolean
    quantity?: boolean
    unitCost?: boolean
    totalCost?: boolean
    rackId?: boolean
    issuedById?: boolean
    issuedAt?: boolean
    notes?: boolean
    companyId?: boolean
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    stockBatch?: boolean | MaterialIssue$stockBatchArgs<ExtArgs>
    rack?: boolean | MaterialIssue$rackArgs<ExtArgs>
    issuedBy?: boolean | MaterialIssue$issuedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materialIssue"]>

  export type MaterialIssueSelectScalar = {
    id?: boolean
    jobId?: boolean
    materialId?: boolean
    stockBatchId?: boolean
    quantity?: boolean
    unitCost?: boolean
    totalCost?: boolean
    rackId?: boolean
    issuedById?: boolean
    issuedAt?: boolean
    notes?: boolean
    companyId?: boolean
  }

  export type MaterialIssueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    stockBatch?: boolean | MaterialIssue$stockBatchArgs<ExtArgs>
    rack?: boolean | MaterialIssue$rackArgs<ExtArgs>
    issuedBy?: boolean | MaterialIssue$issuedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    returns?: boolean | MaterialIssue$returnsArgs<ExtArgs>
    _count?: boolean | MaterialIssueCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MaterialIssueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    stockBatch?: boolean | MaterialIssue$stockBatchArgs<ExtArgs>
    rack?: boolean | MaterialIssue$rackArgs<ExtArgs>
    issuedBy?: boolean | MaterialIssue$issuedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $MaterialIssuePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MaterialIssue"
    objects: {
      job: Prisma.$MovingJobPayload<ExtArgs>
      material: Prisma.$PackingMaterialPayload<ExtArgs>
      stockBatch: Prisma.$StockBatchPayload<ExtArgs> | null
      rack: Prisma.$RackPayload<ExtArgs> | null
      issuedBy: Prisma.$UserPayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs>
      returns: Prisma.$MaterialReturnPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      jobId: string
      materialId: string
      stockBatchId: string | null
      quantity: number
      unitCost: number
      totalCost: number
      rackId: string | null
      issuedById: string | null
      issuedAt: Date
      notes: string | null
      companyId: string
    }, ExtArgs["result"]["materialIssue"]>
    composites: {}
  }

  type MaterialIssueGetPayload<S extends boolean | null | undefined | MaterialIssueDefaultArgs> = $Result.GetResult<Prisma.$MaterialIssuePayload, S>

  type MaterialIssueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MaterialIssueFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MaterialIssueCountAggregateInputType | true
    }

  export interface MaterialIssueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MaterialIssue'], meta: { name: 'MaterialIssue' } }
    /**
     * Find zero or one MaterialIssue that matches the filter.
     * @param {MaterialIssueFindUniqueArgs} args - Arguments to find a MaterialIssue
     * @example
     * // Get one MaterialIssue
     * const materialIssue = await prisma.materialIssue.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaterialIssueFindUniqueArgs>(args: SelectSubset<T, MaterialIssueFindUniqueArgs<ExtArgs>>): Prisma__MaterialIssueClient<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MaterialIssue that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MaterialIssueFindUniqueOrThrowArgs} args - Arguments to find a MaterialIssue
     * @example
     * // Get one MaterialIssue
     * const materialIssue = await prisma.materialIssue.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaterialIssueFindUniqueOrThrowArgs>(args: SelectSubset<T, MaterialIssueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaterialIssueClient<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MaterialIssue that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialIssueFindFirstArgs} args - Arguments to find a MaterialIssue
     * @example
     * // Get one MaterialIssue
     * const materialIssue = await prisma.materialIssue.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaterialIssueFindFirstArgs>(args?: SelectSubset<T, MaterialIssueFindFirstArgs<ExtArgs>>): Prisma__MaterialIssueClient<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MaterialIssue that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialIssueFindFirstOrThrowArgs} args - Arguments to find a MaterialIssue
     * @example
     * // Get one MaterialIssue
     * const materialIssue = await prisma.materialIssue.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaterialIssueFindFirstOrThrowArgs>(args?: SelectSubset<T, MaterialIssueFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaterialIssueClient<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MaterialIssues that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialIssueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MaterialIssues
     * const materialIssues = await prisma.materialIssue.findMany()
     * 
     * // Get first 10 MaterialIssues
     * const materialIssues = await prisma.materialIssue.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const materialIssueWithIdOnly = await prisma.materialIssue.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MaterialIssueFindManyArgs>(args?: SelectSubset<T, MaterialIssueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MaterialIssue.
     * @param {MaterialIssueCreateArgs} args - Arguments to create a MaterialIssue.
     * @example
     * // Create one MaterialIssue
     * const MaterialIssue = await prisma.materialIssue.create({
     *   data: {
     *     // ... data to create a MaterialIssue
     *   }
     * })
     * 
     */
    create<T extends MaterialIssueCreateArgs>(args: SelectSubset<T, MaterialIssueCreateArgs<ExtArgs>>): Prisma__MaterialIssueClient<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MaterialIssues.
     * @param {MaterialIssueCreateManyArgs} args - Arguments to create many MaterialIssues.
     * @example
     * // Create many MaterialIssues
     * const materialIssue = await prisma.materialIssue.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaterialIssueCreateManyArgs>(args?: SelectSubset<T, MaterialIssueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MaterialIssues and returns the data saved in the database.
     * @param {MaterialIssueCreateManyAndReturnArgs} args - Arguments to create many MaterialIssues.
     * @example
     * // Create many MaterialIssues
     * const materialIssue = await prisma.materialIssue.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MaterialIssues and only return the `id`
     * const materialIssueWithIdOnly = await prisma.materialIssue.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MaterialIssueCreateManyAndReturnArgs>(args?: SelectSubset<T, MaterialIssueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MaterialIssue.
     * @param {MaterialIssueDeleteArgs} args - Arguments to delete one MaterialIssue.
     * @example
     * // Delete one MaterialIssue
     * const MaterialIssue = await prisma.materialIssue.delete({
     *   where: {
     *     // ... filter to delete one MaterialIssue
     *   }
     * })
     * 
     */
    delete<T extends MaterialIssueDeleteArgs>(args: SelectSubset<T, MaterialIssueDeleteArgs<ExtArgs>>): Prisma__MaterialIssueClient<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MaterialIssue.
     * @param {MaterialIssueUpdateArgs} args - Arguments to update one MaterialIssue.
     * @example
     * // Update one MaterialIssue
     * const materialIssue = await prisma.materialIssue.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaterialIssueUpdateArgs>(args: SelectSubset<T, MaterialIssueUpdateArgs<ExtArgs>>): Prisma__MaterialIssueClient<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MaterialIssues.
     * @param {MaterialIssueDeleteManyArgs} args - Arguments to filter MaterialIssues to delete.
     * @example
     * // Delete a few MaterialIssues
     * const { count } = await prisma.materialIssue.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaterialIssueDeleteManyArgs>(args?: SelectSubset<T, MaterialIssueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MaterialIssues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialIssueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MaterialIssues
     * const materialIssue = await prisma.materialIssue.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaterialIssueUpdateManyArgs>(args: SelectSubset<T, MaterialIssueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MaterialIssue.
     * @param {MaterialIssueUpsertArgs} args - Arguments to update or create a MaterialIssue.
     * @example
     * // Update or create a MaterialIssue
     * const materialIssue = await prisma.materialIssue.upsert({
     *   create: {
     *     // ... data to create a MaterialIssue
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MaterialIssue we want to update
     *   }
     * })
     */
    upsert<T extends MaterialIssueUpsertArgs>(args: SelectSubset<T, MaterialIssueUpsertArgs<ExtArgs>>): Prisma__MaterialIssueClient<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MaterialIssues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialIssueCountArgs} args - Arguments to filter MaterialIssues to count.
     * @example
     * // Count the number of MaterialIssues
     * const count = await prisma.materialIssue.count({
     *   where: {
     *     // ... the filter for the MaterialIssues we want to count
     *   }
     * })
    **/
    count<T extends MaterialIssueCountArgs>(
      args?: Subset<T, MaterialIssueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaterialIssueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MaterialIssue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialIssueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaterialIssueAggregateArgs>(args: Subset<T, MaterialIssueAggregateArgs>): Prisma.PrismaPromise<GetMaterialIssueAggregateType<T>>

    /**
     * Group by MaterialIssue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialIssueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaterialIssueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaterialIssueGroupByArgs['orderBy'] }
        : { orderBy?: MaterialIssueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaterialIssueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaterialIssueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MaterialIssue model
   */
  readonly fields: MaterialIssueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MaterialIssue.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaterialIssueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    job<T extends MovingJobDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MovingJobDefaultArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    material<T extends PackingMaterialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PackingMaterialDefaultArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    stockBatch<T extends MaterialIssue$stockBatchArgs<ExtArgs> = {}>(args?: Subset<T, MaterialIssue$stockBatchArgs<ExtArgs>>): Prisma__StockBatchClient<$Result.GetResult<Prisma.$StockBatchPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    rack<T extends MaterialIssue$rackArgs<ExtArgs> = {}>(args?: Subset<T, MaterialIssue$rackArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    issuedBy<T extends MaterialIssue$issuedByArgs<ExtArgs> = {}>(args?: Subset<T, MaterialIssue$issuedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    returns<T extends MaterialIssue$returnsArgs<ExtArgs> = {}>(args?: Subset<T, MaterialIssue$returnsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MaterialIssue model
   */ 
  interface MaterialIssueFieldRefs {
    readonly id: FieldRef<"MaterialIssue", 'String'>
    readonly jobId: FieldRef<"MaterialIssue", 'String'>
    readonly materialId: FieldRef<"MaterialIssue", 'String'>
    readonly stockBatchId: FieldRef<"MaterialIssue", 'String'>
    readonly quantity: FieldRef<"MaterialIssue", 'Int'>
    readonly unitCost: FieldRef<"MaterialIssue", 'Float'>
    readonly totalCost: FieldRef<"MaterialIssue", 'Float'>
    readonly rackId: FieldRef<"MaterialIssue", 'String'>
    readonly issuedById: FieldRef<"MaterialIssue", 'String'>
    readonly issuedAt: FieldRef<"MaterialIssue", 'DateTime'>
    readonly notes: FieldRef<"MaterialIssue", 'String'>
    readonly companyId: FieldRef<"MaterialIssue", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MaterialIssue findUnique
   */
  export type MaterialIssueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    /**
     * Filter, which MaterialIssue to fetch.
     */
    where: MaterialIssueWhereUniqueInput
  }

  /**
   * MaterialIssue findUniqueOrThrow
   */
  export type MaterialIssueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    /**
     * Filter, which MaterialIssue to fetch.
     */
    where: MaterialIssueWhereUniqueInput
  }

  /**
   * MaterialIssue findFirst
   */
  export type MaterialIssueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    /**
     * Filter, which MaterialIssue to fetch.
     */
    where?: MaterialIssueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialIssues to fetch.
     */
    orderBy?: MaterialIssueOrderByWithRelationInput | MaterialIssueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaterialIssues.
     */
    cursor?: MaterialIssueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialIssues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialIssues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaterialIssues.
     */
    distinct?: MaterialIssueScalarFieldEnum | MaterialIssueScalarFieldEnum[]
  }

  /**
   * MaterialIssue findFirstOrThrow
   */
  export type MaterialIssueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    /**
     * Filter, which MaterialIssue to fetch.
     */
    where?: MaterialIssueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialIssues to fetch.
     */
    orderBy?: MaterialIssueOrderByWithRelationInput | MaterialIssueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaterialIssues.
     */
    cursor?: MaterialIssueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialIssues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialIssues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaterialIssues.
     */
    distinct?: MaterialIssueScalarFieldEnum | MaterialIssueScalarFieldEnum[]
  }

  /**
   * MaterialIssue findMany
   */
  export type MaterialIssueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    /**
     * Filter, which MaterialIssues to fetch.
     */
    where?: MaterialIssueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialIssues to fetch.
     */
    orderBy?: MaterialIssueOrderByWithRelationInput | MaterialIssueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MaterialIssues.
     */
    cursor?: MaterialIssueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialIssues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialIssues.
     */
    skip?: number
    distinct?: MaterialIssueScalarFieldEnum | MaterialIssueScalarFieldEnum[]
  }

  /**
   * MaterialIssue create
   */
  export type MaterialIssueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    /**
     * The data needed to create a MaterialIssue.
     */
    data: XOR<MaterialIssueCreateInput, MaterialIssueUncheckedCreateInput>
  }

  /**
   * MaterialIssue createMany
   */
  export type MaterialIssueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MaterialIssues.
     */
    data: MaterialIssueCreateManyInput | MaterialIssueCreateManyInput[]
  }

  /**
   * MaterialIssue createManyAndReturn
   */
  export type MaterialIssueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MaterialIssues.
     */
    data: MaterialIssueCreateManyInput | MaterialIssueCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MaterialIssue update
   */
  export type MaterialIssueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    /**
     * The data needed to update a MaterialIssue.
     */
    data: XOR<MaterialIssueUpdateInput, MaterialIssueUncheckedUpdateInput>
    /**
     * Choose, which MaterialIssue to update.
     */
    where: MaterialIssueWhereUniqueInput
  }

  /**
   * MaterialIssue updateMany
   */
  export type MaterialIssueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MaterialIssues.
     */
    data: XOR<MaterialIssueUpdateManyMutationInput, MaterialIssueUncheckedUpdateManyInput>
    /**
     * Filter which MaterialIssues to update
     */
    where?: MaterialIssueWhereInput
  }

  /**
   * MaterialIssue upsert
   */
  export type MaterialIssueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    /**
     * The filter to search for the MaterialIssue to update in case it exists.
     */
    where: MaterialIssueWhereUniqueInput
    /**
     * In case the MaterialIssue found by the `where` argument doesn't exist, create a new MaterialIssue with this data.
     */
    create: XOR<MaterialIssueCreateInput, MaterialIssueUncheckedCreateInput>
    /**
     * In case the MaterialIssue was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaterialIssueUpdateInput, MaterialIssueUncheckedUpdateInput>
  }

  /**
   * MaterialIssue delete
   */
  export type MaterialIssueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    /**
     * Filter which MaterialIssue to delete.
     */
    where: MaterialIssueWhereUniqueInput
  }

  /**
   * MaterialIssue deleteMany
   */
  export type MaterialIssueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaterialIssues to delete
     */
    where?: MaterialIssueWhereInput
  }

  /**
   * MaterialIssue.stockBatch
   */
  export type MaterialIssue$stockBatchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBatch
     */
    select?: StockBatchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBatchInclude<ExtArgs> | null
    where?: StockBatchWhereInput
  }

  /**
   * MaterialIssue.rack
   */
  export type MaterialIssue$rackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    where?: RackWhereInput
  }

  /**
   * MaterialIssue.issuedBy
   */
  export type MaterialIssue$issuedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * MaterialIssue.returns
   */
  export type MaterialIssue$returnsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    where?: MaterialReturnWhereInput
    orderBy?: MaterialReturnOrderByWithRelationInput | MaterialReturnOrderByWithRelationInput[]
    cursor?: MaterialReturnWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialReturnScalarFieldEnum | MaterialReturnScalarFieldEnum[]
  }

  /**
   * MaterialIssue without action
   */
  export type MaterialIssueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
  }


  /**
   * Model MaterialReturn
   */

  export type AggregateMaterialReturn = {
    _count: MaterialReturnCountAggregateOutputType | null
    _avg: MaterialReturnAvgAggregateOutputType | null
    _sum: MaterialReturnSumAggregateOutputType | null
    _min: MaterialReturnMinAggregateOutputType | null
    _max: MaterialReturnMaxAggregateOutputType | null
  }

  export type MaterialReturnAvgAggregateOutputType = {
    quantityIssued: number | null
    quantityUsed: number | null
    quantityGood: number | null
    quantityDamaged: number | null
  }

  export type MaterialReturnSumAggregateOutputType = {
    quantityIssued: number | null
    quantityUsed: number | null
    quantityGood: number | null
    quantityDamaged: number | null
  }

  export type MaterialReturnMinAggregateOutputType = {
    id: string | null
    jobId: string | null
    materialId: string | null
    issueId: string | null
    quantityIssued: number | null
    quantityUsed: number | null
    quantityGood: number | null
    quantityDamaged: number | null
    restocked: boolean | null
    restockedAt: Date | null
    rackId: string | null
    recordedById: string | null
    recordedAt: Date | null
    notes: string | null
    companyId: string | null
  }

  export type MaterialReturnMaxAggregateOutputType = {
    id: string | null
    jobId: string | null
    materialId: string | null
    issueId: string | null
    quantityIssued: number | null
    quantityUsed: number | null
    quantityGood: number | null
    quantityDamaged: number | null
    restocked: boolean | null
    restockedAt: Date | null
    rackId: string | null
    recordedById: string | null
    recordedAt: Date | null
    notes: string | null
    companyId: string | null
  }

  export type MaterialReturnCountAggregateOutputType = {
    id: number
    jobId: number
    materialId: number
    issueId: number
    quantityIssued: number
    quantityUsed: number
    quantityGood: number
    quantityDamaged: number
    restocked: number
    restockedAt: number
    rackId: number
    recordedById: number
    recordedAt: number
    notes: number
    companyId: number
    _all: number
  }


  export type MaterialReturnAvgAggregateInputType = {
    quantityIssued?: true
    quantityUsed?: true
    quantityGood?: true
    quantityDamaged?: true
  }

  export type MaterialReturnSumAggregateInputType = {
    quantityIssued?: true
    quantityUsed?: true
    quantityGood?: true
    quantityDamaged?: true
  }

  export type MaterialReturnMinAggregateInputType = {
    id?: true
    jobId?: true
    materialId?: true
    issueId?: true
    quantityIssued?: true
    quantityUsed?: true
    quantityGood?: true
    quantityDamaged?: true
    restocked?: true
    restockedAt?: true
    rackId?: true
    recordedById?: true
    recordedAt?: true
    notes?: true
    companyId?: true
  }

  export type MaterialReturnMaxAggregateInputType = {
    id?: true
    jobId?: true
    materialId?: true
    issueId?: true
    quantityIssued?: true
    quantityUsed?: true
    quantityGood?: true
    quantityDamaged?: true
    restocked?: true
    restockedAt?: true
    rackId?: true
    recordedById?: true
    recordedAt?: true
    notes?: true
    companyId?: true
  }

  export type MaterialReturnCountAggregateInputType = {
    id?: true
    jobId?: true
    materialId?: true
    issueId?: true
    quantityIssued?: true
    quantityUsed?: true
    quantityGood?: true
    quantityDamaged?: true
    restocked?: true
    restockedAt?: true
    rackId?: true
    recordedById?: true
    recordedAt?: true
    notes?: true
    companyId?: true
    _all?: true
  }

  export type MaterialReturnAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaterialReturn to aggregate.
     */
    where?: MaterialReturnWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialReturns to fetch.
     */
    orderBy?: MaterialReturnOrderByWithRelationInput | MaterialReturnOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaterialReturnWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialReturns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialReturns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MaterialReturns
    **/
    _count?: true | MaterialReturnCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaterialReturnAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaterialReturnSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaterialReturnMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaterialReturnMaxAggregateInputType
  }

  export type GetMaterialReturnAggregateType<T extends MaterialReturnAggregateArgs> = {
        [P in keyof T & keyof AggregateMaterialReturn]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaterialReturn[P]>
      : GetScalarType<T[P], AggregateMaterialReturn[P]>
  }




  export type MaterialReturnGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialReturnWhereInput
    orderBy?: MaterialReturnOrderByWithAggregationInput | MaterialReturnOrderByWithAggregationInput[]
    by: MaterialReturnScalarFieldEnum[] | MaterialReturnScalarFieldEnum
    having?: MaterialReturnScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaterialReturnCountAggregateInputType | true
    _avg?: MaterialReturnAvgAggregateInputType
    _sum?: MaterialReturnSumAggregateInputType
    _min?: MaterialReturnMinAggregateInputType
    _max?: MaterialReturnMaxAggregateInputType
  }

  export type MaterialReturnGroupByOutputType = {
    id: string
    jobId: string
    materialId: string
    issueId: string | null
    quantityIssued: number | null
    quantityUsed: number | null
    quantityGood: number
    quantityDamaged: number
    restocked: boolean
    restockedAt: Date | null
    rackId: string | null
    recordedById: string | null
    recordedAt: Date
    notes: string | null
    companyId: string
    _count: MaterialReturnCountAggregateOutputType | null
    _avg: MaterialReturnAvgAggregateOutputType | null
    _sum: MaterialReturnSumAggregateOutputType | null
    _min: MaterialReturnMinAggregateOutputType | null
    _max: MaterialReturnMaxAggregateOutputType | null
  }

  type GetMaterialReturnGroupByPayload<T extends MaterialReturnGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaterialReturnGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaterialReturnGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaterialReturnGroupByOutputType[P]>
            : GetScalarType<T[P], MaterialReturnGroupByOutputType[P]>
        }
      >
    >


  export type MaterialReturnSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    materialId?: boolean
    issueId?: boolean
    quantityIssued?: boolean
    quantityUsed?: boolean
    quantityGood?: boolean
    quantityDamaged?: boolean
    restocked?: boolean
    restockedAt?: boolean
    rackId?: boolean
    recordedById?: boolean
    recordedAt?: boolean
    notes?: boolean
    companyId?: boolean
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    issue?: boolean | MaterialReturn$issueArgs<ExtArgs>
    rack?: boolean | MaterialReturn$rackArgs<ExtArgs>
    recordedBy?: boolean | MaterialReturn$recordedByArgs<ExtArgs>
    damages?: boolean | MaterialReturn$damagesArgs<ExtArgs>
    approval?: boolean | MaterialReturn$approvalArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    _count?: boolean | MaterialReturnCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materialReturn"]>

  export type MaterialReturnSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    materialId?: boolean
    issueId?: boolean
    quantityIssued?: boolean
    quantityUsed?: boolean
    quantityGood?: boolean
    quantityDamaged?: boolean
    restocked?: boolean
    restockedAt?: boolean
    rackId?: boolean
    recordedById?: boolean
    recordedAt?: boolean
    notes?: boolean
    companyId?: boolean
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    issue?: boolean | MaterialReturn$issueArgs<ExtArgs>
    rack?: boolean | MaterialReturn$rackArgs<ExtArgs>
    recordedBy?: boolean | MaterialReturn$recordedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materialReturn"]>

  export type MaterialReturnSelectScalar = {
    id?: boolean
    jobId?: boolean
    materialId?: boolean
    issueId?: boolean
    quantityIssued?: boolean
    quantityUsed?: boolean
    quantityGood?: boolean
    quantityDamaged?: boolean
    restocked?: boolean
    restockedAt?: boolean
    rackId?: boolean
    recordedById?: boolean
    recordedAt?: boolean
    notes?: boolean
    companyId?: boolean
  }

  export type MaterialReturnInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    issue?: boolean | MaterialReturn$issueArgs<ExtArgs>
    rack?: boolean | MaterialReturn$rackArgs<ExtArgs>
    recordedBy?: boolean | MaterialReturn$recordedByArgs<ExtArgs>
    damages?: boolean | MaterialReturn$damagesArgs<ExtArgs>
    approval?: boolean | MaterialReturn$approvalArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    _count?: boolean | MaterialReturnCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MaterialReturnIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    issue?: boolean | MaterialReturn$issueArgs<ExtArgs>
    rack?: boolean | MaterialReturn$rackArgs<ExtArgs>
    recordedBy?: boolean | MaterialReturn$recordedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $MaterialReturnPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MaterialReturn"
    objects: {
      job: Prisma.$MovingJobPayload<ExtArgs>
      material: Prisma.$PackingMaterialPayload<ExtArgs>
      issue: Prisma.$MaterialIssuePayload<ExtArgs> | null
      rack: Prisma.$RackPayload<ExtArgs> | null
      recordedBy: Prisma.$UserPayload<ExtArgs> | null
      damages: Prisma.$MaterialDamagePayload<ExtArgs>[]
      approval: Prisma.$MaterialApprovalPayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      jobId: string
      materialId: string
      issueId: string | null
      quantityIssued: number | null
      quantityUsed: number | null
      quantityGood: number
      quantityDamaged: number
      restocked: boolean
      restockedAt: Date | null
      rackId: string | null
      recordedById: string | null
      recordedAt: Date
      notes: string | null
      companyId: string
    }, ExtArgs["result"]["materialReturn"]>
    composites: {}
  }

  type MaterialReturnGetPayload<S extends boolean | null | undefined | MaterialReturnDefaultArgs> = $Result.GetResult<Prisma.$MaterialReturnPayload, S>

  type MaterialReturnCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MaterialReturnFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MaterialReturnCountAggregateInputType | true
    }

  export interface MaterialReturnDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MaterialReturn'], meta: { name: 'MaterialReturn' } }
    /**
     * Find zero or one MaterialReturn that matches the filter.
     * @param {MaterialReturnFindUniqueArgs} args - Arguments to find a MaterialReturn
     * @example
     * // Get one MaterialReturn
     * const materialReturn = await prisma.materialReturn.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaterialReturnFindUniqueArgs>(args: SelectSubset<T, MaterialReturnFindUniqueArgs<ExtArgs>>): Prisma__MaterialReturnClient<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MaterialReturn that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MaterialReturnFindUniqueOrThrowArgs} args - Arguments to find a MaterialReturn
     * @example
     * // Get one MaterialReturn
     * const materialReturn = await prisma.materialReturn.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaterialReturnFindUniqueOrThrowArgs>(args: SelectSubset<T, MaterialReturnFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaterialReturnClient<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MaterialReturn that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialReturnFindFirstArgs} args - Arguments to find a MaterialReturn
     * @example
     * // Get one MaterialReturn
     * const materialReturn = await prisma.materialReturn.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaterialReturnFindFirstArgs>(args?: SelectSubset<T, MaterialReturnFindFirstArgs<ExtArgs>>): Prisma__MaterialReturnClient<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MaterialReturn that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialReturnFindFirstOrThrowArgs} args - Arguments to find a MaterialReturn
     * @example
     * // Get one MaterialReturn
     * const materialReturn = await prisma.materialReturn.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaterialReturnFindFirstOrThrowArgs>(args?: SelectSubset<T, MaterialReturnFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaterialReturnClient<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MaterialReturns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialReturnFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MaterialReturns
     * const materialReturns = await prisma.materialReturn.findMany()
     * 
     * // Get first 10 MaterialReturns
     * const materialReturns = await prisma.materialReturn.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const materialReturnWithIdOnly = await prisma.materialReturn.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MaterialReturnFindManyArgs>(args?: SelectSubset<T, MaterialReturnFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MaterialReturn.
     * @param {MaterialReturnCreateArgs} args - Arguments to create a MaterialReturn.
     * @example
     * // Create one MaterialReturn
     * const MaterialReturn = await prisma.materialReturn.create({
     *   data: {
     *     // ... data to create a MaterialReturn
     *   }
     * })
     * 
     */
    create<T extends MaterialReturnCreateArgs>(args: SelectSubset<T, MaterialReturnCreateArgs<ExtArgs>>): Prisma__MaterialReturnClient<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MaterialReturns.
     * @param {MaterialReturnCreateManyArgs} args - Arguments to create many MaterialReturns.
     * @example
     * // Create many MaterialReturns
     * const materialReturn = await prisma.materialReturn.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaterialReturnCreateManyArgs>(args?: SelectSubset<T, MaterialReturnCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MaterialReturns and returns the data saved in the database.
     * @param {MaterialReturnCreateManyAndReturnArgs} args - Arguments to create many MaterialReturns.
     * @example
     * // Create many MaterialReturns
     * const materialReturn = await prisma.materialReturn.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MaterialReturns and only return the `id`
     * const materialReturnWithIdOnly = await prisma.materialReturn.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MaterialReturnCreateManyAndReturnArgs>(args?: SelectSubset<T, MaterialReturnCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MaterialReturn.
     * @param {MaterialReturnDeleteArgs} args - Arguments to delete one MaterialReturn.
     * @example
     * // Delete one MaterialReturn
     * const MaterialReturn = await prisma.materialReturn.delete({
     *   where: {
     *     // ... filter to delete one MaterialReturn
     *   }
     * })
     * 
     */
    delete<T extends MaterialReturnDeleteArgs>(args: SelectSubset<T, MaterialReturnDeleteArgs<ExtArgs>>): Prisma__MaterialReturnClient<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MaterialReturn.
     * @param {MaterialReturnUpdateArgs} args - Arguments to update one MaterialReturn.
     * @example
     * // Update one MaterialReturn
     * const materialReturn = await prisma.materialReturn.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaterialReturnUpdateArgs>(args: SelectSubset<T, MaterialReturnUpdateArgs<ExtArgs>>): Prisma__MaterialReturnClient<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MaterialReturns.
     * @param {MaterialReturnDeleteManyArgs} args - Arguments to filter MaterialReturns to delete.
     * @example
     * // Delete a few MaterialReturns
     * const { count } = await prisma.materialReturn.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaterialReturnDeleteManyArgs>(args?: SelectSubset<T, MaterialReturnDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MaterialReturns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialReturnUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MaterialReturns
     * const materialReturn = await prisma.materialReturn.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaterialReturnUpdateManyArgs>(args: SelectSubset<T, MaterialReturnUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MaterialReturn.
     * @param {MaterialReturnUpsertArgs} args - Arguments to update or create a MaterialReturn.
     * @example
     * // Update or create a MaterialReturn
     * const materialReturn = await prisma.materialReturn.upsert({
     *   create: {
     *     // ... data to create a MaterialReturn
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MaterialReturn we want to update
     *   }
     * })
     */
    upsert<T extends MaterialReturnUpsertArgs>(args: SelectSubset<T, MaterialReturnUpsertArgs<ExtArgs>>): Prisma__MaterialReturnClient<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MaterialReturns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialReturnCountArgs} args - Arguments to filter MaterialReturns to count.
     * @example
     * // Count the number of MaterialReturns
     * const count = await prisma.materialReturn.count({
     *   where: {
     *     // ... the filter for the MaterialReturns we want to count
     *   }
     * })
    **/
    count<T extends MaterialReturnCountArgs>(
      args?: Subset<T, MaterialReturnCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaterialReturnCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MaterialReturn.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialReturnAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaterialReturnAggregateArgs>(args: Subset<T, MaterialReturnAggregateArgs>): Prisma.PrismaPromise<GetMaterialReturnAggregateType<T>>

    /**
     * Group by MaterialReturn.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialReturnGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaterialReturnGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaterialReturnGroupByArgs['orderBy'] }
        : { orderBy?: MaterialReturnGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaterialReturnGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaterialReturnGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MaterialReturn model
   */
  readonly fields: MaterialReturnFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MaterialReturn.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaterialReturnClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    job<T extends MovingJobDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MovingJobDefaultArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    material<T extends PackingMaterialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PackingMaterialDefaultArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    issue<T extends MaterialReturn$issueArgs<ExtArgs> = {}>(args?: Subset<T, MaterialReturn$issueArgs<ExtArgs>>): Prisma__MaterialIssueClient<$Result.GetResult<Prisma.$MaterialIssuePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    rack<T extends MaterialReturn$rackArgs<ExtArgs> = {}>(args?: Subset<T, MaterialReturn$rackArgs<ExtArgs>>): Prisma__RackClient<$Result.GetResult<Prisma.$RackPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    recordedBy<T extends MaterialReturn$recordedByArgs<ExtArgs> = {}>(args?: Subset<T, MaterialReturn$recordedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    damages<T extends MaterialReturn$damagesArgs<ExtArgs> = {}>(args?: Subset<T, MaterialReturn$damagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findMany"> | Null>
    approval<T extends MaterialReturn$approvalArgs<ExtArgs> = {}>(args?: Subset<T, MaterialReturn$approvalArgs<ExtArgs>>): Prisma__MaterialApprovalClient<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MaterialReturn model
   */ 
  interface MaterialReturnFieldRefs {
    readonly id: FieldRef<"MaterialReturn", 'String'>
    readonly jobId: FieldRef<"MaterialReturn", 'String'>
    readonly materialId: FieldRef<"MaterialReturn", 'String'>
    readonly issueId: FieldRef<"MaterialReturn", 'String'>
    readonly quantityIssued: FieldRef<"MaterialReturn", 'Int'>
    readonly quantityUsed: FieldRef<"MaterialReturn", 'Int'>
    readonly quantityGood: FieldRef<"MaterialReturn", 'Int'>
    readonly quantityDamaged: FieldRef<"MaterialReturn", 'Int'>
    readonly restocked: FieldRef<"MaterialReturn", 'Boolean'>
    readonly restockedAt: FieldRef<"MaterialReturn", 'DateTime'>
    readonly rackId: FieldRef<"MaterialReturn", 'String'>
    readonly recordedById: FieldRef<"MaterialReturn", 'String'>
    readonly recordedAt: FieldRef<"MaterialReturn", 'DateTime'>
    readonly notes: FieldRef<"MaterialReturn", 'String'>
    readonly companyId: FieldRef<"MaterialReturn", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MaterialReturn findUnique
   */
  export type MaterialReturnFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    /**
     * Filter, which MaterialReturn to fetch.
     */
    where: MaterialReturnWhereUniqueInput
  }

  /**
   * MaterialReturn findUniqueOrThrow
   */
  export type MaterialReturnFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    /**
     * Filter, which MaterialReturn to fetch.
     */
    where: MaterialReturnWhereUniqueInput
  }

  /**
   * MaterialReturn findFirst
   */
  export type MaterialReturnFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    /**
     * Filter, which MaterialReturn to fetch.
     */
    where?: MaterialReturnWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialReturns to fetch.
     */
    orderBy?: MaterialReturnOrderByWithRelationInput | MaterialReturnOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaterialReturns.
     */
    cursor?: MaterialReturnWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialReturns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialReturns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaterialReturns.
     */
    distinct?: MaterialReturnScalarFieldEnum | MaterialReturnScalarFieldEnum[]
  }

  /**
   * MaterialReturn findFirstOrThrow
   */
  export type MaterialReturnFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    /**
     * Filter, which MaterialReturn to fetch.
     */
    where?: MaterialReturnWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialReturns to fetch.
     */
    orderBy?: MaterialReturnOrderByWithRelationInput | MaterialReturnOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaterialReturns.
     */
    cursor?: MaterialReturnWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialReturns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialReturns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaterialReturns.
     */
    distinct?: MaterialReturnScalarFieldEnum | MaterialReturnScalarFieldEnum[]
  }

  /**
   * MaterialReturn findMany
   */
  export type MaterialReturnFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    /**
     * Filter, which MaterialReturns to fetch.
     */
    where?: MaterialReturnWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialReturns to fetch.
     */
    orderBy?: MaterialReturnOrderByWithRelationInput | MaterialReturnOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MaterialReturns.
     */
    cursor?: MaterialReturnWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialReturns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialReturns.
     */
    skip?: number
    distinct?: MaterialReturnScalarFieldEnum | MaterialReturnScalarFieldEnum[]
  }

  /**
   * MaterialReturn create
   */
  export type MaterialReturnCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    /**
     * The data needed to create a MaterialReturn.
     */
    data: XOR<MaterialReturnCreateInput, MaterialReturnUncheckedCreateInput>
  }

  /**
   * MaterialReturn createMany
   */
  export type MaterialReturnCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MaterialReturns.
     */
    data: MaterialReturnCreateManyInput | MaterialReturnCreateManyInput[]
  }

  /**
   * MaterialReturn createManyAndReturn
   */
  export type MaterialReturnCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MaterialReturns.
     */
    data: MaterialReturnCreateManyInput | MaterialReturnCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MaterialReturn update
   */
  export type MaterialReturnUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    /**
     * The data needed to update a MaterialReturn.
     */
    data: XOR<MaterialReturnUpdateInput, MaterialReturnUncheckedUpdateInput>
    /**
     * Choose, which MaterialReturn to update.
     */
    where: MaterialReturnWhereUniqueInput
  }

  /**
   * MaterialReturn updateMany
   */
  export type MaterialReturnUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MaterialReturns.
     */
    data: XOR<MaterialReturnUpdateManyMutationInput, MaterialReturnUncheckedUpdateManyInput>
    /**
     * Filter which MaterialReturns to update
     */
    where?: MaterialReturnWhereInput
  }

  /**
   * MaterialReturn upsert
   */
  export type MaterialReturnUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    /**
     * The filter to search for the MaterialReturn to update in case it exists.
     */
    where: MaterialReturnWhereUniqueInput
    /**
     * In case the MaterialReturn found by the `where` argument doesn't exist, create a new MaterialReturn with this data.
     */
    create: XOR<MaterialReturnCreateInput, MaterialReturnUncheckedCreateInput>
    /**
     * In case the MaterialReturn was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaterialReturnUpdateInput, MaterialReturnUncheckedUpdateInput>
  }

  /**
   * MaterialReturn delete
   */
  export type MaterialReturnDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    /**
     * Filter which MaterialReturn to delete.
     */
    where: MaterialReturnWhereUniqueInput
  }

  /**
   * MaterialReturn deleteMany
   */
  export type MaterialReturnDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaterialReturns to delete
     */
    where?: MaterialReturnWhereInput
  }

  /**
   * MaterialReturn.issue
   */
  export type MaterialReturn$issueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialIssue
     */
    select?: MaterialIssueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIssueInclude<ExtArgs> | null
    where?: MaterialIssueWhereInput
  }

  /**
   * MaterialReturn.rack
   */
  export type MaterialReturn$rackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rack
     */
    select?: RackSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RackInclude<ExtArgs> | null
    where?: RackWhereInput
  }

  /**
   * MaterialReturn.recordedBy
   */
  export type MaterialReturn$recordedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * MaterialReturn.damages
   */
  export type MaterialReturn$damagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    where?: MaterialDamageWhereInput
    orderBy?: MaterialDamageOrderByWithRelationInput | MaterialDamageOrderByWithRelationInput[]
    cursor?: MaterialDamageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialDamageScalarFieldEnum | MaterialDamageScalarFieldEnum[]
  }

  /**
   * MaterialReturn.approval
   */
  export type MaterialReturn$approvalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    where?: MaterialApprovalWhereInput
  }

  /**
   * MaterialReturn without action
   */
  export type MaterialReturnDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
  }


  /**
   * Model MaterialDamage
   */

  export type AggregateMaterialDamage = {
    _count: MaterialDamageCountAggregateOutputType | null
    _avg: MaterialDamageAvgAggregateOutputType | null
    _sum: MaterialDamageSumAggregateOutputType | null
    _min: MaterialDamageMinAggregateOutputType | null
    _max: MaterialDamageMaxAggregateOutputType | null
  }

  export type MaterialDamageAvgAggregateOutputType = {
    quantity: number | null
  }

  export type MaterialDamageSumAggregateOutputType = {
    quantity: number | null
  }

  export type MaterialDamageMinAggregateOutputType = {
    id: string | null
    returnId: string | null
    materialId: string | null
    quantity: number | null
    reason: string | null
    photoUrls: string | null
    status: string | null
    recordedById: string | null
    recordedAt: Date | null
    approvedById: string | null
    approvedAt: Date | null
    approvalNotes: string | null
    rejectionReason: string | null
    companyId: string | null
  }

  export type MaterialDamageMaxAggregateOutputType = {
    id: string | null
    returnId: string | null
    materialId: string | null
    quantity: number | null
    reason: string | null
    photoUrls: string | null
    status: string | null
    recordedById: string | null
    recordedAt: Date | null
    approvedById: string | null
    approvedAt: Date | null
    approvalNotes: string | null
    rejectionReason: string | null
    companyId: string | null
  }

  export type MaterialDamageCountAggregateOutputType = {
    id: number
    returnId: number
    materialId: number
    quantity: number
    reason: number
    photoUrls: number
    status: number
    recordedById: number
    recordedAt: number
    approvedById: number
    approvedAt: number
    approvalNotes: number
    rejectionReason: number
    companyId: number
    _all: number
  }


  export type MaterialDamageAvgAggregateInputType = {
    quantity?: true
  }

  export type MaterialDamageSumAggregateInputType = {
    quantity?: true
  }

  export type MaterialDamageMinAggregateInputType = {
    id?: true
    returnId?: true
    materialId?: true
    quantity?: true
    reason?: true
    photoUrls?: true
    status?: true
    recordedById?: true
    recordedAt?: true
    approvedById?: true
    approvedAt?: true
    approvalNotes?: true
    rejectionReason?: true
    companyId?: true
  }

  export type MaterialDamageMaxAggregateInputType = {
    id?: true
    returnId?: true
    materialId?: true
    quantity?: true
    reason?: true
    photoUrls?: true
    status?: true
    recordedById?: true
    recordedAt?: true
    approvedById?: true
    approvedAt?: true
    approvalNotes?: true
    rejectionReason?: true
    companyId?: true
  }

  export type MaterialDamageCountAggregateInputType = {
    id?: true
    returnId?: true
    materialId?: true
    quantity?: true
    reason?: true
    photoUrls?: true
    status?: true
    recordedById?: true
    recordedAt?: true
    approvedById?: true
    approvedAt?: true
    approvalNotes?: true
    rejectionReason?: true
    companyId?: true
    _all?: true
  }

  export type MaterialDamageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaterialDamage to aggregate.
     */
    where?: MaterialDamageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialDamages to fetch.
     */
    orderBy?: MaterialDamageOrderByWithRelationInput | MaterialDamageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaterialDamageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialDamages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialDamages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MaterialDamages
    **/
    _count?: true | MaterialDamageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaterialDamageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaterialDamageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaterialDamageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaterialDamageMaxAggregateInputType
  }

  export type GetMaterialDamageAggregateType<T extends MaterialDamageAggregateArgs> = {
        [P in keyof T & keyof AggregateMaterialDamage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaterialDamage[P]>
      : GetScalarType<T[P], AggregateMaterialDamage[P]>
  }




  export type MaterialDamageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialDamageWhereInput
    orderBy?: MaterialDamageOrderByWithAggregationInput | MaterialDamageOrderByWithAggregationInput[]
    by: MaterialDamageScalarFieldEnum[] | MaterialDamageScalarFieldEnum
    having?: MaterialDamageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaterialDamageCountAggregateInputType | true
    _avg?: MaterialDamageAvgAggregateInputType
    _sum?: MaterialDamageSumAggregateInputType
    _min?: MaterialDamageMinAggregateInputType
    _max?: MaterialDamageMaxAggregateInputType
  }

  export type MaterialDamageGroupByOutputType = {
    id: string
    returnId: string
    materialId: string
    quantity: number
    reason: string | null
    photoUrls: string | null
    status: string
    recordedById: string | null
    recordedAt: Date
    approvedById: string | null
    approvedAt: Date | null
    approvalNotes: string | null
    rejectionReason: string | null
    companyId: string
    _count: MaterialDamageCountAggregateOutputType | null
    _avg: MaterialDamageAvgAggregateOutputType | null
    _sum: MaterialDamageSumAggregateOutputType | null
    _min: MaterialDamageMinAggregateOutputType | null
    _max: MaterialDamageMaxAggregateOutputType | null
  }

  type GetMaterialDamageGroupByPayload<T extends MaterialDamageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaterialDamageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaterialDamageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaterialDamageGroupByOutputType[P]>
            : GetScalarType<T[P], MaterialDamageGroupByOutputType[P]>
        }
      >
    >


  export type MaterialDamageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    returnId?: boolean
    materialId?: boolean
    quantity?: boolean
    reason?: boolean
    photoUrls?: boolean
    status?: boolean
    recordedById?: boolean
    recordedAt?: boolean
    approvedById?: boolean
    approvedAt?: boolean
    approvalNotes?: boolean
    rejectionReason?: boolean
    companyId?: boolean
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    return?: boolean | MaterialReturnDefaultArgs<ExtArgs>
    recordedBy?: boolean | MaterialDamage$recordedByArgs<ExtArgs>
    approvedBy?: boolean | MaterialDamage$approvedByArgs<ExtArgs>
    approval?: boolean | MaterialDamage$approvalArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materialDamage"]>

  export type MaterialDamageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    returnId?: boolean
    materialId?: boolean
    quantity?: boolean
    reason?: boolean
    photoUrls?: boolean
    status?: boolean
    recordedById?: boolean
    recordedAt?: boolean
    approvedById?: boolean
    approvedAt?: boolean
    approvalNotes?: boolean
    rejectionReason?: boolean
    companyId?: boolean
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    return?: boolean | MaterialReturnDefaultArgs<ExtArgs>
    recordedBy?: boolean | MaterialDamage$recordedByArgs<ExtArgs>
    approvedBy?: boolean | MaterialDamage$approvedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materialDamage"]>

  export type MaterialDamageSelectScalar = {
    id?: boolean
    returnId?: boolean
    materialId?: boolean
    quantity?: boolean
    reason?: boolean
    photoUrls?: boolean
    status?: boolean
    recordedById?: boolean
    recordedAt?: boolean
    approvedById?: boolean
    approvedAt?: boolean
    approvalNotes?: boolean
    rejectionReason?: boolean
    companyId?: boolean
  }

  export type MaterialDamageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    return?: boolean | MaterialReturnDefaultArgs<ExtArgs>
    recordedBy?: boolean | MaterialDamage$recordedByArgs<ExtArgs>
    approvedBy?: boolean | MaterialDamage$approvedByArgs<ExtArgs>
    approval?: boolean | MaterialDamage$approvalArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type MaterialDamageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | PackingMaterialDefaultArgs<ExtArgs>
    return?: boolean | MaterialReturnDefaultArgs<ExtArgs>
    recordedBy?: boolean | MaterialDamage$recordedByArgs<ExtArgs>
    approvedBy?: boolean | MaterialDamage$approvedByArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $MaterialDamagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MaterialDamage"
    objects: {
      material: Prisma.$PackingMaterialPayload<ExtArgs>
      return: Prisma.$MaterialReturnPayload<ExtArgs>
      recordedBy: Prisma.$UserPayload<ExtArgs> | null
      approvedBy: Prisma.$UserPayload<ExtArgs> | null
      approval: Prisma.$MaterialApprovalPayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      returnId: string
      materialId: string
      quantity: number
      reason: string | null
      photoUrls: string | null
      status: string
      recordedById: string | null
      recordedAt: Date
      approvedById: string | null
      approvedAt: Date | null
      approvalNotes: string | null
      rejectionReason: string | null
      companyId: string
    }, ExtArgs["result"]["materialDamage"]>
    composites: {}
  }

  type MaterialDamageGetPayload<S extends boolean | null | undefined | MaterialDamageDefaultArgs> = $Result.GetResult<Prisma.$MaterialDamagePayload, S>

  type MaterialDamageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MaterialDamageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MaterialDamageCountAggregateInputType | true
    }

  export interface MaterialDamageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MaterialDamage'], meta: { name: 'MaterialDamage' } }
    /**
     * Find zero or one MaterialDamage that matches the filter.
     * @param {MaterialDamageFindUniqueArgs} args - Arguments to find a MaterialDamage
     * @example
     * // Get one MaterialDamage
     * const materialDamage = await prisma.materialDamage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaterialDamageFindUniqueArgs>(args: SelectSubset<T, MaterialDamageFindUniqueArgs<ExtArgs>>): Prisma__MaterialDamageClient<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MaterialDamage that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MaterialDamageFindUniqueOrThrowArgs} args - Arguments to find a MaterialDamage
     * @example
     * // Get one MaterialDamage
     * const materialDamage = await prisma.materialDamage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaterialDamageFindUniqueOrThrowArgs>(args: SelectSubset<T, MaterialDamageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaterialDamageClient<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MaterialDamage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialDamageFindFirstArgs} args - Arguments to find a MaterialDamage
     * @example
     * // Get one MaterialDamage
     * const materialDamage = await prisma.materialDamage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaterialDamageFindFirstArgs>(args?: SelectSubset<T, MaterialDamageFindFirstArgs<ExtArgs>>): Prisma__MaterialDamageClient<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MaterialDamage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialDamageFindFirstOrThrowArgs} args - Arguments to find a MaterialDamage
     * @example
     * // Get one MaterialDamage
     * const materialDamage = await prisma.materialDamage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaterialDamageFindFirstOrThrowArgs>(args?: SelectSubset<T, MaterialDamageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaterialDamageClient<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MaterialDamages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialDamageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MaterialDamages
     * const materialDamages = await prisma.materialDamage.findMany()
     * 
     * // Get first 10 MaterialDamages
     * const materialDamages = await prisma.materialDamage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const materialDamageWithIdOnly = await prisma.materialDamage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MaterialDamageFindManyArgs>(args?: SelectSubset<T, MaterialDamageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MaterialDamage.
     * @param {MaterialDamageCreateArgs} args - Arguments to create a MaterialDamage.
     * @example
     * // Create one MaterialDamage
     * const MaterialDamage = await prisma.materialDamage.create({
     *   data: {
     *     // ... data to create a MaterialDamage
     *   }
     * })
     * 
     */
    create<T extends MaterialDamageCreateArgs>(args: SelectSubset<T, MaterialDamageCreateArgs<ExtArgs>>): Prisma__MaterialDamageClient<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MaterialDamages.
     * @param {MaterialDamageCreateManyArgs} args - Arguments to create many MaterialDamages.
     * @example
     * // Create many MaterialDamages
     * const materialDamage = await prisma.materialDamage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaterialDamageCreateManyArgs>(args?: SelectSubset<T, MaterialDamageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MaterialDamages and returns the data saved in the database.
     * @param {MaterialDamageCreateManyAndReturnArgs} args - Arguments to create many MaterialDamages.
     * @example
     * // Create many MaterialDamages
     * const materialDamage = await prisma.materialDamage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MaterialDamages and only return the `id`
     * const materialDamageWithIdOnly = await prisma.materialDamage.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MaterialDamageCreateManyAndReturnArgs>(args?: SelectSubset<T, MaterialDamageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MaterialDamage.
     * @param {MaterialDamageDeleteArgs} args - Arguments to delete one MaterialDamage.
     * @example
     * // Delete one MaterialDamage
     * const MaterialDamage = await prisma.materialDamage.delete({
     *   where: {
     *     // ... filter to delete one MaterialDamage
     *   }
     * })
     * 
     */
    delete<T extends MaterialDamageDeleteArgs>(args: SelectSubset<T, MaterialDamageDeleteArgs<ExtArgs>>): Prisma__MaterialDamageClient<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MaterialDamage.
     * @param {MaterialDamageUpdateArgs} args - Arguments to update one MaterialDamage.
     * @example
     * // Update one MaterialDamage
     * const materialDamage = await prisma.materialDamage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaterialDamageUpdateArgs>(args: SelectSubset<T, MaterialDamageUpdateArgs<ExtArgs>>): Prisma__MaterialDamageClient<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MaterialDamages.
     * @param {MaterialDamageDeleteManyArgs} args - Arguments to filter MaterialDamages to delete.
     * @example
     * // Delete a few MaterialDamages
     * const { count } = await prisma.materialDamage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaterialDamageDeleteManyArgs>(args?: SelectSubset<T, MaterialDamageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MaterialDamages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialDamageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MaterialDamages
     * const materialDamage = await prisma.materialDamage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaterialDamageUpdateManyArgs>(args: SelectSubset<T, MaterialDamageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MaterialDamage.
     * @param {MaterialDamageUpsertArgs} args - Arguments to update or create a MaterialDamage.
     * @example
     * // Update or create a MaterialDamage
     * const materialDamage = await prisma.materialDamage.upsert({
     *   create: {
     *     // ... data to create a MaterialDamage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MaterialDamage we want to update
     *   }
     * })
     */
    upsert<T extends MaterialDamageUpsertArgs>(args: SelectSubset<T, MaterialDamageUpsertArgs<ExtArgs>>): Prisma__MaterialDamageClient<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MaterialDamages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialDamageCountArgs} args - Arguments to filter MaterialDamages to count.
     * @example
     * // Count the number of MaterialDamages
     * const count = await prisma.materialDamage.count({
     *   where: {
     *     // ... the filter for the MaterialDamages we want to count
     *   }
     * })
    **/
    count<T extends MaterialDamageCountArgs>(
      args?: Subset<T, MaterialDamageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaterialDamageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MaterialDamage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialDamageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaterialDamageAggregateArgs>(args: Subset<T, MaterialDamageAggregateArgs>): Prisma.PrismaPromise<GetMaterialDamageAggregateType<T>>

    /**
     * Group by MaterialDamage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialDamageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaterialDamageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaterialDamageGroupByArgs['orderBy'] }
        : { orderBy?: MaterialDamageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaterialDamageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaterialDamageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MaterialDamage model
   */
  readonly fields: MaterialDamageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MaterialDamage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaterialDamageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    material<T extends PackingMaterialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PackingMaterialDefaultArgs<ExtArgs>>): Prisma__PackingMaterialClient<$Result.GetResult<Prisma.$PackingMaterialPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    return<T extends MaterialReturnDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MaterialReturnDefaultArgs<ExtArgs>>): Prisma__MaterialReturnClient<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    recordedBy<T extends MaterialDamage$recordedByArgs<ExtArgs> = {}>(args?: Subset<T, MaterialDamage$recordedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    approvedBy<T extends MaterialDamage$approvedByArgs<ExtArgs> = {}>(args?: Subset<T, MaterialDamage$approvedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    approval<T extends MaterialDamage$approvalArgs<ExtArgs> = {}>(args?: Subset<T, MaterialDamage$approvalArgs<ExtArgs>>): Prisma__MaterialApprovalClient<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MaterialDamage model
   */ 
  interface MaterialDamageFieldRefs {
    readonly id: FieldRef<"MaterialDamage", 'String'>
    readonly returnId: FieldRef<"MaterialDamage", 'String'>
    readonly materialId: FieldRef<"MaterialDamage", 'String'>
    readonly quantity: FieldRef<"MaterialDamage", 'Int'>
    readonly reason: FieldRef<"MaterialDamage", 'String'>
    readonly photoUrls: FieldRef<"MaterialDamage", 'String'>
    readonly status: FieldRef<"MaterialDamage", 'String'>
    readonly recordedById: FieldRef<"MaterialDamage", 'String'>
    readonly recordedAt: FieldRef<"MaterialDamage", 'DateTime'>
    readonly approvedById: FieldRef<"MaterialDamage", 'String'>
    readonly approvedAt: FieldRef<"MaterialDamage", 'DateTime'>
    readonly approvalNotes: FieldRef<"MaterialDamage", 'String'>
    readonly rejectionReason: FieldRef<"MaterialDamage", 'String'>
    readonly companyId: FieldRef<"MaterialDamage", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MaterialDamage findUnique
   */
  export type MaterialDamageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    /**
     * Filter, which MaterialDamage to fetch.
     */
    where: MaterialDamageWhereUniqueInput
  }

  /**
   * MaterialDamage findUniqueOrThrow
   */
  export type MaterialDamageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    /**
     * Filter, which MaterialDamage to fetch.
     */
    where: MaterialDamageWhereUniqueInput
  }

  /**
   * MaterialDamage findFirst
   */
  export type MaterialDamageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    /**
     * Filter, which MaterialDamage to fetch.
     */
    where?: MaterialDamageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialDamages to fetch.
     */
    orderBy?: MaterialDamageOrderByWithRelationInput | MaterialDamageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaterialDamages.
     */
    cursor?: MaterialDamageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialDamages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialDamages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaterialDamages.
     */
    distinct?: MaterialDamageScalarFieldEnum | MaterialDamageScalarFieldEnum[]
  }

  /**
   * MaterialDamage findFirstOrThrow
   */
  export type MaterialDamageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    /**
     * Filter, which MaterialDamage to fetch.
     */
    where?: MaterialDamageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialDamages to fetch.
     */
    orderBy?: MaterialDamageOrderByWithRelationInput | MaterialDamageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaterialDamages.
     */
    cursor?: MaterialDamageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialDamages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialDamages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaterialDamages.
     */
    distinct?: MaterialDamageScalarFieldEnum | MaterialDamageScalarFieldEnum[]
  }

  /**
   * MaterialDamage findMany
   */
  export type MaterialDamageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    /**
     * Filter, which MaterialDamages to fetch.
     */
    where?: MaterialDamageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialDamages to fetch.
     */
    orderBy?: MaterialDamageOrderByWithRelationInput | MaterialDamageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MaterialDamages.
     */
    cursor?: MaterialDamageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialDamages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialDamages.
     */
    skip?: number
    distinct?: MaterialDamageScalarFieldEnum | MaterialDamageScalarFieldEnum[]
  }

  /**
   * MaterialDamage create
   */
  export type MaterialDamageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    /**
     * The data needed to create a MaterialDamage.
     */
    data: XOR<MaterialDamageCreateInput, MaterialDamageUncheckedCreateInput>
  }

  /**
   * MaterialDamage createMany
   */
  export type MaterialDamageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MaterialDamages.
     */
    data: MaterialDamageCreateManyInput | MaterialDamageCreateManyInput[]
  }

  /**
   * MaterialDamage createManyAndReturn
   */
  export type MaterialDamageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MaterialDamages.
     */
    data: MaterialDamageCreateManyInput | MaterialDamageCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MaterialDamage update
   */
  export type MaterialDamageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    /**
     * The data needed to update a MaterialDamage.
     */
    data: XOR<MaterialDamageUpdateInput, MaterialDamageUncheckedUpdateInput>
    /**
     * Choose, which MaterialDamage to update.
     */
    where: MaterialDamageWhereUniqueInput
  }

  /**
   * MaterialDamage updateMany
   */
  export type MaterialDamageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MaterialDamages.
     */
    data: XOR<MaterialDamageUpdateManyMutationInput, MaterialDamageUncheckedUpdateManyInput>
    /**
     * Filter which MaterialDamages to update
     */
    where?: MaterialDamageWhereInput
  }

  /**
   * MaterialDamage upsert
   */
  export type MaterialDamageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    /**
     * The filter to search for the MaterialDamage to update in case it exists.
     */
    where: MaterialDamageWhereUniqueInput
    /**
     * In case the MaterialDamage found by the `where` argument doesn't exist, create a new MaterialDamage with this data.
     */
    create: XOR<MaterialDamageCreateInput, MaterialDamageUncheckedCreateInput>
    /**
     * In case the MaterialDamage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaterialDamageUpdateInput, MaterialDamageUncheckedUpdateInput>
  }

  /**
   * MaterialDamage delete
   */
  export type MaterialDamageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    /**
     * Filter which MaterialDamage to delete.
     */
    where: MaterialDamageWhereUniqueInput
  }

  /**
   * MaterialDamage deleteMany
   */
  export type MaterialDamageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaterialDamages to delete
     */
    where?: MaterialDamageWhereInput
  }

  /**
   * MaterialDamage.recordedBy
   */
  export type MaterialDamage$recordedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * MaterialDamage.approvedBy
   */
  export type MaterialDamage$approvedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * MaterialDamage.approval
   */
  export type MaterialDamage$approvalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    where?: MaterialApprovalWhereInput
  }

  /**
   * MaterialDamage without action
   */
  export type MaterialDamageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
  }


  /**
   * Model MaterialApproval
   */

  export type AggregateMaterialApproval = {
    _count: MaterialApprovalCountAggregateOutputType | null
    _min: MaterialApprovalMinAggregateOutputType | null
    _max: MaterialApprovalMaxAggregateOutputType | null
  }

  export type MaterialApprovalMinAggregateOutputType = {
    id: string | null
    jobId: string | null
    approvalType: string | null
    status: string | null
    requestedById: string | null
    requestedAt: Date | null
    decisionById: string | null
    decidedAt: Date | null
    decisionNotes: string | null
    subjectReturnId: string | null
    subjectDamageId: string | null
    companyId: string | null
  }

  export type MaterialApprovalMaxAggregateOutputType = {
    id: string | null
    jobId: string | null
    approvalType: string | null
    status: string | null
    requestedById: string | null
    requestedAt: Date | null
    decisionById: string | null
    decidedAt: Date | null
    decisionNotes: string | null
    subjectReturnId: string | null
    subjectDamageId: string | null
    companyId: string | null
  }

  export type MaterialApprovalCountAggregateOutputType = {
    id: number
    jobId: number
    approvalType: number
    status: number
    requestedById: number
    requestedAt: number
    decisionById: number
    decidedAt: number
    decisionNotes: number
    subjectReturnId: number
    subjectDamageId: number
    companyId: number
    _all: number
  }


  export type MaterialApprovalMinAggregateInputType = {
    id?: true
    jobId?: true
    approvalType?: true
    status?: true
    requestedById?: true
    requestedAt?: true
    decisionById?: true
    decidedAt?: true
    decisionNotes?: true
    subjectReturnId?: true
    subjectDamageId?: true
    companyId?: true
  }

  export type MaterialApprovalMaxAggregateInputType = {
    id?: true
    jobId?: true
    approvalType?: true
    status?: true
    requestedById?: true
    requestedAt?: true
    decisionById?: true
    decidedAt?: true
    decisionNotes?: true
    subjectReturnId?: true
    subjectDamageId?: true
    companyId?: true
  }

  export type MaterialApprovalCountAggregateInputType = {
    id?: true
    jobId?: true
    approvalType?: true
    status?: true
    requestedById?: true
    requestedAt?: true
    decisionById?: true
    decidedAt?: true
    decisionNotes?: true
    subjectReturnId?: true
    subjectDamageId?: true
    companyId?: true
    _all?: true
  }

  export type MaterialApprovalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaterialApproval to aggregate.
     */
    where?: MaterialApprovalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialApprovals to fetch.
     */
    orderBy?: MaterialApprovalOrderByWithRelationInput | MaterialApprovalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaterialApprovalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialApprovals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialApprovals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MaterialApprovals
    **/
    _count?: true | MaterialApprovalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaterialApprovalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaterialApprovalMaxAggregateInputType
  }

  export type GetMaterialApprovalAggregateType<T extends MaterialApprovalAggregateArgs> = {
        [P in keyof T & keyof AggregateMaterialApproval]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaterialApproval[P]>
      : GetScalarType<T[P], AggregateMaterialApproval[P]>
  }




  export type MaterialApprovalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialApprovalWhereInput
    orderBy?: MaterialApprovalOrderByWithAggregationInput | MaterialApprovalOrderByWithAggregationInput[]
    by: MaterialApprovalScalarFieldEnum[] | MaterialApprovalScalarFieldEnum
    having?: MaterialApprovalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaterialApprovalCountAggregateInputType | true
    _min?: MaterialApprovalMinAggregateInputType
    _max?: MaterialApprovalMaxAggregateInputType
  }

  export type MaterialApprovalGroupByOutputType = {
    id: string
    jobId: string
    approvalType: string
    status: string
    requestedById: string | null
    requestedAt: Date
    decisionById: string | null
    decidedAt: Date | null
    decisionNotes: string | null
    subjectReturnId: string | null
    subjectDamageId: string | null
    companyId: string
    _count: MaterialApprovalCountAggregateOutputType | null
    _min: MaterialApprovalMinAggregateOutputType | null
    _max: MaterialApprovalMaxAggregateOutputType | null
  }

  type GetMaterialApprovalGroupByPayload<T extends MaterialApprovalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaterialApprovalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaterialApprovalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaterialApprovalGroupByOutputType[P]>
            : GetScalarType<T[P], MaterialApprovalGroupByOutputType[P]>
        }
      >
    >


  export type MaterialApprovalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    approvalType?: boolean
    status?: boolean
    requestedById?: boolean
    requestedAt?: boolean
    decisionById?: boolean
    decidedAt?: boolean
    decisionNotes?: boolean
    subjectReturnId?: boolean
    subjectDamageId?: boolean
    companyId?: boolean
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    requestedBy?: boolean | MaterialApproval$requestedByArgs<ExtArgs>
    decisionBy?: boolean | MaterialApproval$decisionByArgs<ExtArgs>
    subjectReturn?: boolean | MaterialApproval$subjectReturnArgs<ExtArgs>
    subjectDamage?: boolean | MaterialApproval$subjectDamageArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materialApproval"]>

  export type MaterialApprovalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    approvalType?: boolean
    status?: boolean
    requestedById?: boolean
    requestedAt?: boolean
    decisionById?: boolean
    decidedAt?: boolean
    decisionNotes?: boolean
    subjectReturnId?: boolean
    subjectDamageId?: boolean
    companyId?: boolean
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    requestedBy?: boolean | MaterialApproval$requestedByArgs<ExtArgs>
    decisionBy?: boolean | MaterialApproval$decisionByArgs<ExtArgs>
    subjectReturn?: boolean | MaterialApproval$subjectReturnArgs<ExtArgs>
    subjectDamage?: boolean | MaterialApproval$subjectDamageArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materialApproval"]>

  export type MaterialApprovalSelectScalar = {
    id?: boolean
    jobId?: boolean
    approvalType?: boolean
    status?: boolean
    requestedById?: boolean
    requestedAt?: boolean
    decisionById?: boolean
    decidedAt?: boolean
    decisionNotes?: boolean
    subjectReturnId?: boolean
    subjectDamageId?: boolean
    companyId?: boolean
  }

  export type MaterialApprovalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    requestedBy?: boolean | MaterialApproval$requestedByArgs<ExtArgs>
    decisionBy?: boolean | MaterialApproval$decisionByArgs<ExtArgs>
    subjectReturn?: boolean | MaterialApproval$subjectReturnArgs<ExtArgs>
    subjectDamage?: boolean | MaterialApproval$subjectDamageArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type MaterialApprovalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    requestedBy?: boolean | MaterialApproval$requestedByArgs<ExtArgs>
    decisionBy?: boolean | MaterialApproval$decisionByArgs<ExtArgs>
    subjectReturn?: boolean | MaterialApproval$subjectReturnArgs<ExtArgs>
    subjectDamage?: boolean | MaterialApproval$subjectDamageArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $MaterialApprovalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MaterialApproval"
    objects: {
      job: Prisma.$MovingJobPayload<ExtArgs>
      requestedBy: Prisma.$UserPayload<ExtArgs> | null
      decisionBy: Prisma.$UserPayload<ExtArgs> | null
      subjectReturn: Prisma.$MaterialReturnPayload<ExtArgs> | null
      subjectDamage: Prisma.$MaterialDamagePayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      jobId: string
      approvalType: string
      status: string
      requestedById: string | null
      requestedAt: Date
      decisionById: string | null
      decidedAt: Date | null
      decisionNotes: string | null
      subjectReturnId: string | null
      subjectDamageId: string | null
      companyId: string
    }, ExtArgs["result"]["materialApproval"]>
    composites: {}
  }

  type MaterialApprovalGetPayload<S extends boolean | null | undefined | MaterialApprovalDefaultArgs> = $Result.GetResult<Prisma.$MaterialApprovalPayload, S>

  type MaterialApprovalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MaterialApprovalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MaterialApprovalCountAggregateInputType | true
    }

  export interface MaterialApprovalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MaterialApproval'], meta: { name: 'MaterialApproval' } }
    /**
     * Find zero or one MaterialApproval that matches the filter.
     * @param {MaterialApprovalFindUniqueArgs} args - Arguments to find a MaterialApproval
     * @example
     * // Get one MaterialApproval
     * const materialApproval = await prisma.materialApproval.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaterialApprovalFindUniqueArgs>(args: SelectSubset<T, MaterialApprovalFindUniqueArgs<ExtArgs>>): Prisma__MaterialApprovalClient<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MaterialApproval that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MaterialApprovalFindUniqueOrThrowArgs} args - Arguments to find a MaterialApproval
     * @example
     * // Get one MaterialApproval
     * const materialApproval = await prisma.materialApproval.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaterialApprovalFindUniqueOrThrowArgs>(args: SelectSubset<T, MaterialApprovalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaterialApprovalClient<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MaterialApproval that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialApprovalFindFirstArgs} args - Arguments to find a MaterialApproval
     * @example
     * // Get one MaterialApproval
     * const materialApproval = await prisma.materialApproval.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaterialApprovalFindFirstArgs>(args?: SelectSubset<T, MaterialApprovalFindFirstArgs<ExtArgs>>): Prisma__MaterialApprovalClient<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MaterialApproval that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialApprovalFindFirstOrThrowArgs} args - Arguments to find a MaterialApproval
     * @example
     * // Get one MaterialApproval
     * const materialApproval = await prisma.materialApproval.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaterialApprovalFindFirstOrThrowArgs>(args?: SelectSubset<T, MaterialApprovalFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaterialApprovalClient<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MaterialApprovals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialApprovalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MaterialApprovals
     * const materialApprovals = await prisma.materialApproval.findMany()
     * 
     * // Get first 10 MaterialApprovals
     * const materialApprovals = await prisma.materialApproval.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const materialApprovalWithIdOnly = await prisma.materialApproval.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MaterialApprovalFindManyArgs>(args?: SelectSubset<T, MaterialApprovalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MaterialApproval.
     * @param {MaterialApprovalCreateArgs} args - Arguments to create a MaterialApproval.
     * @example
     * // Create one MaterialApproval
     * const MaterialApproval = await prisma.materialApproval.create({
     *   data: {
     *     // ... data to create a MaterialApproval
     *   }
     * })
     * 
     */
    create<T extends MaterialApprovalCreateArgs>(args: SelectSubset<T, MaterialApprovalCreateArgs<ExtArgs>>): Prisma__MaterialApprovalClient<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MaterialApprovals.
     * @param {MaterialApprovalCreateManyArgs} args - Arguments to create many MaterialApprovals.
     * @example
     * // Create many MaterialApprovals
     * const materialApproval = await prisma.materialApproval.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaterialApprovalCreateManyArgs>(args?: SelectSubset<T, MaterialApprovalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MaterialApprovals and returns the data saved in the database.
     * @param {MaterialApprovalCreateManyAndReturnArgs} args - Arguments to create many MaterialApprovals.
     * @example
     * // Create many MaterialApprovals
     * const materialApproval = await prisma.materialApproval.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MaterialApprovals and only return the `id`
     * const materialApprovalWithIdOnly = await prisma.materialApproval.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MaterialApprovalCreateManyAndReturnArgs>(args?: SelectSubset<T, MaterialApprovalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MaterialApproval.
     * @param {MaterialApprovalDeleteArgs} args - Arguments to delete one MaterialApproval.
     * @example
     * // Delete one MaterialApproval
     * const MaterialApproval = await prisma.materialApproval.delete({
     *   where: {
     *     // ... filter to delete one MaterialApproval
     *   }
     * })
     * 
     */
    delete<T extends MaterialApprovalDeleteArgs>(args: SelectSubset<T, MaterialApprovalDeleteArgs<ExtArgs>>): Prisma__MaterialApprovalClient<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MaterialApproval.
     * @param {MaterialApprovalUpdateArgs} args - Arguments to update one MaterialApproval.
     * @example
     * // Update one MaterialApproval
     * const materialApproval = await prisma.materialApproval.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaterialApprovalUpdateArgs>(args: SelectSubset<T, MaterialApprovalUpdateArgs<ExtArgs>>): Prisma__MaterialApprovalClient<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MaterialApprovals.
     * @param {MaterialApprovalDeleteManyArgs} args - Arguments to filter MaterialApprovals to delete.
     * @example
     * // Delete a few MaterialApprovals
     * const { count } = await prisma.materialApproval.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaterialApprovalDeleteManyArgs>(args?: SelectSubset<T, MaterialApprovalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MaterialApprovals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialApprovalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MaterialApprovals
     * const materialApproval = await prisma.materialApproval.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaterialApprovalUpdateManyArgs>(args: SelectSubset<T, MaterialApprovalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MaterialApproval.
     * @param {MaterialApprovalUpsertArgs} args - Arguments to update or create a MaterialApproval.
     * @example
     * // Update or create a MaterialApproval
     * const materialApproval = await prisma.materialApproval.upsert({
     *   create: {
     *     // ... data to create a MaterialApproval
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MaterialApproval we want to update
     *   }
     * })
     */
    upsert<T extends MaterialApprovalUpsertArgs>(args: SelectSubset<T, MaterialApprovalUpsertArgs<ExtArgs>>): Prisma__MaterialApprovalClient<$Result.GetResult<Prisma.$MaterialApprovalPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MaterialApprovals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialApprovalCountArgs} args - Arguments to filter MaterialApprovals to count.
     * @example
     * // Count the number of MaterialApprovals
     * const count = await prisma.materialApproval.count({
     *   where: {
     *     // ... the filter for the MaterialApprovals we want to count
     *   }
     * })
    **/
    count<T extends MaterialApprovalCountArgs>(
      args?: Subset<T, MaterialApprovalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaterialApprovalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MaterialApproval.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialApprovalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaterialApprovalAggregateArgs>(args: Subset<T, MaterialApprovalAggregateArgs>): Prisma.PrismaPromise<GetMaterialApprovalAggregateType<T>>

    /**
     * Group by MaterialApproval.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialApprovalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaterialApprovalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaterialApprovalGroupByArgs['orderBy'] }
        : { orderBy?: MaterialApprovalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaterialApprovalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaterialApprovalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MaterialApproval model
   */
  readonly fields: MaterialApprovalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MaterialApproval.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaterialApprovalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    job<T extends MovingJobDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MovingJobDefaultArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    requestedBy<T extends MaterialApproval$requestedByArgs<ExtArgs> = {}>(args?: Subset<T, MaterialApproval$requestedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    decisionBy<T extends MaterialApproval$decisionByArgs<ExtArgs> = {}>(args?: Subset<T, MaterialApproval$decisionByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    subjectReturn<T extends MaterialApproval$subjectReturnArgs<ExtArgs> = {}>(args?: Subset<T, MaterialApproval$subjectReturnArgs<ExtArgs>>): Prisma__MaterialReturnClient<$Result.GetResult<Prisma.$MaterialReturnPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    subjectDamage<T extends MaterialApproval$subjectDamageArgs<ExtArgs> = {}>(args?: Subset<T, MaterialApproval$subjectDamageArgs<ExtArgs>>): Prisma__MaterialDamageClient<$Result.GetResult<Prisma.$MaterialDamagePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MaterialApproval model
   */ 
  interface MaterialApprovalFieldRefs {
    readonly id: FieldRef<"MaterialApproval", 'String'>
    readonly jobId: FieldRef<"MaterialApproval", 'String'>
    readonly approvalType: FieldRef<"MaterialApproval", 'String'>
    readonly status: FieldRef<"MaterialApproval", 'String'>
    readonly requestedById: FieldRef<"MaterialApproval", 'String'>
    readonly requestedAt: FieldRef<"MaterialApproval", 'DateTime'>
    readonly decisionById: FieldRef<"MaterialApproval", 'String'>
    readonly decidedAt: FieldRef<"MaterialApproval", 'DateTime'>
    readonly decisionNotes: FieldRef<"MaterialApproval", 'String'>
    readonly subjectReturnId: FieldRef<"MaterialApproval", 'String'>
    readonly subjectDamageId: FieldRef<"MaterialApproval", 'String'>
    readonly companyId: FieldRef<"MaterialApproval", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MaterialApproval findUnique
   */
  export type MaterialApprovalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    /**
     * Filter, which MaterialApproval to fetch.
     */
    where: MaterialApprovalWhereUniqueInput
  }

  /**
   * MaterialApproval findUniqueOrThrow
   */
  export type MaterialApprovalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    /**
     * Filter, which MaterialApproval to fetch.
     */
    where: MaterialApprovalWhereUniqueInput
  }

  /**
   * MaterialApproval findFirst
   */
  export type MaterialApprovalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    /**
     * Filter, which MaterialApproval to fetch.
     */
    where?: MaterialApprovalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialApprovals to fetch.
     */
    orderBy?: MaterialApprovalOrderByWithRelationInput | MaterialApprovalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaterialApprovals.
     */
    cursor?: MaterialApprovalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialApprovals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialApprovals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaterialApprovals.
     */
    distinct?: MaterialApprovalScalarFieldEnum | MaterialApprovalScalarFieldEnum[]
  }

  /**
   * MaterialApproval findFirstOrThrow
   */
  export type MaterialApprovalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    /**
     * Filter, which MaterialApproval to fetch.
     */
    where?: MaterialApprovalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialApprovals to fetch.
     */
    orderBy?: MaterialApprovalOrderByWithRelationInput | MaterialApprovalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaterialApprovals.
     */
    cursor?: MaterialApprovalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialApprovals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialApprovals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaterialApprovals.
     */
    distinct?: MaterialApprovalScalarFieldEnum | MaterialApprovalScalarFieldEnum[]
  }

  /**
   * MaterialApproval findMany
   */
  export type MaterialApprovalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    /**
     * Filter, which MaterialApprovals to fetch.
     */
    where?: MaterialApprovalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaterialApprovals to fetch.
     */
    orderBy?: MaterialApprovalOrderByWithRelationInput | MaterialApprovalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MaterialApprovals.
     */
    cursor?: MaterialApprovalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaterialApprovals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaterialApprovals.
     */
    skip?: number
    distinct?: MaterialApprovalScalarFieldEnum | MaterialApprovalScalarFieldEnum[]
  }

  /**
   * MaterialApproval create
   */
  export type MaterialApprovalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    /**
     * The data needed to create a MaterialApproval.
     */
    data: XOR<MaterialApprovalCreateInput, MaterialApprovalUncheckedCreateInput>
  }

  /**
   * MaterialApproval createMany
   */
  export type MaterialApprovalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MaterialApprovals.
     */
    data: MaterialApprovalCreateManyInput | MaterialApprovalCreateManyInput[]
  }

  /**
   * MaterialApproval createManyAndReturn
   */
  export type MaterialApprovalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MaterialApprovals.
     */
    data: MaterialApprovalCreateManyInput | MaterialApprovalCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MaterialApproval update
   */
  export type MaterialApprovalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    /**
     * The data needed to update a MaterialApproval.
     */
    data: XOR<MaterialApprovalUpdateInput, MaterialApprovalUncheckedUpdateInput>
    /**
     * Choose, which MaterialApproval to update.
     */
    where: MaterialApprovalWhereUniqueInput
  }

  /**
   * MaterialApproval updateMany
   */
  export type MaterialApprovalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MaterialApprovals.
     */
    data: XOR<MaterialApprovalUpdateManyMutationInput, MaterialApprovalUncheckedUpdateManyInput>
    /**
     * Filter which MaterialApprovals to update
     */
    where?: MaterialApprovalWhereInput
  }

  /**
   * MaterialApproval upsert
   */
  export type MaterialApprovalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    /**
     * The filter to search for the MaterialApproval to update in case it exists.
     */
    where: MaterialApprovalWhereUniqueInput
    /**
     * In case the MaterialApproval found by the `where` argument doesn't exist, create a new MaterialApproval with this data.
     */
    create: XOR<MaterialApprovalCreateInput, MaterialApprovalUncheckedCreateInput>
    /**
     * In case the MaterialApproval was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaterialApprovalUpdateInput, MaterialApprovalUncheckedUpdateInput>
  }

  /**
   * MaterialApproval delete
   */
  export type MaterialApprovalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
    /**
     * Filter which MaterialApproval to delete.
     */
    where: MaterialApprovalWhereUniqueInput
  }

  /**
   * MaterialApproval deleteMany
   */
  export type MaterialApprovalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaterialApprovals to delete
     */
    where?: MaterialApprovalWhereInput
  }

  /**
   * MaterialApproval.requestedBy
   */
  export type MaterialApproval$requestedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * MaterialApproval.decisionBy
   */
  export type MaterialApproval$decisionByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * MaterialApproval.subjectReturn
   */
  export type MaterialApproval$subjectReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialReturn
     */
    select?: MaterialReturnSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialReturnInclude<ExtArgs> | null
    where?: MaterialReturnWhereInput
  }

  /**
   * MaterialApproval.subjectDamage
   */
  export type MaterialApproval$subjectDamageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialDamage
     */
    select?: MaterialDamageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialDamageInclude<ExtArgs> | null
    where?: MaterialDamageWhereInput
  }

  /**
   * MaterialApproval without action
   */
  export type MaterialApprovalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialApproval
     */
    select?: MaterialApprovalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialApprovalInclude<ExtArgs> | null
  }


  /**
   * Model JobCostSnapshot
   */

  export type AggregateJobCostSnapshot = {
    _count: JobCostSnapshotCountAggregateOutputType | null
    _avg: JobCostSnapshotAvgAggregateOutputType | null
    _sum: JobCostSnapshotSumAggregateOutputType | null
    _min: JobCostSnapshotMinAggregateOutputType | null
    _max: JobCostSnapshotMaxAggregateOutputType | null
  }

  export type JobCostSnapshotAvgAggregateOutputType = {
    materialsCost: number | null
    laborCost: number | null
    damageLoss: number | null
    otherCost: number | null
    revenue: number | null
    profit: number | null
    profitMargin: number | null
  }

  export type JobCostSnapshotSumAggregateOutputType = {
    materialsCost: number | null
    laborCost: number | null
    damageLoss: number | null
    otherCost: number | null
    revenue: number | null
    profit: number | null
    profitMargin: number | null
  }

  export type JobCostSnapshotMinAggregateOutputType = {
    id: string | null
    jobId: string | null
    recordedAt: Date | null
    materialsCost: number | null
    laborCost: number | null
    damageLoss: number | null
    otherCost: number | null
    revenue: number | null
    profit: number | null
    profitMargin: number | null
    currency: string | null
    notes: string | null
    companyId: string | null
  }

  export type JobCostSnapshotMaxAggregateOutputType = {
    id: string | null
    jobId: string | null
    recordedAt: Date | null
    materialsCost: number | null
    laborCost: number | null
    damageLoss: number | null
    otherCost: number | null
    revenue: number | null
    profit: number | null
    profitMargin: number | null
    currency: string | null
    notes: string | null
    companyId: string | null
  }

  export type JobCostSnapshotCountAggregateOutputType = {
    id: number
    jobId: number
    recordedAt: number
    materialsCost: number
    laborCost: number
    damageLoss: number
    otherCost: number
    revenue: number
    profit: number
    profitMargin: number
    currency: number
    notes: number
    companyId: number
    _all: number
  }


  export type JobCostSnapshotAvgAggregateInputType = {
    materialsCost?: true
    laborCost?: true
    damageLoss?: true
    otherCost?: true
    revenue?: true
    profit?: true
    profitMargin?: true
  }

  export type JobCostSnapshotSumAggregateInputType = {
    materialsCost?: true
    laborCost?: true
    damageLoss?: true
    otherCost?: true
    revenue?: true
    profit?: true
    profitMargin?: true
  }

  export type JobCostSnapshotMinAggregateInputType = {
    id?: true
    jobId?: true
    recordedAt?: true
    materialsCost?: true
    laborCost?: true
    damageLoss?: true
    otherCost?: true
    revenue?: true
    profit?: true
    profitMargin?: true
    currency?: true
    notes?: true
    companyId?: true
  }

  export type JobCostSnapshotMaxAggregateInputType = {
    id?: true
    jobId?: true
    recordedAt?: true
    materialsCost?: true
    laborCost?: true
    damageLoss?: true
    otherCost?: true
    revenue?: true
    profit?: true
    profitMargin?: true
    currency?: true
    notes?: true
    companyId?: true
  }

  export type JobCostSnapshotCountAggregateInputType = {
    id?: true
    jobId?: true
    recordedAt?: true
    materialsCost?: true
    laborCost?: true
    damageLoss?: true
    otherCost?: true
    revenue?: true
    profit?: true
    profitMargin?: true
    currency?: true
    notes?: true
    companyId?: true
    _all?: true
  }

  export type JobCostSnapshotAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobCostSnapshot to aggregate.
     */
    where?: JobCostSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobCostSnapshots to fetch.
     */
    orderBy?: JobCostSnapshotOrderByWithRelationInput | JobCostSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobCostSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobCostSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobCostSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobCostSnapshots
    **/
    _count?: true | JobCostSnapshotCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobCostSnapshotAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobCostSnapshotSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobCostSnapshotMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobCostSnapshotMaxAggregateInputType
  }

  export type GetJobCostSnapshotAggregateType<T extends JobCostSnapshotAggregateArgs> = {
        [P in keyof T & keyof AggregateJobCostSnapshot]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobCostSnapshot[P]>
      : GetScalarType<T[P], AggregateJobCostSnapshot[P]>
  }




  export type JobCostSnapshotGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobCostSnapshotWhereInput
    orderBy?: JobCostSnapshotOrderByWithAggregationInput | JobCostSnapshotOrderByWithAggregationInput[]
    by: JobCostSnapshotScalarFieldEnum[] | JobCostSnapshotScalarFieldEnum
    having?: JobCostSnapshotScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobCostSnapshotCountAggregateInputType | true
    _avg?: JobCostSnapshotAvgAggregateInputType
    _sum?: JobCostSnapshotSumAggregateInputType
    _min?: JobCostSnapshotMinAggregateInputType
    _max?: JobCostSnapshotMaxAggregateInputType
  }

  export type JobCostSnapshotGroupByOutputType = {
    id: string
    jobId: string
    recordedAt: Date
    materialsCost: number
    laborCost: number
    damageLoss: number
    otherCost: number
    revenue: number
    profit: number
    profitMargin: number | null
    currency: string
    notes: string | null
    companyId: string
    _count: JobCostSnapshotCountAggregateOutputType | null
    _avg: JobCostSnapshotAvgAggregateOutputType | null
    _sum: JobCostSnapshotSumAggregateOutputType | null
    _min: JobCostSnapshotMinAggregateOutputType | null
    _max: JobCostSnapshotMaxAggregateOutputType | null
  }

  type GetJobCostSnapshotGroupByPayload<T extends JobCostSnapshotGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobCostSnapshotGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobCostSnapshotGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobCostSnapshotGroupByOutputType[P]>
            : GetScalarType<T[P], JobCostSnapshotGroupByOutputType[P]>
        }
      >
    >


  export type JobCostSnapshotSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    recordedAt?: boolean
    materialsCost?: boolean
    laborCost?: boolean
    damageLoss?: boolean
    otherCost?: boolean
    revenue?: boolean
    profit?: boolean
    profitMargin?: boolean
    currency?: boolean
    notes?: boolean
    companyId?: boolean
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobCostSnapshot"]>

  export type JobCostSnapshotSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jobId?: boolean
    recordedAt?: boolean
    materialsCost?: boolean
    laborCost?: boolean
    damageLoss?: boolean
    otherCost?: boolean
    revenue?: boolean
    profit?: boolean
    profitMargin?: boolean
    currency?: boolean
    notes?: boolean
    companyId?: boolean
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobCostSnapshot"]>

  export type JobCostSnapshotSelectScalar = {
    id?: boolean
    jobId?: boolean
    recordedAt?: boolean
    materialsCost?: boolean
    laborCost?: boolean
    damageLoss?: boolean
    otherCost?: boolean
    revenue?: boolean
    profit?: boolean
    profitMargin?: boolean
    currency?: boolean
    notes?: boolean
    companyId?: boolean
  }

  export type JobCostSnapshotInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type JobCostSnapshotIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    job?: boolean | MovingJobDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $JobCostSnapshotPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobCostSnapshot"
    objects: {
      job: Prisma.$MovingJobPayload<ExtArgs>
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      jobId: string
      recordedAt: Date
      materialsCost: number
      laborCost: number
      damageLoss: number
      otherCost: number
      revenue: number
      profit: number
      profitMargin: number | null
      currency: string
      notes: string | null
      companyId: string
    }, ExtArgs["result"]["jobCostSnapshot"]>
    composites: {}
  }

  type JobCostSnapshotGetPayload<S extends boolean | null | undefined | JobCostSnapshotDefaultArgs> = $Result.GetResult<Prisma.$JobCostSnapshotPayload, S>

  type JobCostSnapshotCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<JobCostSnapshotFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JobCostSnapshotCountAggregateInputType | true
    }

  export interface JobCostSnapshotDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobCostSnapshot'], meta: { name: 'JobCostSnapshot' } }
    /**
     * Find zero or one JobCostSnapshot that matches the filter.
     * @param {JobCostSnapshotFindUniqueArgs} args - Arguments to find a JobCostSnapshot
     * @example
     * // Get one JobCostSnapshot
     * const jobCostSnapshot = await prisma.jobCostSnapshot.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobCostSnapshotFindUniqueArgs>(args: SelectSubset<T, JobCostSnapshotFindUniqueArgs<ExtArgs>>): Prisma__JobCostSnapshotClient<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one JobCostSnapshot that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {JobCostSnapshotFindUniqueOrThrowArgs} args - Arguments to find a JobCostSnapshot
     * @example
     * // Get one JobCostSnapshot
     * const jobCostSnapshot = await prisma.jobCostSnapshot.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobCostSnapshotFindUniqueOrThrowArgs>(args: SelectSubset<T, JobCostSnapshotFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobCostSnapshotClient<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first JobCostSnapshot that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobCostSnapshotFindFirstArgs} args - Arguments to find a JobCostSnapshot
     * @example
     * // Get one JobCostSnapshot
     * const jobCostSnapshot = await prisma.jobCostSnapshot.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobCostSnapshotFindFirstArgs>(args?: SelectSubset<T, JobCostSnapshotFindFirstArgs<ExtArgs>>): Prisma__JobCostSnapshotClient<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first JobCostSnapshot that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobCostSnapshotFindFirstOrThrowArgs} args - Arguments to find a JobCostSnapshot
     * @example
     * // Get one JobCostSnapshot
     * const jobCostSnapshot = await prisma.jobCostSnapshot.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobCostSnapshotFindFirstOrThrowArgs>(args?: SelectSubset<T, JobCostSnapshotFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobCostSnapshotClient<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more JobCostSnapshots that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobCostSnapshotFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobCostSnapshots
     * const jobCostSnapshots = await prisma.jobCostSnapshot.findMany()
     * 
     * // Get first 10 JobCostSnapshots
     * const jobCostSnapshots = await prisma.jobCostSnapshot.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobCostSnapshotWithIdOnly = await prisma.jobCostSnapshot.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobCostSnapshotFindManyArgs>(args?: SelectSubset<T, JobCostSnapshotFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a JobCostSnapshot.
     * @param {JobCostSnapshotCreateArgs} args - Arguments to create a JobCostSnapshot.
     * @example
     * // Create one JobCostSnapshot
     * const JobCostSnapshot = await prisma.jobCostSnapshot.create({
     *   data: {
     *     // ... data to create a JobCostSnapshot
     *   }
     * })
     * 
     */
    create<T extends JobCostSnapshotCreateArgs>(args: SelectSubset<T, JobCostSnapshotCreateArgs<ExtArgs>>): Prisma__JobCostSnapshotClient<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many JobCostSnapshots.
     * @param {JobCostSnapshotCreateManyArgs} args - Arguments to create many JobCostSnapshots.
     * @example
     * // Create many JobCostSnapshots
     * const jobCostSnapshot = await prisma.jobCostSnapshot.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobCostSnapshotCreateManyArgs>(args?: SelectSubset<T, JobCostSnapshotCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobCostSnapshots and returns the data saved in the database.
     * @param {JobCostSnapshotCreateManyAndReturnArgs} args - Arguments to create many JobCostSnapshots.
     * @example
     * // Create many JobCostSnapshots
     * const jobCostSnapshot = await prisma.jobCostSnapshot.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobCostSnapshots and only return the `id`
     * const jobCostSnapshotWithIdOnly = await prisma.jobCostSnapshot.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobCostSnapshotCreateManyAndReturnArgs>(args?: SelectSubset<T, JobCostSnapshotCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a JobCostSnapshot.
     * @param {JobCostSnapshotDeleteArgs} args - Arguments to delete one JobCostSnapshot.
     * @example
     * // Delete one JobCostSnapshot
     * const JobCostSnapshot = await prisma.jobCostSnapshot.delete({
     *   where: {
     *     // ... filter to delete one JobCostSnapshot
     *   }
     * })
     * 
     */
    delete<T extends JobCostSnapshotDeleteArgs>(args: SelectSubset<T, JobCostSnapshotDeleteArgs<ExtArgs>>): Prisma__JobCostSnapshotClient<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one JobCostSnapshot.
     * @param {JobCostSnapshotUpdateArgs} args - Arguments to update one JobCostSnapshot.
     * @example
     * // Update one JobCostSnapshot
     * const jobCostSnapshot = await prisma.jobCostSnapshot.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobCostSnapshotUpdateArgs>(args: SelectSubset<T, JobCostSnapshotUpdateArgs<ExtArgs>>): Prisma__JobCostSnapshotClient<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more JobCostSnapshots.
     * @param {JobCostSnapshotDeleteManyArgs} args - Arguments to filter JobCostSnapshots to delete.
     * @example
     * // Delete a few JobCostSnapshots
     * const { count } = await prisma.jobCostSnapshot.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobCostSnapshotDeleteManyArgs>(args?: SelectSubset<T, JobCostSnapshotDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobCostSnapshots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobCostSnapshotUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobCostSnapshots
     * const jobCostSnapshot = await prisma.jobCostSnapshot.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobCostSnapshotUpdateManyArgs>(args: SelectSubset<T, JobCostSnapshotUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one JobCostSnapshot.
     * @param {JobCostSnapshotUpsertArgs} args - Arguments to update or create a JobCostSnapshot.
     * @example
     * // Update or create a JobCostSnapshot
     * const jobCostSnapshot = await prisma.jobCostSnapshot.upsert({
     *   create: {
     *     // ... data to create a JobCostSnapshot
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobCostSnapshot we want to update
     *   }
     * })
     */
    upsert<T extends JobCostSnapshotUpsertArgs>(args: SelectSubset<T, JobCostSnapshotUpsertArgs<ExtArgs>>): Prisma__JobCostSnapshotClient<$Result.GetResult<Prisma.$JobCostSnapshotPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of JobCostSnapshots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobCostSnapshotCountArgs} args - Arguments to filter JobCostSnapshots to count.
     * @example
     * // Count the number of JobCostSnapshots
     * const count = await prisma.jobCostSnapshot.count({
     *   where: {
     *     // ... the filter for the JobCostSnapshots we want to count
     *   }
     * })
    **/
    count<T extends JobCostSnapshotCountArgs>(
      args?: Subset<T, JobCostSnapshotCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobCostSnapshotCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobCostSnapshot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobCostSnapshotAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobCostSnapshotAggregateArgs>(args: Subset<T, JobCostSnapshotAggregateArgs>): Prisma.PrismaPromise<GetJobCostSnapshotAggregateType<T>>

    /**
     * Group by JobCostSnapshot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobCostSnapshotGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobCostSnapshotGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobCostSnapshotGroupByArgs['orderBy'] }
        : { orderBy?: JobCostSnapshotGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobCostSnapshotGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobCostSnapshotGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobCostSnapshot model
   */
  readonly fields: JobCostSnapshotFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobCostSnapshot.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobCostSnapshotClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    job<T extends MovingJobDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MovingJobDefaultArgs<ExtArgs>>): Prisma__MovingJobClient<$Result.GetResult<Prisma.$MovingJobPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobCostSnapshot model
   */ 
  interface JobCostSnapshotFieldRefs {
    readonly id: FieldRef<"JobCostSnapshot", 'String'>
    readonly jobId: FieldRef<"JobCostSnapshot", 'String'>
    readonly recordedAt: FieldRef<"JobCostSnapshot", 'DateTime'>
    readonly materialsCost: FieldRef<"JobCostSnapshot", 'Float'>
    readonly laborCost: FieldRef<"JobCostSnapshot", 'Float'>
    readonly damageLoss: FieldRef<"JobCostSnapshot", 'Float'>
    readonly otherCost: FieldRef<"JobCostSnapshot", 'Float'>
    readonly revenue: FieldRef<"JobCostSnapshot", 'Float'>
    readonly profit: FieldRef<"JobCostSnapshot", 'Float'>
    readonly profitMargin: FieldRef<"JobCostSnapshot", 'Float'>
    readonly currency: FieldRef<"JobCostSnapshot", 'String'>
    readonly notes: FieldRef<"JobCostSnapshot", 'String'>
    readonly companyId: FieldRef<"JobCostSnapshot", 'String'>
  }
    

  // Custom InputTypes
  /**
   * JobCostSnapshot findUnique
   */
  export type JobCostSnapshotFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which JobCostSnapshot to fetch.
     */
    where: JobCostSnapshotWhereUniqueInput
  }

  /**
   * JobCostSnapshot findUniqueOrThrow
   */
  export type JobCostSnapshotFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which JobCostSnapshot to fetch.
     */
    where: JobCostSnapshotWhereUniqueInput
  }

  /**
   * JobCostSnapshot findFirst
   */
  export type JobCostSnapshotFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which JobCostSnapshot to fetch.
     */
    where?: JobCostSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobCostSnapshots to fetch.
     */
    orderBy?: JobCostSnapshotOrderByWithRelationInput | JobCostSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobCostSnapshots.
     */
    cursor?: JobCostSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobCostSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobCostSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobCostSnapshots.
     */
    distinct?: JobCostSnapshotScalarFieldEnum | JobCostSnapshotScalarFieldEnum[]
  }

  /**
   * JobCostSnapshot findFirstOrThrow
   */
  export type JobCostSnapshotFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which JobCostSnapshot to fetch.
     */
    where?: JobCostSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobCostSnapshots to fetch.
     */
    orderBy?: JobCostSnapshotOrderByWithRelationInput | JobCostSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobCostSnapshots.
     */
    cursor?: JobCostSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobCostSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobCostSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobCostSnapshots.
     */
    distinct?: JobCostSnapshotScalarFieldEnum | JobCostSnapshotScalarFieldEnum[]
  }

  /**
   * JobCostSnapshot findMany
   */
  export type JobCostSnapshotFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which JobCostSnapshots to fetch.
     */
    where?: JobCostSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobCostSnapshots to fetch.
     */
    orderBy?: JobCostSnapshotOrderByWithRelationInput | JobCostSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobCostSnapshots.
     */
    cursor?: JobCostSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobCostSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobCostSnapshots.
     */
    skip?: number
    distinct?: JobCostSnapshotScalarFieldEnum | JobCostSnapshotScalarFieldEnum[]
  }

  /**
   * JobCostSnapshot create
   */
  export type JobCostSnapshotCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    /**
     * The data needed to create a JobCostSnapshot.
     */
    data: XOR<JobCostSnapshotCreateInput, JobCostSnapshotUncheckedCreateInput>
  }

  /**
   * JobCostSnapshot createMany
   */
  export type JobCostSnapshotCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobCostSnapshots.
     */
    data: JobCostSnapshotCreateManyInput | JobCostSnapshotCreateManyInput[]
  }

  /**
   * JobCostSnapshot createManyAndReturn
   */
  export type JobCostSnapshotCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many JobCostSnapshots.
     */
    data: JobCostSnapshotCreateManyInput | JobCostSnapshotCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobCostSnapshot update
   */
  export type JobCostSnapshotUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    /**
     * The data needed to update a JobCostSnapshot.
     */
    data: XOR<JobCostSnapshotUpdateInput, JobCostSnapshotUncheckedUpdateInput>
    /**
     * Choose, which JobCostSnapshot to update.
     */
    where: JobCostSnapshotWhereUniqueInput
  }

  /**
   * JobCostSnapshot updateMany
   */
  export type JobCostSnapshotUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobCostSnapshots.
     */
    data: XOR<JobCostSnapshotUpdateManyMutationInput, JobCostSnapshotUncheckedUpdateManyInput>
    /**
     * Filter which JobCostSnapshots to update
     */
    where?: JobCostSnapshotWhereInput
  }

  /**
   * JobCostSnapshot upsert
   */
  export type JobCostSnapshotUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    /**
     * The filter to search for the JobCostSnapshot to update in case it exists.
     */
    where: JobCostSnapshotWhereUniqueInput
    /**
     * In case the JobCostSnapshot found by the `where` argument doesn't exist, create a new JobCostSnapshot with this data.
     */
    create: XOR<JobCostSnapshotCreateInput, JobCostSnapshotUncheckedCreateInput>
    /**
     * In case the JobCostSnapshot was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobCostSnapshotUpdateInput, JobCostSnapshotUncheckedUpdateInput>
  }

  /**
   * JobCostSnapshot delete
   */
  export type JobCostSnapshotDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
    /**
     * Filter which JobCostSnapshot to delete.
     */
    where: JobCostSnapshotWhereUniqueInput
  }

  /**
   * JobCostSnapshot deleteMany
   */
  export type JobCostSnapshotDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobCostSnapshots to delete
     */
    where?: JobCostSnapshotWhereInput
  }

  /**
   * JobCostSnapshot without action
   */
  export type JobCostSnapshotDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobCostSnapshot
     */
    select?: JobCostSnapshotSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobCostSnapshotInclude<ExtArgs> | null
  }


  /**
   * Model SystemPlugin
   */

  export type AggregateSystemPlugin = {
    _count: SystemPluginCountAggregateOutputType | null
    _min: SystemPluginMinAggregateOutputType | null
    _max: SystemPluginMaxAggregateOutputType | null
  }

  export type SystemPluginMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    version: string | null
    status: string | null
    entryPointUrl: string | null
    checksum: string | null
    installedAt: Date | null
    activatedAt: Date | null
    deactivatedAt: Date | null
    companyId: string | null
  }

  export type SystemPluginMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    version: string | null
    status: string | null
    entryPointUrl: string | null
    checksum: string | null
    installedAt: Date | null
    activatedAt: Date | null
    deactivatedAt: Date | null
    companyId: string | null
  }

  export type SystemPluginCountAggregateOutputType = {
    id: number
    name: number
    description: number
    version: number
    status: number
    entryPointUrl: number
    checksum: number
    installedAt: number
    activatedAt: number
    deactivatedAt: number
    companyId: number
    _all: number
  }


  export type SystemPluginMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    version?: true
    status?: true
    entryPointUrl?: true
    checksum?: true
    installedAt?: true
    activatedAt?: true
    deactivatedAt?: true
    companyId?: true
  }

  export type SystemPluginMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    version?: true
    status?: true
    entryPointUrl?: true
    checksum?: true
    installedAt?: true
    activatedAt?: true
    deactivatedAt?: true
    companyId?: true
  }

  export type SystemPluginCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    version?: true
    status?: true
    entryPointUrl?: true
    checksum?: true
    installedAt?: true
    activatedAt?: true
    deactivatedAt?: true
    companyId?: true
    _all?: true
  }

  export type SystemPluginAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemPlugin to aggregate.
     */
    where?: SystemPluginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemPlugins to fetch.
     */
    orderBy?: SystemPluginOrderByWithRelationInput | SystemPluginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SystemPluginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemPlugins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemPlugins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SystemPlugins
    **/
    _count?: true | SystemPluginCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SystemPluginMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SystemPluginMaxAggregateInputType
  }

  export type GetSystemPluginAggregateType<T extends SystemPluginAggregateArgs> = {
        [P in keyof T & keyof AggregateSystemPlugin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSystemPlugin[P]>
      : GetScalarType<T[P], AggregateSystemPlugin[P]>
  }




  export type SystemPluginGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemPluginWhereInput
    orderBy?: SystemPluginOrderByWithAggregationInput | SystemPluginOrderByWithAggregationInput[]
    by: SystemPluginScalarFieldEnum[] | SystemPluginScalarFieldEnum
    having?: SystemPluginScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SystemPluginCountAggregateInputType | true
    _min?: SystemPluginMinAggregateInputType
    _max?: SystemPluginMaxAggregateInputType
  }

  export type SystemPluginGroupByOutputType = {
    id: string
    name: string
    description: string | null
    version: string
    status: string
    entryPointUrl: string | null
    checksum: string | null
    installedAt: Date
    activatedAt: Date | null
    deactivatedAt: Date | null
    companyId: string
    _count: SystemPluginCountAggregateOutputType | null
    _min: SystemPluginMinAggregateOutputType | null
    _max: SystemPluginMaxAggregateOutputType | null
  }

  type GetSystemPluginGroupByPayload<T extends SystemPluginGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SystemPluginGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SystemPluginGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SystemPluginGroupByOutputType[P]>
            : GetScalarType<T[P], SystemPluginGroupByOutputType[P]>
        }
      >
    >


  export type SystemPluginSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    version?: boolean
    status?: boolean
    entryPointUrl?: boolean
    checksum?: boolean
    installedAt?: boolean
    activatedAt?: boolean
    deactivatedAt?: boolean
    companyId?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    auditLogs?: boolean | SystemPlugin$auditLogsArgs<ExtArgs>
    _count?: boolean | SystemPluginCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["systemPlugin"]>

  export type SystemPluginSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    version?: boolean
    status?: boolean
    entryPointUrl?: boolean
    checksum?: boolean
    installedAt?: boolean
    activatedAt?: boolean
    deactivatedAt?: boolean
    companyId?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["systemPlugin"]>

  export type SystemPluginSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    version?: boolean
    status?: boolean
    entryPointUrl?: boolean
    checksum?: boolean
    installedAt?: boolean
    activatedAt?: boolean
    deactivatedAt?: boolean
    companyId?: boolean
  }

  export type SystemPluginInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    auditLogs?: boolean | SystemPlugin$auditLogsArgs<ExtArgs>
    _count?: boolean | SystemPluginCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SystemPluginIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $SystemPluginPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SystemPlugin"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      auditLogs: Prisma.$SystemPluginLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      version: string
      status: string
      entryPointUrl: string | null
      checksum: string | null
      installedAt: Date
      activatedAt: Date | null
      deactivatedAt: Date | null
      companyId: string
    }, ExtArgs["result"]["systemPlugin"]>
    composites: {}
  }

  type SystemPluginGetPayload<S extends boolean | null | undefined | SystemPluginDefaultArgs> = $Result.GetResult<Prisma.$SystemPluginPayload, S>

  type SystemPluginCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SystemPluginFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SystemPluginCountAggregateInputType | true
    }

  export interface SystemPluginDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SystemPlugin'], meta: { name: 'SystemPlugin' } }
    /**
     * Find zero or one SystemPlugin that matches the filter.
     * @param {SystemPluginFindUniqueArgs} args - Arguments to find a SystemPlugin
     * @example
     * // Get one SystemPlugin
     * const systemPlugin = await prisma.systemPlugin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SystemPluginFindUniqueArgs>(args: SelectSubset<T, SystemPluginFindUniqueArgs<ExtArgs>>): Prisma__SystemPluginClient<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SystemPlugin that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SystemPluginFindUniqueOrThrowArgs} args - Arguments to find a SystemPlugin
     * @example
     * // Get one SystemPlugin
     * const systemPlugin = await prisma.systemPlugin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SystemPluginFindUniqueOrThrowArgs>(args: SelectSubset<T, SystemPluginFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SystemPluginClient<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SystemPlugin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginFindFirstArgs} args - Arguments to find a SystemPlugin
     * @example
     * // Get one SystemPlugin
     * const systemPlugin = await prisma.systemPlugin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SystemPluginFindFirstArgs>(args?: SelectSubset<T, SystemPluginFindFirstArgs<ExtArgs>>): Prisma__SystemPluginClient<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SystemPlugin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginFindFirstOrThrowArgs} args - Arguments to find a SystemPlugin
     * @example
     * // Get one SystemPlugin
     * const systemPlugin = await prisma.systemPlugin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SystemPluginFindFirstOrThrowArgs>(args?: SelectSubset<T, SystemPluginFindFirstOrThrowArgs<ExtArgs>>): Prisma__SystemPluginClient<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SystemPlugins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SystemPlugins
     * const systemPlugins = await prisma.systemPlugin.findMany()
     * 
     * // Get first 10 SystemPlugins
     * const systemPlugins = await prisma.systemPlugin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const systemPluginWithIdOnly = await prisma.systemPlugin.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SystemPluginFindManyArgs>(args?: SelectSubset<T, SystemPluginFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SystemPlugin.
     * @param {SystemPluginCreateArgs} args - Arguments to create a SystemPlugin.
     * @example
     * // Create one SystemPlugin
     * const SystemPlugin = await prisma.systemPlugin.create({
     *   data: {
     *     // ... data to create a SystemPlugin
     *   }
     * })
     * 
     */
    create<T extends SystemPluginCreateArgs>(args: SelectSubset<T, SystemPluginCreateArgs<ExtArgs>>): Prisma__SystemPluginClient<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SystemPlugins.
     * @param {SystemPluginCreateManyArgs} args - Arguments to create many SystemPlugins.
     * @example
     * // Create many SystemPlugins
     * const systemPlugin = await prisma.systemPlugin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SystemPluginCreateManyArgs>(args?: SelectSubset<T, SystemPluginCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SystemPlugins and returns the data saved in the database.
     * @param {SystemPluginCreateManyAndReturnArgs} args - Arguments to create many SystemPlugins.
     * @example
     * // Create many SystemPlugins
     * const systemPlugin = await prisma.systemPlugin.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SystemPlugins and only return the `id`
     * const systemPluginWithIdOnly = await prisma.systemPlugin.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SystemPluginCreateManyAndReturnArgs>(args?: SelectSubset<T, SystemPluginCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SystemPlugin.
     * @param {SystemPluginDeleteArgs} args - Arguments to delete one SystemPlugin.
     * @example
     * // Delete one SystemPlugin
     * const SystemPlugin = await prisma.systemPlugin.delete({
     *   where: {
     *     // ... filter to delete one SystemPlugin
     *   }
     * })
     * 
     */
    delete<T extends SystemPluginDeleteArgs>(args: SelectSubset<T, SystemPluginDeleteArgs<ExtArgs>>): Prisma__SystemPluginClient<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SystemPlugin.
     * @param {SystemPluginUpdateArgs} args - Arguments to update one SystemPlugin.
     * @example
     * // Update one SystemPlugin
     * const systemPlugin = await prisma.systemPlugin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SystemPluginUpdateArgs>(args: SelectSubset<T, SystemPluginUpdateArgs<ExtArgs>>): Prisma__SystemPluginClient<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SystemPlugins.
     * @param {SystemPluginDeleteManyArgs} args - Arguments to filter SystemPlugins to delete.
     * @example
     * // Delete a few SystemPlugins
     * const { count } = await prisma.systemPlugin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SystemPluginDeleteManyArgs>(args?: SelectSubset<T, SystemPluginDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SystemPlugins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SystemPlugins
     * const systemPlugin = await prisma.systemPlugin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SystemPluginUpdateManyArgs>(args: SelectSubset<T, SystemPluginUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SystemPlugin.
     * @param {SystemPluginUpsertArgs} args - Arguments to update or create a SystemPlugin.
     * @example
     * // Update or create a SystemPlugin
     * const systemPlugin = await prisma.systemPlugin.upsert({
     *   create: {
     *     // ... data to create a SystemPlugin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SystemPlugin we want to update
     *   }
     * })
     */
    upsert<T extends SystemPluginUpsertArgs>(args: SelectSubset<T, SystemPluginUpsertArgs<ExtArgs>>): Prisma__SystemPluginClient<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SystemPlugins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginCountArgs} args - Arguments to filter SystemPlugins to count.
     * @example
     * // Count the number of SystemPlugins
     * const count = await prisma.systemPlugin.count({
     *   where: {
     *     // ... the filter for the SystemPlugins we want to count
     *   }
     * })
    **/
    count<T extends SystemPluginCountArgs>(
      args?: Subset<T, SystemPluginCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SystemPluginCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SystemPlugin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SystemPluginAggregateArgs>(args: Subset<T, SystemPluginAggregateArgs>): Prisma.PrismaPromise<GetSystemPluginAggregateType<T>>

    /**
     * Group by SystemPlugin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SystemPluginGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SystemPluginGroupByArgs['orderBy'] }
        : { orderBy?: SystemPluginGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SystemPluginGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSystemPluginGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SystemPlugin model
   */
  readonly fields: SystemPluginFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SystemPlugin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SystemPluginClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    auditLogs<T extends SystemPlugin$auditLogsArgs<ExtArgs> = {}>(args?: Subset<T, SystemPlugin$auditLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SystemPlugin model
   */ 
  interface SystemPluginFieldRefs {
    readonly id: FieldRef<"SystemPlugin", 'String'>
    readonly name: FieldRef<"SystemPlugin", 'String'>
    readonly description: FieldRef<"SystemPlugin", 'String'>
    readonly version: FieldRef<"SystemPlugin", 'String'>
    readonly status: FieldRef<"SystemPlugin", 'String'>
    readonly entryPointUrl: FieldRef<"SystemPlugin", 'String'>
    readonly checksum: FieldRef<"SystemPlugin", 'String'>
    readonly installedAt: FieldRef<"SystemPlugin", 'DateTime'>
    readonly activatedAt: FieldRef<"SystemPlugin", 'DateTime'>
    readonly deactivatedAt: FieldRef<"SystemPlugin", 'DateTime'>
    readonly companyId: FieldRef<"SystemPlugin", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SystemPlugin findUnique
   */
  export type SystemPluginFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
    /**
     * Filter, which SystemPlugin to fetch.
     */
    where: SystemPluginWhereUniqueInput
  }

  /**
   * SystemPlugin findUniqueOrThrow
   */
  export type SystemPluginFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
    /**
     * Filter, which SystemPlugin to fetch.
     */
    where: SystemPluginWhereUniqueInput
  }

  /**
   * SystemPlugin findFirst
   */
  export type SystemPluginFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
    /**
     * Filter, which SystemPlugin to fetch.
     */
    where?: SystemPluginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemPlugins to fetch.
     */
    orderBy?: SystemPluginOrderByWithRelationInput | SystemPluginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemPlugins.
     */
    cursor?: SystemPluginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemPlugins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemPlugins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemPlugins.
     */
    distinct?: SystemPluginScalarFieldEnum | SystemPluginScalarFieldEnum[]
  }

  /**
   * SystemPlugin findFirstOrThrow
   */
  export type SystemPluginFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
    /**
     * Filter, which SystemPlugin to fetch.
     */
    where?: SystemPluginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemPlugins to fetch.
     */
    orderBy?: SystemPluginOrderByWithRelationInput | SystemPluginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemPlugins.
     */
    cursor?: SystemPluginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemPlugins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemPlugins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemPlugins.
     */
    distinct?: SystemPluginScalarFieldEnum | SystemPluginScalarFieldEnum[]
  }

  /**
   * SystemPlugin findMany
   */
  export type SystemPluginFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
    /**
     * Filter, which SystemPlugins to fetch.
     */
    where?: SystemPluginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemPlugins to fetch.
     */
    orderBy?: SystemPluginOrderByWithRelationInput | SystemPluginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SystemPlugins.
     */
    cursor?: SystemPluginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemPlugins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemPlugins.
     */
    skip?: number
    distinct?: SystemPluginScalarFieldEnum | SystemPluginScalarFieldEnum[]
  }

  /**
   * SystemPlugin create
   */
  export type SystemPluginCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
    /**
     * The data needed to create a SystemPlugin.
     */
    data: XOR<SystemPluginCreateInput, SystemPluginUncheckedCreateInput>
  }

  /**
   * SystemPlugin createMany
   */
  export type SystemPluginCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SystemPlugins.
     */
    data: SystemPluginCreateManyInput | SystemPluginCreateManyInput[]
  }

  /**
   * SystemPlugin createManyAndReturn
   */
  export type SystemPluginCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SystemPlugins.
     */
    data: SystemPluginCreateManyInput | SystemPluginCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SystemPlugin update
   */
  export type SystemPluginUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
    /**
     * The data needed to update a SystemPlugin.
     */
    data: XOR<SystemPluginUpdateInput, SystemPluginUncheckedUpdateInput>
    /**
     * Choose, which SystemPlugin to update.
     */
    where: SystemPluginWhereUniqueInput
  }

  /**
   * SystemPlugin updateMany
   */
  export type SystemPluginUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SystemPlugins.
     */
    data: XOR<SystemPluginUpdateManyMutationInput, SystemPluginUncheckedUpdateManyInput>
    /**
     * Filter which SystemPlugins to update
     */
    where?: SystemPluginWhereInput
  }

  /**
   * SystemPlugin upsert
   */
  export type SystemPluginUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
    /**
     * The filter to search for the SystemPlugin to update in case it exists.
     */
    where: SystemPluginWhereUniqueInput
    /**
     * In case the SystemPlugin found by the `where` argument doesn't exist, create a new SystemPlugin with this data.
     */
    create: XOR<SystemPluginCreateInput, SystemPluginUncheckedCreateInput>
    /**
     * In case the SystemPlugin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SystemPluginUpdateInput, SystemPluginUncheckedUpdateInput>
  }

  /**
   * SystemPlugin delete
   */
  export type SystemPluginDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
    /**
     * Filter which SystemPlugin to delete.
     */
    where: SystemPluginWhereUniqueInput
  }

  /**
   * SystemPlugin deleteMany
   */
  export type SystemPluginDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemPlugins to delete
     */
    where?: SystemPluginWhereInput
  }

  /**
   * SystemPlugin.auditLogs
   */
  export type SystemPlugin$auditLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    where?: SystemPluginLogWhereInput
    orderBy?: SystemPluginLogOrderByWithRelationInput | SystemPluginLogOrderByWithRelationInput[]
    cursor?: SystemPluginLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemPluginLogScalarFieldEnum | SystemPluginLogScalarFieldEnum[]
  }

  /**
   * SystemPlugin without action
   */
  export type SystemPluginDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPlugin
     */
    select?: SystemPluginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginInclude<ExtArgs> | null
  }


  /**
   * Model SystemPluginLog
   */

  export type AggregateSystemPluginLog = {
    _count: SystemPluginLogCountAggregateOutputType | null
    _min: SystemPluginLogMinAggregateOutputType | null
    _max: SystemPluginLogMaxAggregateOutputType | null
  }

  export type SystemPluginLogMinAggregateOutputType = {
    id: string | null
    pluginId: string | null
    action: string | null
    status: string | null
    message: string | null
    performedBy: string | null
    createdAt: Date | null
    companyId: string | null
  }

  export type SystemPluginLogMaxAggregateOutputType = {
    id: string | null
    pluginId: string | null
    action: string | null
    status: string | null
    message: string | null
    performedBy: string | null
    createdAt: Date | null
    companyId: string | null
  }

  export type SystemPluginLogCountAggregateOutputType = {
    id: number
    pluginId: number
    action: number
    status: number
    message: number
    performedBy: number
    createdAt: number
    companyId: number
    _all: number
  }


  export type SystemPluginLogMinAggregateInputType = {
    id?: true
    pluginId?: true
    action?: true
    status?: true
    message?: true
    performedBy?: true
    createdAt?: true
    companyId?: true
  }

  export type SystemPluginLogMaxAggregateInputType = {
    id?: true
    pluginId?: true
    action?: true
    status?: true
    message?: true
    performedBy?: true
    createdAt?: true
    companyId?: true
  }

  export type SystemPluginLogCountAggregateInputType = {
    id?: true
    pluginId?: true
    action?: true
    status?: true
    message?: true
    performedBy?: true
    createdAt?: true
    companyId?: true
    _all?: true
  }

  export type SystemPluginLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemPluginLog to aggregate.
     */
    where?: SystemPluginLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemPluginLogs to fetch.
     */
    orderBy?: SystemPluginLogOrderByWithRelationInput | SystemPluginLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SystemPluginLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemPluginLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemPluginLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SystemPluginLogs
    **/
    _count?: true | SystemPluginLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SystemPluginLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SystemPluginLogMaxAggregateInputType
  }

  export type GetSystemPluginLogAggregateType<T extends SystemPluginLogAggregateArgs> = {
        [P in keyof T & keyof AggregateSystemPluginLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSystemPluginLog[P]>
      : GetScalarType<T[P], AggregateSystemPluginLog[P]>
  }




  export type SystemPluginLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemPluginLogWhereInput
    orderBy?: SystemPluginLogOrderByWithAggregationInput | SystemPluginLogOrderByWithAggregationInput[]
    by: SystemPluginLogScalarFieldEnum[] | SystemPluginLogScalarFieldEnum
    having?: SystemPluginLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SystemPluginLogCountAggregateInputType | true
    _min?: SystemPluginLogMinAggregateInputType
    _max?: SystemPluginLogMaxAggregateInputType
  }

  export type SystemPluginLogGroupByOutputType = {
    id: string
    pluginId: string
    action: string
    status: string
    message: string | null
    performedBy: string | null
    createdAt: Date
    companyId: string
    _count: SystemPluginLogCountAggregateOutputType | null
    _min: SystemPluginLogMinAggregateOutputType | null
    _max: SystemPluginLogMaxAggregateOutputType | null
  }

  type GetSystemPluginLogGroupByPayload<T extends SystemPluginLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SystemPluginLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SystemPluginLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SystemPluginLogGroupByOutputType[P]>
            : GetScalarType<T[P], SystemPluginLogGroupByOutputType[P]>
        }
      >
    >


  export type SystemPluginLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pluginId?: boolean
    action?: boolean
    status?: boolean
    message?: boolean
    performedBy?: boolean
    createdAt?: boolean
    companyId?: boolean
    plugin?: boolean | SystemPluginDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["systemPluginLog"]>

  export type SystemPluginLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pluginId?: boolean
    action?: boolean
    status?: boolean
    message?: boolean
    performedBy?: boolean
    createdAt?: boolean
    companyId?: boolean
    plugin?: boolean | SystemPluginDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["systemPluginLog"]>

  export type SystemPluginLogSelectScalar = {
    id?: boolean
    pluginId?: boolean
    action?: boolean
    status?: boolean
    message?: boolean
    performedBy?: boolean
    createdAt?: boolean
    companyId?: boolean
  }

  export type SystemPluginLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    plugin?: boolean | SystemPluginDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type SystemPluginLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    plugin?: boolean | SystemPluginDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $SystemPluginLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SystemPluginLog"
    objects: {
      plugin: Prisma.$SystemPluginPayload<ExtArgs>
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      pluginId: string
      action: string
      status: string
      message: string | null
      performedBy: string | null
      createdAt: Date
      companyId: string
    }, ExtArgs["result"]["systemPluginLog"]>
    composites: {}
  }

  type SystemPluginLogGetPayload<S extends boolean | null | undefined | SystemPluginLogDefaultArgs> = $Result.GetResult<Prisma.$SystemPluginLogPayload, S>

  type SystemPluginLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SystemPluginLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SystemPluginLogCountAggregateInputType | true
    }

  export interface SystemPluginLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SystemPluginLog'], meta: { name: 'SystemPluginLog' } }
    /**
     * Find zero or one SystemPluginLog that matches the filter.
     * @param {SystemPluginLogFindUniqueArgs} args - Arguments to find a SystemPluginLog
     * @example
     * // Get one SystemPluginLog
     * const systemPluginLog = await prisma.systemPluginLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SystemPluginLogFindUniqueArgs>(args: SelectSubset<T, SystemPluginLogFindUniqueArgs<ExtArgs>>): Prisma__SystemPluginLogClient<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SystemPluginLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SystemPluginLogFindUniqueOrThrowArgs} args - Arguments to find a SystemPluginLog
     * @example
     * // Get one SystemPluginLog
     * const systemPluginLog = await prisma.systemPluginLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SystemPluginLogFindUniqueOrThrowArgs>(args: SelectSubset<T, SystemPluginLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SystemPluginLogClient<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SystemPluginLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginLogFindFirstArgs} args - Arguments to find a SystemPluginLog
     * @example
     * // Get one SystemPluginLog
     * const systemPluginLog = await prisma.systemPluginLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SystemPluginLogFindFirstArgs>(args?: SelectSubset<T, SystemPluginLogFindFirstArgs<ExtArgs>>): Prisma__SystemPluginLogClient<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SystemPluginLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginLogFindFirstOrThrowArgs} args - Arguments to find a SystemPluginLog
     * @example
     * // Get one SystemPluginLog
     * const systemPluginLog = await prisma.systemPluginLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SystemPluginLogFindFirstOrThrowArgs>(args?: SelectSubset<T, SystemPluginLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__SystemPluginLogClient<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SystemPluginLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SystemPluginLogs
     * const systemPluginLogs = await prisma.systemPluginLog.findMany()
     * 
     * // Get first 10 SystemPluginLogs
     * const systemPluginLogs = await prisma.systemPluginLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const systemPluginLogWithIdOnly = await prisma.systemPluginLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SystemPluginLogFindManyArgs>(args?: SelectSubset<T, SystemPluginLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SystemPluginLog.
     * @param {SystemPluginLogCreateArgs} args - Arguments to create a SystemPluginLog.
     * @example
     * // Create one SystemPluginLog
     * const SystemPluginLog = await prisma.systemPluginLog.create({
     *   data: {
     *     // ... data to create a SystemPluginLog
     *   }
     * })
     * 
     */
    create<T extends SystemPluginLogCreateArgs>(args: SelectSubset<T, SystemPluginLogCreateArgs<ExtArgs>>): Prisma__SystemPluginLogClient<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SystemPluginLogs.
     * @param {SystemPluginLogCreateManyArgs} args - Arguments to create many SystemPluginLogs.
     * @example
     * // Create many SystemPluginLogs
     * const systemPluginLog = await prisma.systemPluginLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SystemPluginLogCreateManyArgs>(args?: SelectSubset<T, SystemPluginLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SystemPluginLogs and returns the data saved in the database.
     * @param {SystemPluginLogCreateManyAndReturnArgs} args - Arguments to create many SystemPluginLogs.
     * @example
     * // Create many SystemPluginLogs
     * const systemPluginLog = await prisma.systemPluginLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SystemPluginLogs and only return the `id`
     * const systemPluginLogWithIdOnly = await prisma.systemPluginLog.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SystemPluginLogCreateManyAndReturnArgs>(args?: SelectSubset<T, SystemPluginLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SystemPluginLog.
     * @param {SystemPluginLogDeleteArgs} args - Arguments to delete one SystemPluginLog.
     * @example
     * // Delete one SystemPluginLog
     * const SystemPluginLog = await prisma.systemPluginLog.delete({
     *   where: {
     *     // ... filter to delete one SystemPluginLog
     *   }
     * })
     * 
     */
    delete<T extends SystemPluginLogDeleteArgs>(args: SelectSubset<T, SystemPluginLogDeleteArgs<ExtArgs>>): Prisma__SystemPluginLogClient<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SystemPluginLog.
     * @param {SystemPluginLogUpdateArgs} args - Arguments to update one SystemPluginLog.
     * @example
     * // Update one SystemPluginLog
     * const systemPluginLog = await prisma.systemPluginLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SystemPluginLogUpdateArgs>(args: SelectSubset<T, SystemPluginLogUpdateArgs<ExtArgs>>): Prisma__SystemPluginLogClient<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SystemPluginLogs.
     * @param {SystemPluginLogDeleteManyArgs} args - Arguments to filter SystemPluginLogs to delete.
     * @example
     * // Delete a few SystemPluginLogs
     * const { count } = await prisma.systemPluginLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SystemPluginLogDeleteManyArgs>(args?: SelectSubset<T, SystemPluginLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SystemPluginLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SystemPluginLogs
     * const systemPluginLog = await prisma.systemPluginLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SystemPluginLogUpdateManyArgs>(args: SelectSubset<T, SystemPluginLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SystemPluginLog.
     * @param {SystemPluginLogUpsertArgs} args - Arguments to update or create a SystemPluginLog.
     * @example
     * // Update or create a SystemPluginLog
     * const systemPluginLog = await prisma.systemPluginLog.upsert({
     *   create: {
     *     // ... data to create a SystemPluginLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SystemPluginLog we want to update
     *   }
     * })
     */
    upsert<T extends SystemPluginLogUpsertArgs>(args: SelectSubset<T, SystemPluginLogUpsertArgs<ExtArgs>>): Prisma__SystemPluginLogClient<$Result.GetResult<Prisma.$SystemPluginLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SystemPluginLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginLogCountArgs} args - Arguments to filter SystemPluginLogs to count.
     * @example
     * // Count the number of SystemPluginLogs
     * const count = await prisma.systemPluginLog.count({
     *   where: {
     *     // ... the filter for the SystemPluginLogs we want to count
     *   }
     * })
    **/
    count<T extends SystemPluginLogCountArgs>(
      args?: Subset<T, SystemPluginLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SystemPluginLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SystemPluginLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SystemPluginLogAggregateArgs>(args: Subset<T, SystemPluginLogAggregateArgs>): Prisma.PrismaPromise<GetSystemPluginLogAggregateType<T>>

    /**
     * Group by SystemPluginLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemPluginLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SystemPluginLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SystemPluginLogGroupByArgs['orderBy'] }
        : { orderBy?: SystemPluginLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SystemPluginLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSystemPluginLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SystemPluginLog model
   */
  readonly fields: SystemPluginLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SystemPluginLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SystemPluginLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    plugin<T extends SystemPluginDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SystemPluginDefaultArgs<ExtArgs>>): Prisma__SystemPluginClient<$Result.GetResult<Prisma.$SystemPluginPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SystemPluginLog model
   */ 
  interface SystemPluginLogFieldRefs {
    readonly id: FieldRef<"SystemPluginLog", 'String'>
    readonly pluginId: FieldRef<"SystemPluginLog", 'String'>
    readonly action: FieldRef<"SystemPluginLog", 'String'>
    readonly status: FieldRef<"SystemPluginLog", 'String'>
    readonly message: FieldRef<"SystemPluginLog", 'String'>
    readonly performedBy: FieldRef<"SystemPluginLog", 'String'>
    readonly createdAt: FieldRef<"SystemPluginLog", 'DateTime'>
    readonly companyId: FieldRef<"SystemPluginLog", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SystemPluginLog findUnique
   */
  export type SystemPluginLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    /**
     * Filter, which SystemPluginLog to fetch.
     */
    where: SystemPluginLogWhereUniqueInput
  }

  /**
   * SystemPluginLog findUniqueOrThrow
   */
  export type SystemPluginLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    /**
     * Filter, which SystemPluginLog to fetch.
     */
    where: SystemPluginLogWhereUniqueInput
  }

  /**
   * SystemPluginLog findFirst
   */
  export type SystemPluginLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    /**
     * Filter, which SystemPluginLog to fetch.
     */
    where?: SystemPluginLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemPluginLogs to fetch.
     */
    orderBy?: SystemPluginLogOrderByWithRelationInput | SystemPluginLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemPluginLogs.
     */
    cursor?: SystemPluginLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemPluginLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemPluginLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemPluginLogs.
     */
    distinct?: SystemPluginLogScalarFieldEnum | SystemPluginLogScalarFieldEnum[]
  }

  /**
   * SystemPluginLog findFirstOrThrow
   */
  export type SystemPluginLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    /**
     * Filter, which SystemPluginLog to fetch.
     */
    where?: SystemPluginLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemPluginLogs to fetch.
     */
    orderBy?: SystemPluginLogOrderByWithRelationInput | SystemPluginLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemPluginLogs.
     */
    cursor?: SystemPluginLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemPluginLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemPluginLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemPluginLogs.
     */
    distinct?: SystemPluginLogScalarFieldEnum | SystemPluginLogScalarFieldEnum[]
  }

  /**
   * SystemPluginLog findMany
   */
  export type SystemPluginLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    /**
     * Filter, which SystemPluginLogs to fetch.
     */
    where?: SystemPluginLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemPluginLogs to fetch.
     */
    orderBy?: SystemPluginLogOrderByWithRelationInput | SystemPluginLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SystemPluginLogs.
     */
    cursor?: SystemPluginLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemPluginLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemPluginLogs.
     */
    skip?: number
    distinct?: SystemPluginLogScalarFieldEnum | SystemPluginLogScalarFieldEnum[]
  }

  /**
   * SystemPluginLog create
   */
  export type SystemPluginLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    /**
     * The data needed to create a SystemPluginLog.
     */
    data: XOR<SystemPluginLogCreateInput, SystemPluginLogUncheckedCreateInput>
  }

  /**
   * SystemPluginLog createMany
   */
  export type SystemPluginLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SystemPluginLogs.
     */
    data: SystemPluginLogCreateManyInput | SystemPluginLogCreateManyInput[]
  }

  /**
   * SystemPluginLog createManyAndReturn
   */
  export type SystemPluginLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SystemPluginLogs.
     */
    data: SystemPluginLogCreateManyInput | SystemPluginLogCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SystemPluginLog update
   */
  export type SystemPluginLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    /**
     * The data needed to update a SystemPluginLog.
     */
    data: XOR<SystemPluginLogUpdateInput, SystemPluginLogUncheckedUpdateInput>
    /**
     * Choose, which SystemPluginLog to update.
     */
    where: SystemPluginLogWhereUniqueInput
  }

  /**
   * SystemPluginLog updateMany
   */
  export type SystemPluginLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SystemPluginLogs.
     */
    data: XOR<SystemPluginLogUpdateManyMutationInput, SystemPluginLogUncheckedUpdateManyInput>
    /**
     * Filter which SystemPluginLogs to update
     */
    where?: SystemPluginLogWhereInput
  }

  /**
   * SystemPluginLog upsert
   */
  export type SystemPluginLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    /**
     * The filter to search for the SystemPluginLog to update in case it exists.
     */
    where: SystemPluginLogWhereUniqueInput
    /**
     * In case the SystemPluginLog found by the `where` argument doesn't exist, create a new SystemPluginLog with this data.
     */
    create: XOR<SystemPluginLogCreateInput, SystemPluginLogUncheckedCreateInput>
    /**
     * In case the SystemPluginLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SystemPluginLogUpdateInput, SystemPluginLogUncheckedUpdateInput>
  }

  /**
   * SystemPluginLog delete
   */
  export type SystemPluginLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
    /**
     * Filter which SystemPluginLog to delete.
     */
    where: SystemPluginLogWhereUniqueInput
  }

  /**
   * SystemPluginLog deleteMany
   */
  export type SystemPluginLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemPluginLogs to delete
     */
    where?: SystemPluginLogWhereInput
  }

  /**
   * SystemPluginLog without action
   */
  export type SystemPluginLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemPluginLog
     */
    select?: SystemPluginLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemPluginLogInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CompanyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    phone: 'phone',
    address: 'address',
    website: 'website',
    logo: 'logo',
    plan: 'plan',
    ratePerDay: 'ratePerDay',
    currency: 'currency',
    isActive: 'isActive',
    primaryColor: 'primaryColor',
    secondaryColor: 'secondaryColor',
    accentColor: 'accentColor',
    showCompanyName: 'showCompanyName',
    logoSize: 'logoSize',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    name: 'name',
    phone: 'phone',
    role: 'role',
    skills: 'skills',
    isActive: 'isActive',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    avatar: 'avatar',
    position: 'position',
    department: 'department',
    lastLoginAt: 'lastLoginAt',
    resetToken: 'resetToken',
    resetTokenExpiry: 'resetTokenExpiry'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RackScalarFieldEnum: {
    id: 'id',
    code: 'code',
    qrCode: 'qrCode',
    rackType: 'rackType',
    location: 'location',
    capacityTotal: 'capacityTotal',
    capacityUsed: 'capacityUsed',
    minCapacity: 'minCapacity',
    status: 'status',
    lastActivity: 'lastActivity',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RackScalarFieldEnum = (typeof RackScalarFieldEnum)[keyof typeof RackScalarFieldEnum]


  export const RackInventoryScalarFieldEnum: {
    id: 'id',
    rackId: 'rackId',
    itemType: 'itemType',
    itemId: 'itemId',
    quantityCurrent: 'quantityCurrent',
    quantityReserved: 'quantityReserved',
    lastMovement: 'lastMovement',
    updatedBy: 'updatedBy',
    companyId: 'companyId'
  };

  export type RackInventoryScalarFieldEnum = (typeof RackInventoryScalarFieldEnum)[keyof typeof RackInventoryScalarFieldEnum]


  export const RackActivityScalarFieldEnum: {
    id: 'id',
    rackId: 'rackId',
    userId: 'userId',
    activityType: 'activityType',
    itemDetails: 'itemDetails',
    quantityBefore: 'quantityBefore',
    quantityAfter: 'quantityAfter',
    photos: 'photos',
    notes: 'notes',
    gpsLocation: 'gpsLocation',
    timestamp: 'timestamp',
    companyId: 'companyId'
  };

  export type RackActivityScalarFieldEnum = (typeof RackActivityScalarFieldEnum)[keyof typeof RackActivityScalarFieldEnum]


  export const ShipmentScalarFieldEnum: {
    id: 'id',
    name: 'name',
    referenceId: 'referenceId',
    originalBoxCount: 'originalBoxCount',
    currentBoxCount: 'currentBoxCount',
    type: 'type',
    arrivalDate: 'arrivalDate',
    clientName: 'clientName',
    clientPhone: 'clientPhone',
    clientEmail: 'clientEmail',
    description: 'description',
    estimatedValue: 'estimatedValue',
    notes: 'notes',
    qrCode: 'qrCode',
    status: 'status',
    rackId: 'rackId',
    assignedAt: 'assignedAt',
    releasedAt: 'releasedAt',
    storageCharge: 'storageCharge',
    companyId: 'companyId',
    createdById: 'createdById',
    assignedById: 'assignedById',
    releasedById: 'releasedById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isWarehouseShipment: 'isWarehouseShipment',
    warehouseData: 'warehouseData',
    shipper: 'shipper',
    consignee: 'consignee'
  };

  export type ShipmentScalarFieldEnum = (typeof ShipmentScalarFieldEnum)[keyof typeof ShipmentScalarFieldEnum]


  export const ShipmentBoxScalarFieldEnum: {
    id: 'id',
    shipmentId: 'shipmentId',
    boxNumber: 'boxNumber',
    qrCode: 'qrCode',
    rackId: 'rackId',
    status: 'status',
    assignedAt: 'assignedAt',
    releasedAt: 'releasedAt',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    pieceWeight: 'pieceWeight',
    pieceQR: 'pieceQR'
  };

  export type ShipmentBoxScalarFieldEnum = (typeof ShipmentBoxScalarFieldEnum)[keyof typeof ShipmentBoxScalarFieldEnum]


  export const WithdrawalScalarFieldEnum: {
    id: 'id',
    shipmentId: 'shipmentId',
    withdrawnBoxCount: 'withdrawnBoxCount',
    remainingBoxCount: 'remainingBoxCount',
    withdrawalDate: 'withdrawalDate',
    status: 'status',
    reason: 'reason',
    notes: 'notes',
    photos: 'photos',
    receiptNumber: 'receiptNumber',
    withdrawnBy: 'withdrawnBy',
    authorizedBy: 'authorizedBy',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type WithdrawalScalarFieldEnum = (typeof WithdrawalScalarFieldEnum)[keyof typeof WithdrawalScalarFieldEnum]


  export const ExpenseScalarFieldEnum: {
    id: 'id',
    title: 'title',
    category: 'category',
    amount: 'amount',
    currency: 'currency',
    description: 'description',
    receipts: 'receipts',
    expenseDate: 'expenseDate',
    approvedBy: 'approvedBy',
    status: 'status',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ExpenseScalarFieldEnum = (typeof ExpenseScalarFieldEnum)[keyof typeof ExpenseScalarFieldEnum]


  export const InvoiceSettingsScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    templateType: 'templateType',
    primaryColor: 'primaryColor',
    secondaryColor: 'secondaryColor',
    showLogo: 'showLogo',
    footerText: 'footerText',
    termsConditions: 'termsConditions',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InvoiceSettingsScalarFieldEnum = (typeof InvoiceSettingsScalarFieldEnum)[keyof typeof InvoiceSettingsScalarFieldEnum]


  export const BillingSettingsScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    storageRateType: 'storageRateType',
    storageRatePerBox: 'storageRatePerBox',
    storageRatePerWeek: 'storageRatePerWeek',
    storageRatePerMonth: 'storageRatePerMonth',
    taxEnabled: 'taxEnabled',
    taxRate: 'taxRate',
    currency: 'currency',
    invoicePrefix: 'invoicePrefix',
    invoiceDueDays: 'invoiceDueDays',
    gracePeriodDays: 'gracePeriodDays',
    minimumCharge: 'minimumCharge',
    logoUrl: 'logoUrl',
    logoPosition: 'logoPosition',
    primaryColor: 'primaryColor',
    secondaryColor: 'secondaryColor',
    showCompanyDetails: 'showCompanyDetails',
    showBankDetails: 'showBankDetails',
    showTermsConditions: 'showTermsConditions',
    bankName: 'bankName',
    accountNumber: 'accountNumber',
    accountName: 'accountName',
    iban: 'iban',
    swiftCode: 'swiftCode',
    invoiceFooterText: 'invoiceFooterText',
    termsAndConditions: 'termsAndConditions',
    paymentInstructions: 'paymentInstructions',
    taxRegistrationNo: 'taxRegistrationNo',
    companyRegistrationNo: 'companyRegistrationNo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BillingSettingsScalarFieldEnum = (typeof BillingSettingsScalarFieldEnum)[keyof typeof BillingSettingsScalarFieldEnum]


  export const ChargeTypeScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    billingSettingsId: 'billingSettingsId',
    name: 'name',
    code: 'code',
    description: 'description',
    category: 'category',
    calculationType: 'calculationType',
    rate: 'rate',
    minCharge: 'minCharge',
    maxCharge: 'maxCharge',
    applyOnRelease: 'applyOnRelease',
    applyOnStorage: 'applyOnStorage',
    isTaxable: 'isTaxable',
    isActive: 'isActive',
    isDefault: 'isDefault',
    displayOrder: 'displayOrder',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ChargeTypeScalarFieldEnum = (typeof ChargeTypeScalarFieldEnum)[keyof typeof ChargeTypeScalarFieldEnum]


  export const InvoiceScalarFieldEnum: {
    id: 'id',
    invoiceNumber: 'invoiceNumber',
    companyId: 'companyId',
    shipmentId: 'shipmentId',
    clientName: 'clientName',
    clientPhone: 'clientPhone',
    clientAddress: 'clientAddress',
    invoiceDate: 'invoiceDate',
    dueDate: 'dueDate',
    invoiceType: 'invoiceType',
    isWarehouseInvoice: 'isWarehouseInvoice',
    warehouseData: 'warehouseData',
    subtotal: 'subtotal',
    taxAmount: 'taxAmount',
    discountAmount: 'discountAmount',
    totalAmount: 'totalAmount',
    paymentStatus: 'paymentStatus',
    paidAmount: 'paidAmount',
    balanceDue: 'balanceDue',
    paymentDate: 'paymentDate',
    paymentMethod: 'paymentMethod',
    transactionRef: 'transactionRef',
    notes: 'notes',
    termsAndConditions: 'termsAndConditions',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InvoiceScalarFieldEnum = (typeof InvoiceScalarFieldEnum)[keyof typeof InvoiceScalarFieldEnum]


  export const InvoiceLineItemScalarFieldEnum: {
    id: 'id',
    invoiceId: 'invoiceId',
    companyId: 'companyId',
    chargeTypeId: 'chargeTypeId',
    description: 'description',
    category: 'category',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    amount: 'amount',
    isTaxable: 'isTaxable',
    taxRate: 'taxRate',
    taxAmount: 'taxAmount',
    displayOrder: 'displayOrder',
    createdAt: 'createdAt'
  };

  export type InvoiceLineItemScalarFieldEnum = (typeof InvoiceLineItemScalarFieldEnum)[keyof typeof InvoiceLineItemScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    invoiceId: 'invoiceId',
    companyId: 'companyId',
    amount: 'amount',
    paymentDate: 'paymentDate',
    paymentMethod: 'paymentMethod',
    transactionRef: 'transactionRef',
    receiptNumber: 'receiptNumber',
    notes: 'notes',
    createdBy: 'createdBy',
    createdAt: 'createdAt'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const ShipmentChargesScalarFieldEnum: {
    id: 'id',
    shipmentId: 'shipmentId',
    companyId: 'companyId',
    currentStorageCharge: 'currentStorageCharge',
    daysStored: 'daysStored',
    lastCalculatedDate: 'lastCalculatedDate',
    totalBoxesReleased: 'totalBoxesReleased',
    totalInvoiced: 'totalInvoiced',
    totalPaid: 'totalPaid',
    outstandingBalance: 'outstandingBalance',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ShipmentChargesScalarFieldEnum = (typeof ShipmentChargesScalarFieldEnum)[keyof typeof ShipmentChargesScalarFieldEnum]


  export const CustomFieldScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    fieldName: 'fieldName',
    fieldType: 'fieldType',
    fieldOptions: 'fieldOptions',
    isRequired: 'isRequired',
    isActive: 'isActive',
    section: 'section',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CustomFieldScalarFieldEnum = (typeof CustomFieldScalarFieldEnum)[keyof typeof CustomFieldScalarFieldEnum]


  export const CustomFieldValueScalarFieldEnum: {
    id: 'id',
    customFieldId: 'customFieldId',
    entityType: 'entityType',
    entityId: 'entityId',
    fieldValue: 'fieldValue',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CustomFieldValueScalarFieldEnum = (typeof CustomFieldValueScalarFieldEnum)[keyof typeof CustomFieldValueScalarFieldEnum]


  export const ShipmentSettingsScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    requireClientEmail: 'requireClientEmail',
    requireClientPhone: 'requireClientPhone',
    requireEstimatedValue: 'requireEstimatedValue',
    requirePhotos: 'requirePhotos',
    autoGenerateQR: 'autoGenerateQR',
    qrCodePrefix: 'qrCodePrefix',
    showClientAddress: 'showClientAddress',
    requireClientAddress: 'requireClientAddress',
    showDescription: 'showDescription',
    requireDescription: 'requireDescription',
    showReferenceId: 'showReferenceId',
    requireReferenceId: 'requireReferenceId',
    showNotes: 'showNotes',
    requireNotes: 'requireNotes',
    showWarehouseMode: 'showWarehouseMode',
    showShipperDetails: 'showShipperDetails',
    requireShipperDetails: 'requireShipperDetails',
    showConsigneeDetails: 'showConsigneeDetails',
    requireConsigneeDetails: 'requireConsigneeDetails',
    showWeight: 'showWeight',
    requireWeight: 'requireWeight',
    showDimensions: 'showDimensions',
    requireDimensions: 'requireDimensions',
    showStorageType: 'showStorageType',
    showSpecialInstructions: 'showSpecialInstructions',
    showEstimatedDays: 'showEstimatedDays',
    requireEstimatedDays: 'requireEstimatedDays',
    defaultEstimatedDays: 'defaultEstimatedDays',
    formSectionOrder: 'formSectionOrder',
    defaultStorageType: 'defaultStorageType',
    allowMultipleRacks: 'allowMultipleRacks',
    requireRackAssignment: 'requireRackAssignment',
    autoAssignRack: 'autoAssignRack',
    notifyOnLowCapacity: 'notifyOnLowCapacity',
    lowCapacityThreshold: 'lowCapacityThreshold',
    requireReleaseApproval: 'requireReleaseApproval',
    releaseApproverRole: 'releaseApproverRole',
    requireReleasePhotos: 'requireReleasePhotos',
    requireIDVerification: 'requireIDVerification',
    generateReleaseInvoice: 'generateReleaseInvoice',
    autoSendInvoiceEmail: 'autoSendInvoiceEmail',
    storageRatePerDay: 'storageRatePerDay',
    storageRatePerBox: 'storageRatePerBox',
    chargePartialDay: 'chargePartialDay',
    minimumChargeDays: 'minimumChargeDays',
    releaseHandlingFee: 'releaseHandlingFee',
    releasePerBoxFee: 'releasePerBoxFee',
    releaseTransportFee: 'releaseTransportFee',
    notifyClientOnIntake: 'notifyClientOnIntake',
    notifyClientOnRelease: 'notifyClientOnRelease',
    notifyOnStorageAlert: 'notifyOnStorageAlert',
    storageAlertDays: 'storageAlertDays',
    enableCustomFields: 'enableCustomFields',
    requiredCustomFields: 'requiredCustomFields',
    allowPartialRelease: 'allowPartialRelease',
    partialReleaseMinBoxes: 'partialReleaseMinBoxes',
    requirePartialApproval: 'requirePartialApproval',
    requireReleaseSignature: 'requireReleaseSignature',
    requireCollectorID: 'requireCollectorID',
    allowProxyCollection: 'allowProxyCollection',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ShipmentSettingsScalarFieldEnum = (typeof ShipmentSettingsScalarFieldEnum)[keyof typeof ShipmentSettingsScalarFieldEnum]


  export const TemplateSettingsScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    companyName: 'companyName',
    companyLogo: 'companyLogo',
    companyAddress: 'companyAddress',
    companyPhone: 'companyPhone',
    companyEmail: 'companyEmail',
    companyWebsite: 'companyWebsite',
    companyLicense: 'companyLicense',
    invoiceTemplateType: 'invoiceTemplateType',
    invoiceTitle: 'invoiceTitle',
    invoiceShowLogo: 'invoiceShowLogo',
    invoiceShowAddress: 'invoiceShowAddress',
    invoiceShowPhone: 'invoiceShowPhone',
    invoiceShowEmail: 'invoiceShowEmail',
    invoiceShowWebsite: 'invoiceShowWebsite',
    invoiceShowLicense: 'invoiceShowLicense',
    invoiceShowFooter: 'invoiceShowFooter',
    invoiceHeaderBg: 'invoiceHeaderBg',
    invoiceHeaderText: 'invoiceHeaderText',
    invoiceFooterText: 'invoiceFooterText',
    invoiceTerms: 'invoiceTerms',
    invoiceShowBorders: 'invoiceShowBorders',
    invoiceShowGrid: 'invoiceShowGrid',
    invoiceTableStyle: 'invoiceTableStyle',
    invoiceFontSize: 'invoiceFontSize',
    invoicePaperSize: 'invoicePaperSize',
    invoicePrimaryColor: 'invoicePrimaryColor',
    invoiceSecondaryColor: 'invoiceSecondaryColor',
    invoiceAccentColor: 'invoiceAccentColor',
    invoiceDangerColor: 'invoiceDangerColor',
    releaseNoteTemplate: 'releaseNoteTemplate',
    releaseNoteTitle: 'releaseNoteTitle',
    releaseNoteHeaderBg: 'releaseNoteHeaderBg',
    releaseNoteShowLogo: 'releaseNoteShowLogo',
    releaseShowShipment: 'releaseShowShipment',
    releaseShowStorage: 'releaseShowStorage',
    releaseShowItems: 'releaseShowItems',
    releaseShowCollector: 'releaseShowCollector',
    releaseShowCharges: 'releaseShowCharges',
    releaseShowPhotos: 'releaseShowPhotos',
    releaseShowTerms: 'releaseShowTerms',
    releaseShowSignatures: 'releaseShowSignatures',
    releaseTerms: 'releaseTerms',
    releaseFooterText: 'releaseFooterText',
    releasePrimaryColor: 'releasePrimaryColor',
    printMarginTop: 'printMarginTop',
    printMarginBottom: 'printMarginBottom',
    printMarginLeft: 'printMarginLeft',
    printMarginRight: 'printMarginRight',
    language: 'language',
    dateFormat: 'dateFormat',
    timeFormat: 'timeFormat',
    currencySymbol: 'currencySymbol',
    currencyPosition: 'currencyPosition',
    customField1Label: 'customField1Label',
    customField1Value: 'customField1Value',
    customField2Label: 'customField2Label',
    customField2Value: 'customField2Value',
    customField3Label: 'customField3Label',
    customField3Value: 'customField3Value',
    requireStaffSignature: 'requireStaffSignature',
    requireClientSignature: 'requireClientSignature',
    signatureHeight: 'signatureHeight',
    showQRCode: 'showQRCode',
    qrCodePosition: 'qrCodePosition',
    qrCodeSize: 'qrCodeSize',
    showWatermark: 'showWatermark',
    watermarkText: 'watermarkText',
    watermarkOpacity: 'watermarkOpacity',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TemplateSettingsScalarFieldEnum = (typeof TemplateSettingsScalarFieldEnum)[keyof typeof TemplateSettingsScalarFieldEnum]


  export const PermissionScalarFieldEnum: {
    id: 'id',
    resource: 'resource',
    action: 'action',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PermissionScalarFieldEnum = (typeof PermissionScalarFieldEnum)[keyof typeof PermissionScalarFieldEnum]


  export const RolePermissionScalarFieldEnum: {
    id: 'id',
    role: 'role',
    permissionId: 'permissionId',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RolePermissionScalarFieldEnum = (typeof RolePermissionScalarFieldEnum)[keyof typeof RolePermissionScalarFieldEnum]


  export const MovingJobScalarFieldEnum: {
    id: 'id',
    jobCode: 'jobCode',
    jobTitle: 'jobTitle',
    clientName: 'clientName',
    clientPhone: 'clientPhone',
    clientEmail: 'clientEmail',
    jobDate: 'jobDate',
    jobAddress: 'jobAddress',
    dropoffAddress: 'dropoffAddress',
    status: 'status',
    teamLeaderId: 'teamLeaderId',
    driverName: 'driverName',
    vehicleNumber: 'vehicleNumber',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    companyId: 'companyId'
  };

  export type MovingJobScalarFieldEnum = (typeof MovingJobScalarFieldEnum)[keyof typeof MovingJobScalarFieldEnum]


  export const JobAssignmentScalarFieldEnum: {
    id: 'id',
    jobId: 'jobId',
    userId: 'userId',
    role: 'role',
    checkInAt: 'checkInAt',
    checkOutAt: 'checkOutAt',
    hourlyRate: 'hourlyRate',
    hoursWorked: 'hoursWorked',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    companyId: 'companyId'
  };

  export type JobAssignmentScalarFieldEnum = (typeof JobAssignmentScalarFieldEnum)[keyof typeof JobAssignmentScalarFieldEnum]


  export const PackingMaterialScalarFieldEnum: {
    id: 'id',
    sku: 'sku',
    name: 'name',
    description: 'description',
    unit: 'unit',
    category: 'category',
    minStockLevel: 'minStockLevel',
    totalQuantity: 'totalQuantity',
    unitCost: 'unitCost',
    sellingPrice: 'sellingPrice',
    isActive: 'isActive',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PackingMaterialScalarFieldEnum = (typeof PackingMaterialScalarFieldEnum)[keyof typeof PackingMaterialScalarFieldEnum]


  export const VendorScalarFieldEnum: {
    id: 'id',
    name: 'name',
    contact: 'contact',
    phone: 'phone',
    email: 'email',
    notes: 'notes',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VendorScalarFieldEnum = (typeof VendorScalarFieldEnum)[keyof typeof VendorScalarFieldEnum]


  export const StockBatchScalarFieldEnum: {
    id: 'id',
    materialId: 'materialId',
    vendorId: 'vendorId',
    vendorName: 'vendorName',
    purchaseOrder: 'purchaseOrder',
    purchaseDate: 'purchaseDate',
    quantityPurchased: 'quantityPurchased',
    quantityRemaining: 'quantityRemaining',
    unitCost: 'unitCost',
    sellingPrice: 'sellingPrice',
    receivedById: 'receivedById',
    notes: 'notes',
    companyId: 'companyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type StockBatchScalarFieldEnum = (typeof StockBatchScalarFieldEnum)[keyof typeof StockBatchScalarFieldEnum]


  export const RackStockLevelScalarFieldEnum: {
    id: 'id',
    materialId: 'materialId',
    rackId: 'rackId',
    stockBatchId: 'stockBatchId',
    quantity: 'quantity',
    lastUpdated: 'lastUpdated',
    companyId: 'companyId'
  };

  export type RackStockLevelScalarFieldEnum = (typeof RackStockLevelScalarFieldEnum)[keyof typeof RackStockLevelScalarFieldEnum]


  export const MaterialIssueScalarFieldEnum: {
    id: 'id',
    jobId: 'jobId',
    materialId: 'materialId',
    stockBatchId: 'stockBatchId',
    quantity: 'quantity',
    unitCost: 'unitCost',
    totalCost: 'totalCost',
    rackId: 'rackId',
    issuedById: 'issuedById',
    issuedAt: 'issuedAt',
    notes: 'notes',
    companyId: 'companyId'
  };

  export type MaterialIssueScalarFieldEnum = (typeof MaterialIssueScalarFieldEnum)[keyof typeof MaterialIssueScalarFieldEnum]


  export const MaterialReturnScalarFieldEnum: {
    id: 'id',
    jobId: 'jobId',
    materialId: 'materialId',
    issueId: 'issueId',
    quantityIssued: 'quantityIssued',
    quantityUsed: 'quantityUsed',
    quantityGood: 'quantityGood',
    quantityDamaged: 'quantityDamaged',
    restocked: 'restocked',
    restockedAt: 'restockedAt',
    rackId: 'rackId',
    recordedById: 'recordedById',
    recordedAt: 'recordedAt',
    notes: 'notes',
    companyId: 'companyId'
  };

  export type MaterialReturnScalarFieldEnum = (typeof MaterialReturnScalarFieldEnum)[keyof typeof MaterialReturnScalarFieldEnum]


  export const MaterialDamageScalarFieldEnum: {
    id: 'id',
    returnId: 'returnId',
    materialId: 'materialId',
    quantity: 'quantity',
    reason: 'reason',
    photoUrls: 'photoUrls',
    status: 'status',
    recordedById: 'recordedById',
    recordedAt: 'recordedAt',
    approvedById: 'approvedById',
    approvedAt: 'approvedAt',
    approvalNotes: 'approvalNotes',
    rejectionReason: 'rejectionReason',
    companyId: 'companyId'
  };

  export type MaterialDamageScalarFieldEnum = (typeof MaterialDamageScalarFieldEnum)[keyof typeof MaterialDamageScalarFieldEnum]


  export const MaterialApprovalScalarFieldEnum: {
    id: 'id',
    jobId: 'jobId',
    approvalType: 'approvalType',
    status: 'status',
    requestedById: 'requestedById',
    requestedAt: 'requestedAt',
    decisionById: 'decisionById',
    decidedAt: 'decidedAt',
    decisionNotes: 'decisionNotes',
    subjectReturnId: 'subjectReturnId',
    subjectDamageId: 'subjectDamageId',
    companyId: 'companyId'
  };

  export type MaterialApprovalScalarFieldEnum = (typeof MaterialApprovalScalarFieldEnum)[keyof typeof MaterialApprovalScalarFieldEnum]


  export const JobCostSnapshotScalarFieldEnum: {
    id: 'id',
    jobId: 'jobId',
    recordedAt: 'recordedAt',
    materialsCost: 'materialsCost',
    laborCost: 'laborCost',
    damageLoss: 'damageLoss',
    otherCost: 'otherCost',
    revenue: 'revenue',
    profit: 'profit',
    profitMargin: 'profitMargin',
    currency: 'currency',
    notes: 'notes',
    companyId: 'companyId'
  };

  export type JobCostSnapshotScalarFieldEnum = (typeof JobCostSnapshotScalarFieldEnum)[keyof typeof JobCostSnapshotScalarFieldEnum]


  export const SystemPluginScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    version: 'version',
    status: 'status',
    entryPointUrl: 'entryPointUrl',
    checksum: 'checksum',
    installedAt: 'installedAt',
    activatedAt: 'activatedAt',
    deactivatedAt: 'deactivatedAt',
    companyId: 'companyId'
  };

  export type SystemPluginScalarFieldEnum = (typeof SystemPluginScalarFieldEnum)[keyof typeof SystemPluginScalarFieldEnum]


  export const SystemPluginLogScalarFieldEnum: {
    id: 'id',
    pluginId: 'pluginId',
    action: 'action',
    status: 'status',
    message: 'message',
    performedBy: 'performedBy',
    createdAt: 'createdAt',
    companyId: 'companyId'
  };

  export type SystemPluginLogScalarFieldEnum = (typeof SystemPluginLogScalarFieldEnum)[keyof typeof SystemPluginLogScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    
  /**
   * Deep Input Types
   */


  export type CompanyWhereInput = {
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    id?: StringFilter<"Company"> | string
    name?: StringFilter<"Company"> | string
    email?: StringFilter<"Company"> | string
    phone?: StringNullableFilter<"Company"> | string | null
    address?: StringNullableFilter<"Company"> | string | null
    website?: StringNullableFilter<"Company"> | string | null
    logo?: StringNullableFilter<"Company"> | string | null
    plan?: StringFilter<"Company"> | string
    ratePerDay?: FloatFilter<"Company"> | number
    currency?: StringFilter<"Company"> | string
    isActive?: BoolFilter<"Company"> | boolean
    primaryColor?: StringNullableFilter<"Company"> | string | null
    secondaryColor?: StringNullableFilter<"Company"> | string | null
    accentColor?: StringNullableFilter<"Company"> | string | null
    showCompanyName?: BoolFilter<"Company"> | boolean
    logoSize?: StringNullableFilter<"Company"> | string | null
    createdAt?: DateTimeFilter<"Company"> | Date | string
    updatedAt?: DateTimeFilter<"Company"> | Date | string
    users?: UserListRelationFilter
    racks?: RackListRelationFilter
    shipments?: ShipmentListRelationFilter
    movingJobs?: MovingJobListRelationFilter
    expenses?: ExpenseListRelationFilter
    invoiceSettings?: XOR<InvoiceSettingsNullableRelationFilter, InvoiceSettingsWhereInput> | null
    customFields?: CustomFieldListRelationFilter
    billingSettings?: XOR<BillingSettingsNullableRelationFilter, BillingSettingsWhereInput> | null
    chargeTypes?: ChargeTypeListRelationFilter
    invoices?: InvoiceListRelationFilter
    invoiceLineItems?: InvoiceLineItemListRelationFilter
    payments?: PaymentListRelationFilter
    shipmentCharges?: ShipmentChargesListRelationFilter
    shipmentSettings?: XOR<ShipmentSettingsNullableRelationFilter, ShipmentSettingsWhereInput> | null
    templateSettings?: XOR<TemplateSettingsNullableRelationFilter, TemplateSettingsWhereInput> | null
    rolePermissions?: RolePermissionListRelationFilter
    packingMaterials?: PackingMaterialListRelationFilter
    vendors?: VendorListRelationFilter
    stockBatches?: StockBatchListRelationFilter
    rackLevels?: RackStockLevelListRelationFilter
    materialIssues?: MaterialIssueListRelationFilter
    materialReturns?: MaterialReturnListRelationFilter
    materialDamages?: MaterialDamageListRelationFilter
    materialApprovals?: MaterialApprovalListRelationFilter
    jobCostSnapshots?: JobCostSnapshotListRelationFilter
    systemPlugins?: SystemPluginListRelationFilter
    JobAssignment?: JobAssignmentListRelationFilter
    SystemPluginLog?: SystemPluginLogListRelationFilter
  }

  export type CompanyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    plan?: SortOrder
    ratePerDay?: SortOrder
    currency?: SortOrder
    isActive?: SortOrder
    primaryColor?: SortOrderInput | SortOrder
    secondaryColor?: SortOrderInput | SortOrder
    accentColor?: SortOrderInput | SortOrder
    showCompanyName?: SortOrder
    logoSize?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    users?: UserOrderByRelationAggregateInput
    racks?: RackOrderByRelationAggregateInput
    shipments?: ShipmentOrderByRelationAggregateInput
    movingJobs?: MovingJobOrderByRelationAggregateInput
    expenses?: ExpenseOrderByRelationAggregateInput
    invoiceSettings?: InvoiceSettingsOrderByWithRelationInput
    customFields?: CustomFieldOrderByRelationAggregateInput
    billingSettings?: BillingSettingsOrderByWithRelationInput
    chargeTypes?: ChargeTypeOrderByRelationAggregateInput
    invoices?: InvoiceOrderByRelationAggregateInput
    invoiceLineItems?: InvoiceLineItemOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
    shipmentCharges?: ShipmentChargesOrderByRelationAggregateInput
    shipmentSettings?: ShipmentSettingsOrderByWithRelationInput
    templateSettings?: TemplateSettingsOrderByWithRelationInput
    rolePermissions?: RolePermissionOrderByRelationAggregateInput
    packingMaterials?: PackingMaterialOrderByRelationAggregateInput
    vendors?: VendorOrderByRelationAggregateInput
    stockBatches?: StockBatchOrderByRelationAggregateInput
    rackLevels?: RackStockLevelOrderByRelationAggregateInput
    materialIssues?: MaterialIssueOrderByRelationAggregateInput
    materialReturns?: MaterialReturnOrderByRelationAggregateInput
    materialDamages?: MaterialDamageOrderByRelationAggregateInput
    materialApprovals?: MaterialApprovalOrderByRelationAggregateInput
    jobCostSnapshots?: JobCostSnapshotOrderByRelationAggregateInput
    systemPlugins?: SystemPluginOrderByRelationAggregateInput
    JobAssignment?: JobAssignmentOrderByRelationAggregateInput
    SystemPluginLog?: SystemPluginLogOrderByRelationAggregateInput
  }

  export type CompanyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    name?: StringFilter<"Company"> | string
    phone?: StringNullableFilter<"Company"> | string | null
    address?: StringNullableFilter<"Company"> | string | null
    website?: StringNullableFilter<"Company"> | string | null
    logo?: StringNullableFilter<"Company"> | string | null
    plan?: StringFilter<"Company"> | string
    ratePerDay?: FloatFilter<"Company"> | number
    currency?: StringFilter<"Company"> | string
    isActive?: BoolFilter<"Company"> | boolean
    primaryColor?: StringNullableFilter<"Company"> | string | null
    secondaryColor?: StringNullableFilter<"Company"> | string | null
    accentColor?: StringNullableFilter<"Company"> | string | null
    showCompanyName?: BoolFilter<"Company"> | boolean
    logoSize?: StringNullableFilter<"Company"> | string | null
    createdAt?: DateTimeFilter<"Company"> | Date | string
    updatedAt?: DateTimeFilter<"Company"> | Date | string
    users?: UserListRelationFilter
    racks?: RackListRelationFilter
    shipments?: ShipmentListRelationFilter
    movingJobs?: MovingJobListRelationFilter
    expenses?: ExpenseListRelationFilter
    invoiceSettings?: XOR<InvoiceSettingsNullableRelationFilter, InvoiceSettingsWhereInput> | null
    customFields?: CustomFieldListRelationFilter
    billingSettings?: XOR<BillingSettingsNullableRelationFilter, BillingSettingsWhereInput> | null
    chargeTypes?: ChargeTypeListRelationFilter
    invoices?: InvoiceListRelationFilter
    invoiceLineItems?: InvoiceLineItemListRelationFilter
    payments?: PaymentListRelationFilter
    shipmentCharges?: ShipmentChargesListRelationFilter
    shipmentSettings?: XOR<ShipmentSettingsNullableRelationFilter, ShipmentSettingsWhereInput> | null
    templateSettings?: XOR<TemplateSettingsNullableRelationFilter, TemplateSettingsWhereInput> | null
    rolePermissions?: RolePermissionListRelationFilter
    packingMaterials?: PackingMaterialListRelationFilter
    vendors?: VendorListRelationFilter
    stockBatches?: StockBatchListRelationFilter
    rackLevels?: RackStockLevelListRelationFilter
    materialIssues?: MaterialIssueListRelationFilter
    materialReturns?: MaterialReturnListRelationFilter
    materialDamages?: MaterialDamageListRelationFilter
    materialApprovals?: MaterialApprovalListRelationFilter
    jobCostSnapshots?: JobCostSnapshotListRelationFilter
    systemPlugins?: SystemPluginListRelationFilter
    JobAssignment?: JobAssignmentListRelationFilter
    SystemPluginLog?: SystemPluginLogListRelationFilter
  }, "id" | "email">

  export type CompanyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    plan?: SortOrder
    ratePerDay?: SortOrder
    currency?: SortOrder
    isActive?: SortOrder
    primaryColor?: SortOrderInput | SortOrder
    secondaryColor?: SortOrderInput | SortOrder
    accentColor?: SortOrderInput | SortOrder
    showCompanyName?: SortOrder
    logoSize?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CompanyCountOrderByAggregateInput
    _avg?: CompanyAvgOrderByAggregateInput
    _max?: CompanyMaxOrderByAggregateInput
    _min?: CompanyMinOrderByAggregateInput
    _sum?: CompanySumOrderByAggregateInput
  }

  export type CompanyScalarWhereWithAggregatesInput = {
    AND?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    OR?: CompanyScalarWhereWithAggregatesInput[]
    NOT?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Company"> | string
    name?: StringWithAggregatesFilter<"Company"> | string
    email?: StringWithAggregatesFilter<"Company"> | string
    phone?: StringNullableWithAggregatesFilter<"Company"> | string | null
    address?: StringNullableWithAggregatesFilter<"Company"> | string | null
    website?: StringNullableWithAggregatesFilter<"Company"> | string | null
    logo?: StringNullableWithAggregatesFilter<"Company"> | string | null
    plan?: StringWithAggregatesFilter<"Company"> | string
    ratePerDay?: FloatWithAggregatesFilter<"Company"> | number
    currency?: StringWithAggregatesFilter<"Company"> | string
    isActive?: BoolWithAggregatesFilter<"Company"> | boolean
    primaryColor?: StringNullableWithAggregatesFilter<"Company"> | string | null
    secondaryColor?: StringNullableWithAggregatesFilter<"Company"> | string | null
    accentColor?: StringNullableWithAggregatesFilter<"Company"> | string | null
    showCompanyName?: BoolWithAggregatesFilter<"Company"> | boolean
    logoSize?: StringNullableWithAggregatesFilter<"Company"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Company"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    role?: StringFilter<"User"> | string
    skills?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    companyId?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    avatar?: StringNullableFilter<"User"> | string | null
    position?: StringNullableFilter<"User"> | string | null
    department?: StringNullableFilter<"User"> | string | null
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    resetToken?: StringNullableFilter<"User"> | string | null
    resetTokenExpiry?: DateTimeNullableFilter<"User"> | Date | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    activities?: RackActivityListRelationFilter
    jobAssignments?: JobAssignmentListRelationFilter
    movingJobsLead?: MovingJobListRelationFilter
    stockBatchesReceived?: StockBatchListRelationFilter
    materialIssuesCreated?: MaterialIssueListRelationFilter
    materialReturnsRecorded?: MaterialReturnListRelationFilter
    damagesRecorded?: MaterialDamageListRelationFilter
    damagesApproved?: MaterialDamageListRelationFilter
    approvalsRequested?: MaterialApprovalListRelationFilter
    approvalsDecided?: MaterialApprovalListRelationFilter
    shipmentsCreated?: ShipmentListRelationFilter
    shipmentsAssigned?: ShipmentListRelationFilter
    shipmentsReleased?: ShipmentListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrderInput | SortOrder
    role?: SortOrder
    skills?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    avatar?: SortOrderInput | SortOrder
    position?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    resetToken?: SortOrderInput | SortOrder
    resetTokenExpiry?: SortOrderInput | SortOrder
    company?: CompanyOrderByWithRelationInput
    activities?: RackActivityOrderByRelationAggregateInput
    jobAssignments?: JobAssignmentOrderByRelationAggregateInput
    movingJobsLead?: MovingJobOrderByRelationAggregateInput
    stockBatchesReceived?: StockBatchOrderByRelationAggregateInput
    materialIssuesCreated?: MaterialIssueOrderByRelationAggregateInput
    materialReturnsRecorded?: MaterialReturnOrderByRelationAggregateInput
    damagesRecorded?: MaterialDamageOrderByRelationAggregateInput
    damagesApproved?: MaterialDamageOrderByRelationAggregateInput
    approvalsRequested?: MaterialApprovalOrderByRelationAggregateInput
    approvalsDecided?: MaterialApprovalOrderByRelationAggregateInput
    shipmentsCreated?: ShipmentOrderByRelationAggregateInput
    shipmentsAssigned?: ShipmentOrderByRelationAggregateInput
    shipmentsReleased?: ShipmentOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    role?: StringFilter<"User"> | string
    skills?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    companyId?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    avatar?: StringNullableFilter<"User"> | string | null
    position?: StringNullableFilter<"User"> | string | null
    department?: StringNullableFilter<"User"> | string | null
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    resetToken?: StringNullableFilter<"User"> | string | null
    resetTokenExpiry?: DateTimeNullableFilter<"User"> | Date | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    activities?: RackActivityListRelationFilter
    jobAssignments?: JobAssignmentListRelationFilter
    movingJobsLead?: MovingJobListRelationFilter
    stockBatchesReceived?: StockBatchListRelationFilter
    materialIssuesCreated?: MaterialIssueListRelationFilter
    materialReturnsRecorded?: MaterialReturnListRelationFilter
    damagesRecorded?: MaterialDamageListRelationFilter
    damagesApproved?: MaterialDamageListRelationFilter
    approvalsRequested?: MaterialApprovalListRelationFilter
    approvalsDecided?: MaterialApprovalListRelationFilter
    shipmentsCreated?: ShipmentListRelationFilter
    shipmentsAssigned?: ShipmentListRelationFilter
    shipmentsReleased?: ShipmentListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrderInput | SortOrder
    role?: SortOrder
    skills?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    avatar?: SortOrderInput | SortOrder
    position?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    resetToken?: SortOrderInput | SortOrder
    resetTokenExpiry?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: StringWithAggregatesFilter<"User"> | string
    skills?: StringNullableWithAggregatesFilter<"User"> | string | null
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    companyId?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    position?: StringNullableWithAggregatesFilter<"User"> | string | null
    department?: StringNullableWithAggregatesFilter<"User"> | string | null
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    resetToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    resetTokenExpiry?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  }

  export type RackWhereInput = {
    AND?: RackWhereInput | RackWhereInput[]
    OR?: RackWhereInput[]
    NOT?: RackWhereInput | RackWhereInput[]
    id?: StringFilter<"Rack"> | string
    code?: StringFilter<"Rack"> | string
    qrCode?: StringFilter<"Rack"> | string
    rackType?: StringFilter<"Rack"> | string
    location?: StringNullableFilter<"Rack"> | string | null
    capacityTotal?: FloatFilter<"Rack"> | number
    capacityUsed?: FloatFilter<"Rack"> | number
    minCapacity?: IntFilter<"Rack"> | number
    status?: StringFilter<"Rack"> | string
    lastActivity?: DateTimeNullableFilter<"Rack"> | Date | string | null
    companyId?: StringFilter<"Rack"> | string
    createdAt?: DateTimeFilter<"Rack"> | Date | string
    updatedAt?: DateTimeFilter<"Rack"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    shipments?: ShipmentListRelationFilter
    boxes?: ShipmentBoxListRelationFilter
    activities?: RackActivityListRelationFilter
    inventory?: RackInventoryListRelationFilter
    materialLevels?: RackStockLevelListRelationFilter
    MaterialReturn?: MaterialReturnListRelationFilter
    jobMaterials?: MaterialIssueListRelationFilter
  }

  export type RackOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    qrCode?: SortOrder
    rackType?: SortOrder
    location?: SortOrderInput | SortOrder
    capacityTotal?: SortOrder
    capacityUsed?: SortOrder
    minCapacity?: SortOrder
    status?: SortOrder
    lastActivity?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    shipments?: ShipmentOrderByRelationAggregateInput
    boxes?: ShipmentBoxOrderByRelationAggregateInput
    activities?: RackActivityOrderByRelationAggregateInput
    inventory?: RackInventoryOrderByRelationAggregateInput
    materialLevels?: RackStockLevelOrderByRelationAggregateInput
    MaterialReturn?: MaterialReturnOrderByRelationAggregateInput
    jobMaterials?: MaterialIssueOrderByRelationAggregateInput
  }

  export type RackWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    qrCode?: string
    code_companyId?: RackCodeCompanyIdCompoundUniqueInput
    AND?: RackWhereInput | RackWhereInput[]
    OR?: RackWhereInput[]
    NOT?: RackWhereInput | RackWhereInput[]
    code?: StringFilter<"Rack"> | string
    rackType?: StringFilter<"Rack"> | string
    location?: StringNullableFilter<"Rack"> | string | null
    capacityTotal?: FloatFilter<"Rack"> | number
    capacityUsed?: FloatFilter<"Rack"> | number
    minCapacity?: IntFilter<"Rack"> | number
    status?: StringFilter<"Rack"> | string
    lastActivity?: DateTimeNullableFilter<"Rack"> | Date | string | null
    companyId?: StringFilter<"Rack"> | string
    createdAt?: DateTimeFilter<"Rack"> | Date | string
    updatedAt?: DateTimeFilter<"Rack"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    shipments?: ShipmentListRelationFilter
    boxes?: ShipmentBoxListRelationFilter
    activities?: RackActivityListRelationFilter
    inventory?: RackInventoryListRelationFilter
    materialLevels?: RackStockLevelListRelationFilter
    MaterialReturn?: MaterialReturnListRelationFilter
    jobMaterials?: MaterialIssueListRelationFilter
  }, "id" | "qrCode" | "code_companyId">

  export type RackOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    qrCode?: SortOrder
    rackType?: SortOrder
    location?: SortOrderInput | SortOrder
    capacityTotal?: SortOrder
    capacityUsed?: SortOrder
    minCapacity?: SortOrder
    status?: SortOrder
    lastActivity?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RackCountOrderByAggregateInput
    _avg?: RackAvgOrderByAggregateInput
    _max?: RackMaxOrderByAggregateInput
    _min?: RackMinOrderByAggregateInput
    _sum?: RackSumOrderByAggregateInput
  }

  export type RackScalarWhereWithAggregatesInput = {
    AND?: RackScalarWhereWithAggregatesInput | RackScalarWhereWithAggregatesInput[]
    OR?: RackScalarWhereWithAggregatesInput[]
    NOT?: RackScalarWhereWithAggregatesInput | RackScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Rack"> | string
    code?: StringWithAggregatesFilter<"Rack"> | string
    qrCode?: StringWithAggregatesFilter<"Rack"> | string
    rackType?: StringWithAggregatesFilter<"Rack"> | string
    location?: StringNullableWithAggregatesFilter<"Rack"> | string | null
    capacityTotal?: FloatWithAggregatesFilter<"Rack"> | number
    capacityUsed?: FloatWithAggregatesFilter<"Rack"> | number
    minCapacity?: IntWithAggregatesFilter<"Rack"> | number
    status?: StringWithAggregatesFilter<"Rack"> | string
    lastActivity?: DateTimeNullableWithAggregatesFilter<"Rack"> | Date | string | null
    companyId?: StringWithAggregatesFilter<"Rack"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Rack"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Rack"> | Date | string
  }

  export type RackInventoryWhereInput = {
    AND?: RackInventoryWhereInput | RackInventoryWhereInput[]
    OR?: RackInventoryWhereInput[]
    NOT?: RackInventoryWhereInput | RackInventoryWhereInput[]
    id?: StringFilter<"RackInventory"> | string
    rackId?: StringFilter<"RackInventory"> | string
    itemType?: StringFilter<"RackInventory"> | string
    itemId?: StringFilter<"RackInventory"> | string
    quantityCurrent?: IntFilter<"RackInventory"> | number
    quantityReserved?: IntFilter<"RackInventory"> | number
    lastMovement?: DateTimeFilter<"RackInventory"> | Date | string
    updatedBy?: StringNullableFilter<"RackInventory"> | string | null
    companyId?: StringFilter<"RackInventory"> | string
    rack?: XOR<RackRelationFilter, RackWhereInput>
  }

  export type RackInventoryOrderByWithRelationInput = {
    id?: SortOrder
    rackId?: SortOrder
    itemType?: SortOrder
    itemId?: SortOrder
    quantityCurrent?: SortOrder
    quantityReserved?: SortOrder
    lastMovement?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    companyId?: SortOrder
    rack?: RackOrderByWithRelationInput
  }

  export type RackInventoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RackInventoryWhereInput | RackInventoryWhereInput[]
    OR?: RackInventoryWhereInput[]
    NOT?: RackInventoryWhereInput | RackInventoryWhereInput[]
    rackId?: StringFilter<"RackInventory"> | string
    itemType?: StringFilter<"RackInventory"> | string
    itemId?: StringFilter<"RackInventory"> | string
    quantityCurrent?: IntFilter<"RackInventory"> | number
    quantityReserved?: IntFilter<"RackInventory"> | number
    lastMovement?: DateTimeFilter<"RackInventory"> | Date | string
    updatedBy?: StringNullableFilter<"RackInventory"> | string | null
    companyId?: StringFilter<"RackInventory"> | string
    rack?: XOR<RackRelationFilter, RackWhereInput>
  }, "id">

  export type RackInventoryOrderByWithAggregationInput = {
    id?: SortOrder
    rackId?: SortOrder
    itemType?: SortOrder
    itemId?: SortOrder
    quantityCurrent?: SortOrder
    quantityReserved?: SortOrder
    lastMovement?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    companyId?: SortOrder
    _count?: RackInventoryCountOrderByAggregateInput
    _avg?: RackInventoryAvgOrderByAggregateInput
    _max?: RackInventoryMaxOrderByAggregateInput
    _min?: RackInventoryMinOrderByAggregateInput
    _sum?: RackInventorySumOrderByAggregateInput
  }

  export type RackInventoryScalarWhereWithAggregatesInput = {
    AND?: RackInventoryScalarWhereWithAggregatesInput | RackInventoryScalarWhereWithAggregatesInput[]
    OR?: RackInventoryScalarWhereWithAggregatesInput[]
    NOT?: RackInventoryScalarWhereWithAggregatesInput | RackInventoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RackInventory"> | string
    rackId?: StringWithAggregatesFilter<"RackInventory"> | string
    itemType?: StringWithAggregatesFilter<"RackInventory"> | string
    itemId?: StringWithAggregatesFilter<"RackInventory"> | string
    quantityCurrent?: IntWithAggregatesFilter<"RackInventory"> | number
    quantityReserved?: IntWithAggregatesFilter<"RackInventory"> | number
    lastMovement?: DateTimeWithAggregatesFilter<"RackInventory"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"RackInventory"> | string | null
    companyId?: StringWithAggregatesFilter<"RackInventory"> | string
  }

  export type RackActivityWhereInput = {
    AND?: RackActivityWhereInput | RackActivityWhereInput[]
    OR?: RackActivityWhereInput[]
    NOT?: RackActivityWhereInput | RackActivityWhereInput[]
    id?: StringFilter<"RackActivity"> | string
    rackId?: StringFilter<"RackActivity"> | string
    userId?: StringFilter<"RackActivity"> | string
    activityType?: StringFilter<"RackActivity"> | string
    itemDetails?: StringFilter<"RackActivity"> | string
    quantityBefore?: IntNullableFilter<"RackActivity"> | number | null
    quantityAfter?: IntNullableFilter<"RackActivity"> | number | null
    photos?: StringNullableFilter<"RackActivity"> | string | null
    notes?: StringNullableFilter<"RackActivity"> | string | null
    gpsLocation?: StringNullableFilter<"RackActivity"> | string | null
    timestamp?: DateTimeFilter<"RackActivity"> | Date | string
    companyId?: StringFilter<"RackActivity"> | string
    rack?: XOR<RackRelationFilter, RackWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type RackActivityOrderByWithRelationInput = {
    id?: SortOrder
    rackId?: SortOrder
    userId?: SortOrder
    activityType?: SortOrder
    itemDetails?: SortOrder
    quantityBefore?: SortOrderInput | SortOrder
    quantityAfter?: SortOrderInput | SortOrder
    photos?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    gpsLocation?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    companyId?: SortOrder
    rack?: RackOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type RackActivityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RackActivityWhereInput | RackActivityWhereInput[]
    OR?: RackActivityWhereInput[]
    NOT?: RackActivityWhereInput | RackActivityWhereInput[]
    rackId?: StringFilter<"RackActivity"> | string
    userId?: StringFilter<"RackActivity"> | string
    activityType?: StringFilter<"RackActivity"> | string
    itemDetails?: StringFilter<"RackActivity"> | string
    quantityBefore?: IntNullableFilter<"RackActivity"> | number | null
    quantityAfter?: IntNullableFilter<"RackActivity"> | number | null
    photos?: StringNullableFilter<"RackActivity"> | string | null
    notes?: StringNullableFilter<"RackActivity"> | string | null
    gpsLocation?: StringNullableFilter<"RackActivity"> | string | null
    timestamp?: DateTimeFilter<"RackActivity"> | Date | string
    companyId?: StringFilter<"RackActivity"> | string
    rack?: XOR<RackRelationFilter, RackWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type RackActivityOrderByWithAggregationInput = {
    id?: SortOrder
    rackId?: SortOrder
    userId?: SortOrder
    activityType?: SortOrder
    itemDetails?: SortOrder
    quantityBefore?: SortOrderInput | SortOrder
    quantityAfter?: SortOrderInput | SortOrder
    photos?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    gpsLocation?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    companyId?: SortOrder
    _count?: RackActivityCountOrderByAggregateInput
    _avg?: RackActivityAvgOrderByAggregateInput
    _max?: RackActivityMaxOrderByAggregateInput
    _min?: RackActivityMinOrderByAggregateInput
    _sum?: RackActivitySumOrderByAggregateInput
  }

  export type RackActivityScalarWhereWithAggregatesInput = {
    AND?: RackActivityScalarWhereWithAggregatesInput | RackActivityScalarWhereWithAggregatesInput[]
    OR?: RackActivityScalarWhereWithAggregatesInput[]
    NOT?: RackActivityScalarWhereWithAggregatesInput | RackActivityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RackActivity"> | string
    rackId?: StringWithAggregatesFilter<"RackActivity"> | string
    userId?: StringWithAggregatesFilter<"RackActivity"> | string
    activityType?: StringWithAggregatesFilter<"RackActivity"> | string
    itemDetails?: StringWithAggregatesFilter<"RackActivity"> | string
    quantityBefore?: IntNullableWithAggregatesFilter<"RackActivity"> | number | null
    quantityAfter?: IntNullableWithAggregatesFilter<"RackActivity"> | number | null
    photos?: StringNullableWithAggregatesFilter<"RackActivity"> | string | null
    notes?: StringNullableWithAggregatesFilter<"RackActivity"> | string | null
    gpsLocation?: StringNullableWithAggregatesFilter<"RackActivity"> | string | null
    timestamp?: DateTimeWithAggregatesFilter<"RackActivity"> | Date | string
    companyId?: StringWithAggregatesFilter<"RackActivity"> | string
  }

  export type ShipmentWhereInput = {
    AND?: ShipmentWhereInput | ShipmentWhereInput[]
    OR?: ShipmentWhereInput[]
    NOT?: ShipmentWhereInput | ShipmentWhereInput[]
    id?: StringFilter<"Shipment"> | string
    name?: StringFilter<"Shipment"> | string
    referenceId?: StringFilter<"Shipment"> | string
    originalBoxCount?: IntFilter<"Shipment"> | number
    currentBoxCount?: IntFilter<"Shipment"> | number
    type?: StringFilter<"Shipment"> | string
    arrivalDate?: DateTimeFilter<"Shipment"> | Date | string
    clientName?: StringNullableFilter<"Shipment"> | string | null
    clientPhone?: StringNullableFilter<"Shipment"> | string | null
    clientEmail?: StringNullableFilter<"Shipment"> | string | null
    description?: StringNullableFilter<"Shipment"> | string | null
    estimatedValue?: FloatNullableFilter<"Shipment"> | number | null
    notes?: StringNullableFilter<"Shipment"> | string | null
    qrCode?: StringFilter<"Shipment"> | string
    status?: StringFilter<"Shipment"> | string
    rackId?: StringNullableFilter<"Shipment"> | string | null
    assignedAt?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    releasedAt?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    storageCharge?: FloatNullableFilter<"Shipment"> | number | null
    companyId?: StringFilter<"Shipment"> | string
    createdById?: StringNullableFilter<"Shipment"> | string | null
    assignedById?: StringNullableFilter<"Shipment"> | string | null
    releasedById?: StringNullableFilter<"Shipment"> | string | null
    createdAt?: DateTimeFilter<"Shipment"> | Date | string
    updatedAt?: DateTimeFilter<"Shipment"> | Date | string
    isWarehouseShipment?: BoolFilter<"Shipment"> | boolean
    warehouseData?: StringNullableFilter<"Shipment"> | string | null
    shipper?: StringNullableFilter<"Shipment"> | string | null
    consignee?: StringNullableFilter<"Shipment"> | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    rack?: XOR<RackNullableRelationFilter, RackWhereInput> | null
    boxes?: ShipmentBoxListRelationFilter
    withdrawals?: WithdrawalListRelationFilter
    invoices?: InvoiceListRelationFilter
    charges?: XOR<ShipmentChargesNullableRelationFilter, ShipmentChargesWhereInput> | null
    createdBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    assignedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    releasedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type ShipmentOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    referenceId?: SortOrder
    originalBoxCount?: SortOrder
    currentBoxCount?: SortOrder
    type?: SortOrder
    arrivalDate?: SortOrder
    clientName?: SortOrderInput | SortOrder
    clientPhone?: SortOrderInput | SortOrder
    clientEmail?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    estimatedValue?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    qrCode?: SortOrder
    status?: SortOrder
    rackId?: SortOrderInput | SortOrder
    assignedAt?: SortOrderInput | SortOrder
    releasedAt?: SortOrderInput | SortOrder
    storageCharge?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    assignedById?: SortOrderInput | SortOrder
    releasedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isWarehouseShipment?: SortOrder
    warehouseData?: SortOrderInput | SortOrder
    shipper?: SortOrderInput | SortOrder
    consignee?: SortOrderInput | SortOrder
    company?: CompanyOrderByWithRelationInput
    rack?: RackOrderByWithRelationInput
    boxes?: ShipmentBoxOrderByRelationAggregateInput
    withdrawals?: WithdrawalOrderByRelationAggregateInput
    invoices?: InvoiceOrderByRelationAggregateInput
    charges?: ShipmentChargesOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    assignedBy?: UserOrderByWithRelationInput
    releasedBy?: UserOrderByWithRelationInput
  }

  export type ShipmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    qrCode?: string
    AND?: ShipmentWhereInput | ShipmentWhereInput[]
    OR?: ShipmentWhereInput[]
    NOT?: ShipmentWhereInput | ShipmentWhereInput[]
    name?: StringFilter<"Shipment"> | string
    referenceId?: StringFilter<"Shipment"> | string
    originalBoxCount?: IntFilter<"Shipment"> | number
    currentBoxCount?: IntFilter<"Shipment"> | number
    type?: StringFilter<"Shipment"> | string
    arrivalDate?: DateTimeFilter<"Shipment"> | Date | string
    clientName?: StringNullableFilter<"Shipment"> | string | null
    clientPhone?: StringNullableFilter<"Shipment"> | string | null
    clientEmail?: StringNullableFilter<"Shipment"> | string | null
    description?: StringNullableFilter<"Shipment"> | string | null
    estimatedValue?: FloatNullableFilter<"Shipment"> | number | null
    notes?: StringNullableFilter<"Shipment"> | string | null
    status?: StringFilter<"Shipment"> | string
    rackId?: StringNullableFilter<"Shipment"> | string | null
    assignedAt?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    releasedAt?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    storageCharge?: FloatNullableFilter<"Shipment"> | number | null
    companyId?: StringFilter<"Shipment"> | string
    createdById?: StringNullableFilter<"Shipment"> | string | null
    assignedById?: StringNullableFilter<"Shipment"> | string | null
    releasedById?: StringNullableFilter<"Shipment"> | string | null
    createdAt?: DateTimeFilter<"Shipment"> | Date | string
    updatedAt?: DateTimeFilter<"Shipment"> | Date | string
    isWarehouseShipment?: BoolFilter<"Shipment"> | boolean
    warehouseData?: StringNullableFilter<"Shipment"> | string | null
    shipper?: StringNullableFilter<"Shipment"> | string | null
    consignee?: StringNullableFilter<"Shipment"> | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    rack?: XOR<RackNullableRelationFilter, RackWhereInput> | null
    boxes?: ShipmentBoxListRelationFilter
    withdrawals?: WithdrawalListRelationFilter
    invoices?: InvoiceListRelationFilter
    charges?: XOR<ShipmentChargesNullableRelationFilter, ShipmentChargesWhereInput> | null
    createdBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    assignedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    releasedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id" | "qrCode">

  export type ShipmentOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    referenceId?: SortOrder
    originalBoxCount?: SortOrder
    currentBoxCount?: SortOrder
    type?: SortOrder
    arrivalDate?: SortOrder
    clientName?: SortOrderInput | SortOrder
    clientPhone?: SortOrderInput | SortOrder
    clientEmail?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    estimatedValue?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    qrCode?: SortOrder
    status?: SortOrder
    rackId?: SortOrderInput | SortOrder
    assignedAt?: SortOrderInput | SortOrder
    releasedAt?: SortOrderInput | SortOrder
    storageCharge?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    assignedById?: SortOrderInput | SortOrder
    releasedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isWarehouseShipment?: SortOrder
    warehouseData?: SortOrderInput | SortOrder
    shipper?: SortOrderInput | SortOrder
    consignee?: SortOrderInput | SortOrder
    _count?: ShipmentCountOrderByAggregateInput
    _avg?: ShipmentAvgOrderByAggregateInput
    _max?: ShipmentMaxOrderByAggregateInput
    _min?: ShipmentMinOrderByAggregateInput
    _sum?: ShipmentSumOrderByAggregateInput
  }

  export type ShipmentScalarWhereWithAggregatesInput = {
    AND?: ShipmentScalarWhereWithAggregatesInput | ShipmentScalarWhereWithAggregatesInput[]
    OR?: ShipmentScalarWhereWithAggregatesInput[]
    NOT?: ShipmentScalarWhereWithAggregatesInput | ShipmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Shipment"> | string
    name?: StringWithAggregatesFilter<"Shipment"> | string
    referenceId?: StringWithAggregatesFilter<"Shipment"> | string
    originalBoxCount?: IntWithAggregatesFilter<"Shipment"> | number
    currentBoxCount?: IntWithAggregatesFilter<"Shipment"> | number
    type?: StringWithAggregatesFilter<"Shipment"> | string
    arrivalDate?: DateTimeWithAggregatesFilter<"Shipment"> | Date | string
    clientName?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    clientPhone?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    clientEmail?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    description?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    estimatedValue?: FloatNullableWithAggregatesFilter<"Shipment"> | number | null
    notes?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    qrCode?: StringWithAggregatesFilter<"Shipment"> | string
    status?: StringWithAggregatesFilter<"Shipment"> | string
    rackId?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    assignedAt?: DateTimeNullableWithAggregatesFilter<"Shipment"> | Date | string | null
    releasedAt?: DateTimeNullableWithAggregatesFilter<"Shipment"> | Date | string | null
    storageCharge?: FloatNullableWithAggregatesFilter<"Shipment"> | number | null
    companyId?: StringWithAggregatesFilter<"Shipment"> | string
    createdById?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    assignedById?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    releasedById?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Shipment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Shipment"> | Date | string
    isWarehouseShipment?: BoolWithAggregatesFilter<"Shipment"> | boolean
    warehouseData?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    shipper?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
    consignee?: StringNullableWithAggregatesFilter<"Shipment"> | string | null
  }

  export type ShipmentBoxWhereInput = {
    AND?: ShipmentBoxWhereInput | ShipmentBoxWhereInput[]
    OR?: ShipmentBoxWhereInput[]
    NOT?: ShipmentBoxWhereInput | ShipmentBoxWhereInput[]
    id?: StringFilter<"ShipmentBox"> | string
    shipmentId?: StringFilter<"ShipmentBox"> | string
    boxNumber?: IntFilter<"ShipmentBox"> | number
    qrCode?: StringFilter<"ShipmentBox"> | string
    rackId?: StringNullableFilter<"ShipmentBox"> | string | null
    status?: StringFilter<"ShipmentBox"> | string
    assignedAt?: DateTimeNullableFilter<"ShipmentBox"> | Date | string | null
    releasedAt?: DateTimeNullableFilter<"ShipmentBox"> | Date | string | null
    companyId?: StringFilter<"ShipmentBox"> | string
    createdAt?: DateTimeFilter<"ShipmentBox"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentBox"> | Date | string
    pieceWeight?: FloatNullableFilter<"ShipmentBox"> | number | null
    pieceQR?: StringNullableFilter<"ShipmentBox"> | string | null
    shipment?: XOR<ShipmentRelationFilter, ShipmentWhereInput>
    rack?: XOR<RackNullableRelationFilter, RackWhereInput> | null
  }

  export type ShipmentBoxOrderByWithRelationInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    boxNumber?: SortOrder
    qrCode?: SortOrder
    rackId?: SortOrderInput | SortOrder
    status?: SortOrder
    assignedAt?: SortOrderInput | SortOrder
    releasedAt?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    pieceWeight?: SortOrderInput | SortOrder
    pieceQR?: SortOrderInput | SortOrder
    shipment?: ShipmentOrderByWithRelationInput
    rack?: RackOrderByWithRelationInput
  }

  export type ShipmentBoxWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    qrCode?: string
    shipmentId_boxNumber?: ShipmentBoxShipmentIdBoxNumberCompoundUniqueInput
    AND?: ShipmentBoxWhereInput | ShipmentBoxWhereInput[]
    OR?: ShipmentBoxWhereInput[]
    NOT?: ShipmentBoxWhereInput | ShipmentBoxWhereInput[]
    shipmentId?: StringFilter<"ShipmentBox"> | string
    boxNumber?: IntFilter<"ShipmentBox"> | number
    rackId?: StringNullableFilter<"ShipmentBox"> | string | null
    status?: StringFilter<"ShipmentBox"> | string
    assignedAt?: DateTimeNullableFilter<"ShipmentBox"> | Date | string | null
    releasedAt?: DateTimeNullableFilter<"ShipmentBox"> | Date | string | null
    companyId?: StringFilter<"ShipmentBox"> | string
    createdAt?: DateTimeFilter<"ShipmentBox"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentBox"> | Date | string
    pieceWeight?: FloatNullableFilter<"ShipmentBox"> | number | null
    pieceQR?: StringNullableFilter<"ShipmentBox"> | string | null
    shipment?: XOR<ShipmentRelationFilter, ShipmentWhereInput>
    rack?: XOR<RackNullableRelationFilter, RackWhereInput> | null
  }, "id" | "qrCode" | "shipmentId_boxNumber">

  export type ShipmentBoxOrderByWithAggregationInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    boxNumber?: SortOrder
    qrCode?: SortOrder
    rackId?: SortOrderInput | SortOrder
    status?: SortOrder
    assignedAt?: SortOrderInput | SortOrder
    releasedAt?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    pieceWeight?: SortOrderInput | SortOrder
    pieceQR?: SortOrderInput | SortOrder
    _count?: ShipmentBoxCountOrderByAggregateInput
    _avg?: ShipmentBoxAvgOrderByAggregateInput
    _max?: ShipmentBoxMaxOrderByAggregateInput
    _min?: ShipmentBoxMinOrderByAggregateInput
    _sum?: ShipmentBoxSumOrderByAggregateInput
  }

  export type ShipmentBoxScalarWhereWithAggregatesInput = {
    AND?: ShipmentBoxScalarWhereWithAggregatesInput | ShipmentBoxScalarWhereWithAggregatesInput[]
    OR?: ShipmentBoxScalarWhereWithAggregatesInput[]
    NOT?: ShipmentBoxScalarWhereWithAggregatesInput | ShipmentBoxScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ShipmentBox"> | string
    shipmentId?: StringWithAggregatesFilter<"ShipmentBox"> | string
    boxNumber?: IntWithAggregatesFilter<"ShipmentBox"> | number
    qrCode?: StringWithAggregatesFilter<"ShipmentBox"> | string
    rackId?: StringNullableWithAggregatesFilter<"ShipmentBox"> | string | null
    status?: StringWithAggregatesFilter<"ShipmentBox"> | string
    assignedAt?: DateTimeNullableWithAggregatesFilter<"ShipmentBox"> | Date | string | null
    releasedAt?: DateTimeNullableWithAggregatesFilter<"ShipmentBox"> | Date | string | null
    companyId?: StringWithAggregatesFilter<"ShipmentBox"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ShipmentBox"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ShipmentBox"> | Date | string
    pieceWeight?: FloatNullableWithAggregatesFilter<"ShipmentBox"> | number | null
    pieceQR?: StringNullableWithAggregatesFilter<"ShipmentBox"> | string | null
  }

  export type WithdrawalWhereInput = {
    AND?: WithdrawalWhereInput | WithdrawalWhereInput[]
    OR?: WithdrawalWhereInput[]
    NOT?: WithdrawalWhereInput | WithdrawalWhereInput[]
    id?: StringFilter<"Withdrawal"> | string
    shipmentId?: StringFilter<"Withdrawal"> | string
    withdrawnBoxCount?: IntFilter<"Withdrawal"> | number
    remainingBoxCount?: IntFilter<"Withdrawal"> | number
    withdrawalDate?: DateTimeFilter<"Withdrawal"> | Date | string
    status?: StringFilter<"Withdrawal"> | string
    reason?: StringNullableFilter<"Withdrawal"> | string | null
    notes?: StringNullableFilter<"Withdrawal"> | string | null
    photos?: StringNullableFilter<"Withdrawal"> | string | null
    receiptNumber?: StringNullableFilter<"Withdrawal"> | string | null
    withdrawnBy?: StringFilter<"Withdrawal"> | string
    authorizedBy?: StringNullableFilter<"Withdrawal"> | string | null
    companyId?: StringFilter<"Withdrawal"> | string
    createdAt?: DateTimeFilter<"Withdrawal"> | Date | string
    updatedAt?: DateTimeFilter<"Withdrawal"> | Date | string
    shipment?: XOR<ShipmentRelationFilter, ShipmentWhereInput>
  }

  export type WithdrawalOrderByWithRelationInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    withdrawnBoxCount?: SortOrder
    remainingBoxCount?: SortOrder
    withdrawalDate?: SortOrder
    status?: SortOrder
    reason?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    photos?: SortOrderInput | SortOrder
    receiptNumber?: SortOrderInput | SortOrder
    withdrawnBy?: SortOrder
    authorizedBy?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    shipment?: ShipmentOrderByWithRelationInput
  }

  export type WithdrawalWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: WithdrawalWhereInput | WithdrawalWhereInput[]
    OR?: WithdrawalWhereInput[]
    NOT?: WithdrawalWhereInput | WithdrawalWhereInput[]
    shipmentId?: StringFilter<"Withdrawal"> | string
    withdrawnBoxCount?: IntFilter<"Withdrawal"> | number
    remainingBoxCount?: IntFilter<"Withdrawal"> | number
    withdrawalDate?: DateTimeFilter<"Withdrawal"> | Date | string
    status?: StringFilter<"Withdrawal"> | string
    reason?: StringNullableFilter<"Withdrawal"> | string | null
    notes?: StringNullableFilter<"Withdrawal"> | string | null
    photos?: StringNullableFilter<"Withdrawal"> | string | null
    receiptNumber?: StringNullableFilter<"Withdrawal"> | string | null
    withdrawnBy?: StringFilter<"Withdrawal"> | string
    authorizedBy?: StringNullableFilter<"Withdrawal"> | string | null
    companyId?: StringFilter<"Withdrawal"> | string
    createdAt?: DateTimeFilter<"Withdrawal"> | Date | string
    updatedAt?: DateTimeFilter<"Withdrawal"> | Date | string
    shipment?: XOR<ShipmentRelationFilter, ShipmentWhereInput>
  }, "id">

  export type WithdrawalOrderByWithAggregationInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    withdrawnBoxCount?: SortOrder
    remainingBoxCount?: SortOrder
    withdrawalDate?: SortOrder
    status?: SortOrder
    reason?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    photos?: SortOrderInput | SortOrder
    receiptNumber?: SortOrderInput | SortOrder
    withdrawnBy?: SortOrder
    authorizedBy?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: WithdrawalCountOrderByAggregateInput
    _avg?: WithdrawalAvgOrderByAggregateInput
    _max?: WithdrawalMaxOrderByAggregateInput
    _min?: WithdrawalMinOrderByAggregateInput
    _sum?: WithdrawalSumOrderByAggregateInput
  }

  export type WithdrawalScalarWhereWithAggregatesInput = {
    AND?: WithdrawalScalarWhereWithAggregatesInput | WithdrawalScalarWhereWithAggregatesInput[]
    OR?: WithdrawalScalarWhereWithAggregatesInput[]
    NOT?: WithdrawalScalarWhereWithAggregatesInput | WithdrawalScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Withdrawal"> | string
    shipmentId?: StringWithAggregatesFilter<"Withdrawal"> | string
    withdrawnBoxCount?: IntWithAggregatesFilter<"Withdrawal"> | number
    remainingBoxCount?: IntWithAggregatesFilter<"Withdrawal"> | number
    withdrawalDate?: DateTimeWithAggregatesFilter<"Withdrawal"> | Date | string
    status?: StringWithAggregatesFilter<"Withdrawal"> | string
    reason?: StringNullableWithAggregatesFilter<"Withdrawal"> | string | null
    notes?: StringNullableWithAggregatesFilter<"Withdrawal"> | string | null
    photos?: StringNullableWithAggregatesFilter<"Withdrawal"> | string | null
    receiptNumber?: StringNullableWithAggregatesFilter<"Withdrawal"> | string | null
    withdrawnBy?: StringWithAggregatesFilter<"Withdrawal"> | string
    authorizedBy?: StringNullableWithAggregatesFilter<"Withdrawal"> | string | null
    companyId?: StringWithAggregatesFilter<"Withdrawal"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Withdrawal"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Withdrawal"> | Date | string
  }

  export type ExpenseWhereInput = {
    AND?: ExpenseWhereInput | ExpenseWhereInput[]
    OR?: ExpenseWhereInput[]
    NOT?: ExpenseWhereInput | ExpenseWhereInput[]
    id?: StringFilter<"Expense"> | string
    title?: StringFilter<"Expense"> | string
    category?: StringFilter<"Expense"> | string
    amount?: FloatFilter<"Expense"> | number
    currency?: StringFilter<"Expense"> | string
    description?: StringNullableFilter<"Expense"> | string | null
    receipts?: StringNullableFilter<"Expense"> | string | null
    expenseDate?: DateTimeFilter<"Expense"> | Date | string
    approvedBy?: StringNullableFilter<"Expense"> | string | null
    status?: StringFilter<"Expense"> | string
    companyId?: StringFilter<"Expense"> | string
    createdAt?: DateTimeFilter<"Expense"> | Date | string
    updatedAt?: DateTimeFilter<"Expense"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type ExpenseOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    description?: SortOrderInput | SortOrder
    receipts?: SortOrderInput | SortOrder
    expenseDate?: SortOrder
    approvedBy?: SortOrderInput | SortOrder
    status?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
  }

  export type ExpenseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ExpenseWhereInput | ExpenseWhereInput[]
    OR?: ExpenseWhereInput[]
    NOT?: ExpenseWhereInput | ExpenseWhereInput[]
    title?: StringFilter<"Expense"> | string
    category?: StringFilter<"Expense"> | string
    amount?: FloatFilter<"Expense"> | number
    currency?: StringFilter<"Expense"> | string
    description?: StringNullableFilter<"Expense"> | string | null
    receipts?: StringNullableFilter<"Expense"> | string | null
    expenseDate?: DateTimeFilter<"Expense"> | Date | string
    approvedBy?: StringNullableFilter<"Expense"> | string | null
    status?: StringFilter<"Expense"> | string
    companyId?: StringFilter<"Expense"> | string
    createdAt?: DateTimeFilter<"Expense"> | Date | string
    updatedAt?: DateTimeFilter<"Expense"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type ExpenseOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    description?: SortOrderInput | SortOrder
    receipts?: SortOrderInput | SortOrder
    expenseDate?: SortOrder
    approvedBy?: SortOrderInput | SortOrder
    status?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ExpenseCountOrderByAggregateInput
    _avg?: ExpenseAvgOrderByAggregateInput
    _max?: ExpenseMaxOrderByAggregateInput
    _min?: ExpenseMinOrderByAggregateInput
    _sum?: ExpenseSumOrderByAggregateInput
  }

  export type ExpenseScalarWhereWithAggregatesInput = {
    AND?: ExpenseScalarWhereWithAggregatesInput | ExpenseScalarWhereWithAggregatesInput[]
    OR?: ExpenseScalarWhereWithAggregatesInput[]
    NOT?: ExpenseScalarWhereWithAggregatesInput | ExpenseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Expense"> | string
    title?: StringWithAggregatesFilter<"Expense"> | string
    category?: StringWithAggregatesFilter<"Expense"> | string
    amount?: FloatWithAggregatesFilter<"Expense"> | number
    currency?: StringWithAggregatesFilter<"Expense"> | string
    description?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    receipts?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    expenseDate?: DateTimeWithAggregatesFilter<"Expense"> | Date | string
    approvedBy?: StringNullableWithAggregatesFilter<"Expense"> | string | null
    status?: StringWithAggregatesFilter<"Expense"> | string
    companyId?: StringWithAggregatesFilter<"Expense"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Expense"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Expense"> | Date | string
  }

  export type InvoiceSettingsWhereInput = {
    AND?: InvoiceSettingsWhereInput | InvoiceSettingsWhereInput[]
    OR?: InvoiceSettingsWhereInput[]
    NOT?: InvoiceSettingsWhereInput | InvoiceSettingsWhereInput[]
    id?: StringFilter<"InvoiceSettings"> | string
    companyId?: StringFilter<"InvoiceSettings"> | string
    templateType?: StringFilter<"InvoiceSettings"> | string
    primaryColor?: StringFilter<"InvoiceSettings"> | string
    secondaryColor?: StringFilter<"InvoiceSettings"> | string
    showLogo?: BoolFilter<"InvoiceSettings"> | boolean
    footerText?: StringNullableFilter<"InvoiceSettings"> | string | null
    termsConditions?: StringNullableFilter<"InvoiceSettings"> | string | null
    createdAt?: DateTimeFilter<"InvoiceSettings"> | Date | string
    updatedAt?: DateTimeFilter<"InvoiceSettings"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type InvoiceSettingsOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    templateType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    showLogo?: SortOrder
    footerText?: SortOrderInput | SortOrder
    termsConditions?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
  }

  export type InvoiceSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    companyId?: string
    AND?: InvoiceSettingsWhereInput | InvoiceSettingsWhereInput[]
    OR?: InvoiceSettingsWhereInput[]
    NOT?: InvoiceSettingsWhereInput | InvoiceSettingsWhereInput[]
    templateType?: StringFilter<"InvoiceSettings"> | string
    primaryColor?: StringFilter<"InvoiceSettings"> | string
    secondaryColor?: StringFilter<"InvoiceSettings"> | string
    showLogo?: BoolFilter<"InvoiceSettings"> | boolean
    footerText?: StringNullableFilter<"InvoiceSettings"> | string | null
    termsConditions?: StringNullableFilter<"InvoiceSettings"> | string | null
    createdAt?: DateTimeFilter<"InvoiceSettings"> | Date | string
    updatedAt?: DateTimeFilter<"InvoiceSettings"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id" | "companyId">

  export type InvoiceSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    templateType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    showLogo?: SortOrder
    footerText?: SortOrderInput | SortOrder
    termsConditions?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InvoiceSettingsCountOrderByAggregateInput
    _max?: InvoiceSettingsMaxOrderByAggregateInput
    _min?: InvoiceSettingsMinOrderByAggregateInput
  }

  export type InvoiceSettingsScalarWhereWithAggregatesInput = {
    AND?: InvoiceSettingsScalarWhereWithAggregatesInput | InvoiceSettingsScalarWhereWithAggregatesInput[]
    OR?: InvoiceSettingsScalarWhereWithAggregatesInput[]
    NOT?: InvoiceSettingsScalarWhereWithAggregatesInput | InvoiceSettingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InvoiceSettings"> | string
    companyId?: StringWithAggregatesFilter<"InvoiceSettings"> | string
    templateType?: StringWithAggregatesFilter<"InvoiceSettings"> | string
    primaryColor?: StringWithAggregatesFilter<"InvoiceSettings"> | string
    secondaryColor?: StringWithAggregatesFilter<"InvoiceSettings"> | string
    showLogo?: BoolWithAggregatesFilter<"InvoiceSettings"> | boolean
    footerText?: StringNullableWithAggregatesFilter<"InvoiceSettings"> | string | null
    termsConditions?: StringNullableWithAggregatesFilter<"InvoiceSettings"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"InvoiceSettings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"InvoiceSettings"> | Date | string
  }

  export type BillingSettingsWhereInput = {
    AND?: BillingSettingsWhereInput | BillingSettingsWhereInput[]
    OR?: BillingSettingsWhereInput[]
    NOT?: BillingSettingsWhereInput | BillingSettingsWhereInput[]
    id?: StringFilter<"BillingSettings"> | string
    companyId?: StringFilter<"BillingSettings"> | string
    storageRateType?: StringFilter<"BillingSettings"> | string
    storageRatePerBox?: FloatFilter<"BillingSettings"> | number
    storageRatePerWeek?: FloatNullableFilter<"BillingSettings"> | number | null
    storageRatePerMonth?: FloatNullableFilter<"BillingSettings"> | number | null
    taxEnabled?: BoolFilter<"BillingSettings"> | boolean
    taxRate?: FloatFilter<"BillingSettings"> | number
    currency?: StringFilter<"BillingSettings"> | string
    invoicePrefix?: StringFilter<"BillingSettings"> | string
    invoiceDueDays?: IntFilter<"BillingSettings"> | number
    gracePeriodDays?: IntFilter<"BillingSettings"> | number
    minimumCharge?: FloatFilter<"BillingSettings"> | number
    logoUrl?: StringNullableFilter<"BillingSettings"> | string | null
    logoPosition?: StringFilter<"BillingSettings"> | string
    primaryColor?: StringFilter<"BillingSettings"> | string
    secondaryColor?: StringFilter<"BillingSettings"> | string
    showCompanyDetails?: BoolFilter<"BillingSettings"> | boolean
    showBankDetails?: BoolFilter<"BillingSettings"> | boolean
    showTermsConditions?: BoolFilter<"BillingSettings"> | boolean
    bankName?: StringNullableFilter<"BillingSettings"> | string | null
    accountNumber?: StringNullableFilter<"BillingSettings"> | string | null
    accountName?: StringNullableFilter<"BillingSettings"> | string | null
    iban?: StringNullableFilter<"BillingSettings"> | string | null
    swiftCode?: StringNullableFilter<"BillingSettings"> | string | null
    invoiceFooterText?: StringNullableFilter<"BillingSettings"> | string | null
    termsAndConditions?: StringNullableFilter<"BillingSettings"> | string | null
    paymentInstructions?: StringNullableFilter<"BillingSettings"> | string | null
    taxRegistrationNo?: StringNullableFilter<"BillingSettings"> | string | null
    companyRegistrationNo?: StringNullableFilter<"BillingSettings"> | string | null
    createdAt?: DateTimeFilter<"BillingSettings"> | Date | string
    updatedAt?: DateTimeFilter<"BillingSettings"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    chargeTypes?: ChargeTypeListRelationFilter
  }

  export type BillingSettingsOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    storageRateType?: SortOrder
    storageRatePerBox?: SortOrder
    storageRatePerWeek?: SortOrderInput | SortOrder
    storageRatePerMonth?: SortOrderInput | SortOrder
    taxEnabled?: SortOrder
    taxRate?: SortOrder
    currency?: SortOrder
    invoicePrefix?: SortOrder
    invoiceDueDays?: SortOrder
    gracePeriodDays?: SortOrder
    minimumCharge?: SortOrder
    logoUrl?: SortOrderInput | SortOrder
    logoPosition?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    showCompanyDetails?: SortOrder
    showBankDetails?: SortOrder
    showTermsConditions?: SortOrder
    bankName?: SortOrderInput | SortOrder
    accountNumber?: SortOrderInput | SortOrder
    accountName?: SortOrderInput | SortOrder
    iban?: SortOrderInput | SortOrder
    swiftCode?: SortOrderInput | SortOrder
    invoiceFooterText?: SortOrderInput | SortOrder
    termsAndConditions?: SortOrderInput | SortOrder
    paymentInstructions?: SortOrderInput | SortOrder
    taxRegistrationNo?: SortOrderInput | SortOrder
    companyRegistrationNo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    chargeTypes?: ChargeTypeOrderByRelationAggregateInput
  }

  export type BillingSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    companyId?: string
    AND?: BillingSettingsWhereInput | BillingSettingsWhereInput[]
    OR?: BillingSettingsWhereInput[]
    NOT?: BillingSettingsWhereInput | BillingSettingsWhereInput[]
    storageRateType?: StringFilter<"BillingSettings"> | string
    storageRatePerBox?: FloatFilter<"BillingSettings"> | number
    storageRatePerWeek?: FloatNullableFilter<"BillingSettings"> | number | null
    storageRatePerMonth?: FloatNullableFilter<"BillingSettings"> | number | null
    taxEnabled?: BoolFilter<"BillingSettings"> | boolean
    taxRate?: FloatFilter<"BillingSettings"> | number
    currency?: StringFilter<"BillingSettings"> | string
    invoicePrefix?: StringFilter<"BillingSettings"> | string
    invoiceDueDays?: IntFilter<"BillingSettings"> | number
    gracePeriodDays?: IntFilter<"BillingSettings"> | number
    minimumCharge?: FloatFilter<"BillingSettings"> | number
    logoUrl?: StringNullableFilter<"BillingSettings"> | string | null
    logoPosition?: StringFilter<"BillingSettings"> | string
    primaryColor?: StringFilter<"BillingSettings"> | string
    secondaryColor?: StringFilter<"BillingSettings"> | string
    showCompanyDetails?: BoolFilter<"BillingSettings"> | boolean
    showBankDetails?: BoolFilter<"BillingSettings"> | boolean
    showTermsConditions?: BoolFilter<"BillingSettings"> | boolean
    bankName?: StringNullableFilter<"BillingSettings"> | string | null
    accountNumber?: StringNullableFilter<"BillingSettings"> | string | null
    accountName?: StringNullableFilter<"BillingSettings"> | string | null
    iban?: StringNullableFilter<"BillingSettings"> | string | null
    swiftCode?: StringNullableFilter<"BillingSettings"> | string | null
    invoiceFooterText?: StringNullableFilter<"BillingSettings"> | string | null
    termsAndConditions?: StringNullableFilter<"BillingSettings"> | string | null
    paymentInstructions?: StringNullableFilter<"BillingSettings"> | string | null
    taxRegistrationNo?: StringNullableFilter<"BillingSettings"> | string | null
    companyRegistrationNo?: StringNullableFilter<"BillingSettings"> | string | null
    createdAt?: DateTimeFilter<"BillingSettings"> | Date | string
    updatedAt?: DateTimeFilter<"BillingSettings"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    chargeTypes?: ChargeTypeListRelationFilter
  }, "id" | "companyId">

  export type BillingSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    storageRateType?: SortOrder
    storageRatePerBox?: SortOrder
    storageRatePerWeek?: SortOrderInput | SortOrder
    storageRatePerMonth?: SortOrderInput | SortOrder
    taxEnabled?: SortOrder
    taxRate?: SortOrder
    currency?: SortOrder
    invoicePrefix?: SortOrder
    invoiceDueDays?: SortOrder
    gracePeriodDays?: SortOrder
    minimumCharge?: SortOrder
    logoUrl?: SortOrderInput | SortOrder
    logoPosition?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    showCompanyDetails?: SortOrder
    showBankDetails?: SortOrder
    showTermsConditions?: SortOrder
    bankName?: SortOrderInput | SortOrder
    accountNumber?: SortOrderInput | SortOrder
    accountName?: SortOrderInput | SortOrder
    iban?: SortOrderInput | SortOrder
    swiftCode?: SortOrderInput | SortOrder
    invoiceFooterText?: SortOrderInput | SortOrder
    termsAndConditions?: SortOrderInput | SortOrder
    paymentInstructions?: SortOrderInput | SortOrder
    taxRegistrationNo?: SortOrderInput | SortOrder
    companyRegistrationNo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BillingSettingsCountOrderByAggregateInput
    _avg?: BillingSettingsAvgOrderByAggregateInput
    _max?: BillingSettingsMaxOrderByAggregateInput
    _min?: BillingSettingsMinOrderByAggregateInput
    _sum?: BillingSettingsSumOrderByAggregateInput
  }

  export type BillingSettingsScalarWhereWithAggregatesInput = {
    AND?: BillingSettingsScalarWhereWithAggregatesInput | BillingSettingsScalarWhereWithAggregatesInput[]
    OR?: BillingSettingsScalarWhereWithAggregatesInput[]
    NOT?: BillingSettingsScalarWhereWithAggregatesInput | BillingSettingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BillingSettings"> | string
    companyId?: StringWithAggregatesFilter<"BillingSettings"> | string
    storageRateType?: StringWithAggregatesFilter<"BillingSettings"> | string
    storageRatePerBox?: FloatWithAggregatesFilter<"BillingSettings"> | number
    storageRatePerWeek?: FloatNullableWithAggregatesFilter<"BillingSettings"> | number | null
    storageRatePerMonth?: FloatNullableWithAggregatesFilter<"BillingSettings"> | number | null
    taxEnabled?: BoolWithAggregatesFilter<"BillingSettings"> | boolean
    taxRate?: FloatWithAggregatesFilter<"BillingSettings"> | number
    currency?: StringWithAggregatesFilter<"BillingSettings"> | string
    invoicePrefix?: StringWithAggregatesFilter<"BillingSettings"> | string
    invoiceDueDays?: IntWithAggregatesFilter<"BillingSettings"> | number
    gracePeriodDays?: IntWithAggregatesFilter<"BillingSettings"> | number
    minimumCharge?: FloatWithAggregatesFilter<"BillingSettings"> | number
    logoUrl?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    logoPosition?: StringWithAggregatesFilter<"BillingSettings"> | string
    primaryColor?: StringWithAggregatesFilter<"BillingSettings"> | string
    secondaryColor?: StringWithAggregatesFilter<"BillingSettings"> | string
    showCompanyDetails?: BoolWithAggregatesFilter<"BillingSettings"> | boolean
    showBankDetails?: BoolWithAggregatesFilter<"BillingSettings"> | boolean
    showTermsConditions?: BoolWithAggregatesFilter<"BillingSettings"> | boolean
    bankName?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    accountNumber?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    accountName?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    iban?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    swiftCode?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    invoiceFooterText?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    termsAndConditions?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    paymentInstructions?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    taxRegistrationNo?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    companyRegistrationNo?: StringNullableWithAggregatesFilter<"BillingSettings"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"BillingSettings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BillingSettings"> | Date | string
  }

  export type ChargeTypeWhereInput = {
    AND?: ChargeTypeWhereInput | ChargeTypeWhereInput[]
    OR?: ChargeTypeWhereInput[]
    NOT?: ChargeTypeWhereInput | ChargeTypeWhereInput[]
    id?: StringFilter<"ChargeType"> | string
    companyId?: StringFilter<"ChargeType"> | string
    billingSettingsId?: StringFilter<"ChargeType"> | string
    name?: StringFilter<"ChargeType"> | string
    code?: StringFilter<"ChargeType"> | string
    description?: StringNullableFilter<"ChargeType"> | string | null
    category?: StringFilter<"ChargeType"> | string
    calculationType?: StringFilter<"ChargeType"> | string
    rate?: FloatFilter<"ChargeType"> | number
    minCharge?: FloatNullableFilter<"ChargeType"> | number | null
    maxCharge?: FloatNullableFilter<"ChargeType"> | number | null
    applyOnRelease?: BoolFilter<"ChargeType"> | boolean
    applyOnStorage?: BoolFilter<"ChargeType"> | boolean
    isTaxable?: BoolFilter<"ChargeType"> | boolean
    isActive?: BoolFilter<"ChargeType"> | boolean
    isDefault?: BoolFilter<"ChargeType"> | boolean
    displayOrder?: IntFilter<"ChargeType"> | number
    createdAt?: DateTimeFilter<"ChargeType"> | Date | string
    updatedAt?: DateTimeFilter<"ChargeType"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    billingSettings?: XOR<BillingSettingsRelationFilter, BillingSettingsWhereInput>
  }

  export type ChargeTypeOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    billingSettingsId?: SortOrder
    name?: SortOrder
    code?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrder
    calculationType?: SortOrder
    rate?: SortOrder
    minCharge?: SortOrderInput | SortOrder
    maxCharge?: SortOrderInput | SortOrder
    applyOnRelease?: SortOrder
    applyOnStorage?: SortOrder
    isTaxable?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    billingSettings?: BillingSettingsOrderByWithRelationInput
  }

  export type ChargeTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    companyId_code?: ChargeTypeCompanyIdCodeCompoundUniqueInput
    AND?: ChargeTypeWhereInput | ChargeTypeWhereInput[]
    OR?: ChargeTypeWhereInput[]
    NOT?: ChargeTypeWhereInput | ChargeTypeWhereInput[]
    companyId?: StringFilter<"ChargeType"> | string
    billingSettingsId?: StringFilter<"ChargeType"> | string
    name?: StringFilter<"ChargeType"> | string
    code?: StringFilter<"ChargeType"> | string
    description?: StringNullableFilter<"ChargeType"> | string | null
    category?: StringFilter<"ChargeType"> | string
    calculationType?: StringFilter<"ChargeType"> | string
    rate?: FloatFilter<"ChargeType"> | number
    minCharge?: FloatNullableFilter<"ChargeType"> | number | null
    maxCharge?: FloatNullableFilter<"ChargeType"> | number | null
    applyOnRelease?: BoolFilter<"ChargeType"> | boolean
    applyOnStorage?: BoolFilter<"ChargeType"> | boolean
    isTaxable?: BoolFilter<"ChargeType"> | boolean
    isActive?: BoolFilter<"ChargeType"> | boolean
    isDefault?: BoolFilter<"ChargeType"> | boolean
    displayOrder?: IntFilter<"ChargeType"> | number
    createdAt?: DateTimeFilter<"ChargeType"> | Date | string
    updatedAt?: DateTimeFilter<"ChargeType"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    billingSettings?: XOR<BillingSettingsRelationFilter, BillingSettingsWhereInput>
  }, "id" | "companyId_code">

  export type ChargeTypeOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    billingSettingsId?: SortOrder
    name?: SortOrder
    code?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrder
    calculationType?: SortOrder
    rate?: SortOrder
    minCharge?: SortOrderInput | SortOrder
    maxCharge?: SortOrderInput | SortOrder
    applyOnRelease?: SortOrder
    applyOnStorage?: SortOrder
    isTaxable?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ChargeTypeCountOrderByAggregateInput
    _avg?: ChargeTypeAvgOrderByAggregateInput
    _max?: ChargeTypeMaxOrderByAggregateInput
    _min?: ChargeTypeMinOrderByAggregateInput
    _sum?: ChargeTypeSumOrderByAggregateInput
  }

  export type ChargeTypeScalarWhereWithAggregatesInput = {
    AND?: ChargeTypeScalarWhereWithAggregatesInput | ChargeTypeScalarWhereWithAggregatesInput[]
    OR?: ChargeTypeScalarWhereWithAggregatesInput[]
    NOT?: ChargeTypeScalarWhereWithAggregatesInput | ChargeTypeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ChargeType"> | string
    companyId?: StringWithAggregatesFilter<"ChargeType"> | string
    billingSettingsId?: StringWithAggregatesFilter<"ChargeType"> | string
    name?: StringWithAggregatesFilter<"ChargeType"> | string
    code?: StringWithAggregatesFilter<"ChargeType"> | string
    description?: StringNullableWithAggregatesFilter<"ChargeType"> | string | null
    category?: StringWithAggregatesFilter<"ChargeType"> | string
    calculationType?: StringWithAggregatesFilter<"ChargeType"> | string
    rate?: FloatWithAggregatesFilter<"ChargeType"> | number
    minCharge?: FloatNullableWithAggregatesFilter<"ChargeType"> | number | null
    maxCharge?: FloatNullableWithAggregatesFilter<"ChargeType"> | number | null
    applyOnRelease?: BoolWithAggregatesFilter<"ChargeType"> | boolean
    applyOnStorage?: BoolWithAggregatesFilter<"ChargeType"> | boolean
    isTaxable?: BoolWithAggregatesFilter<"ChargeType"> | boolean
    isActive?: BoolWithAggregatesFilter<"ChargeType"> | boolean
    isDefault?: BoolWithAggregatesFilter<"ChargeType"> | boolean
    displayOrder?: IntWithAggregatesFilter<"ChargeType"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ChargeType"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ChargeType"> | Date | string
  }

  export type InvoiceWhereInput = {
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    id?: StringFilter<"Invoice"> | string
    invoiceNumber?: StringFilter<"Invoice"> | string
    companyId?: StringFilter<"Invoice"> | string
    shipmentId?: StringFilter<"Invoice"> | string
    clientName?: StringFilter<"Invoice"> | string
    clientPhone?: StringNullableFilter<"Invoice"> | string | null
    clientAddress?: StringNullableFilter<"Invoice"> | string | null
    invoiceDate?: DateTimeFilter<"Invoice"> | Date | string
    dueDate?: DateTimeFilter<"Invoice"> | Date | string
    invoiceType?: StringFilter<"Invoice"> | string
    isWarehouseInvoice?: BoolFilter<"Invoice"> | boolean
    warehouseData?: StringNullableFilter<"Invoice"> | string | null
    subtotal?: FloatFilter<"Invoice"> | number
    taxAmount?: FloatFilter<"Invoice"> | number
    discountAmount?: FloatFilter<"Invoice"> | number
    totalAmount?: FloatFilter<"Invoice"> | number
    paymentStatus?: StringFilter<"Invoice"> | string
    paidAmount?: FloatFilter<"Invoice"> | number
    balanceDue?: FloatFilter<"Invoice"> | number
    paymentDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    paymentMethod?: StringNullableFilter<"Invoice"> | string | null
    transactionRef?: StringNullableFilter<"Invoice"> | string | null
    notes?: StringNullableFilter<"Invoice"> | string | null
    termsAndConditions?: StringNullableFilter<"Invoice"> | string | null
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeFilter<"Invoice"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    shipment?: XOR<ShipmentRelationFilter, ShipmentWhereInput>
    lineItems?: InvoiceLineItemListRelationFilter
    payments?: PaymentListRelationFilter
  }

  export type InvoiceOrderByWithRelationInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    companyId?: SortOrder
    shipmentId?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrderInput | SortOrder
    clientAddress?: SortOrderInput | SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    invoiceType?: SortOrder
    isWarehouseInvoice?: SortOrder
    warehouseData?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    paymentStatus?: SortOrder
    paidAmount?: SortOrder
    balanceDue?: SortOrder
    paymentDate?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    transactionRef?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    termsAndConditions?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    shipment?: ShipmentOrderByWithRelationInput
    lineItems?: InvoiceLineItemOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
  }

  export type InvoiceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    invoiceNumber?: string
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    companyId?: StringFilter<"Invoice"> | string
    shipmentId?: StringFilter<"Invoice"> | string
    clientName?: StringFilter<"Invoice"> | string
    clientPhone?: StringNullableFilter<"Invoice"> | string | null
    clientAddress?: StringNullableFilter<"Invoice"> | string | null
    invoiceDate?: DateTimeFilter<"Invoice"> | Date | string
    dueDate?: DateTimeFilter<"Invoice"> | Date | string
    invoiceType?: StringFilter<"Invoice"> | string
    isWarehouseInvoice?: BoolFilter<"Invoice"> | boolean
    warehouseData?: StringNullableFilter<"Invoice"> | string | null
    subtotal?: FloatFilter<"Invoice"> | number
    taxAmount?: FloatFilter<"Invoice"> | number
    discountAmount?: FloatFilter<"Invoice"> | number
    totalAmount?: FloatFilter<"Invoice"> | number
    paymentStatus?: StringFilter<"Invoice"> | string
    paidAmount?: FloatFilter<"Invoice"> | number
    balanceDue?: FloatFilter<"Invoice"> | number
    paymentDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    paymentMethod?: StringNullableFilter<"Invoice"> | string | null
    transactionRef?: StringNullableFilter<"Invoice"> | string | null
    notes?: StringNullableFilter<"Invoice"> | string | null
    termsAndConditions?: StringNullableFilter<"Invoice"> | string | null
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeFilter<"Invoice"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    shipment?: XOR<ShipmentRelationFilter, ShipmentWhereInput>
    lineItems?: InvoiceLineItemListRelationFilter
    payments?: PaymentListRelationFilter
  }, "id" | "invoiceNumber">

  export type InvoiceOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    companyId?: SortOrder
    shipmentId?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrderInput | SortOrder
    clientAddress?: SortOrderInput | SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    invoiceType?: SortOrder
    isWarehouseInvoice?: SortOrder
    warehouseData?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    paymentStatus?: SortOrder
    paidAmount?: SortOrder
    balanceDue?: SortOrder
    paymentDate?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    transactionRef?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    termsAndConditions?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InvoiceCountOrderByAggregateInput
    _avg?: InvoiceAvgOrderByAggregateInput
    _max?: InvoiceMaxOrderByAggregateInput
    _min?: InvoiceMinOrderByAggregateInput
    _sum?: InvoiceSumOrderByAggregateInput
  }

  export type InvoiceScalarWhereWithAggregatesInput = {
    AND?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    OR?: InvoiceScalarWhereWithAggregatesInput[]
    NOT?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Invoice"> | string
    invoiceNumber?: StringWithAggregatesFilter<"Invoice"> | string
    companyId?: StringWithAggregatesFilter<"Invoice"> | string
    shipmentId?: StringWithAggregatesFilter<"Invoice"> | string
    clientName?: StringWithAggregatesFilter<"Invoice"> | string
    clientPhone?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    clientAddress?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    invoiceDate?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
    dueDate?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
    invoiceType?: StringWithAggregatesFilter<"Invoice"> | string
    isWarehouseInvoice?: BoolWithAggregatesFilter<"Invoice"> | boolean
    warehouseData?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    subtotal?: FloatWithAggregatesFilter<"Invoice"> | number
    taxAmount?: FloatWithAggregatesFilter<"Invoice"> | number
    discountAmount?: FloatWithAggregatesFilter<"Invoice"> | number
    totalAmount?: FloatWithAggregatesFilter<"Invoice"> | number
    paymentStatus?: StringWithAggregatesFilter<"Invoice"> | string
    paidAmount?: FloatWithAggregatesFilter<"Invoice"> | number
    balanceDue?: FloatWithAggregatesFilter<"Invoice"> | number
    paymentDate?: DateTimeNullableWithAggregatesFilter<"Invoice"> | Date | string | null
    paymentMethod?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    transactionRef?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    notes?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    termsAndConditions?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
  }

  export type InvoiceLineItemWhereInput = {
    AND?: InvoiceLineItemWhereInput | InvoiceLineItemWhereInput[]
    OR?: InvoiceLineItemWhereInput[]
    NOT?: InvoiceLineItemWhereInput | InvoiceLineItemWhereInput[]
    id?: StringFilter<"InvoiceLineItem"> | string
    invoiceId?: StringFilter<"InvoiceLineItem"> | string
    companyId?: StringFilter<"InvoiceLineItem"> | string
    chargeTypeId?: StringNullableFilter<"InvoiceLineItem"> | string | null
    description?: StringFilter<"InvoiceLineItem"> | string
    category?: StringFilter<"InvoiceLineItem"> | string
    quantity?: FloatFilter<"InvoiceLineItem"> | number
    unitPrice?: FloatFilter<"InvoiceLineItem"> | number
    amount?: FloatFilter<"InvoiceLineItem"> | number
    isTaxable?: BoolFilter<"InvoiceLineItem"> | boolean
    taxRate?: FloatNullableFilter<"InvoiceLineItem"> | number | null
    taxAmount?: FloatFilter<"InvoiceLineItem"> | number
    displayOrder?: IntFilter<"InvoiceLineItem"> | number
    createdAt?: DateTimeFilter<"InvoiceLineItem"> | Date | string
    invoice?: XOR<InvoiceRelationFilter, InvoiceWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type InvoiceLineItemOrderByWithRelationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    companyId?: SortOrder
    chargeTypeId?: SortOrderInput | SortOrder
    description?: SortOrder
    category?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    isTaxable?: SortOrder
    taxRate?: SortOrderInput | SortOrder
    taxAmount?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    invoice?: InvoiceOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type InvoiceLineItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InvoiceLineItemWhereInput | InvoiceLineItemWhereInput[]
    OR?: InvoiceLineItemWhereInput[]
    NOT?: InvoiceLineItemWhereInput | InvoiceLineItemWhereInput[]
    invoiceId?: StringFilter<"InvoiceLineItem"> | string
    companyId?: StringFilter<"InvoiceLineItem"> | string
    chargeTypeId?: StringNullableFilter<"InvoiceLineItem"> | string | null
    description?: StringFilter<"InvoiceLineItem"> | string
    category?: StringFilter<"InvoiceLineItem"> | string
    quantity?: FloatFilter<"InvoiceLineItem"> | number
    unitPrice?: FloatFilter<"InvoiceLineItem"> | number
    amount?: FloatFilter<"InvoiceLineItem"> | number
    isTaxable?: BoolFilter<"InvoiceLineItem"> | boolean
    taxRate?: FloatNullableFilter<"InvoiceLineItem"> | number | null
    taxAmount?: FloatFilter<"InvoiceLineItem"> | number
    displayOrder?: IntFilter<"InvoiceLineItem"> | number
    createdAt?: DateTimeFilter<"InvoiceLineItem"> | Date | string
    invoice?: XOR<InvoiceRelationFilter, InvoiceWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type InvoiceLineItemOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    companyId?: SortOrder
    chargeTypeId?: SortOrderInput | SortOrder
    description?: SortOrder
    category?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    isTaxable?: SortOrder
    taxRate?: SortOrderInput | SortOrder
    taxAmount?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    _count?: InvoiceLineItemCountOrderByAggregateInput
    _avg?: InvoiceLineItemAvgOrderByAggregateInput
    _max?: InvoiceLineItemMaxOrderByAggregateInput
    _min?: InvoiceLineItemMinOrderByAggregateInput
    _sum?: InvoiceLineItemSumOrderByAggregateInput
  }

  export type InvoiceLineItemScalarWhereWithAggregatesInput = {
    AND?: InvoiceLineItemScalarWhereWithAggregatesInput | InvoiceLineItemScalarWhereWithAggregatesInput[]
    OR?: InvoiceLineItemScalarWhereWithAggregatesInput[]
    NOT?: InvoiceLineItemScalarWhereWithAggregatesInput | InvoiceLineItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InvoiceLineItem"> | string
    invoiceId?: StringWithAggregatesFilter<"InvoiceLineItem"> | string
    companyId?: StringWithAggregatesFilter<"InvoiceLineItem"> | string
    chargeTypeId?: StringNullableWithAggregatesFilter<"InvoiceLineItem"> | string | null
    description?: StringWithAggregatesFilter<"InvoiceLineItem"> | string
    category?: StringWithAggregatesFilter<"InvoiceLineItem"> | string
    quantity?: FloatWithAggregatesFilter<"InvoiceLineItem"> | number
    unitPrice?: FloatWithAggregatesFilter<"InvoiceLineItem"> | number
    amount?: FloatWithAggregatesFilter<"InvoiceLineItem"> | number
    isTaxable?: BoolWithAggregatesFilter<"InvoiceLineItem"> | boolean
    taxRate?: FloatNullableWithAggregatesFilter<"InvoiceLineItem"> | number | null
    taxAmount?: FloatWithAggregatesFilter<"InvoiceLineItem"> | number
    displayOrder?: IntWithAggregatesFilter<"InvoiceLineItem"> | number
    createdAt?: DateTimeWithAggregatesFilter<"InvoiceLineItem"> | Date | string
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: StringFilter<"Payment"> | string
    invoiceId?: StringFilter<"Payment"> | string
    companyId?: StringFilter<"Payment"> | string
    amount?: FloatFilter<"Payment"> | number
    paymentDate?: DateTimeFilter<"Payment"> | Date | string
    paymentMethod?: StringFilter<"Payment"> | string
    transactionRef?: StringNullableFilter<"Payment"> | string | null
    receiptNumber?: StringNullableFilter<"Payment"> | string | null
    notes?: StringNullableFilter<"Payment"> | string | null
    createdBy?: StringNullableFilter<"Payment"> | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    invoice?: XOR<InvoiceRelationFilter, InvoiceWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    companyId?: SortOrder
    amount?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    transactionRef?: SortOrderInput | SortOrder
    receiptNumber?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    invoice?: InvoiceOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    invoiceId?: StringFilter<"Payment"> | string
    companyId?: StringFilter<"Payment"> | string
    amount?: FloatFilter<"Payment"> | number
    paymentDate?: DateTimeFilter<"Payment"> | Date | string
    paymentMethod?: StringFilter<"Payment"> | string
    transactionRef?: StringNullableFilter<"Payment"> | string | null
    receiptNumber?: StringNullableFilter<"Payment"> | string | null
    notes?: StringNullableFilter<"Payment"> | string | null
    createdBy?: StringNullableFilter<"Payment"> | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    invoice?: XOR<InvoiceRelationFilter, InvoiceWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    companyId?: SortOrder
    amount?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    transactionRef?: SortOrderInput | SortOrder
    receiptNumber?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Payment"> | string
    invoiceId?: StringWithAggregatesFilter<"Payment"> | string
    companyId?: StringWithAggregatesFilter<"Payment"> | string
    amount?: FloatWithAggregatesFilter<"Payment"> | number
    paymentDate?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    paymentMethod?: StringWithAggregatesFilter<"Payment"> | string
    transactionRef?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    receiptNumber?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    notes?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    createdBy?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
  }

  export type ShipmentChargesWhereInput = {
    AND?: ShipmentChargesWhereInput | ShipmentChargesWhereInput[]
    OR?: ShipmentChargesWhereInput[]
    NOT?: ShipmentChargesWhereInput | ShipmentChargesWhereInput[]
    id?: StringFilter<"ShipmentCharges"> | string
    shipmentId?: StringFilter<"ShipmentCharges"> | string
    companyId?: StringFilter<"ShipmentCharges"> | string
    currentStorageCharge?: FloatFilter<"ShipmentCharges"> | number
    daysStored?: IntFilter<"ShipmentCharges"> | number
    lastCalculatedDate?: DateTimeFilter<"ShipmentCharges"> | Date | string
    totalBoxesReleased?: IntFilter<"ShipmentCharges"> | number
    totalInvoiced?: FloatFilter<"ShipmentCharges"> | number
    totalPaid?: FloatFilter<"ShipmentCharges"> | number
    outstandingBalance?: FloatFilter<"ShipmentCharges"> | number
    createdAt?: DateTimeFilter<"ShipmentCharges"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentCharges"> | Date | string
    shipment?: XOR<ShipmentRelationFilter, ShipmentWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type ShipmentChargesOrderByWithRelationInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    companyId?: SortOrder
    currentStorageCharge?: SortOrder
    daysStored?: SortOrder
    lastCalculatedDate?: SortOrder
    totalBoxesReleased?: SortOrder
    totalInvoiced?: SortOrder
    totalPaid?: SortOrder
    outstandingBalance?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    shipment?: ShipmentOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type ShipmentChargesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    shipmentId?: string
    AND?: ShipmentChargesWhereInput | ShipmentChargesWhereInput[]
    OR?: ShipmentChargesWhereInput[]
    NOT?: ShipmentChargesWhereInput | ShipmentChargesWhereInput[]
    companyId?: StringFilter<"ShipmentCharges"> | string
    currentStorageCharge?: FloatFilter<"ShipmentCharges"> | number
    daysStored?: IntFilter<"ShipmentCharges"> | number
    lastCalculatedDate?: DateTimeFilter<"ShipmentCharges"> | Date | string
    totalBoxesReleased?: IntFilter<"ShipmentCharges"> | number
    totalInvoiced?: FloatFilter<"ShipmentCharges"> | number
    totalPaid?: FloatFilter<"ShipmentCharges"> | number
    outstandingBalance?: FloatFilter<"ShipmentCharges"> | number
    createdAt?: DateTimeFilter<"ShipmentCharges"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentCharges"> | Date | string
    shipment?: XOR<ShipmentRelationFilter, ShipmentWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id" | "shipmentId">

  export type ShipmentChargesOrderByWithAggregationInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    companyId?: SortOrder
    currentStorageCharge?: SortOrder
    daysStored?: SortOrder
    lastCalculatedDate?: SortOrder
    totalBoxesReleased?: SortOrder
    totalInvoiced?: SortOrder
    totalPaid?: SortOrder
    outstandingBalance?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ShipmentChargesCountOrderByAggregateInput
    _avg?: ShipmentChargesAvgOrderByAggregateInput
    _max?: ShipmentChargesMaxOrderByAggregateInput
    _min?: ShipmentChargesMinOrderByAggregateInput
    _sum?: ShipmentChargesSumOrderByAggregateInput
  }

  export type ShipmentChargesScalarWhereWithAggregatesInput = {
    AND?: ShipmentChargesScalarWhereWithAggregatesInput | ShipmentChargesScalarWhereWithAggregatesInput[]
    OR?: ShipmentChargesScalarWhereWithAggregatesInput[]
    NOT?: ShipmentChargesScalarWhereWithAggregatesInput | ShipmentChargesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ShipmentCharges"> | string
    shipmentId?: StringWithAggregatesFilter<"ShipmentCharges"> | string
    companyId?: StringWithAggregatesFilter<"ShipmentCharges"> | string
    currentStorageCharge?: FloatWithAggregatesFilter<"ShipmentCharges"> | number
    daysStored?: IntWithAggregatesFilter<"ShipmentCharges"> | number
    lastCalculatedDate?: DateTimeWithAggregatesFilter<"ShipmentCharges"> | Date | string
    totalBoxesReleased?: IntWithAggregatesFilter<"ShipmentCharges"> | number
    totalInvoiced?: FloatWithAggregatesFilter<"ShipmentCharges"> | number
    totalPaid?: FloatWithAggregatesFilter<"ShipmentCharges"> | number
    outstandingBalance?: FloatWithAggregatesFilter<"ShipmentCharges"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ShipmentCharges"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ShipmentCharges"> | Date | string
  }

  export type CustomFieldWhereInput = {
    AND?: CustomFieldWhereInput | CustomFieldWhereInput[]
    OR?: CustomFieldWhereInput[]
    NOT?: CustomFieldWhereInput | CustomFieldWhereInput[]
    id?: StringFilter<"CustomField"> | string
    companyId?: StringFilter<"CustomField"> | string
    fieldName?: StringFilter<"CustomField"> | string
    fieldType?: StringFilter<"CustomField"> | string
    fieldOptions?: StringNullableFilter<"CustomField"> | string | null
    isRequired?: BoolFilter<"CustomField"> | boolean
    isActive?: BoolFilter<"CustomField"> | boolean
    section?: StringFilter<"CustomField"> | string
    createdAt?: DateTimeFilter<"CustomField"> | Date | string
    updatedAt?: DateTimeFilter<"CustomField"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    values?: CustomFieldValueListRelationFilter
  }

  export type CustomFieldOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    fieldName?: SortOrder
    fieldType?: SortOrder
    fieldOptions?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    isActive?: SortOrder
    section?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    values?: CustomFieldValueOrderByRelationAggregateInput
  }

  export type CustomFieldWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CustomFieldWhereInput | CustomFieldWhereInput[]
    OR?: CustomFieldWhereInput[]
    NOT?: CustomFieldWhereInput | CustomFieldWhereInput[]
    companyId?: StringFilter<"CustomField"> | string
    fieldName?: StringFilter<"CustomField"> | string
    fieldType?: StringFilter<"CustomField"> | string
    fieldOptions?: StringNullableFilter<"CustomField"> | string | null
    isRequired?: BoolFilter<"CustomField"> | boolean
    isActive?: BoolFilter<"CustomField"> | boolean
    section?: StringFilter<"CustomField"> | string
    createdAt?: DateTimeFilter<"CustomField"> | Date | string
    updatedAt?: DateTimeFilter<"CustomField"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    values?: CustomFieldValueListRelationFilter
  }, "id">

  export type CustomFieldOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    fieldName?: SortOrder
    fieldType?: SortOrder
    fieldOptions?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    isActive?: SortOrder
    section?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CustomFieldCountOrderByAggregateInput
    _max?: CustomFieldMaxOrderByAggregateInput
    _min?: CustomFieldMinOrderByAggregateInput
  }

  export type CustomFieldScalarWhereWithAggregatesInput = {
    AND?: CustomFieldScalarWhereWithAggregatesInput | CustomFieldScalarWhereWithAggregatesInput[]
    OR?: CustomFieldScalarWhereWithAggregatesInput[]
    NOT?: CustomFieldScalarWhereWithAggregatesInput | CustomFieldScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CustomField"> | string
    companyId?: StringWithAggregatesFilter<"CustomField"> | string
    fieldName?: StringWithAggregatesFilter<"CustomField"> | string
    fieldType?: StringWithAggregatesFilter<"CustomField"> | string
    fieldOptions?: StringNullableWithAggregatesFilter<"CustomField"> | string | null
    isRequired?: BoolWithAggregatesFilter<"CustomField"> | boolean
    isActive?: BoolWithAggregatesFilter<"CustomField"> | boolean
    section?: StringWithAggregatesFilter<"CustomField"> | string
    createdAt?: DateTimeWithAggregatesFilter<"CustomField"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CustomField"> | Date | string
  }

  export type CustomFieldValueWhereInput = {
    AND?: CustomFieldValueWhereInput | CustomFieldValueWhereInput[]
    OR?: CustomFieldValueWhereInput[]
    NOT?: CustomFieldValueWhereInput | CustomFieldValueWhereInput[]
    id?: StringFilter<"CustomFieldValue"> | string
    customFieldId?: StringFilter<"CustomFieldValue"> | string
    entityType?: StringFilter<"CustomFieldValue"> | string
    entityId?: StringFilter<"CustomFieldValue"> | string
    fieldValue?: StringFilter<"CustomFieldValue"> | string
    companyId?: StringFilter<"CustomFieldValue"> | string
    createdAt?: DateTimeFilter<"CustomFieldValue"> | Date | string
    updatedAt?: DateTimeFilter<"CustomFieldValue"> | Date | string
    customField?: XOR<CustomFieldRelationFilter, CustomFieldWhereInput>
  }

  export type CustomFieldValueOrderByWithRelationInput = {
    id?: SortOrder
    customFieldId?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    fieldValue?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customField?: CustomFieldOrderByWithRelationInput
  }

  export type CustomFieldValueWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    customFieldId_entityId?: CustomFieldValueCustomFieldIdEntityIdCompoundUniqueInput
    AND?: CustomFieldValueWhereInput | CustomFieldValueWhereInput[]
    OR?: CustomFieldValueWhereInput[]
    NOT?: CustomFieldValueWhereInput | CustomFieldValueWhereInput[]
    customFieldId?: StringFilter<"CustomFieldValue"> | string
    entityType?: StringFilter<"CustomFieldValue"> | string
    entityId?: StringFilter<"CustomFieldValue"> | string
    fieldValue?: StringFilter<"CustomFieldValue"> | string
    companyId?: StringFilter<"CustomFieldValue"> | string
    createdAt?: DateTimeFilter<"CustomFieldValue"> | Date | string
    updatedAt?: DateTimeFilter<"CustomFieldValue"> | Date | string
    customField?: XOR<CustomFieldRelationFilter, CustomFieldWhereInput>
  }, "id" | "customFieldId_entityId">

  export type CustomFieldValueOrderByWithAggregationInput = {
    id?: SortOrder
    customFieldId?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    fieldValue?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CustomFieldValueCountOrderByAggregateInput
    _max?: CustomFieldValueMaxOrderByAggregateInput
    _min?: CustomFieldValueMinOrderByAggregateInput
  }

  export type CustomFieldValueScalarWhereWithAggregatesInput = {
    AND?: CustomFieldValueScalarWhereWithAggregatesInput | CustomFieldValueScalarWhereWithAggregatesInput[]
    OR?: CustomFieldValueScalarWhereWithAggregatesInput[]
    NOT?: CustomFieldValueScalarWhereWithAggregatesInput | CustomFieldValueScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CustomFieldValue"> | string
    customFieldId?: StringWithAggregatesFilter<"CustomFieldValue"> | string
    entityType?: StringWithAggregatesFilter<"CustomFieldValue"> | string
    entityId?: StringWithAggregatesFilter<"CustomFieldValue"> | string
    fieldValue?: StringWithAggregatesFilter<"CustomFieldValue"> | string
    companyId?: StringWithAggregatesFilter<"CustomFieldValue"> | string
    createdAt?: DateTimeWithAggregatesFilter<"CustomFieldValue"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CustomFieldValue"> | Date | string
  }

  export type ShipmentSettingsWhereInput = {
    AND?: ShipmentSettingsWhereInput | ShipmentSettingsWhereInput[]
    OR?: ShipmentSettingsWhereInput[]
    NOT?: ShipmentSettingsWhereInput | ShipmentSettingsWhereInput[]
    id?: StringFilter<"ShipmentSettings"> | string
    companyId?: StringFilter<"ShipmentSettings"> | string
    requireClientEmail?: BoolFilter<"ShipmentSettings"> | boolean
    requireClientPhone?: BoolFilter<"ShipmentSettings"> | boolean
    requireEstimatedValue?: BoolFilter<"ShipmentSettings"> | boolean
    requirePhotos?: BoolFilter<"ShipmentSettings"> | boolean
    autoGenerateQR?: BoolFilter<"ShipmentSettings"> | boolean
    qrCodePrefix?: StringFilter<"ShipmentSettings"> | string
    showClientAddress?: BoolFilter<"ShipmentSettings"> | boolean
    requireClientAddress?: BoolFilter<"ShipmentSettings"> | boolean
    showDescription?: BoolFilter<"ShipmentSettings"> | boolean
    requireDescription?: BoolFilter<"ShipmentSettings"> | boolean
    showReferenceId?: BoolFilter<"ShipmentSettings"> | boolean
    requireReferenceId?: BoolFilter<"ShipmentSettings"> | boolean
    showNotes?: BoolFilter<"ShipmentSettings"> | boolean
    requireNotes?: BoolFilter<"ShipmentSettings"> | boolean
    showWarehouseMode?: BoolFilter<"ShipmentSettings"> | boolean
    showShipperDetails?: BoolFilter<"ShipmentSettings"> | boolean
    requireShipperDetails?: BoolFilter<"ShipmentSettings"> | boolean
    showConsigneeDetails?: BoolFilter<"ShipmentSettings"> | boolean
    requireConsigneeDetails?: BoolFilter<"ShipmentSettings"> | boolean
    showWeight?: BoolFilter<"ShipmentSettings"> | boolean
    requireWeight?: BoolFilter<"ShipmentSettings"> | boolean
    showDimensions?: BoolFilter<"ShipmentSettings"> | boolean
    requireDimensions?: BoolFilter<"ShipmentSettings"> | boolean
    showStorageType?: BoolFilter<"ShipmentSettings"> | boolean
    showSpecialInstructions?: BoolFilter<"ShipmentSettings"> | boolean
    showEstimatedDays?: BoolFilter<"ShipmentSettings"> | boolean
    requireEstimatedDays?: BoolFilter<"ShipmentSettings"> | boolean
    defaultEstimatedDays?: IntFilter<"ShipmentSettings"> | number
    formSectionOrder?: StringNullableFilter<"ShipmentSettings"> | string | null
    defaultStorageType?: StringFilter<"ShipmentSettings"> | string
    allowMultipleRacks?: BoolFilter<"ShipmentSettings"> | boolean
    requireRackAssignment?: BoolFilter<"ShipmentSettings"> | boolean
    autoAssignRack?: BoolFilter<"ShipmentSettings"> | boolean
    notifyOnLowCapacity?: BoolFilter<"ShipmentSettings"> | boolean
    lowCapacityThreshold?: IntFilter<"ShipmentSettings"> | number
    requireReleaseApproval?: BoolFilter<"ShipmentSettings"> | boolean
    releaseApproverRole?: StringFilter<"ShipmentSettings"> | string
    requireReleasePhotos?: BoolFilter<"ShipmentSettings"> | boolean
    requireIDVerification?: BoolFilter<"ShipmentSettings"> | boolean
    generateReleaseInvoice?: BoolFilter<"ShipmentSettings"> | boolean
    autoSendInvoiceEmail?: BoolFilter<"ShipmentSettings"> | boolean
    storageRatePerDay?: FloatFilter<"ShipmentSettings"> | number
    storageRatePerBox?: FloatFilter<"ShipmentSettings"> | number
    chargePartialDay?: BoolFilter<"ShipmentSettings"> | boolean
    minimumChargeDays?: IntFilter<"ShipmentSettings"> | number
    releaseHandlingFee?: FloatFilter<"ShipmentSettings"> | number
    releasePerBoxFee?: FloatFilter<"ShipmentSettings"> | number
    releaseTransportFee?: FloatFilter<"ShipmentSettings"> | number
    notifyClientOnIntake?: BoolFilter<"ShipmentSettings"> | boolean
    notifyClientOnRelease?: BoolFilter<"ShipmentSettings"> | boolean
    notifyOnStorageAlert?: BoolFilter<"ShipmentSettings"> | boolean
    storageAlertDays?: IntFilter<"ShipmentSettings"> | number
    enableCustomFields?: BoolFilter<"ShipmentSettings"> | boolean
    requiredCustomFields?: StringNullableFilter<"ShipmentSettings"> | string | null
    allowPartialRelease?: BoolFilter<"ShipmentSettings"> | boolean
    partialReleaseMinBoxes?: IntFilter<"ShipmentSettings"> | number
    requirePartialApproval?: BoolFilter<"ShipmentSettings"> | boolean
    requireReleaseSignature?: BoolFilter<"ShipmentSettings"> | boolean
    requireCollectorID?: BoolFilter<"ShipmentSettings"> | boolean
    allowProxyCollection?: BoolFilter<"ShipmentSettings"> | boolean
    createdAt?: DateTimeFilter<"ShipmentSettings"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentSettings"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type ShipmentSettingsOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    requireClientEmail?: SortOrder
    requireClientPhone?: SortOrder
    requireEstimatedValue?: SortOrder
    requirePhotos?: SortOrder
    autoGenerateQR?: SortOrder
    qrCodePrefix?: SortOrder
    showClientAddress?: SortOrder
    requireClientAddress?: SortOrder
    showDescription?: SortOrder
    requireDescription?: SortOrder
    showReferenceId?: SortOrder
    requireReferenceId?: SortOrder
    showNotes?: SortOrder
    requireNotes?: SortOrder
    showWarehouseMode?: SortOrder
    showShipperDetails?: SortOrder
    requireShipperDetails?: SortOrder
    showConsigneeDetails?: SortOrder
    requireConsigneeDetails?: SortOrder
    showWeight?: SortOrder
    requireWeight?: SortOrder
    showDimensions?: SortOrder
    requireDimensions?: SortOrder
    showStorageType?: SortOrder
    showSpecialInstructions?: SortOrder
    showEstimatedDays?: SortOrder
    requireEstimatedDays?: SortOrder
    defaultEstimatedDays?: SortOrder
    formSectionOrder?: SortOrderInput | SortOrder
    defaultStorageType?: SortOrder
    allowMultipleRacks?: SortOrder
    requireRackAssignment?: SortOrder
    autoAssignRack?: SortOrder
    notifyOnLowCapacity?: SortOrder
    lowCapacityThreshold?: SortOrder
    requireReleaseApproval?: SortOrder
    releaseApproverRole?: SortOrder
    requireReleasePhotos?: SortOrder
    requireIDVerification?: SortOrder
    generateReleaseInvoice?: SortOrder
    autoSendInvoiceEmail?: SortOrder
    storageRatePerDay?: SortOrder
    storageRatePerBox?: SortOrder
    chargePartialDay?: SortOrder
    minimumChargeDays?: SortOrder
    releaseHandlingFee?: SortOrder
    releasePerBoxFee?: SortOrder
    releaseTransportFee?: SortOrder
    notifyClientOnIntake?: SortOrder
    notifyClientOnRelease?: SortOrder
    notifyOnStorageAlert?: SortOrder
    storageAlertDays?: SortOrder
    enableCustomFields?: SortOrder
    requiredCustomFields?: SortOrderInput | SortOrder
    allowPartialRelease?: SortOrder
    partialReleaseMinBoxes?: SortOrder
    requirePartialApproval?: SortOrder
    requireReleaseSignature?: SortOrder
    requireCollectorID?: SortOrder
    allowProxyCollection?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
  }

  export type ShipmentSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    companyId?: string
    AND?: ShipmentSettingsWhereInput | ShipmentSettingsWhereInput[]
    OR?: ShipmentSettingsWhereInput[]
    NOT?: ShipmentSettingsWhereInput | ShipmentSettingsWhereInput[]
    requireClientEmail?: BoolFilter<"ShipmentSettings"> | boolean
    requireClientPhone?: BoolFilter<"ShipmentSettings"> | boolean
    requireEstimatedValue?: BoolFilter<"ShipmentSettings"> | boolean
    requirePhotos?: BoolFilter<"ShipmentSettings"> | boolean
    autoGenerateQR?: BoolFilter<"ShipmentSettings"> | boolean
    qrCodePrefix?: StringFilter<"ShipmentSettings"> | string
    showClientAddress?: BoolFilter<"ShipmentSettings"> | boolean
    requireClientAddress?: BoolFilter<"ShipmentSettings"> | boolean
    showDescription?: BoolFilter<"ShipmentSettings"> | boolean
    requireDescription?: BoolFilter<"ShipmentSettings"> | boolean
    showReferenceId?: BoolFilter<"ShipmentSettings"> | boolean
    requireReferenceId?: BoolFilter<"ShipmentSettings"> | boolean
    showNotes?: BoolFilter<"ShipmentSettings"> | boolean
    requireNotes?: BoolFilter<"ShipmentSettings"> | boolean
    showWarehouseMode?: BoolFilter<"ShipmentSettings"> | boolean
    showShipperDetails?: BoolFilter<"ShipmentSettings"> | boolean
    requireShipperDetails?: BoolFilter<"ShipmentSettings"> | boolean
    showConsigneeDetails?: BoolFilter<"ShipmentSettings"> | boolean
    requireConsigneeDetails?: BoolFilter<"ShipmentSettings"> | boolean
    showWeight?: BoolFilter<"ShipmentSettings"> | boolean
    requireWeight?: BoolFilter<"ShipmentSettings"> | boolean
    showDimensions?: BoolFilter<"ShipmentSettings"> | boolean
    requireDimensions?: BoolFilter<"ShipmentSettings"> | boolean
    showStorageType?: BoolFilter<"ShipmentSettings"> | boolean
    showSpecialInstructions?: BoolFilter<"ShipmentSettings"> | boolean
    showEstimatedDays?: BoolFilter<"ShipmentSettings"> | boolean
    requireEstimatedDays?: BoolFilter<"ShipmentSettings"> | boolean
    defaultEstimatedDays?: IntFilter<"ShipmentSettings"> | number
    formSectionOrder?: StringNullableFilter<"ShipmentSettings"> | string | null
    defaultStorageType?: StringFilter<"ShipmentSettings"> | string
    allowMultipleRacks?: BoolFilter<"ShipmentSettings"> | boolean
    requireRackAssignment?: BoolFilter<"ShipmentSettings"> | boolean
    autoAssignRack?: BoolFilter<"ShipmentSettings"> | boolean
    notifyOnLowCapacity?: BoolFilter<"ShipmentSettings"> | boolean
    lowCapacityThreshold?: IntFilter<"ShipmentSettings"> | number
    requireReleaseApproval?: BoolFilter<"ShipmentSettings"> | boolean
    releaseApproverRole?: StringFilter<"ShipmentSettings"> | string
    requireReleasePhotos?: BoolFilter<"ShipmentSettings"> | boolean
    requireIDVerification?: BoolFilter<"ShipmentSettings"> | boolean
    generateReleaseInvoice?: BoolFilter<"ShipmentSettings"> | boolean
    autoSendInvoiceEmail?: BoolFilter<"ShipmentSettings"> | boolean
    storageRatePerDay?: FloatFilter<"ShipmentSettings"> | number
    storageRatePerBox?: FloatFilter<"ShipmentSettings"> | number
    chargePartialDay?: BoolFilter<"ShipmentSettings"> | boolean
    minimumChargeDays?: IntFilter<"ShipmentSettings"> | number
    releaseHandlingFee?: FloatFilter<"ShipmentSettings"> | number
    releasePerBoxFee?: FloatFilter<"ShipmentSettings"> | number
    releaseTransportFee?: FloatFilter<"ShipmentSettings"> | number
    notifyClientOnIntake?: BoolFilter<"ShipmentSettings"> | boolean
    notifyClientOnRelease?: BoolFilter<"ShipmentSettings"> | boolean
    notifyOnStorageAlert?: BoolFilter<"ShipmentSettings"> | boolean
    storageAlertDays?: IntFilter<"ShipmentSettings"> | number
    enableCustomFields?: BoolFilter<"ShipmentSettings"> | boolean
    requiredCustomFields?: StringNullableFilter<"ShipmentSettings"> | string | null
    allowPartialRelease?: BoolFilter<"ShipmentSettings"> | boolean
    partialReleaseMinBoxes?: IntFilter<"ShipmentSettings"> | number
    requirePartialApproval?: BoolFilter<"ShipmentSettings"> | boolean
    requireReleaseSignature?: BoolFilter<"ShipmentSettings"> | boolean
    requireCollectorID?: BoolFilter<"ShipmentSettings"> | boolean
    allowProxyCollection?: BoolFilter<"ShipmentSettings"> | boolean
    createdAt?: DateTimeFilter<"ShipmentSettings"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentSettings"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id" | "companyId">

  export type ShipmentSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    requireClientEmail?: SortOrder
    requireClientPhone?: SortOrder
    requireEstimatedValue?: SortOrder
    requirePhotos?: SortOrder
    autoGenerateQR?: SortOrder
    qrCodePrefix?: SortOrder
    showClientAddress?: SortOrder
    requireClientAddress?: SortOrder
    showDescription?: SortOrder
    requireDescription?: SortOrder
    showReferenceId?: SortOrder
    requireReferenceId?: SortOrder
    showNotes?: SortOrder
    requireNotes?: SortOrder
    showWarehouseMode?: SortOrder
    showShipperDetails?: SortOrder
    requireShipperDetails?: SortOrder
    showConsigneeDetails?: SortOrder
    requireConsigneeDetails?: SortOrder
    showWeight?: SortOrder
    requireWeight?: SortOrder
    showDimensions?: SortOrder
    requireDimensions?: SortOrder
    showStorageType?: SortOrder
    showSpecialInstructions?: SortOrder
    showEstimatedDays?: SortOrder
    requireEstimatedDays?: SortOrder
    defaultEstimatedDays?: SortOrder
    formSectionOrder?: SortOrderInput | SortOrder
    defaultStorageType?: SortOrder
    allowMultipleRacks?: SortOrder
    requireRackAssignment?: SortOrder
    autoAssignRack?: SortOrder
    notifyOnLowCapacity?: SortOrder
    lowCapacityThreshold?: SortOrder
    requireReleaseApproval?: SortOrder
    releaseApproverRole?: SortOrder
    requireReleasePhotos?: SortOrder
    requireIDVerification?: SortOrder
    generateReleaseInvoice?: SortOrder
    autoSendInvoiceEmail?: SortOrder
    storageRatePerDay?: SortOrder
    storageRatePerBox?: SortOrder
    chargePartialDay?: SortOrder
    minimumChargeDays?: SortOrder
    releaseHandlingFee?: SortOrder
    releasePerBoxFee?: SortOrder
    releaseTransportFee?: SortOrder
    notifyClientOnIntake?: SortOrder
    notifyClientOnRelease?: SortOrder
    notifyOnStorageAlert?: SortOrder
    storageAlertDays?: SortOrder
    enableCustomFields?: SortOrder
    requiredCustomFields?: SortOrderInput | SortOrder
    allowPartialRelease?: SortOrder
    partialReleaseMinBoxes?: SortOrder
    requirePartialApproval?: SortOrder
    requireReleaseSignature?: SortOrder
    requireCollectorID?: SortOrder
    allowProxyCollection?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ShipmentSettingsCountOrderByAggregateInput
    _avg?: ShipmentSettingsAvgOrderByAggregateInput
    _max?: ShipmentSettingsMaxOrderByAggregateInput
    _min?: ShipmentSettingsMinOrderByAggregateInput
    _sum?: ShipmentSettingsSumOrderByAggregateInput
  }

  export type ShipmentSettingsScalarWhereWithAggregatesInput = {
    AND?: ShipmentSettingsScalarWhereWithAggregatesInput | ShipmentSettingsScalarWhereWithAggregatesInput[]
    OR?: ShipmentSettingsScalarWhereWithAggregatesInput[]
    NOT?: ShipmentSettingsScalarWhereWithAggregatesInput | ShipmentSettingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ShipmentSettings"> | string
    companyId?: StringWithAggregatesFilter<"ShipmentSettings"> | string
    requireClientEmail?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireClientPhone?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireEstimatedValue?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requirePhotos?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    autoGenerateQR?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    qrCodePrefix?: StringWithAggregatesFilter<"ShipmentSettings"> | string
    showClientAddress?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireClientAddress?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showDescription?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireDescription?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showReferenceId?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireReferenceId?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showNotes?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireNotes?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showWarehouseMode?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showShipperDetails?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireShipperDetails?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showConsigneeDetails?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireConsigneeDetails?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showWeight?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireWeight?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showDimensions?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireDimensions?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showStorageType?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showSpecialInstructions?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    showEstimatedDays?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireEstimatedDays?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    defaultEstimatedDays?: IntWithAggregatesFilter<"ShipmentSettings"> | number
    formSectionOrder?: StringNullableWithAggregatesFilter<"ShipmentSettings"> | string | null
    defaultStorageType?: StringWithAggregatesFilter<"ShipmentSettings"> | string
    allowMultipleRacks?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireRackAssignment?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    autoAssignRack?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    notifyOnLowCapacity?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    lowCapacityThreshold?: IntWithAggregatesFilter<"ShipmentSettings"> | number
    requireReleaseApproval?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    releaseApproverRole?: StringWithAggregatesFilter<"ShipmentSettings"> | string
    requireReleasePhotos?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireIDVerification?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    generateReleaseInvoice?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    autoSendInvoiceEmail?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    storageRatePerDay?: FloatWithAggregatesFilter<"ShipmentSettings"> | number
    storageRatePerBox?: FloatWithAggregatesFilter<"ShipmentSettings"> | number
    chargePartialDay?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    minimumChargeDays?: IntWithAggregatesFilter<"ShipmentSettings"> | number
    releaseHandlingFee?: FloatWithAggregatesFilter<"ShipmentSettings"> | number
    releasePerBoxFee?: FloatWithAggregatesFilter<"ShipmentSettings"> | number
    releaseTransportFee?: FloatWithAggregatesFilter<"ShipmentSettings"> | number
    notifyClientOnIntake?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    notifyClientOnRelease?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    notifyOnStorageAlert?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    storageAlertDays?: IntWithAggregatesFilter<"ShipmentSettings"> | number
    enableCustomFields?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requiredCustomFields?: StringNullableWithAggregatesFilter<"ShipmentSettings"> | string | null
    allowPartialRelease?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    partialReleaseMinBoxes?: IntWithAggregatesFilter<"ShipmentSettings"> | number
    requirePartialApproval?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireReleaseSignature?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    requireCollectorID?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    allowProxyCollection?: BoolWithAggregatesFilter<"ShipmentSettings"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ShipmentSettings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ShipmentSettings"> | Date | string
  }

  export type TemplateSettingsWhereInput = {
    AND?: TemplateSettingsWhereInput | TemplateSettingsWhereInput[]
    OR?: TemplateSettingsWhereInput[]
    NOT?: TemplateSettingsWhereInput | TemplateSettingsWhereInput[]
    id?: StringFilter<"TemplateSettings"> | string
    companyId?: StringFilter<"TemplateSettings"> | string
    companyName?: StringNullableFilter<"TemplateSettings"> | string | null
    companyLogo?: StringNullableFilter<"TemplateSettings"> | string | null
    companyAddress?: StringNullableFilter<"TemplateSettings"> | string | null
    companyPhone?: StringNullableFilter<"TemplateSettings"> | string | null
    companyEmail?: StringNullableFilter<"TemplateSettings"> | string | null
    companyWebsite?: StringNullableFilter<"TemplateSettings"> | string | null
    companyLicense?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceTemplateType?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceTitle?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceShowLogo?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowAddress?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowPhone?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowEmail?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowWebsite?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowLicense?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowFooter?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceHeaderBg?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceHeaderText?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceFooterText?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceTerms?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceShowBorders?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowGrid?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceTableStyle?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceFontSize?: StringNullableFilter<"TemplateSettings"> | string | null
    invoicePaperSize?: StringNullableFilter<"TemplateSettings"> | string | null
    invoicePrimaryColor?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceSecondaryColor?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceAccentColor?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceDangerColor?: StringNullableFilter<"TemplateSettings"> | string | null
    releaseNoteTemplate?: StringNullableFilter<"TemplateSettings"> | string | null
    releaseNoteTitle?: StringNullableFilter<"TemplateSettings"> | string | null
    releaseNoteHeaderBg?: StringNullableFilter<"TemplateSettings"> | string | null
    releaseNoteShowLogo?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowShipment?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowStorage?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowItems?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowCollector?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowCharges?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowPhotos?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowTerms?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowSignatures?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseTerms?: StringNullableFilter<"TemplateSettings"> | string | null
    releaseFooterText?: StringNullableFilter<"TemplateSettings"> | string | null
    releasePrimaryColor?: StringNullableFilter<"TemplateSettings"> | string | null
    printMarginTop?: IntNullableFilter<"TemplateSettings"> | number | null
    printMarginBottom?: IntNullableFilter<"TemplateSettings"> | number | null
    printMarginLeft?: IntNullableFilter<"TemplateSettings"> | number | null
    printMarginRight?: IntNullableFilter<"TemplateSettings"> | number | null
    language?: StringNullableFilter<"TemplateSettings"> | string | null
    dateFormat?: StringNullableFilter<"TemplateSettings"> | string | null
    timeFormat?: StringNullableFilter<"TemplateSettings"> | string | null
    currencySymbol?: StringNullableFilter<"TemplateSettings"> | string | null
    currencyPosition?: StringNullableFilter<"TemplateSettings"> | string | null
    customField1Label?: StringNullableFilter<"TemplateSettings"> | string | null
    customField1Value?: StringNullableFilter<"TemplateSettings"> | string | null
    customField2Label?: StringNullableFilter<"TemplateSettings"> | string | null
    customField2Value?: StringNullableFilter<"TemplateSettings"> | string | null
    customField3Label?: StringNullableFilter<"TemplateSettings"> | string | null
    customField3Value?: StringNullableFilter<"TemplateSettings"> | string | null
    requireStaffSignature?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    requireClientSignature?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    signatureHeight?: IntNullableFilter<"TemplateSettings"> | number | null
    showQRCode?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    qrCodePosition?: StringNullableFilter<"TemplateSettings"> | string | null
    qrCodeSize?: IntNullableFilter<"TemplateSettings"> | number | null
    showWatermark?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    watermarkText?: StringNullableFilter<"TemplateSettings"> | string | null
    watermarkOpacity?: FloatNullableFilter<"TemplateSettings"> | number | null
    createdAt?: DateTimeFilter<"TemplateSettings"> | Date | string
    updatedAt?: DateTimeFilter<"TemplateSettings"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type TemplateSettingsOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    companyName?: SortOrderInput | SortOrder
    companyLogo?: SortOrderInput | SortOrder
    companyAddress?: SortOrderInput | SortOrder
    companyPhone?: SortOrderInput | SortOrder
    companyEmail?: SortOrderInput | SortOrder
    companyWebsite?: SortOrderInput | SortOrder
    companyLicense?: SortOrderInput | SortOrder
    invoiceTemplateType?: SortOrderInput | SortOrder
    invoiceTitle?: SortOrderInput | SortOrder
    invoiceShowLogo?: SortOrderInput | SortOrder
    invoiceShowAddress?: SortOrderInput | SortOrder
    invoiceShowPhone?: SortOrderInput | SortOrder
    invoiceShowEmail?: SortOrderInput | SortOrder
    invoiceShowWebsite?: SortOrderInput | SortOrder
    invoiceShowLicense?: SortOrderInput | SortOrder
    invoiceShowFooter?: SortOrderInput | SortOrder
    invoiceHeaderBg?: SortOrderInput | SortOrder
    invoiceHeaderText?: SortOrderInput | SortOrder
    invoiceFooterText?: SortOrderInput | SortOrder
    invoiceTerms?: SortOrderInput | SortOrder
    invoiceShowBorders?: SortOrderInput | SortOrder
    invoiceShowGrid?: SortOrderInput | SortOrder
    invoiceTableStyle?: SortOrderInput | SortOrder
    invoiceFontSize?: SortOrderInput | SortOrder
    invoicePaperSize?: SortOrderInput | SortOrder
    invoicePrimaryColor?: SortOrderInput | SortOrder
    invoiceSecondaryColor?: SortOrderInput | SortOrder
    invoiceAccentColor?: SortOrderInput | SortOrder
    invoiceDangerColor?: SortOrderInput | SortOrder
    releaseNoteTemplate?: SortOrderInput | SortOrder
    releaseNoteTitle?: SortOrderInput | SortOrder
    releaseNoteHeaderBg?: SortOrderInput | SortOrder
    releaseNoteShowLogo?: SortOrderInput | SortOrder
    releaseShowShipment?: SortOrderInput | SortOrder
    releaseShowStorage?: SortOrderInput | SortOrder
    releaseShowItems?: SortOrderInput | SortOrder
    releaseShowCollector?: SortOrderInput | SortOrder
    releaseShowCharges?: SortOrderInput | SortOrder
    releaseShowPhotos?: SortOrderInput | SortOrder
    releaseShowTerms?: SortOrderInput | SortOrder
    releaseShowSignatures?: SortOrderInput | SortOrder
    releaseTerms?: SortOrderInput | SortOrder
    releaseFooterText?: SortOrderInput | SortOrder
    releasePrimaryColor?: SortOrderInput | SortOrder
    printMarginTop?: SortOrderInput | SortOrder
    printMarginBottom?: SortOrderInput | SortOrder
    printMarginLeft?: SortOrderInput | SortOrder
    printMarginRight?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    dateFormat?: SortOrderInput | SortOrder
    timeFormat?: SortOrderInput | SortOrder
    currencySymbol?: SortOrderInput | SortOrder
    currencyPosition?: SortOrderInput | SortOrder
    customField1Label?: SortOrderInput | SortOrder
    customField1Value?: SortOrderInput | SortOrder
    customField2Label?: SortOrderInput | SortOrder
    customField2Value?: SortOrderInput | SortOrder
    customField3Label?: SortOrderInput | SortOrder
    customField3Value?: SortOrderInput | SortOrder
    requireStaffSignature?: SortOrderInput | SortOrder
    requireClientSignature?: SortOrderInput | SortOrder
    signatureHeight?: SortOrderInput | SortOrder
    showQRCode?: SortOrderInput | SortOrder
    qrCodePosition?: SortOrderInput | SortOrder
    qrCodeSize?: SortOrderInput | SortOrder
    showWatermark?: SortOrderInput | SortOrder
    watermarkText?: SortOrderInput | SortOrder
    watermarkOpacity?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
  }

  export type TemplateSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    companyId?: string
    AND?: TemplateSettingsWhereInput | TemplateSettingsWhereInput[]
    OR?: TemplateSettingsWhereInput[]
    NOT?: TemplateSettingsWhereInput | TemplateSettingsWhereInput[]
    companyName?: StringNullableFilter<"TemplateSettings"> | string | null
    companyLogo?: StringNullableFilter<"TemplateSettings"> | string | null
    companyAddress?: StringNullableFilter<"TemplateSettings"> | string | null
    companyPhone?: StringNullableFilter<"TemplateSettings"> | string | null
    companyEmail?: StringNullableFilter<"TemplateSettings"> | string | null
    companyWebsite?: StringNullableFilter<"TemplateSettings"> | string | null
    companyLicense?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceTemplateType?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceTitle?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceShowLogo?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowAddress?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowPhone?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowEmail?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowWebsite?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowLicense?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowFooter?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceHeaderBg?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceHeaderText?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceFooterText?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceTerms?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceShowBorders?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceShowGrid?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    invoiceTableStyle?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceFontSize?: StringNullableFilter<"TemplateSettings"> | string | null
    invoicePaperSize?: StringNullableFilter<"TemplateSettings"> | string | null
    invoicePrimaryColor?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceSecondaryColor?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceAccentColor?: StringNullableFilter<"TemplateSettings"> | string | null
    invoiceDangerColor?: StringNullableFilter<"TemplateSettings"> | string | null
    releaseNoteTemplate?: StringNullableFilter<"TemplateSettings"> | string | null
    releaseNoteTitle?: StringNullableFilter<"TemplateSettings"> | string | null
    releaseNoteHeaderBg?: StringNullableFilter<"TemplateSettings"> | string | null
    releaseNoteShowLogo?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowShipment?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowStorage?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowItems?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowCollector?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowCharges?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowPhotos?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowTerms?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseShowSignatures?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    releaseTerms?: StringNullableFilter<"TemplateSettings"> | string | null
    releaseFooterText?: StringNullableFilter<"TemplateSettings"> | string | null
    releasePrimaryColor?: StringNullableFilter<"TemplateSettings"> | string | null
    printMarginTop?: IntNullableFilter<"TemplateSettings"> | number | null
    printMarginBottom?: IntNullableFilter<"TemplateSettings"> | number | null
    printMarginLeft?: IntNullableFilter<"TemplateSettings"> | number | null
    printMarginRight?: IntNullableFilter<"TemplateSettings"> | number | null
    language?: StringNullableFilter<"TemplateSettings"> | string | null
    dateFormat?: StringNullableFilter<"TemplateSettings"> | string | null
    timeFormat?: StringNullableFilter<"TemplateSettings"> | string | null
    currencySymbol?: StringNullableFilter<"TemplateSettings"> | string | null
    currencyPosition?: StringNullableFilter<"TemplateSettings"> | string | null
    customField1Label?: StringNullableFilter<"TemplateSettings"> | string | null
    customField1Value?: StringNullableFilter<"TemplateSettings"> | string | null
    customField2Label?: StringNullableFilter<"TemplateSettings"> | string | null
    customField2Value?: StringNullableFilter<"TemplateSettings"> | string | null
    customField3Label?: StringNullableFilter<"TemplateSettings"> | string | null
    customField3Value?: StringNullableFilter<"TemplateSettings"> | string | null
    requireStaffSignature?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    requireClientSignature?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    signatureHeight?: IntNullableFilter<"TemplateSettings"> | number | null
    showQRCode?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    qrCodePosition?: StringNullableFilter<"TemplateSettings"> | string | null
    qrCodeSize?: IntNullableFilter<"TemplateSettings"> | number | null
    showWatermark?: BoolNullableFilter<"TemplateSettings"> | boolean | null
    watermarkText?: StringNullableFilter<"TemplateSettings"> | string | null
    watermarkOpacity?: FloatNullableFilter<"TemplateSettings"> | number | null
    createdAt?: DateTimeFilter<"TemplateSettings"> | Date | string
    updatedAt?: DateTimeFilter<"TemplateSettings"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id" | "companyId">

  export type TemplateSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    companyName?: SortOrderInput | SortOrder
    companyLogo?: SortOrderInput | SortOrder
    companyAddress?: SortOrderInput | SortOrder
    companyPhone?: SortOrderInput | SortOrder
    companyEmail?: SortOrderInput | SortOrder
    companyWebsite?: SortOrderInput | SortOrder
    companyLicense?: SortOrderInput | SortOrder
    invoiceTemplateType?: SortOrderInput | SortOrder
    invoiceTitle?: SortOrderInput | SortOrder
    invoiceShowLogo?: SortOrderInput | SortOrder
    invoiceShowAddress?: SortOrderInput | SortOrder
    invoiceShowPhone?: SortOrderInput | SortOrder
    invoiceShowEmail?: SortOrderInput | SortOrder
    invoiceShowWebsite?: SortOrderInput | SortOrder
    invoiceShowLicense?: SortOrderInput | SortOrder
    invoiceShowFooter?: SortOrderInput | SortOrder
    invoiceHeaderBg?: SortOrderInput | SortOrder
    invoiceHeaderText?: SortOrderInput | SortOrder
    invoiceFooterText?: SortOrderInput | SortOrder
    invoiceTerms?: SortOrderInput | SortOrder
    invoiceShowBorders?: SortOrderInput | SortOrder
    invoiceShowGrid?: SortOrderInput | SortOrder
    invoiceTableStyle?: SortOrderInput | SortOrder
    invoiceFontSize?: SortOrderInput | SortOrder
    invoicePaperSize?: SortOrderInput | SortOrder
    invoicePrimaryColor?: SortOrderInput | SortOrder
    invoiceSecondaryColor?: SortOrderInput | SortOrder
    invoiceAccentColor?: SortOrderInput | SortOrder
    invoiceDangerColor?: SortOrderInput | SortOrder
    releaseNoteTemplate?: SortOrderInput | SortOrder
    releaseNoteTitle?: SortOrderInput | SortOrder
    releaseNoteHeaderBg?: SortOrderInput | SortOrder
    releaseNoteShowLogo?: SortOrderInput | SortOrder
    releaseShowShipment?: SortOrderInput | SortOrder
    releaseShowStorage?: SortOrderInput | SortOrder
    releaseShowItems?: SortOrderInput | SortOrder
    releaseShowCollector?: SortOrderInput | SortOrder
    releaseShowCharges?: SortOrderInput | SortOrder
    releaseShowPhotos?: SortOrderInput | SortOrder
    releaseShowTerms?: SortOrderInput | SortOrder
    releaseShowSignatures?: SortOrderInput | SortOrder
    releaseTerms?: SortOrderInput | SortOrder
    releaseFooterText?: SortOrderInput | SortOrder
    releasePrimaryColor?: SortOrderInput | SortOrder
    printMarginTop?: SortOrderInput | SortOrder
    printMarginBottom?: SortOrderInput | SortOrder
    printMarginLeft?: SortOrderInput | SortOrder
    printMarginRight?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    dateFormat?: SortOrderInput | SortOrder
    timeFormat?: SortOrderInput | SortOrder
    currencySymbol?: SortOrderInput | SortOrder
    currencyPosition?: SortOrderInput | SortOrder
    customField1Label?: SortOrderInput | SortOrder
    customField1Value?: SortOrderInput | SortOrder
    customField2Label?: SortOrderInput | SortOrder
    customField2Value?: SortOrderInput | SortOrder
    customField3Label?: SortOrderInput | SortOrder
    customField3Value?: SortOrderInput | SortOrder
    requireStaffSignature?: SortOrderInput | SortOrder
    requireClientSignature?: SortOrderInput | SortOrder
    signatureHeight?: SortOrderInput | SortOrder
    showQRCode?: SortOrderInput | SortOrder
    qrCodePosition?: SortOrderInput | SortOrder
    qrCodeSize?: SortOrderInput | SortOrder
    showWatermark?: SortOrderInput | SortOrder
    watermarkText?: SortOrderInput | SortOrder
    watermarkOpacity?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TemplateSettingsCountOrderByAggregateInput
    _avg?: TemplateSettingsAvgOrderByAggregateInput
    _max?: TemplateSettingsMaxOrderByAggregateInput
    _min?: TemplateSettingsMinOrderByAggregateInput
    _sum?: TemplateSettingsSumOrderByAggregateInput
  }

  export type TemplateSettingsScalarWhereWithAggregatesInput = {
    AND?: TemplateSettingsScalarWhereWithAggregatesInput | TemplateSettingsScalarWhereWithAggregatesInput[]
    OR?: TemplateSettingsScalarWhereWithAggregatesInput[]
    NOT?: TemplateSettingsScalarWhereWithAggregatesInput | TemplateSettingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TemplateSettings"> | string
    companyId?: StringWithAggregatesFilter<"TemplateSettings"> | string
    companyName?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    companyLogo?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    companyAddress?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    companyPhone?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    companyEmail?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    companyWebsite?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    companyLicense?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceTemplateType?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceTitle?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceShowLogo?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    invoiceShowAddress?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    invoiceShowPhone?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    invoiceShowEmail?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    invoiceShowWebsite?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    invoiceShowLicense?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    invoiceShowFooter?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    invoiceHeaderBg?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceHeaderText?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceFooterText?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceTerms?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceShowBorders?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    invoiceShowGrid?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    invoiceTableStyle?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceFontSize?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoicePaperSize?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoicePrimaryColor?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceSecondaryColor?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceAccentColor?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    invoiceDangerColor?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    releaseNoteTemplate?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    releaseNoteTitle?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    releaseNoteHeaderBg?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    releaseNoteShowLogo?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    releaseShowShipment?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    releaseShowStorage?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    releaseShowItems?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    releaseShowCollector?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    releaseShowCharges?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    releaseShowPhotos?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    releaseShowTerms?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    releaseShowSignatures?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    releaseTerms?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    releaseFooterText?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    releasePrimaryColor?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    printMarginTop?: IntNullableWithAggregatesFilter<"TemplateSettings"> | number | null
    printMarginBottom?: IntNullableWithAggregatesFilter<"TemplateSettings"> | number | null
    printMarginLeft?: IntNullableWithAggregatesFilter<"TemplateSettings"> | number | null
    printMarginRight?: IntNullableWithAggregatesFilter<"TemplateSettings"> | number | null
    language?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    dateFormat?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    timeFormat?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    currencySymbol?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    currencyPosition?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    customField1Label?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    customField1Value?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    customField2Label?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    customField2Value?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    customField3Label?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    customField3Value?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    requireStaffSignature?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    requireClientSignature?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    signatureHeight?: IntNullableWithAggregatesFilter<"TemplateSettings"> | number | null
    showQRCode?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    qrCodePosition?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    qrCodeSize?: IntNullableWithAggregatesFilter<"TemplateSettings"> | number | null
    showWatermark?: BoolNullableWithAggregatesFilter<"TemplateSettings"> | boolean | null
    watermarkText?: StringNullableWithAggregatesFilter<"TemplateSettings"> | string | null
    watermarkOpacity?: FloatNullableWithAggregatesFilter<"TemplateSettings"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"TemplateSettings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TemplateSettings"> | Date | string
  }

  export type PermissionWhereInput = {
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    id?: StringFilter<"Permission"> | string
    resource?: StringFilter<"Permission"> | string
    action?: StringFilter<"Permission"> | string
    description?: StringNullableFilter<"Permission"> | string | null
    createdAt?: DateTimeFilter<"Permission"> | Date | string
    updatedAt?: DateTimeFilter<"Permission"> | Date | string
    rolePermissions?: RolePermissionListRelationFilter
  }

  export type PermissionOrderByWithRelationInput = {
    id?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    rolePermissions?: RolePermissionOrderByRelationAggregateInput
  }

  export type PermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    resource_action?: PermissionResourceActionCompoundUniqueInput
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    resource?: StringFilter<"Permission"> | string
    action?: StringFilter<"Permission"> | string
    description?: StringNullableFilter<"Permission"> | string | null
    createdAt?: DateTimeFilter<"Permission"> | Date | string
    updatedAt?: DateTimeFilter<"Permission"> | Date | string
    rolePermissions?: RolePermissionListRelationFilter
  }, "id" | "resource_action">

  export type PermissionOrderByWithAggregationInput = {
    id?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PermissionCountOrderByAggregateInput
    _max?: PermissionMaxOrderByAggregateInput
    _min?: PermissionMinOrderByAggregateInput
  }

  export type PermissionScalarWhereWithAggregatesInput = {
    AND?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    OR?: PermissionScalarWhereWithAggregatesInput[]
    NOT?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Permission"> | string
    resource?: StringWithAggregatesFilter<"Permission"> | string
    action?: StringWithAggregatesFilter<"Permission"> | string
    description?: StringNullableWithAggregatesFilter<"Permission"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Permission"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Permission"> | Date | string
  }

  export type RolePermissionWhereInput = {
    AND?: RolePermissionWhereInput | RolePermissionWhereInput[]
    OR?: RolePermissionWhereInput[]
    NOT?: RolePermissionWhereInput | RolePermissionWhereInput[]
    id?: StringFilter<"RolePermission"> | string
    role?: StringFilter<"RolePermission"> | string
    permissionId?: StringFilter<"RolePermission"> | string
    companyId?: StringFilter<"RolePermission"> | string
    createdAt?: DateTimeFilter<"RolePermission"> | Date | string
    updatedAt?: DateTimeFilter<"RolePermission"> | Date | string
    permission?: XOR<PermissionRelationFilter, PermissionWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type RolePermissionOrderByWithRelationInput = {
    id?: SortOrder
    role?: SortOrder
    permissionId?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    permission?: PermissionOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type RolePermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    role_permissionId_companyId?: RolePermissionRolePermissionIdCompanyIdCompoundUniqueInput
    AND?: RolePermissionWhereInput | RolePermissionWhereInput[]
    OR?: RolePermissionWhereInput[]
    NOT?: RolePermissionWhereInput | RolePermissionWhereInput[]
    role?: StringFilter<"RolePermission"> | string
    permissionId?: StringFilter<"RolePermission"> | string
    companyId?: StringFilter<"RolePermission"> | string
    createdAt?: DateTimeFilter<"RolePermission"> | Date | string
    updatedAt?: DateTimeFilter<"RolePermission"> | Date | string
    permission?: XOR<PermissionRelationFilter, PermissionWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id" | "role_permissionId_companyId">

  export type RolePermissionOrderByWithAggregationInput = {
    id?: SortOrder
    role?: SortOrder
    permissionId?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RolePermissionCountOrderByAggregateInput
    _max?: RolePermissionMaxOrderByAggregateInput
    _min?: RolePermissionMinOrderByAggregateInput
  }

  export type RolePermissionScalarWhereWithAggregatesInput = {
    AND?: RolePermissionScalarWhereWithAggregatesInput | RolePermissionScalarWhereWithAggregatesInput[]
    OR?: RolePermissionScalarWhereWithAggregatesInput[]
    NOT?: RolePermissionScalarWhereWithAggregatesInput | RolePermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RolePermission"> | string
    role?: StringWithAggregatesFilter<"RolePermission"> | string
    permissionId?: StringWithAggregatesFilter<"RolePermission"> | string
    companyId?: StringWithAggregatesFilter<"RolePermission"> | string
    createdAt?: DateTimeWithAggregatesFilter<"RolePermission"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RolePermission"> | Date | string
  }

  export type MovingJobWhereInput = {
    AND?: MovingJobWhereInput | MovingJobWhereInput[]
    OR?: MovingJobWhereInput[]
    NOT?: MovingJobWhereInput | MovingJobWhereInput[]
    id?: StringFilter<"MovingJob"> | string
    jobCode?: StringFilter<"MovingJob"> | string
    jobTitle?: StringFilter<"MovingJob"> | string
    clientName?: StringFilter<"MovingJob"> | string
    clientPhone?: StringFilter<"MovingJob"> | string
    clientEmail?: StringNullableFilter<"MovingJob"> | string | null
    jobDate?: DateTimeFilter<"MovingJob"> | Date | string
    jobAddress?: StringFilter<"MovingJob"> | string
    dropoffAddress?: StringNullableFilter<"MovingJob"> | string | null
    status?: StringFilter<"MovingJob"> | string
    teamLeaderId?: StringNullableFilter<"MovingJob"> | string | null
    driverName?: StringNullableFilter<"MovingJob"> | string | null
    vehicleNumber?: StringNullableFilter<"MovingJob"> | string | null
    notes?: StringNullableFilter<"MovingJob"> | string | null
    createdAt?: DateTimeFilter<"MovingJob"> | Date | string
    updatedAt?: DateTimeFilter<"MovingJob"> | Date | string
    companyId?: StringFilter<"MovingJob"> | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    teamLeader?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    assignments?: JobAssignmentListRelationFilter
    materialIssues?: MaterialIssueListRelationFilter
    materialReturns?: MaterialReturnListRelationFilter
    costSnapshots?: JobCostSnapshotListRelationFilter
    approvals?: MaterialApprovalListRelationFilter
  }

  export type MovingJobOrderByWithRelationInput = {
    id?: SortOrder
    jobCode?: SortOrder
    jobTitle?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientEmail?: SortOrderInput | SortOrder
    jobDate?: SortOrder
    jobAddress?: SortOrder
    dropoffAddress?: SortOrderInput | SortOrder
    status?: SortOrder
    teamLeaderId?: SortOrderInput | SortOrder
    driverName?: SortOrderInput | SortOrder
    vehicleNumber?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
    company?: CompanyOrderByWithRelationInput
    teamLeader?: UserOrderByWithRelationInput
    assignments?: JobAssignmentOrderByRelationAggregateInput
    materialIssues?: MaterialIssueOrderByRelationAggregateInput
    materialReturns?: MaterialReturnOrderByRelationAggregateInput
    costSnapshots?: JobCostSnapshotOrderByRelationAggregateInput
    approvals?: MaterialApprovalOrderByRelationAggregateInput
  }

  export type MovingJobWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    jobCode?: string
    AND?: MovingJobWhereInput | MovingJobWhereInput[]
    OR?: MovingJobWhereInput[]
    NOT?: MovingJobWhereInput | MovingJobWhereInput[]
    jobTitle?: StringFilter<"MovingJob"> | string
    clientName?: StringFilter<"MovingJob"> | string
    clientPhone?: StringFilter<"MovingJob"> | string
    clientEmail?: StringNullableFilter<"MovingJob"> | string | null
    jobDate?: DateTimeFilter<"MovingJob"> | Date | string
    jobAddress?: StringFilter<"MovingJob"> | string
    dropoffAddress?: StringNullableFilter<"MovingJob"> | string | null
    status?: StringFilter<"MovingJob"> | string
    teamLeaderId?: StringNullableFilter<"MovingJob"> | string | null
    driverName?: StringNullableFilter<"MovingJob"> | string | null
    vehicleNumber?: StringNullableFilter<"MovingJob"> | string | null
    notes?: StringNullableFilter<"MovingJob"> | string | null
    createdAt?: DateTimeFilter<"MovingJob"> | Date | string
    updatedAt?: DateTimeFilter<"MovingJob"> | Date | string
    companyId?: StringFilter<"MovingJob"> | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    teamLeader?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    assignments?: JobAssignmentListRelationFilter
    materialIssues?: MaterialIssueListRelationFilter
    materialReturns?: MaterialReturnListRelationFilter
    costSnapshots?: JobCostSnapshotListRelationFilter
    approvals?: MaterialApprovalListRelationFilter
  }, "id" | "jobCode">

  export type MovingJobOrderByWithAggregationInput = {
    id?: SortOrder
    jobCode?: SortOrder
    jobTitle?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientEmail?: SortOrderInput | SortOrder
    jobDate?: SortOrder
    jobAddress?: SortOrder
    dropoffAddress?: SortOrderInput | SortOrder
    status?: SortOrder
    teamLeaderId?: SortOrderInput | SortOrder
    driverName?: SortOrderInput | SortOrder
    vehicleNumber?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
    _count?: MovingJobCountOrderByAggregateInput
    _max?: MovingJobMaxOrderByAggregateInput
    _min?: MovingJobMinOrderByAggregateInput
  }

  export type MovingJobScalarWhereWithAggregatesInput = {
    AND?: MovingJobScalarWhereWithAggregatesInput | MovingJobScalarWhereWithAggregatesInput[]
    OR?: MovingJobScalarWhereWithAggregatesInput[]
    NOT?: MovingJobScalarWhereWithAggregatesInput | MovingJobScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MovingJob"> | string
    jobCode?: StringWithAggregatesFilter<"MovingJob"> | string
    jobTitle?: StringWithAggregatesFilter<"MovingJob"> | string
    clientName?: StringWithAggregatesFilter<"MovingJob"> | string
    clientPhone?: StringWithAggregatesFilter<"MovingJob"> | string
    clientEmail?: StringNullableWithAggregatesFilter<"MovingJob"> | string | null
    jobDate?: DateTimeWithAggregatesFilter<"MovingJob"> | Date | string
    jobAddress?: StringWithAggregatesFilter<"MovingJob"> | string
    dropoffAddress?: StringNullableWithAggregatesFilter<"MovingJob"> | string | null
    status?: StringWithAggregatesFilter<"MovingJob"> | string
    teamLeaderId?: StringNullableWithAggregatesFilter<"MovingJob"> | string | null
    driverName?: StringNullableWithAggregatesFilter<"MovingJob"> | string | null
    vehicleNumber?: StringNullableWithAggregatesFilter<"MovingJob"> | string | null
    notes?: StringNullableWithAggregatesFilter<"MovingJob"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"MovingJob"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MovingJob"> | Date | string
    companyId?: StringWithAggregatesFilter<"MovingJob"> | string
  }

  export type JobAssignmentWhereInput = {
    AND?: JobAssignmentWhereInput | JobAssignmentWhereInput[]
    OR?: JobAssignmentWhereInput[]
    NOT?: JobAssignmentWhereInput | JobAssignmentWhereInput[]
    id?: StringFilter<"JobAssignment"> | string
    jobId?: StringFilter<"JobAssignment"> | string
    userId?: StringFilter<"JobAssignment"> | string
    role?: StringFilter<"JobAssignment"> | string
    checkInAt?: DateTimeNullableFilter<"JobAssignment"> | Date | string | null
    checkOutAt?: DateTimeNullableFilter<"JobAssignment"> | Date | string | null
    hourlyRate?: FloatNullableFilter<"JobAssignment"> | number | null
    hoursWorked?: FloatNullableFilter<"JobAssignment"> | number | null
    createdAt?: DateTimeFilter<"JobAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"JobAssignment"> | Date | string
    companyId?: StringFilter<"JobAssignment"> | string
    job?: XOR<MovingJobRelationFilter, MovingJobWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type JobAssignmentOrderByWithRelationInput = {
    id?: SortOrder
    jobId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    checkInAt?: SortOrderInput | SortOrder
    checkOutAt?: SortOrderInput | SortOrder
    hourlyRate?: SortOrderInput | SortOrder
    hoursWorked?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
    job?: MovingJobOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type JobAssignmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    jobId_userId_role?: JobAssignmentJobIdUserIdRoleCompoundUniqueInput
    AND?: JobAssignmentWhereInput | JobAssignmentWhereInput[]
    OR?: JobAssignmentWhereInput[]
    NOT?: JobAssignmentWhereInput | JobAssignmentWhereInput[]
    jobId?: StringFilter<"JobAssignment"> | string
    userId?: StringFilter<"JobAssignment"> | string
    role?: StringFilter<"JobAssignment"> | string
    checkInAt?: DateTimeNullableFilter<"JobAssignment"> | Date | string | null
    checkOutAt?: DateTimeNullableFilter<"JobAssignment"> | Date | string | null
    hourlyRate?: FloatNullableFilter<"JobAssignment"> | number | null
    hoursWorked?: FloatNullableFilter<"JobAssignment"> | number | null
    createdAt?: DateTimeFilter<"JobAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"JobAssignment"> | Date | string
    companyId?: StringFilter<"JobAssignment"> | string
    job?: XOR<MovingJobRelationFilter, MovingJobWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id" | "jobId_userId_role">

  export type JobAssignmentOrderByWithAggregationInput = {
    id?: SortOrder
    jobId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    checkInAt?: SortOrderInput | SortOrder
    checkOutAt?: SortOrderInput | SortOrder
    hourlyRate?: SortOrderInput | SortOrder
    hoursWorked?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
    _count?: JobAssignmentCountOrderByAggregateInput
    _avg?: JobAssignmentAvgOrderByAggregateInput
    _max?: JobAssignmentMaxOrderByAggregateInput
    _min?: JobAssignmentMinOrderByAggregateInput
    _sum?: JobAssignmentSumOrderByAggregateInput
  }

  export type JobAssignmentScalarWhereWithAggregatesInput = {
    AND?: JobAssignmentScalarWhereWithAggregatesInput | JobAssignmentScalarWhereWithAggregatesInput[]
    OR?: JobAssignmentScalarWhereWithAggregatesInput[]
    NOT?: JobAssignmentScalarWhereWithAggregatesInput | JobAssignmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"JobAssignment"> | string
    jobId?: StringWithAggregatesFilter<"JobAssignment"> | string
    userId?: StringWithAggregatesFilter<"JobAssignment"> | string
    role?: StringWithAggregatesFilter<"JobAssignment"> | string
    checkInAt?: DateTimeNullableWithAggregatesFilter<"JobAssignment"> | Date | string | null
    checkOutAt?: DateTimeNullableWithAggregatesFilter<"JobAssignment"> | Date | string | null
    hourlyRate?: FloatNullableWithAggregatesFilter<"JobAssignment"> | number | null
    hoursWorked?: FloatNullableWithAggregatesFilter<"JobAssignment"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"JobAssignment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"JobAssignment"> | Date | string
    companyId?: StringWithAggregatesFilter<"JobAssignment"> | string
  }

  export type PackingMaterialWhereInput = {
    AND?: PackingMaterialWhereInput | PackingMaterialWhereInput[]
    OR?: PackingMaterialWhereInput[]
    NOT?: PackingMaterialWhereInput | PackingMaterialWhereInput[]
    id?: StringFilter<"PackingMaterial"> | string
    sku?: StringFilter<"PackingMaterial"> | string
    name?: StringFilter<"PackingMaterial"> | string
    description?: StringNullableFilter<"PackingMaterial"> | string | null
    unit?: StringFilter<"PackingMaterial"> | string
    category?: StringFilter<"PackingMaterial"> | string
    minStockLevel?: IntFilter<"PackingMaterial"> | number
    totalQuantity?: IntFilter<"PackingMaterial"> | number
    unitCost?: FloatNullableFilter<"PackingMaterial"> | number | null
    sellingPrice?: FloatNullableFilter<"PackingMaterial"> | number | null
    isActive?: BoolFilter<"PackingMaterial"> | boolean
    companyId?: StringFilter<"PackingMaterial"> | string
    createdAt?: DateTimeFilter<"PackingMaterial"> | Date | string
    updatedAt?: DateTimeFilter<"PackingMaterial"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    stockBatches?: StockBatchListRelationFilter
    rackLevels?: RackStockLevelListRelationFilter
    materialIssues?: MaterialIssueListRelationFilter
    materialReturns?: MaterialReturnListRelationFilter
    materialDamages?: MaterialDamageListRelationFilter
  }

  export type PackingMaterialOrderByWithRelationInput = {
    id?: SortOrder
    sku?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    unit?: SortOrder
    category?: SortOrder
    minStockLevel?: SortOrder
    totalQuantity?: SortOrder
    unitCost?: SortOrderInput | SortOrder
    sellingPrice?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    stockBatches?: StockBatchOrderByRelationAggregateInput
    rackLevels?: RackStockLevelOrderByRelationAggregateInput
    materialIssues?: MaterialIssueOrderByRelationAggregateInput
    materialReturns?: MaterialReturnOrderByRelationAggregateInput
    materialDamages?: MaterialDamageOrderByRelationAggregateInput
  }

  export type PackingMaterialWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sku_companyId?: PackingMaterialSkuCompanyIdCompoundUniqueInput
    AND?: PackingMaterialWhereInput | PackingMaterialWhereInput[]
    OR?: PackingMaterialWhereInput[]
    NOT?: PackingMaterialWhereInput | PackingMaterialWhereInput[]
    sku?: StringFilter<"PackingMaterial"> | string
    name?: StringFilter<"PackingMaterial"> | string
    description?: StringNullableFilter<"PackingMaterial"> | string | null
    unit?: StringFilter<"PackingMaterial"> | string
    category?: StringFilter<"PackingMaterial"> | string
    minStockLevel?: IntFilter<"PackingMaterial"> | number
    totalQuantity?: IntFilter<"PackingMaterial"> | number
    unitCost?: FloatNullableFilter<"PackingMaterial"> | number | null
    sellingPrice?: FloatNullableFilter<"PackingMaterial"> | number | null
    isActive?: BoolFilter<"PackingMaterial"> | boolean
    companyId?: StringFilter<"PackingMaterial"> | string
    createdAt?: DateTimeFilter<"PackingMaterial"> | Date | string
    updatedAt?: DateTimeFilter<"PackingMaterial"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    stockBatches?: StockBatchListRelationFilter
    rackLevels?: RackStockLevelListRelationFilter
    materialIssues?: MaterialIssueListRelationFilter
    materialReturns?: MaterialReturnListRelationFilter
    materialDamages?: MaterialDamageListRelationFilter
  }, "id" | "sku_companyId">

  export type PackingMaterialOrderByWithAggregationInput = {
    id?: SortOrder
    sku?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    unit?: SortOrder
    category?: SortOrder
    minStockLevel?: SortOrder
    totalQuantity?: SortOrder
    unitCost?: SortOrderInput | SortOrder
    sellingPrice?: SortOrderInput | SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PackingMaterialCountOrderByAggregateInput
    _avg?: PackingMaterialAvgOrderByAggregateInput
    _max?: PackingMaterialMaxOrderByAggregateInput
    _min?: PackingMaterialMinOrderByAggregateInput
    _sum?: PackingMaterialSumOrderByAggregateInput
  }

  export type PackingMaterialScalarWhereWithAggregatesInput = {
    AND?: PackingMaterialScalarWhereWithAggregatesInput | PackingMaterialScalarWhereWithAggregatesInput[]
    OR?: PackingMaterialScalarWhereWithAggregatesInput[]
    NOT?: PackingMaterialScalarWhereWithAggregatesInput | PackingMaterialScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PackingMaterial"> | string
    sku?: StringWithAggregatesFilter<"PackingMaterial"> | string
    name?: StringWithAggregatesFilter<"PackingMaterial"> | string
    description?: StringNullableWithAggregatesFilter<"PackingMaterial"> | string | null
    unit?: StringWithAggregatesFilter<"PackingMaterial"> | string
    category?: StringWithAggregatesFilter<"PackingMaterial"> | string
    minStockLevel?: IntWithAggregatesFilter<"PackingMaterial"> | number
    totalQuantity?: IntWithAggregatesFilter<"PackingMaterial"> | number
    unitCost?: FloatNullableWithAggregatesFilter<"PackingMaterial"> | number | null
    sellingPrice?: FloatNullableWithAggregatesFilter<"PackingMaterial"> | number | null
    isActive?: BoolWithAggregatesFilter<"PackingMaterial"> | boolean
    companyId?: StringWithAggregatesFilter<"PackingMaterial"> | string
    createdAt?: DateTimeWithAggregatesFilter<"PackingMaterial"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PackingMaterial"> | Date | string
  }

  export type VendorWhereInput = {
    AND?: VendorWhereInput | VendorWhereInput[]
    OR?: VendorWhereInput[]
    NOT?: VendorWhereInput | VendorWhereInput[]
    id?: StringFilter<"Vendor"> | string
    name?: StringFilter<"Vendor"> | string
    contact?: StringNullableFilter<"Vendor"> | string | null
    phone?: StringNullableFilter<"Vendor"> | string | null
    email?: StringNullableFilter<"Vendor"> | string | null
    notes?: StringNullableFilter<"Vendor"> | string | null
    companyId?: StringFilter<"Vendor"> | string
    createdAt?: DateTimeFilter<"Vendor"> | Date | string
    updatedAt?: DateTimeFilter<"Vendor"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    stockBatches?: StockBatchListRelationFilter
  }

  export type VendorOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    contact?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    company?: CompanyOrderByWithRelationInput
    stockBatches?: StockBatchOrderByRelationAggregateInput
  }

  export type VendorWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name_companyId?: VendorNameCompanyIdCompoundUniqueInput
    AND?: VendorWhereInput | VendorWhereInput[]
    OR?: VendorWhereInput[]
    NOT?: VendorWhereInput | VendorWhereInput[]
    name?: StringFilter<"Vendor"> | string
    contact?: StringNullableFilter<"Vendor"> | string | null
    phone?: StringNullableFilter<"Vendor"> | string | null
    email?: StringNullableFilter<"Vendor"> | string | null
    notes?: StringNullableFilter<"Vendor"> | string | null
    companyId?: StringFilter<"Vendor"> | string
    createdAt?: DateTimeFilter<"Vendor"> | Date | string
    updatedAt?: DateTimeFilter<"Vendor"> | Date | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    stockBatches?: StockBatchListRelationFilter
  }, "id" | "name_companyId">

  export type VendorOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    contact?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: VendorCountOrderByAggregateInput
    _max?: VendorMaxOrderByAggregateInput
    _min?: VendorMinOrderByAggregateInput
  }

  export type VendorScalarWhereWithAggregatesInput = {
    AND?: VendorScalarWhereWithAggregatesInput | VendorScalarWhereWithAggregatesInput[]
    OR?: VendorScalarWhereWithAggregatesInput[]
    NOT?: VendorScalarWhereWithAggregatesInput | VendorScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Vendor"> | string
    name?: StringWithAggregatesFilter<"Vendor"> | string
    contact?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    email?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    notes?: StringNullableWithAggregatesFilter<"Vendor"> | string | null
    companyId?: StringWithAggregatesFilter<"Vendor"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Vendor"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Vendor"> | Date | string
  }

  export type StockBatchWhereInput = {
    AND?: StockBatchWhereInput | StockBatchWhereInput[]
    OR?: StockBatchWhereInput[]
    NOT?: StockBatchWhereInput | StockBatchWhereInput[]
    id?: StringFilter<"StockBatch"> | string
    materialId?: StringFilter<"StockBatch"> | string
    vendorId?: StringNullableFilter<"StockBatch"> | string | null
    vendorName?: StringNullableFilter<"StockBatch"> | string | null
    purchaseOrder?: StringNullableFilter<"StockBatch"> | string | null
    purchaseDate?: DateTimeFilter<"StockBatch"> | Date | string
    quantityPurchased?: IntFilter<"StockBatch"> | number
    quantityRemaining?: IntFilter<"StockBatch"> | number
    unitCost?: FloatFilter<"StockBatch"> | number
    sellingPrice?: FloatNullableFilter<"StockBatch"> | number | null
    receivedById?: StringNullableFilter<"StockBatch"> | string | null
    notes?: StringNullableFilter<"StockBatch"> | string | null
    companyId?: StringFilter<"StockBatch"> | string
    createdAt?: DateTimeFilter<"StockBatch"> | Date | string
    updatedAt?: DateTimeFilter<"StockBatch"> | Date | string
    material?: XOR<PackingMaterialRelationFilter, PackingMaterialWhereInput>
    vendor?: XOR<VendorNullableRelationFilter, VendorWhereInput> | null
    receivedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    rackAllocations?: RackStockLevelListRelationFilter
    issues?: MaterialIssueListRelationFilter
  }

  export type StockBatchOrderByWithRelationInput = {
    id?: SortOrder
    materialId?: SortOrder
    vendorId?: SortOrderInput | SortOrder
    vendorName?: SortOrderInput | SortOrder
    purchaseOrder?: SortOrderInput | SortOrder
    purchaseDate?: SortOrder
    quantityPurchased?: SortOrder
    quantityRemaining?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrderInput | SortOrder
    receivedById?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    material?: PackingMaterialOrderByWithRelationInput
    vendor?: VendorOrderByWithRelationInput
    receivedBy?: UserOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
    rackAllocations?: RackStockLevelOrderByRelationAggregateInput
    issues?: MaterialIssueOrderByRelationAggregateInput
  }

  export type StockBatchWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: StockBatchWhereInput | StockBatchWhereInput[]
    OR?: StockBatchWhereInput[]
    NOT?: StockBatchWhereInput | StockBatchWhereInput[]
    materialId?: StringFilter<"StockBatch"> | string
    vendorId?: StringNullableFilter<"StockBatch"> | string | null
    vendorName?: StringNullableFilter<"StockBatch"> | string | null
    purchaseOrder?: StringNullableFilter<"StockBatch"> | string | null
    purchaseDate?: DateTimeFilter<"StockBatch"> | Date | string
    quantityPurchased?: IntFilter<"StockBatch"> | number
    quantityRemaining?: IntFilter<"StockBatch"> | number
    unitCost?: FloatFilter<"StockBatch"> | number
    sellingPrice?: FloatNullableFilter<"StockBatch"> | number | null
    receivedById?: StringNullableFilter<"StockBatch"> | string | null
    notes?: StringNullableFilter<"StockBatch"> | string | null
    companyId?: StringFilter<"StockBatch"> | string
    createdAt?: DateTimeFilter<"StockBatch"> | Date | string
    updatedAt?: DateTimeFilter<"StockBatch"> | Date | string
    material?: XOR<PackingMaterialRelationFilter, PackingMaterialWhereInput>
    vendor?: XOR<VendorNullableRelationFilter, VendorWhereInput> | null
    receivedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    rackAllocations?: RackStockLevelListRelationFilter
    issues?: MaterialIssueListRelationFilter
  }, "id">

  export type StockBatchOrderByWithAggregationInput = {
    id?: SortOrder
    materialId?: SortOrder
    vendorId?: SortOrderInput | SortOrder
    vendorName?: SortOrderInput | SortOrder
    purchaseOrder?: SortOrderInput | SortOrder
    purchaseDate?: SortOrder
    quantityPurchased?: SortOrder
    quantityRemaining?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrderInput | SortOrder
    receivedById?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: StockBatchCountOrderByAggregateInput
    _avg?: StockBatchAvgOrderByAggregateInput
    _max?: StockBatchMaxOrderByAggregateInput
    _min?: StockBatchMinOrderByAggregateInput
    _sum?: StockBatchSumOrderByAggregateInput
  }

  export type StockBatchScalarWhereWithAggregatesInput = {
    AND?: StockBatchScalarWhereWithAggregatesInput | StockBatchScalarWhereWithAggregatesInput[]
    OR?: StockBatchScalarWhereWithAggregatesInput[]
    NOT?: StockBatchScalarWhereWithAggregatesInput | StockBatchScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StockBatch"> | string
    materialId?: StringWithAggregatesFilter<"StockBatch"> | string
    vendorId?: StringNullableWithAggregatesFilter<"StockBatch"> | string | null
    vendorName?: StringNullableWithAggregatesFilter<"StockBatch"> | string | null
    purchaseOrder?: StringNullableWithAggregatesFilter<"StockBatch"> | string | null
    purchaseDate?: DateTimeWithAggregatesFilter<"StockBatch"> | Date | string
    quantityPurchased?: IntWithAggregatesFilter<"StockBatch"> | number
    quantityRemaining?: IntWithAggregatesFilter<"StockBatch"> | number
    unitCost?: FloatWithAggregatesFilter<"StockBatch"> | number
    sellingPrice?: FloatNullableWithAggregatesFilter<"StockBatch"> | number | null
    receivedById?: StringNullableWithAggregatesFilter<"StockBatch"> | string | null
    notes?: StringNullableWithAggregatesFilter<"StockBatch"> | string | null
    companyId?: StringWithAggregatesFilter<"StockBatch"> | string
    createdAt?: DateTimeWithAggregatesFilter<"StockBatch"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"StockBatch"> | Date | string
  }

  export type RackStockLevelWhereInput = {
    AND?: RackStockLevelWhereInput | RackStockLevelWhereInput[]
    OR?: RackStockLevelWhereInput[]
    NOT?: RackStockLevelWhereInput | RackStockLevelWhereInput[]
    id?: StringFilter<"RackStockLevel"> | string
    materialId?: StringFilter<"RackStockLevel"> | string
    rackId?: StringFilter<"RackStockLevel"> | string
    stockBatchId?: StringNullableFilter<"RackStockLevel"> | string | null
    quantity?: IntFilter<"RackStockLevel"> | number
    lastUpdated?: DateTimeFilter<"RackStockLevel"> | Date | string
    companyId?: StringFilter<"RackStockLevel"> | string
    material?: XOR<PackingMaterialRelationFilter, PackingMaterialWhereInput>
    rack?: XOR<RackRelationFilter, RackWhereInput>
    stockBatch?: XOR<StockBatchNullableRelationFilter, StockBatchWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type RackStockLevelOrderByWithRelationInput = {
    id?: SortOrder
    materialId?: SortOrder
    rackId?: SortOrder
    stockBatchId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    lastUpdated?: SortOrder
    companyId?: SortOrder
    material?: PackingMaterialOrderByWithRelationInput
    rack?: RackOrderByWithRelationInput
    stockBatch?: StockBatchOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type RackStockLevelWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    materialId_rackId_stockBatchId?: RackStockLevelMaterialIdRackIdStockBatchIdCompoundUniqueInput
    AND?: RackStockLevelWhereInput | RackStockLevelWhereInput[]
    OR?: RackStockLevelWhereInput[]
    NOT?: RackStockLevelWhereInput | RackStockLevelWhereInput[]
    materialId?: StringFilter<"RackStockLevel"> | string
    rackId?: StringFilter<"RackStockLevel"> | string
    stockBatchId?: StringNullableFilter<"RackStockLevel"> | string | null
    quantity?: IntFilter<"RackStockLevel"> | number
    lastUpdated?: DateTimeFilter<"RackStockLevel"> | Date | string
    companyId?: StringFilter<"RackStockLevel"> | string
    material?: XOR<PackingMaterialRelationFilter, PackingMaterialWhereInput>
    rack?: XOR<RackRelationFilter, RackWhereInput>
    stockBatch?: XOR<StockBatchNullableRelationFilter, StockBatchWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id" | "materialId_rackId_stockBatchId">

  export type RackStockLevelOrderByWithAggregationInput = {
    id?: SortOrder
    materialId?: SortOrder
    rackId?: SortOrder
    stockBatchId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    lastUpdated?: SortOrder
    companyId?: SortOrder
    _count?: RackStockLevelCountOrderByAggregateInput
    _avg?: RackStockLevelAvgOrderByAggregateInput
    _max?: RackStockLevelMaxOrderByAggregateInput
    _min?: RackStockLevelMinOrderByAggregateInput
    _sum?: RackStockLevelSumOrderByAggregateInput
  }

  export type RackStockLevelScalarWhereWithAggregatesInput = {
    AND?: RackStockLevelScalarWhereWithAggregatesInput | RackStockLevelScalarWhereWithAggregatesInput[]
    OR?: RackStockLevelScalarWhereWithAggregatesInput[]
    NOT?: RackStockLevelScalarWhereWithAggregatesInput | RackStockLevelScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RackStockLevel"> | string
    materialId?: StringWithAggregatesFilter<"RackStockLevel"> | string
    rackId?: StringWithAggregatesFilter<"RackStockLevel"> | string
    stockBatchId?: StringNullableWithAggregatesFilter<"RackStockLevel"> | string | null
    quantity?: IntWithAggregatesFilter<"RackStockLevel"> | number
    lastUpdated?: DateTimeWithAggregatesFilter<"RackStockLevel"> | Date | string
    companyId?: StringWithAggregatesFilter<"RackStockLevel"> | string
  }

  export type MaterialIssueWhereInput = {
    AND?: MaterialIssueWhereInput | MaterialIssueWhereInput[]
    OR?: MaterialIssueWhereInput[]
    NOT?: MaterialIssueWhereInput | MaterialIssueWhereInput[]
    id?: StringFilter<"MaterialIssue"> | string
    jobId?: StringFilter<"MaterialIssue"> | string
    materialId?: StringFilter<"MaterialIssue"> | string
    stockBatchId?: StringNullableFilter<"MaterialIssue"> | string | null
    quantity?: IntFilter<"MaterialIssue"> | number
    unitCost?: FloatFilter<"MaterialIssue"> | number
    totalCost?: FloatFilter<"MaterialIssue"> | number
    rackId?: StringNullableFilter<"MaterialIssue"> | string | null
    issuedById?: StringNullableFilter<"MaterialIssue"> | string | null
    issuedAt?: DateTimeFilter<"MaterialIssue"> | Date | string
    notes?: StringNullableFilter<"MaterialIssue"> | string | null
    companyId?: StringFilter<"MaterialIssue"> | string
    job?: XOR<MovingJobRelationFilter, MovingJobWhereInput>
    material?: XOR<PackingMaterialRelationFilter, PackingMaterialWhereInput>
    stockBatch?: XOR<StockBatchNullableRelationFilter, StockBatchWhereInput> | null
    rack?: XOR<RackNullableRelationFilter, RackWhereInput> | null
    issuedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    returns?: MaterialReturnListRelationFilter
  }

  export type MaterialIssueOrderByWithRelationInput = {
    id?: SortOrder
    jobId?: SortOrder
    materialId?: SortOrder
    stockBatchId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    rackId?: SortOrderInput | SortOrder
    issuedById?: SortOrderInput | SortOrder
    issuedAt?: SortOrder
    notes?: SortOrderInput | SortOrder
    companyId?: SortOrder
    job?: MovingJobOrderByWithRelationInput
    material?: PackingMaterialOrderByWithRelationInput
    stockBatch?: StockBatchOrderByWithRelationInput
    rack?: RackOrderByWithRelationInput
    issuedBy?: UserOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
    returns?: MaterialReturnOrderByRelationAggregateInput
  }

  export type MaterialIssueWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MaterialIssueWhereInput | MaterialIssueWhereInput[]
    OR?: MaterialIssueWhereInput[]
    NOT?: MaterialIssueWhereInput | MaterialIssueWhereInput[]
    jobId?: StringFilter<"MaterialIssue"> | string
    materialId?: StringFilter<"MaterialIssue"> | string
    stockBatchId?: StringNullableFilter<"MaterialIssue"> | string | null
    quantity?: IntFilter<"MaterialIssue"> | number
    unitCost?: FloatFilter<"MaterialIssue"> | number
    totalCost?: FloatFilter<"MaterialIssue"> | number
    rackId?: StringNullableFilter<"MaterialIssue"> | string | null
    issuedById?: StringNullableFilter<"MaterialIssue"> | string | null
    issuedAt?: DateTimeFilter<"MaterialIssue"> | Date | string
    notes?: StringNullableFilter<"MaterialIssue"> | string | null
    companyId?: StringFilter<"MaterialIssue"> | string
    job?: XOR<MovingJobRelationFilter, MovingJobWhereInput>
    material?: XOR<PackingMaterialRelationFilter, PackingMaterialWhereInput>
    stockBatch?: XOR<StockBatchNullableRelationFilter, StockBatchWhereInput> | null
    rack?: XOR<RackNullableRelationFilter, RackWhereInput> | null
    issuedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    returns?: MaterialReturnListRelationFilter
  }, "id">

  export type MaterialIssueOrderByWithAggregationInput = {
    id?: SortOrder
    jobId?: SortOrder
    materialId?: SortOrder
    stockBatchId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    rackId?: SortOrderInput | SortOrder
    issuedById?: SortOrderInput | SortOrder
    issuedAt?: SortOrder
    notes?: SortOrderInput | SortOrder
    companyId?: SortOrder
    _count?: MaterialIssueCountOrderByAggregateInput
    _avg?: MaterialIssueAvgOrderByAggregateInput
    _max?: MaterialIssueMaxOrderByAggregateInput
    _min?: MaterialIssueMinOrderByAggregateInput
    _sum?: MaterialIssueSumOrderByAggregateInput
  }

  export type MaterialIssueScalarWhereWithAggregatesInput = {
    AND?: MaterialIssueScalarWhereWithAggregatesInput | MaterialIssueScalarWhereWithAggregatesInput[]
    OR?: MaterialIssueScalarWhereWithAggregatesInput[]
    NOT?: MaterialIssueScalarWhereWithAggregatesInput | MaterialIssueScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MaterialIssue"> | string
    jobId?: StringWithAggregatesFilter<"MaterialIssue"> | string
    materialId?: StringWithAggregatesFilter<"MaterialIssue"> | string
    stockBatchId?: StringNullableWithAggregatesFilter<"MaterialIssue"> | string | null
    quantity?: IntWithAggregatesFilter<"MaterialIssue"> | number
    unitCost?: FloatWithAggregatesFilter<"MaterialIssue"> | number
    totalCost?: FloatWithAggregatesFilter<"MaterialIssue"> | number
    rackId?: StringNullableWithAggregatesFilter<"MaterialIssue"> | string | null
    issuedById?: StringNullableWithAggregatesFilter<"MaterialIssue"> | string | null
    issuedAt?: DateTimeWithAggregatesFilter<"MaterialIssue"> | Date | string
    notes?: StringNullableWithAggregatesFilter<"MaterialIssue"> | string | null
    companyId?: StringWithAggregatesFilter<"MaterialIssue"> | string
  }

  export type MaterialReturnWhereInput = {
    AND?: MaterialReturnWhereInput | MaterialReturnWhereInput[]
    OR?: MaterialReturnWhereInput[]
    NOT?: MaterialReturnWhereInput | MaterialReturnWhereInput[]
    id?: StringFilter<"MaterialReturn"> | string
    jobId?: StringFilter<"MaterialReturn"> | string
    materialId?: StringFilter<"MaterialReturn"> | string
    issueId?: StringNullableFilter<"MaterialReturn"> | string | null
    quantityIssued?: IntNullableFilter<"MaterialReturn"> | number | null
    quantityUsed?: IntNullableFilter<"MaterialReturn"> | number | null
    quantityGood?: IntFilter<"MaterialReturn"> | number
    quantityDamaged?: IntFilter<"MaterialReturn"> | number
    restocked?: BoolFilter<"MaterialReturn"> | boolean
    restockedAt?: DateTimeNullableFilter<"MaterialReturn"> | Date | string | null
    rackId?: StringNullableFilter<"MaterialReturn"> | string | null
    recordedById?: StringNullableFilter<"MaterialReturn"> | string | null
    recordedAt?: DateTimeFilter<"MaterialReturn"> | Date | string
    notes?: StringNullableFilter<"MaterialReturn"> | string | null
    companyId?: StringFilter<"MaterialReturn"> | string
    job?: XOR<MovingJobRelationFilter, MovingJobWhereInput>
    material?: XOR<PackingMaterialRelationFilter, PackingMaterialWhereInput>
    issue?: XOR<MaterialIssueNullableRelationFilter, MaterialIssueWhereInput> | null
    rack?: XOR<RackNullableRelationFilter, RackWhereInput> | null
    recordedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    damages?: MaterialDamageListRelationFilter
    approval?: XOR<MaterialApprovalNullableRelationFilter, MaterialApprovalWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type MaterialReturnOrderByWithRelationInput = {
    id?: SortOrder
    jobId?: SortOrder
    materialId?: SortOrder
    issueId?: SortOrderInput | SortOrder
    quantityIssued?: SortOrderInput | SortOrder
    quantityUsed?: SortOrderInput | SortOrder
    quantityGood?: SortOrder
    quantityDamaged?: SortOrder
    restocked?: SortOrder
    restockedAt?: SortOrderInput | SortOrder
    rackId?: SortOrderInput | SortOrder
    recordedById?: SortOrderInput | SortOrder
    recordedAt?: SortOrder
    notes?: SortOrderInput | SortOrder
    companyId?: SortOrder
    job?: MovingJobOrderByWithRelationInput
    material?: PackingMaterialOrderByWithRelationInput
    issue?: MaterialIssueOrderByWithRelationInput
    rack?: RackOrderByWithRelationInput
    recordedBy?: UserOrderByWithRelationInput
    damages?: MaterialDamageOrderByRelationAggregateInput
    approval?: MaterialApprovalOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type MaterialReturnWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MaterialReturnWhereInput | MaterialReturnWhereInput[]
    OR?: MaterialReturnWhereInput[]
    NOT?: MaterialReturnWhereInput | MaterialReturnWhereInput[]
    jobId?: StringFilter<"MaterialReturn"> | string
    materialId?: StringFilter<"MaterialReturn"> | string
    issueId?: StringNullableFilter<"MaterialReturn"> | string | null
    quantityIssued?: IntNullableFilter<"MaterialReturn"> | number | null
    quantityUsed?: IntNullableFilter<"MaterialReturn"> | number | null
    quantityGood?: IntFilter<"MaterialReturn"> | number
    quantityDamaged?: IntFilter<"MaterialReturn"> | number
    restocked?: BoolFilter<"MaterialReturn"> | boolean
    restockedAt?: DateTimeNullableFilter<"MaterialReturn"> | Date | string | null
    rackId?: StringNullableFilter<"MaterialReturn"> | string | null
    recordedById?: StringNullableFilter<"MaterialReturn"> | string | null
    recordedAt?: DateTimeFilter<"MaterialReturn"> | Date | string
    notes?: StringNullableFilter<"MaterialReturn"> | string | null
    companyId?: StringFilter<"MaterialReturn"> | string
    job?: XOR<MovingJobRelationFilter, MovingJobWhereInput>
    material?: XOR<PackingMaterialRelationFilter, PackingMaterialWhereInput>
    issue?: XOR<MaterialIssueNullableRelationFilter, MaterialIssueWhereInput> | null
    rack?: XOR<RackNullableRelationFilter, RackWhereInput> | null
    recordedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    damages?: MaterialDamageListRelationFilter
    approval?: XOR<MaterialApprovalNullableRelationFilter, MaterialApprovalWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type MaterialReturnOrderByWithAggregationInput = {
    id?: SortOrder
    jobId?: SortOrder
    materialId?: SortOrder
    issueId?: SortOrderInput | SortOrder
    quantityIssued?: SortOrderInput | SortOrder
    quantityUsed?: SortOrderInput | SortOrder
    quantityGood?: SortOrder
    quantityDamaged?: SortOrder
    restocked?: SortOrder
    restockedAt?: SortOrderInput | SortOrder
    rackId?: SortOrderInput | SortOrder
    recordedById?: SortOrderInput | SortOrder
    recordedAt?: SortOrder
    notes?: SortOrderInput | SortOrder
    companyId?: SortOrder
    _count?: MaterialReturnCountOrderByAggregateInput
    _avg?: MaterialReturnAvgOrderByAggregateInput
    _max?: MaterialReturnMaxOrderByAggregateInput
    _min?: MaterialReturnMinOrderByAggregateInput
    _sum?: MaterialReturnSumOrderByAggregateInput
  }

  export type MaterialReturnScalarWhereWithAggregatesInput = {
    AND?: MaterialReturnScalarWhereWithAggregatesInput | MaterialReturnScalarWhereWithAggregatesInput[]
    OR?: MaterialReturnScalarWhereWithAggregatesInput[]
    NOT?: MaterialReturnScalarWhereWithAggregatesInput | MaterialReturnScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MaterialReturn"> | string
    jobId?: StringWithAggregatesFilter<"MaterialReturn"> | string
    materialId?: StringWithAggregatesFilter<"MaterialReturn"> | string
    issueId?: StringNullableWithAggregatesFilter<"MaterialReturn"> | string | null
    quantityIssued?: IntNullableWithAggregatesFilter<"MaterialReturn"> | number | null
    quantityUsed?: IntNullableWithAggregatesFilter<"MaterialReturn"> | number | null
    quantityGood?: IntWithAggregatesFilter<"MaterialReturn"> | number
    quantityDamaged?: IntWithAggregatesFilter<"MaterialReturn"> | number
    restocked?: BoolWithAggregatesFilter<"MaterialReturn"> | boolean
    restockedAt?: DateTimeNullableWithAggregatesFilter<"MaterialReturn"> | Date | string | null
    rackId?: StringNullableWithAggregatesFilter<"MaterialReturn"> | string | null
    recordedById?: StringNullableWithAggregatesFilter<"MaterialReturn"> | string | null
    recordedAt?: DateTimeWithAggregatesFilter<"MaterialReturn"> | Date | string
    notes?: StringNullableWithAggregatesFilter<"MaterialReturn"> | string | null
    companyId?: StringWithAggregatesFilter<"MaterialReturn"> | string
  }

  export type MaterialDamageWhereInput = {
    AND?: MaterialDamageWhereInput | MaterialDamageWhereInput[]
    OR?: MaterialDamageWhereInput[]
    NOT?: MaterialDamageWhereInput | MaterialDamageWhereInput[]
    id?: StringFilter<"MaterialDamage"> | string
    returnId?: StringFilter<"MaterialDamage"> | string
    materialId?: StringFilter<"MaterialDamage"> | string
    quantity?: IntFilter<"MaterialDamage"> | number
    reason?: StringNullableFilter<"MaterialDamage"> | string | null
    photoUrls?: StringNullableFilter<"MaterialDamage"> | string | null
    status?: StringFilter<"MaterialDamage"> | string
    recordedById?: StringNullableFilter<"MaterialDamage"> | string | null
    recordedAt?: DateTimeFilter<"MaterialDamage"> | Date | string
    approvedById?: StringNullableFilter<"MaterialDamage"> | string | null
    approvedAt?: DateTimeNullableFilter<"MaterialDamage"> | Date | string | null
    approvalNotes?: StringNullableFilter<"MaterialDamage"> | string | null
    rejectionReason?: StringNullableFilter<"MaterialDamage"> | string | null
    companyId?: StringFilter<"MaterialDamage"> | string
    material?: XOR<PackingMaterialRelationFilter, PackingMaterialWhereInput>
    return?: XOR<MaterialReturnRelationFilter, MaterialReturnWhereInput>
    recordedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    approvedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    approval?: XOR<MaterialApprovalNullableRelationFilter, MaterialApprovalWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type MaterialDamageOrderByWithRelationInput = {
    id?: SortOrder
    returnId?: SortOrder
    materialId?: SortOrder
    quantity?: SortOrder
    reason?: SortOrderInput | SortOrder
    photoUrls?: SortOrderInput | SortOrder
    status?: SortOrder
    recordedById?: SortOrderInput | SortOrder
    recordedAt?: SortOrder
    approvedById?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    approvalNotes?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    companyId?: SortOrder
    material?: PackingMaterialOrderByWithRelationInput
    return?: MaterialReturnOrderByWithRelationInput
    recordedBy?: UserOrderByWithRelationInput
    approvedBy?: UserOrderByWithRelationInput
    approval?: MaterialApprovalOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type MaterialDamageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MaterialDamageWhereInput | MaterialDamageWhereInput[]
    OR?: MaterialDamageWhereInput[]
    NOT?: MaterialDamageWhereInput | MaterialDamageWhereInput[]
    returnId?: StringFilter<"MaterialDamage"> | string
    materialId?: StringFilter<"MaterialDamage"> | string
    quantity?: IntFilter<"MaterialDamage"> | number
    reason?: StringNullableFilter<"MaterialDamage"> | string | null
    photoUrls?: StringNullableFilter<"MaterialDamage"> | string | null
    status?: StringFilter<"MaterialDamage"> | string
    recordedById?: StringNullableFilter<"MaterialDamage"> | string | null
    recordedAt?: DateTimeFilter<"MaterialDamage"> | Date | string
    approvedById?: StringNullableFilter<"MaterialDamage"> | string | null
    approvedAt?: DateTimeNullableFilter<"MaterialDamage"> | Date | string | null
    approvalNotes?: StringNullableFilter<"MaterialDamage"> | string | null
    rejectionReason?: StringNullableFilter<"MaterialDamage"> | string | null
    companyId?: StringFilter<"MaterialDamage"> | string
    material?: XOR<PackingMaterialRelationFilter, PackingMaterialWhereInput>
    return?: XOR<MaterialReturnRelationFilter, MaterialReturnWhereInput>
    recordedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    approvedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    approval?: XOR<MaterialApprovalNullableRelationFilter, MaterialApprovalWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type MaterialDamageOrderByWithAggregationInput = {
    id?: SortOrder
    returnId?: SortOrder
    materialId?: SortOrder
    quantity?: SortOrder
    reason?: SortOrderInput | SortOrder
    photoUrls?: SortOrderInput | SortOrder
    status?: SortOrder
    recordedById?: SortOrderInput | SortOrder
    recordedAt?: SortOrder
    approvedById?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    approvalNotes?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    companyId?: SortOrder
    _count?: MaterialDamageCountOrderByAggregateInput
    _avg?: MaterialDamageAvgOrderByAggregateInput
    _max?: MaterialDamageMaxOrderByAggregateInput
    _min?: MaterialDamageMinOrderByAggregateInput
    _sum?: MaterialDamageSumOrderByAggregateInput
  }

  export type MaterialDamageScalarWhereWithAggregatesInput = {
    AND?: MaterialDamageScalarWhereWithAggregatesInput | MaterialDamageScalarWhereWithAggregatesInput[]
    OR?: MaterialDamageScalarWhereWithAggregatesInput[]
    NOT?: MaterialDamageScalarWhereWithAggregatesInput | MaterialDamageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MaterialDamage"> | string
    returnId?: StringWithAggregatesFilter<"MaterialDamage"> | string
    materialId?: StringWithAggregatesFilter<"MaterialDamage"> | string
    quantity?: IntWithAggregatesFilter<"MaterialDamage"> | number
    reason?: StringNullableWithAggregatesFilter<"MaterialDamage"> | string | null
    photoUrls?: StringNullableWithAggregatesFilter<"MaterialDamage"> | string | null
    status?: StringWithAggregatesFilter<"MaterialDamage"> | string
    recordedById?: StringNullableWithAggregatesFilter<"MaterialDamage"> | string | null
    recordedAt?: DateTimeWithAggregatesFilter<"MaterialDamage"> | Date | string
    approvedById?: StringNullableWithAggregatesFilter<"MaterialDamage"> | string | null
    approvedAt?: DateTimeNullableWithAggregatesFilter<"MaterialDamage"> | Date | string | null
    approvalNotes?: StringNullableWithAggregatesFilter<"MaterialDamage"> | string | null
    rejectionReason?: StringNullableWithAggregatesFilter<"MaterialDamage"> | string | null
    companyId?: StringWithAggregatesFilter<"MaterialDamage"> | string
  }

  export type MaterialApprovalWhereInput = {
    AND?: MaterialApprovalWhereInput | MaterialApprovalWhereInput[]
    OR?: MaterialApprovalWhereInput[]
    NOT?: MaterialApprovalWhereInput | MaterialApprovalWhereInput[]
    id?: StringFilter<"MaterialApproval"> | string
    jobId?: StringFilter<"MaterialApproval"> | string
    approvalType?: StringFilter<"MaterialApproval"> | string
    status?: StringFilter<"MaterialApproval"> | string
    requestedById?: StringNullableFilter<"MaterialApproval"> | string | null
    requestedAt?: DateTimeFilter<"MaterialApproval"> | Date | string
    decisionById?: StringNullableFilter<"MaterialApproval"> | string | null
    decidedAt?: DateTimeNullableFilter<"MaterialApproval"> | Date | string | null
    decisionNotes?: StringNullableFilter<"MaterialApproval"> | string | null
    subjectReturnId?: StringNullableFilter<"MaterialApproval"> | string | null
    subjectDamageId?: StringNullableFilter<"MaterialApproval"> | string | null
    companyId?: StringFilter<"MaterialApproval"> | string
    job?: XOR<MovingJobRelationFilter, MovingJobWhereInput>
    requestedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    decisionBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    subjectReturn?: XOR<MaterialReturnNullableRelationFilter, MaterialReturnWhereInput> | null
    subjectDamage?: XOR<MaterialDamageNullableRelationFilter, MaterialDamageWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type MaterialApprovalOrderByWithRelationInput = {
    id?: SortOrder
    jobId?: SortOrder
    approvalType?: SortOrder
    status?: SortOrder
    requestedById?: SortOrderInput | SortOrder
    requestedAt?: SortOrder
    decisionById?: SortOrderInput | SortOrder
    decidedAt?: SortOrderInput | SortOrder
    decisionNotes?: SortOrderInput | SortOrder
    subjectReturnId?: SortOrderInput | SortOrder
    subjectDamageId?: SortOrderInput | SortOrder
    companyId?: SortOrder
    job?: MovingJobOrderByWithRelationInput
    requestedBy?: UserOrderByWithRelationInput
    decisionBy?: UserOrderByWithRelationInput
    subjectReturn?: MaterialReturnOrderByWithRelationInput
    subjectDamage?: MaterialDamageOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type MaterialApprovalWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    subjectReturnId?: string
    subjectDamageId?: string
    AND?: MaterialApprovalWhereInput | MaterialApprovalWhereInput[]
    OR?: MaterialApprovalWhereInput[]
    NOT?: MaterialApprovalWhereInput | MaterialApprovalWhereInput[]
    jobId?: StringFilter<"MaterialApproval"> | string
    approvalType?: StringFilter<"MaterialApproval"> | string
    status?: StringFilter<"MaterialApproval"> | string
    requestedById?: StringNullableFilter<"MaterialApproval"> | string | null
    requestedAt?: DateTimeFilter<"MaterialApproval"> | Date | string
    decisionById?: StringNullableFilter<"MaterialApproval"> | string | null
    decidedAt?: DateTimeNullableFilter<"MaterialApproval"> | Date | string | null
    decisionNotes?: StringNullableFilter<"MaterialApproval"> | string | null
    companyId?: StringFilter<"MaterialApproval"> | string
    job?: XOR<MovingJobRelationFilter, MovingJobWhereInput>
    requestedBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    decisionBy?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    subjectReturn?: XOR<MaterialReturnNullableRelationFilter, MaterialReturnWhereInput> | null
    subjectDamage?: XOR<MaterialDamageNullableRelationFilter, MaterialDamageWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id" | "subjectReturnId" | "subjectDamageId">

  export type MaterialApprovalOrderByWithAggregationInput = {
    id?: SortOrder
    jobId?: SortOrder
    approvalType?: SortOrder
    status?: SortOrder
    requestedById?: SortOrderInput | SortOrder
    requestedAt?: SortOrder
    decisionById?: SortOrderInput | SortOrder
    decidedAt?: SortOrderInput | SortOrder
    decisionNotes?: SortOrderInput | SortOrder
    subjectReturnId?: SortOrderInput | SortOrder
    subjectDamageId?: SortOrderInput | SortOrder
    companyId?: SortOrder
    _count?: MaterialApprovalCountOrderByAggregateInput
    _max?: MaterialApprovalMaxOrderByAggregateInput
    _min?: MaterialApprovalMinOrderByAggregateInput
  }

  export type MaterialApprovalScalarWhereWithAggregatesInput = {
    AND?: MaterialApprovalScalarWhereWithAggregatesInput | MaterialApprovalScalarWhereWithAggregatesInput[]
    OR?: MaterialApprovalScalarWhereWithAggregatesInput[]
    NOT?: MaterialApprovalScalarWhereWithAggregatesInput | MaterialApprovalScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MaterialApproval"> | string
    jobId?: StringWithAggregatesFilter<"MaterialApproval"> | string
    approvalType?: StringWithAggregatesFilter<"MaterialApproval"> | string
    status?: StringWithAggregatesFilter<"MaterialApproval"> | string
    requestedById?: StringNullableWithAggregatesFilter<"MaterialApproval"> | string | null
    requestedAt?: DateTimeWithAggregatesFilter<"MaterialApproval"> | Date | string
    decisionById?: StringNullableWithAggregatesFilter<"MaterialApproval"> | string | null
    decidedAt?: DateTimeNullableWithAggregatesFilter<"MaterialApproval"> | Date | string | null
    decisionNotes?: StringNullableWithAggregatesFilter<"MaterialApproval"> | string | null
    subjectReturnId?: StringNullableWithAggregatesFilter<"MaterialApproval"> | string | null
    subjectDamageId?: StringNullableWithAggregatesFilter<"MaterialApproval"> | string | null
    companyId?: StringWithAggregatesFilter<"MaterialApproval"> | string
  }

  export type JobCostSnapshotWhereInput = {
    AND?: JobCostSnapshotWhereInput | JobCostSnapshotWhereInput[]
    OR?: JobCostSnapshotWhereInput[]
    NOT?: JobCostSnapshotWhereInput | JobCostSnapshotWhereInput[]
    id?: StringFilter<"JobCostSnapshot"> | string
    jobId?: StringFilter<"JobCostSnapshot"> | string
    recordedAt?: DateTimeFilter<"JobCostSnapshot"> | Date | string
    materialsCost?: FloatFilter<"JobCostSnapshot"> | number
    laborCost?: FloatFilter<"JobCostSnapshot"> | number
    damageLoss?: FloatFilter<"JobCostSnapshot"> | number
    otherCost?: FloatFilter<"JobCostSnapshot"> | number
    revenue?: FloatFilter<"JobCostSnapshot"> | number
    profit?: FloatFilter<"JobCostSnapshot"> | number
    profitMargin?: FloatNullableFilter<"JobCostSnapshot"> | number | null
    currency?: StringFilter<"JobCostSnapshot"> | string
    notes?: StringNullableFilter<"JobCostSnapshot"> | string | null
    companyId?: StringFilter<"JobCostSnapshot"> | string
    job?: XOR<MovingJobRelationFilter, MovingJobWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type JobCostSnapshotOrderByWithRelationInput = {
    id?: SortOrder
    jobId?: SortOrder
    recordedAt?: SortOrder
    materialsCost?: SortOrder
    laborCost?: SortOrder
    damageLoss?: SortOrder
    otherCost?: SortOrder
    revenue?: SortOrder
    profit?: SortOrder
    profitMargin?: SortOrderInput | SortOrder
    currency?: SortOrder
    notes?: SortOrderInput | SortOrder
    companyId?: SortOrder
    job?: MovingJobOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type JobCostSnapshotWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: JobCostSnapshotWhereInput | JobCostSnapshotWhereInput[]
    OR?: JobCostSnapshotWhereInput[]
    NOT?: JobCostSnapshotWhereInput | JobCostSnapshotWhereInput[]
    jobId?: StringFilter<"JobCostSnapshot"> | string
    recordedAt?: DateTimeFilter<"JobCostSnapshot"> | Date | string
    materialsCost?: FloatFilter<"JobCostSnapshot"> | number
    laborCost?: FloatFilter<"JobCostSnapshot"> | number
    damageLoss?: FloatFilter<"JobCostSnapshot"> | number
    otherCost?: FloatFilter<"JobCostSnapshot"> | number
    revenue?: FloatFilter<"JobCostSnapshot"> | number
    profit?: FloatFilter<"JobCostSnapshot"> | number
    profitMargin?: FloatNullableFilter<"JobCostSnapshot"> | number | null
    currency?: StringFilter<"JobCostSnapshot"> | string
    notes?: StringNullableFilter<"JobCostSnapshot"> | string | null
    companyId?: StringFilter<"JobCostSnapshot"> | string
    job?: XOR<MovingJobRelationFilter, MovingJobWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type JobCostSnapshotOrderByWithAggregationInput = {
    id?: SortOrder
    jobId?: SortOrder
    recordedAt?: SortOrder
    materialsCost?: SortOrder
    laborCost?: SortOrder
    damageLoss?: SortOrder
    otherCost?: SortOrder
    revenue?: SortOrder
    profit?: SortOrder
    profitMargin?: SortOrderInput | SortOrder
    currency?: SortOrder
    notes?: SortOrderInput | SortOrder
    companyId?: SortOrder
    _count?: JobCostSnapshotCountOrderByAggregateInput
    _avg?: JobCostSnapshotAvgOrderByAggregateInput
    _max?: JobCostSnapshotMaxOrderByAggregateInput
    _min?: JobCostSnapshotMinOrderByAggregateInput
    _sum?: JobCostSnapshotSumOrderByAggregateInput
  }

  export type JobCostSnapshotScalarWhereWithAggregatesInput = {
    AND?: JobCostSnapshotScalarWhereWithAggregatesInput | JobCostSnapshotScalarWhereWithAggregatesInput[]
    OR?: JobCostSnapshotScalarWhereWithAggregatesInput[]
    NOT?: JobCostSnapshotScalarWhereWithAggregatesInput | JobCostSnapshotScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"JobCostSnapshot"> | string
    jobId?: StringWithAggregatesFilter<"JobCostSnapshot"> | string
    recordedAt?: DateTimeWithAggregatesFilter<"JobCostSnapshot"> | Date | string
    materialsCost?: FloatWithAggregatesFilter<"JobCostSnapshot"> | number
    laborCost?: FloatWithAggregatesFilter<"JobCostSnapshot"> | number
    damageLoss?: FloatWithAggregatesFilter<"JobCostSnapshot"> | number
    otherCost?: FloatWithAggregatesFilter<"JobCostSnapshot"> | number
    revenue?: FloatWithAggregatesFilter<"JobCostSnapshot"> | number
    profit?: FloatWithAggregatesFilter<"JobCostSnapshot"> | number
    profitMargin?: FloatNullableWithAggregatesFilter<"JobCostSnapshot"> | number | null
    currency?: StringWithAggregatesFilter<"JobCostSnapshot"> | string
    notes?: StringNullableWithAggregatesFilter<"JobCostSnapshot"> | string | null
    companyId?: StringWithAggregatesFilter<"JobCostSnapshot"> | string
  }

  export type SystemPluginWhereInput = {
    AND?: SystemPluginWhereInput | SystemPluginWhereInput[]
    OR?: SystemPluginWhereInput[]
    NOT?: SystemPluginWhereInput | SystemPluginWhereInput[]
    id?: StringFilter<"SystemPlugin"> | string
    name?: StringFilter<"SystemPlugin"> | string
    description?: StringNullableFilter<"SystemPlugin"> | string | null
    version?: StringFilter<"SystemPlugin"> | string
    status?: StringFilter<"SystemPlugin"> | string
    entryPointUrl?: StringNullableFilter<"SystemPlugin"> | string | null
    checksum?: StringNullableFilter<"SystemPlugin"> | string | null
    installedAt?: DateTimeFilter<"SystemPlugin"> | Date | string
    activatedAt?: DateTimeNullableFilter<"SystemPlugin"> | Date | string | null
    deactivatedAt?: DateTimeNullableFilter<"SystemPlugin"> | Date | string | null
    companyId?: StringFilter<"SystemPlugin"> | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    auditLogs?: SystemPluginLogListRelationFilter
  }

  export type SystemPluginOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    version?: SortOrder
    status?: SortOrder
    entryPointUrl?: SortOrderInput | SortOrder
    checksum?: SortOrderInput | SortOrder
    installedAt?: SortOrder
    activatedAt?: SortOrderInput | SortOrder
    deactivatedAt?: SortOrderInput | SortOrder
    companyId?: SortOrder
    company?: CompanyOrderByWithRelationInput
    auditLogs?: SystemPluginLogOrderByRelationAggregateInput
  }

  export type SystemPluginWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name_companyId?: SystemPluginNameCompanyIdCompoundUniqueInput
    AND?: SystemPluginWhereInput | SystemPluginWhereInput[]
    OR?: SystemPluginWhereInput[]
    NOT?: SystemPluginWhereInput | SystemPluginWhereInput[]
    name?: StringFilter<"SystemPlugin"> | string
    description?: StringNullableFilter<"SystemPlugin"> | string | null
    version?: StringFilter<"SystemPlugin"> | string
    status?: StringFilter<"SystemPlugin"> | string
    entryPointUrl?: StringNullableFilter<"SystemPlugin"> | string | null
    checksum?: StringNullableFilter<"SystemPlugin"> | string | null
    installedAt?: DateTimeFilter<"SystemPlugin"> | Date | string
    activatedAt?: DateTimeNullableFilter<"SystemPlugin"> | Date | string | null
    deactivatedAt?: DateTimeNullableFilter<"SystemPlugin"> | Date | string | null
    companyId?: StringFilter<"SystemPlugin"> | string
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    auditLogs?: SystemPluginLogListRelationFilter
  }, "id" | "name_companyId">

  export type SystemPluginOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    version?: SortOrder
    status?: SortOrder
    entryPointUrl?: SortOrderInput | SortOrder
    checksum?: SortOrderInput | SortOrder
    installedAt?: SortOrder
    activatedAt?: SortOrderInput | SortOrder
    deactivatedAt?: SortOrderInput | SortOrder
    companyId?: SortOrder
    _count?: SystemPluginCountOrderByAggregateInput
    _max?: SystemPluginMaxOrderByAggregateInput
    _min?: SystemPluginMinOrderByAggregateInput
  }

  export type SystemPluginScalarWhereWithAggregatesInput = {
    AND?: SystemPluginScalarWhereWithAggregatesInput | SystemPluginScalarWhereWithAggregatesInput[]
    OR?: SystemPluginScalarWhereWithAggregatesInput[]
    NOT?: SystemPluginScalarWhereWithAggregatesInput | SystemPluginScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SystemPlugin"> | string
    name?: StringWithAggregatesFilter<"SystemPlugin"> | string
    description?: StringNullableWithAggregatesFilter<"SystemPlugin"> | string | null
    version?: StringWithAggregatesFilter<"SystemPlugin"> | string
    status?: StringWithAggregatesFilter<"SystemPlugin"> | string
    entryPointUrl?: StringNullableWithAggregatesFilter<"SystemPlugin"> | string | null
    checksum?: StringNullableWithAggregatesFilter<"SystemPlugin"> | string | null
    installedAt?: DateTimeWithAggregatesFilter<"SystemPlugin"> | Date | string
    activatedAt?: DateTimeNullableWithAggregatesFilter<"SystemPlugin"> | Date | string | null
    deactivatedAt?: DateTimeNullableWithAggregatesFilter<"SystemPlugin"> | Date | string | null
    companyId?: StringWithAggregatesFilter<"SystemPlugin"> | string
  }

  export type SystemPluginLogWhereInput = {
    AND?: SystemPluginLogWhereInput | SystemPluginLogWhereInput[]
    OR?: SystemPluginLogWhereInput[]
    NOT?: SystemPluginLogWhereInput | SystemPluginLogWhereInput[]
    id?: StringFilter<"SystemPluginLog"> | string
    pluginId?: StringFilter<"SystemPluginLog"> | string
    action?: StringFilter<"SystemPluginLog"> | string
    status?: StringFilter<"SystemPluginLog"> | string
    message?: StringNullableFilter<"SystemPluginLog"> | string | null
    performedBy?: StringNullableFilter<"SystemPluginLog"> | string | null
    createdAt?: DateTimeFilter<"SystemPluginLog"> | Date | string
    companyId?: StringFilter<"SystemPluginLog"> | string
    plugin?: XOR<SystemPluginRelationFilter, SystemPluginWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type SystemPluginLogOrderByWithRelationInput = {
    id?: SortOrder
    pluginId?: SortOrder
    action?: SortOrder
    status?: SortOrder
    message?: SortOrderInput | SortOrder
    performedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    companyId?: SortOrder
    plugin?: SystemPluginOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type SystemPluginLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SystemPluginLogWhereInput | SystemPluginLogWhereInput[]
    OR?: SystemPluginLogWhereInput[]
    NOT?: SystemPluginLogWhereInput | SystemPluginLogWhereInput[]
    pluginId?: StringFilter<"SystemPluginLog"> | string
    action?: StringFilter<"SystemPluginLog"> | string
    status?: StringFilter<"SystemPluginLog"> | string
    message?: StringNullableFilter<"SystemPluginLog"> | string | null
    performedBy?: StringNullableFilter<"SystemPluginLog"> | string | null
    createdAt?: DateTimeFilter<"SystemPluginLog"> | Date | string
    companyId?: StringFilter<"SystemPluginLog"> | string
    plugin?: XOR<SystemPluginRelationFilter, SystemPluginWhereInput>
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type SystemPluginLogOrderByWithAggregationInput = {
    id?: SortOrder
    pluginId?: SortOrder
    action?: SortOrder
    status?: SortOrder
    message?: SortOrderInput | SortOrder
    performedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    companyId?: SortOrder
    _count?: SystemPluginLogCountOrderByAggregateInput
    _max?: SystemPluginLogMaxOrderByAggregateInput
    _min?: SystemPluginLogMinOrderByAggregateInput
  }

  export type SystemPluginLogScalarWhereWithAggregatesInput = {
    AND?: SystemPluginLogScalarWhereWithAggregatesInput | SystemPluginLogScalarWhereWithAggregatesInput[]
    OR?: SystemPluginLogScalarWhereWithAggregatesInput[]
    NOT?: SystemPluginLogScalarWhereWithAggregatesInput | SystemPluginLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SystemPluginLog"> | string
    pluginId?: StringWithAggregatesFilter<"SystemPluginLog"> | string
    action?: StringWithAggregatesFilter<"SystemPluginLog"> | string
    status?: StringWithAggregatesFilter<"SystemPluginLog"> | string
    message?: StringNullableWithAggregatesFilter<"SystemPluginLog"> | string | null
    performedBy?: StringNullableWithAggregatesFilter<"SystemPluginLog"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SystemPluginLog"> | Date | string
    companyId?: StringWithAggregatesFilter<"SystemPluginLog"> | string
  }

  export type CompanyCreateInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateManyInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CompanyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RackCreateInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutRacksInput
    shipments?: ShipmentCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxCreateNestedManyWithoutRackInput
    activities?: RackActivityCreateNestedManyWithoutRackInput
    inventory?: RackInventoryCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueCreateNestedManyWithoutRackInput
  }

  export type RackUncheckedCreateInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shipments?: ShipmentUncheckedCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutRackInput
    activities?: RackActivityUncheckedCreateNestedManyWithoutRackInput
    inventory?: RackInventoryUncheckedCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelUncheckedCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnUncheckedCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueUncheckedCreateNestedManyWithoutRackInput
  }

  export type RackUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutRacksNestedInput
    shipments?: ShipmentUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutRackNestedInput
    activities?: RackActivityUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUpdateManyWithoutRackNestedInput
  }

  export type RackUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipments?: ShipmentUncheckedUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutRackNestedInput
    activities?: RackActivityUncheckedUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUncheckedUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUncheckedUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUncheckedUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUncheckedUpdateManyWithoutRackNestedInput
  }

  export type RackCreateManyInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RackUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RackUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RackInventoryCreateInput = {
    id?: string
    itemType: string
    itemId: string
    quantityCurrent?: number
    quantityReserved?: number
    lastMovement?: Date | string
    updatedBy?: string | null
    companyId: string
    rack: RackCreateNestedOneWithoutInventoryInput
  }

  export type RackInventoryUncheckedCreateInput = {
    id?: string
    rackId: string
    itemType: string
    itemId: string
    quantityCurrent?: number
    quantityReserved?: number
    lastMovement?: Date | string
    updatedBy?: string | null
    companyId: string
  }

  export type RackInventoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemId?: StringFieldUpdateOperationsInput | string
    quantityCurrent?: IntFieldUpdateOperationsInput | number
    quantityReserved?: IntFieldUpdateOperationsInput | number
    lastMovement?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    rack?: RackUpdateOneRequiredWithoutInventoryNestedInput
  }

  export type RackInventoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemId?: StringFieldUpdateOperationsInput | string
    quantityCurrent?: IntFieldUpdateOperationsInput | number
    quantityReserved?: IntFieldUpdateOperationsInput | number
    lastMovement?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackInventoryCreateManyInput = {
    id?: string
    rackId: string
    itemType: string
    itemId: string
    quantityCurrent?: number
    quantityReserved?: number
    lastMovement?: Date | string
    updatedBy?: string | null
    companyId: string
  }

  export type RackInventoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemId?: StringFieldUpdateOperationsInput | string
    quantityCurrent?: IntFieldUpdateOperationsInput | number
    quantityReserved?: IntFieldUpdateOperationsInput | number
    lastMovement?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackInventoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemId?: StringFieldUpdateOperationsInput | string
    quantityCurrent?: IntFieldUpdateOperationsInput | number
    quantityReserved?: IntFieldUpdateOperationsInput | number
    lastMovement?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackActivityCreateInput = {
    id?: string
    activityType: string
    itemDetails: string
    quantityBefore?: number | null
    quantityAfter?: number | null
    photos?: string | null
    notes?: string | null
    gpsLocation?: string | null
    timestamp?: Date | string
    companyId: string
    rack: RackCreateNestedOneWithoutActivitiesInput
    user: UserCreateNestedOneWithoutActivitiesInput
  }

  export type RackActivityUncheckedCreateInput = {
    id?: string
    rackId: string
    userId: string
    activityType: string
    itemDetails: string
    quantityBefore?: number | null
    quantityAfter?: number | null
    photos?: string | null
    notes?: string | null
    gpsLocation?: string | null
    timestamp?: Date | string
    companyId: string
  }

  export type RackActivityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    activityType?: StringFieldUpdateOperationsInput | string
    itemDetails?: StringFieldUpdateOperationsInput | string
    quantityBefore?: NullableIntFieldUpdateOperationsInput | number | null
    quantityAfter?: NullableIntFieldUpdateOperationsInput | number | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLocation?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    rack?: RackUpdateOneRequiredWithoutActivitiesNestedInput
    user?: UserUpdateOneRequiredWithoutActivitiesNestedInput
  }

  export type RackActivityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    activityType?: StringFieldUpdateOperationsInput | string
    itemDetails?: StringFieldUpdateOperationsInput | string
    quantityBefore?: NullableIntFieldUpdateOperationsInput | number | null
    quantityAfter?: NullableIntFieldUpdateOperationsInput | number | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLocation?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackActivityCreateManyInput = {
    id?: string
    rackId: string
    userId: string
    activityType: string
    itemDetails: string
    quantityBefore?: number | null
    quantityAfter?: number | null
    photos?: string | null
    notes?: string | null
    gpsLocation?: string | null
    timestamp?: Date | string
    companyId: string
  }

  export type RackActivityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    activityType?: StringFieldUpdateOperationsInput | string
    itemDetails?: StringFieldUpdateOperationsInput | string
    quantityBefore?: NullableIntFieldUpdateOperationsInput | number | null
    quantityAfter?: NullableIntFieldUpdateOperationsInput | number | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLocation?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackActivityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    activityType?: StringFieldUpdateOperationsInput | string
    itemDetails?: StringFieldUpdateOperationsInput | string
    quantityBefore?: NullableIntFieldUpdateOperationsInput | number | null
    quantityAfter?: NullableIntFieldUpdateOperationsInput | number | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLocation?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type ShipmentCreateInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    company: CompanyCreateNestedOneWithoutShipmentsInput
    rack?: RackCreateNestedOneWithoutShipmentsInput
    boxes?: ShipmentBoxCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesCreateNestedOneWithoutShipmentInput
    createdBy?: UserCreateNestedOneWithoutShipmentsCreatedInput
    assignedBy?: UserCreateNestedOneWithoutShipmentsAssignedInput
    releasedBy?: UserCreateNestedOneWithoutShipmentsReleasedInput
  }

  export type ShipmentUncheckedCreateInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalUncheckedCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesUncheckedCreateNestedOneWithoutShipmentInput
  }

  export type ShipmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutShipmentsNestedInput
    rack?: RackUpdateOneWithoutShipmentsNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUpdateOneWithoutShipmentNestedInput
    createdBy?: UserUpdateOneWithoutShipmentsCreatedNestedInput
    assignedBy?: UserUpdateOneWithoutShipmentsAssignedNestedInput
    releasedBy?: UserUpdateOneWithoutShipmentsReleasedNestedInput
  }

  export type ShipmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUncheckedUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUncheckedUpdateOneWithoutShipmentNestedInput
  }

  export type ShipmentCreateManyInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
  }

  export type ShipmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShipmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShipmentBoxCreateInput = {
    id?: string
    boxNumber: number
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    pieceWeight?: number | null
    pieceQR?: string | null
    shipment: ShipmentCreateNestedOneWithoutBoxesInput
    rack?: RackCreateNestedOneWithoutBoxesInput
  }

  export type ShipmentBoxUncheckedCreateInput = {
    id?: string
    shipmentId: string
    boxNumber: number
    qrCode: string
    rackId?: string | null
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    pieceWeight?: number | null
    pieceQR?: string | null
  }

  export type ShipmentBoxUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    boxNumber?: IntFieldUpdateOperationsInput | number
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pieceWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    pieceQR?: NullableStringFieldUpdateOperationsInput | string | null
    shipment?: ShipmentUpdateOneRequiredWithoutBoxesNestedInput
    rack?: RackUpdateOneWithoutBoxesNestedInput
  }

  export type ShipmentBoxUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    boxNumber?: IntFieldUpdateOperationsInput | number
    qrCode?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pieceWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    pieceQR?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShipmentBoxCreateManyInput = {
    id?: string
    shipmentId: string
    boxNumber: number
    qrCode: string
    rackId?: string | null
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    pieceWeight?: number | null
    pieceQR?: string | null
  }

  export type ShipmentBoxUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    boxNumber?: IntFieldUpdateOperationsInput | number
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pieceWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    pieceQR?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShipmentBoxUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    boxNumber?: IntFieldUpdateOperationsInput | number
    qrCode?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pieceWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    pieceQR?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WithdrawalCreateInput = {
    id?: string
    withdrawnBoxCount: number
    remainingBoxCount: number
    withdrawalDate?: Date | string
    status?: string
    reason?: string | null
    notes?: string | null
    photos?: string | null
    receiptNumber?: string | null
    withdrawnBy: string
    authorizedBy?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shipment: ShipmentCreateNestedOneWithoutWithdrawalsInput
  }

  export type WithdrawalUncheckedCreateInput = {
    id?: string
    shipmentId: string
    withdrawnBoxCount: number
    remainingBoxCount: number
    withdrawalDate?: Date | string
    status?: string
    reason?: string | null
    notes?: string | null
    photos?: string | null
    receiptNumber?: string | null
    withdrawnBy: string
    authorizedBy?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WithdrawalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    withdrawnBoxCount?: IntFieldUpdateOperationsInput | number
    remainingBoxCount?: IntFieldUpdateOperationsInput | number
    withdrawalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    withdrawnBy?: StringFieldUpdateOperationsInput | string
    authorizedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipment?: ShipmentUpdateOneRequiredWithoutWithdrawalsNestedInput
  }

  export type WithdrawalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    withdrawnBoxCount?: IntFieldUpdateOperationsInput | number
    remainingBoxCount?: IntFieldUpdateOperationsInput | number
    withdrawalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    withdrawnBy?: StringFieldUpdateOperationsInput | string
    authorizedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WithdrawalCreateManyInput = {
    id?: string
    shipmentId: string
    withdrawnBoxCount: number
    remainingBoxCount: number
    withdrawalDate?: Date | string
    status?: string
    reason?: string | null
    notes?: string | null
    photos?: string | null
    receiptNumber?: string | null
    withdrawnBy: string
    authorizedBy?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WithdrawalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    withdrawnBoxCount?: IntFieldUpdateOperationsInput | number
    remainingBoxCount?: IntFieldUpdateOperationsInput | number
    withdrawalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    withdrawnBy?: StringFieldUpdateOperationsInput | string
    authorizedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WithdrawalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    withdrawnBoxCount?: IntFieldUpdateOperationsInput | number
    remainingBoxCount?: IntFieldUpdateOperationsInput | number
    withdrawalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    withdrawnBy?: StringFieldUpdateOperationsInput | string
    authorizedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExpenseCreateInput = {
    id?: string
    title: string
    category: string
    amount: number
    currency?: string
    description?: string | null
    receipts?: string | null
    expenseDate: Date | string
    approvedBy?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutExpensesInput
  }

  export type ExpenseUncheckedCreateInput = {
    id?: string
    title: string
    category: string
    amount: number
    currency?: string
    description?: string | null
    receipts?: string | null
    expenseDate: Date | string
    approvedBy?: string | null
    status?: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ExpenseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    receipts?: NullableStringFieldUpdateOperationsInput | string | null
    expenseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutExpensesNestedInput
  }

  export type ExpenseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    receipts?: NullableStringFieldUpdateOperationsInput | string | null
    expenseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExpenseCreateManyInput = {
    id?: string
    title: string
    category: string
    amount: number
    currency?: string
    description?: string | null
    receipts?: string | null
    expenseDate: Date | string
    approvedBy?: string | null
    status?: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ExpenseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    receipts?: NullableStringFieldUpdateOperationsInput | string | null
    expenseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExpenseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    receipts?: NullableStringFieldUpdateOperationsInput | string | null
    expenseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceSettingsCreateInput = {
    id?: string
    templateType?: string
    primaryColor?: string
    secondaryColor?: string
    showLogo?: boolean
    footerText?: string | null
    termsConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutInvoiceSettingsInput
  }

  export type InvoiceSettingsUncheckedCreateInput = {
    id?: string
    companyId: string
    templateType?: string
    primaryColor?: string
    secondaryColor?: string
    showLogo?: boolean
    footerText?: string | null
    termsConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InvoiceSettingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateType?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showLogo?: BoolFieldUpdateOperationsInput | boolean
    footerText?: NullableStringFieldUpdateOperationsInput | string | null
    termsConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutInvoiceSettingsNestedInput
  }

  export type InvoiceSettingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    templateType?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showLogo?: BoolFieldUpdateOperationsInput | boolean
    footerText?: NullableStringFieldUpdateOperationsInput | string | null
    termsConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceSettingsCreateManyInput = {
    id?: string
    companyId: string
    templateType?: string
    primaryColor?: string
    secondaryColor?: string
    showLogo?: boolean
    footerText?: string | null
    termsConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InvoiceSettingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateType?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showLogo?: BoolFieldUpdateOperationsInput | boolean
    footerText?: NullableStringFieldUpdateOperationsInput | string | null
    termsConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceSettingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    templateType?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showLogo?: BoolFieldUpdateOperationsInput | boolean
    footerText?: NullableStringFieldUpdateOperationsInput | string | null
    termsConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BillingSettingsCreateInput = {
    id?: string
    storageRateType?: string
    storageRatePerBox?: number
    storageRatePerWeek?: number | null
    storageRatePerMonth?: number | null
    taxEnabled?: boolean
    taxRate?: number
    currency?: string
    invoicePrefix?: string
    invoiceDueDays?: number
    gracePeriodDays?: number
    minimumCharge?: number
    logoUrl?: string | null
    logoPosition?: string
    primaryColor?: string
    secondaryColor?: string
    showCompanyDetails?: boolean
    showBankDetails?: boolean
    showTermsConditions?: boolean
    bankName?: string | null
    accountNumber?: string | null
    accountName?: string | null
    iban?: string | null
    swiftCode?: string | null
    invoiceFooterText?: string | null
    termsAndConditions?: string | null
    paymentInstructions?: string | null
    taxRegistrationNo?: string | null
    companyRegistrationNo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutBillingSettingsInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutBillingSettingsInput
  }

  export type BillingSettingsUncheckedCreateInput = {
    id?: string
    companyId: string
    storageRateType?: string
    storageRatePerBox?: number
    storageRatePerWeek?: number | null
    storageRatePerMonth?: number | null
    taxEnabled?: boolean
    taxRate?: number
    currency?: string
    invoicePrefix?: string
    invoiceDueDays?: number
    gracePeriodDays?: number
    minimumCharge?: number
    logoUrl?: string | null
    logoPosition?: string
    primaryColor?: string
    secondaryColor?: string
    showCompanyDetails?: boolean
    showBankDetails?: boolean
    showTermsConditions?: boolean
    bankName?: string | null
    accountNumber?: string | null
    accountName?: string | null
    iban?: string | null
    swiftCode?: string | null
    invoiceFooterText?: string | null
    termsAndConditions?: string | null
    paymentInstructions?: string | null
    taxRegistrationNo?: string | null
    companyRegistrationNo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutBillingSettingsInput
  }

  export type BillingSettingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    storageRateType?: StringFieldUpdateOperationsInput | string
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    storageRatePerWeek?: NullableFloatFieldUpdateOperationsInput | number | null
    storageRatePerMonth?: NullableFloatFieldUpdateOperationsInput | number | null
    taxEnabled?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    invoicePrefix?: StringFieldUpdateOperationsInput | string
    invoiceDueDays?: IntFieldUpdateOperationsInput | number
    gracePeriodDays?: IntFieldUpdateOperationsInput | number
    minimumCharge?: FloatFieldUpdateOperationsInput | number
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    logoPosition?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showCompanyDetails?: BoolFieldUpdateOperationsInput | boolean
    showBankDetails?: BoolFieldUpdateOperationsInput | boolean
    showTermsConditions?: BoolFieldUpdateOperationsInput | boolean
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountName?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    paymentInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    taxRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutBillingSettingsNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutBillingSettingsNestedInput
  }

  export type BillingSettingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    storageRateType?: StringFieldUpdateOperationsInput | string
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    storageRatePerWeek?: NullableFloatFieldUpdateOperationsInput | number | null
    storageRatePerMonth?: NullableFloatFieldUpdateOperationsInput | number | null
    taxEnabled?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    invoicePrefix?: StringFieldUpdateOperationsInput | string
    invoiceDueDays?: IntFieldUpdateOperationsInput | number
    gracePeriodDays?: IntFieldUpdateOperationsInput | number
    minimumCharge?: FloatFieldUpdateOperationsInput | number
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    logoPosition?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showCompanyDetails?: BoolFieldUpdateOperationsInput | boolean
    showBankDetails?: BoolFieldUpdateOperationsInput | boolean
    showTermsConditions?: BoolFieldUpdateOperationsInput | boolean
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountName?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    paymentInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    taxRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutBillingSettingsNestedInput
  }

  export type BillingSettingsCreateManyInput = {
    id?: string
    companyId: string
    storageRateType?: string
    storageRatePerBox?: number
    storageRatePerWeek?: number | null
    storageRatePerMonth?: number | null
    taxEnabled?: boolean
    taxRate?: number
    currency?: string
    invoicePrefix?: string
    invoiceDueDays?: number
    gracePeriodDays?: number
    minimumCharge?: number
    logoUrl?: string | null
    logoPosition?: string
    primaryColor?: string
    secondaryColor?: string
    showCompanyDetails?: boolean
    showBankDetails?: boolean
    showTermsConditions?: boolean
    bankName?: string | null
    accountNumber?: string | null
    accountName?: string | null
    iban?: string | null
    swiftCode?: string | null
    invoiceFooterText?: string | null
    termsAndConditions?: string | null
    paymentInstructions?: string | null
    taxRegistrationNo?: string | null
    companyRegistrationNo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BillingSettingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    storageRateType?: StringFieldUpdateOperationsInput | string
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    storageRatePerWeek?: NullableFloatFieldUpdateOperationsInput | number | null
    storageRatePerMonth?: NullableFloatFieldUpdateOperationsInput | number | null
    taxEnabled?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    invoicePrefix?: StringFieldUpdateOperationsInput | string
    invoiceDueDays?: IntFieldUpdateOperationsInput | number
    gracePeriodDays?: IntFieldUpdateOperationsInput | number
    minimumCharge?: FloatFieldUpdateOperationsInput | number
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    logoPosition?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showCompanyDetails?: BoolFieldUpdateOperationsInput | boolean
    showBankDetails?: BoolFieldUpdateOperationsInput | boolean
    showTermsConditions?: BoolFieldUpdateOperationsInput | boolean
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountName?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    paymentInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    taxRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BillingSettingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    storageRateType?: StringFieldUpdateOperationsInput | string
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    storageRatePerWeek?: NullableFloatFieldUpdateOperationsInput | number | null
    storageRatePerMonth?: NullableFloatFieldUpdateOperationsInput | number | null
    taxEnabled?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    invoicePrefix?: StringFieldUpdateOperationsInput | string
    invoiceDueDays?: IntFieldUpdateOperationsInput | number
    gracePeriodDays?: IntFieldUpdateOperationsInput | number
    minimumCharge?: FloatFieldUpdateOperationsInput | number
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    logoPosition?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showCompanyDetails?: BoolFieldUpdateOperationsInput | boolean
    showBankDetails?: BoolFieldUpdateOperationsInput | boolean
    showTermsConditions?: BoolFieldUpdateOperationsInput | boolean
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountName?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    paymentInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    taxRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChargeTypeCreateInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    category: string
    calculationType: string
    rate: number
    minCharge?: number | null
    maxCharge?: number | null
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutChargeTypesInput
    billingSettings: BillingSettingsCreateNestedOneWithoutChargeTypesInput
  }

  export type ChargeTypeUncheckedCreateInput = {
    id?: string
    companyId: string
    billingSettingsId: string
    name: string
    code: string
    description?: string | null
    category: string
    calculationType: string
    rate: number
    minCharge?: number | null
    maxCharge?: number | null
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ChargeTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    calculationType?: StringFieldUpdateOperationsInput | string
    rate?: FloatFieldUpdateOperationsInput | number
    minCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    maxCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    applyOnRelease?: BoolFieldUpdateOperationsInput | boolean
    applyOnStorage?: BoolFieldUpdateOperationsInput | boolean
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutChargeTypesNestedInput
    billingSettings?: BillingSettingsUpdateOneRequiredWithoutChargeTypesNestedInput
  }

  export type ChargeTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    billingSettingsId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    calculationType?: StringFieldUpdateOperationsInput | string
    rate?: FloatFieldUpdateOperationsInput | number
    minCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    maxCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    applyOnRelease?: BoolFieldUpdateOperationsInput | boolean
    applyOnStorage?: BoolFieldUpdateOperationsInput | boolean
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChargeTypeCreateManyInput = {
    id?: string
    companyId: string
    billingSettingsId: string
    name: string
    code: string
    description?: string | null
    category: string
    calculationType: string
    rate: number
    minCharge?: number | null
    maxCharge?: number | null
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ChargeTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    calculationType?: StringFieldUpdateOperationsInput | string
    rate?: FloatFieldUpdateOperationsInput | number
    minCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    maxCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    applyOnRelease?: BoolFieldUpdateOperationsInput | boolean
    applyOnStorage?: BoolFieldUpdateOperationsInput | boolean
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChargeTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    billingSettingsId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    calculationType?: StringFieldUpdateOperationsInput | string
    rate?: FloatFieldUpdateOperationsInput | number
    minCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    maxCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    applyOnRelease?: BoolFieldUpdateOperationsInput | boolean
    applyOnStorage?: BoolFieldUpdateOperationsInput | boolean
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceCreateInput = {
    id?: string
    invoiceNumber: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutInvoicesInput
    shipment: ShipmentCreateNestedOneWithoutInvoicesInput
    lineItems?: InvoiceLineItemCreateNestedManyWithoutInvoiceInput
    payments?: PaymentCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateInput = {
    id?: string
    invoiceNumber: string
    companyId: string
    shipmentId: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutInvoiceInput
    payments?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutInvoicesNestedInput
    shipment?: ShipmentUpdateOneRequiredWithoutInvoicesNestedInput
    lineItems?: InvoiceLineItemUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineItems?: InvoiceLineItemUncheckedUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceCreateManyInput = {
    id?: string
    invoiceNumber: string
    companyId: string
    shipmentId: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InvoiceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceLineItemCreateInput = {
    id?: string
    chargeTypeId?: string | null
    description: string
    category: string
    quantity?: number
    unitPrice: number
    amount: number
    isTaxable?: boolean
    taxRate?: number | null
    taxAmount?: number
    displayOrder?: number
    createdAt?: Date | string
    invoice: InvoiceCreateNestedOneWithoutLineItemsInput
    company: CompanyCreateNestedOneWithoutInvoiceLineItemsInput
  }

  export type InvoiceLineItemUncheckedCreateInput = {
    id?: string
    invoiceId: string
    companyId: string
    chargeTypeId?: string | null
    description: string
    category: string
    quantity?: number
    unitPrice: number
    amount: number
    isTaxable?: boolean
    taxRate?: number | null
    taxAmount?: number
    displayOrder?: number
    createdAt?: Date | string
  }

  export type InvoiceLineItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    chargeTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    quantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: FloatFieldUpdateOperationsInput | number
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoice?: InvoiceUpdateOneRequiredWithoutLineItemsNestedInput
    company?: CompanyUpdateOneRequiredWithoutInvoiceLineItemsNestedInput
  }

  export type InvoiceLineItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    chargeTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    quantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: FloatFieldUpdateOperationsInput | number
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceLineItemCreateManyInput = {
    id?: string
    invoiceId: string
    companyId: string
    chargeTypeId?: string | null
    description: string
    category: string
    quantity?: number
    unitPrice: number
    amount: number
    isTaxable?: boolean
    taxRate?: number | null
    taxAmount?: number
    displayOrder?: number
    createdAt?: Date | string
  }

  export type InvoiceLineItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    chargeTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    quantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: FloatFieldUpdateOperationsInput | number
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceLineItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    chargeTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    quantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: FloatFieldUpdateOperationsInput | number
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentCreateInput = {
    id?: string
    amount: number
    paymentDate?: Date | string
    paymentMethod: string
    transactionRef?: string | null
    receiptNumber?: string | null
    notes?: string | null
    createdBy?: string | null
    createdAt?: Date | string
    invoice: InvoiceCreateNestedOneWithoutPaymentsInput
    company: CompanyCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: string
    invoiceId: string
    companyId: string
    amount: number
    paymentDate?: Date | string
    paymentMethod: string
    transactionRef?: string | null
    receiptNumber?: string | null
    notes?: string | null
    createdBy?: string | null
    createdAt?: Date | string
  }

  export type PaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    paymentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoice?: InvoiceUpdateOneRequiredWithoutPaymentsNestedInput
    company?: CompanyUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    paymentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentCreateManyInput = {
    id?: string
    invoiceId: string
    companyId: string
    amount: number
    paymentDate?: Date | string
    paymentMethod: string
    transactionRef?: string | null
    receiptNumber?: string | null
    notes?: string | null
    createdBy?: string | null
    createdAt?: Date | string
  }

  export type PaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    paymentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    paymentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentChargesCreateInput = {
    id?: string
    currentStorageCharge?: number
    daysStored?: number
    lastCalculatedDate?: Date | string
    totalBoxesReleased?: number
    totalInvoiced?: number
    totalPaid?: number
    outstandingBalance?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    shipment: ShipmentCreateNestedOneWithoutChargesInput
    company: CompanyCreateNestedOneWithoutShipmentChargesInput
  }

  export type ShipmentChargesUncheckedCreateInput = {
    id?: string
    shipmentId: string
    companyId: string
    currentStorageCharge?: number
    daysStored?: number
    lastCalculatedDate?: Date | string
    totalBoxesReleased?: number
    totalInvoiced?: number
    totalPaid?: number
    outstandingBalance?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentChargesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    currentStorageCharge?: FloatFieldUpdateOperationsInput | number
    daysStored?: IntFieldUpdateOperationsInput | number
    lastCalculatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalBoxesReleased?: IntFieldUpdateOperationsInput | number
    totalInvoiced?: FloatFieldUpdateOperationsInput | number
    totalPaid?: FloatFieldUpdateOperationsInput | number
    outstandingBalance?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipment?: ShipmentUpdateOneRequiredWithoutChargesNestedInput
    company?: CompanyUpdateOneRequiredWithoutShipmentChargesNestedInput
  }

  export type ShipmentChargesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    currentStorageCharge?: FloatFieldUpdateOperationsInput | number
    daysStored?: IntFieldUpdateOperationsInput | number
    lastCalculatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalBoxesReleased?: IntFieldUpdateOperationsInput | number
    totalInvoiced?: FloatFieldUpdateOperationsInput | number
    totalPaid?: FloatFieldUpdateOperationsInput | number
    outstandingBalance?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentChargesCreateManyInput = {
    id?: string
    shipmentId: string
    companyId: string
    currentStorageCharge?: number
    daysStored?: number
    lastCalculatedDate?: Date | string
    totalBoxesReleased?: number
    totalInvoiced?: number
    totalPaid?: number
    outstandingBalance?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentChargesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    currentStorageCharge?: FloatFieldUpdateOperationsInput | number
    daysStored?: IntFieldUpdateOperationsInput | number
    lastCalculatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalBoxesReleased?: IntFieldUpdateOperationsInput | number
    totalInvoiced?: FloatFieldUpdateOperationsInput | number
    totalPaid?: FloatFieldUpdateOperationsInput | number
    outstandingBalance?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentChargesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    currentStorageCharge?: FloatFieldUpdateOperationsInput | number
    daysStored?: IntFieldUpdateOperationsInput | number
    lastCalculatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalBoxesReleased?: IntFieldUpdateOperationsInput | number
    totalInvoiced?: FloatFieldUpdateOperationsInput | number
    totalPaid?: FloatFieldUpdateOperationsInput | number
    outstandingBalance?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldCreateInput = {
    id?: string
    fieldName: string
    fieldType: string
    fieldOptions?: string | null
    isRequired?: boolean
    isActive?: boolean
    section?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutCustomFieldsInput
    values?: CustomFieldValueCreateNestedManyWithoutCustomFieldInput
  }

  export type CustomFieldUncheckedCreateInput = {
    id?: string
    companyId: string
    fieldName: string
    fieldType: string
    fieldOptions?: string | null
    isRequired?: boolean
    isActive?: boolean
    section?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    values?: CustomFieldValueUncheckedCreateNestedManyWithoutCustomFieldInput
  }

  export type CustomFieldUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldType?: StringFieldUpdateOperationsInput | string
    fieldOptions?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    section?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutCustomFieldsNestedInput
    values?: CustomFieldValueUpdateManyWithoutCustomFieldNestedInput
  }

  export type CustomFieldUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldType?: StringFieldUpdateOperationsInput | string
    fieldOptions?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    section?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    values?: CustomFieldValueUncheckedUpdateManyWithoutCustomFieldNestedInput
  }

  export type CustomFieldCreateManyInput = {
    id?: string
    companyId: string
    fieldName: string
    fieldType: string
    fieldOptions?: string | null
    isRequired?: boolean
    isActive?: boolean
    section?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldType?: StringFieldUpdateOperationsInput | string
    fieldOptions?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    section?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldType?: StringFieldUpdateOperationsInput | string
    fieldOptions?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    section?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldValueCreateInput = {
    id?: string
    entityType: string
    entityId: string
    fieldValue: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    customField: CustomFieldCreateNestedOneWithoutValuesInput
  }

  export type CustomFieldValueUncheckedCreateInput = {
    id?: string
    customFieldId: string
    entityType: string
    entityId: string
    fieldValue: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldValueUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    fieldValue?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customField?: CustomFieldUpdateOneRequiredWithoutValuesNestedInput
  }

  export type CustomFieldValueUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    customFieldId?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    fieldValue?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldValueCreateManyInput = {
    id?: string
    customFieldId: string
    entityType: string
    entityId: string
    fieldValue: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldValueUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    fieldValue?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldValueUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    customFieldId?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    fieldValue?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentSettingsCreateInput = {
    id?: string
    requireClientEmail?: boolean
    requireClientPhone?: boolean
    requireEstimatedValue?: boolean
    requirePhotos?: boolean
    autoGenerateQR?: boolean
    qrCodePrefix?: string
    showClientAddress?: boolean
    requireClientAddress?: boolean
    showDescription?: boolean
    requireDescription?: boolean
    showReferenceId?: boolean
    requireReferenceId?: boolean
    showNotes?: boolean
    requireNotes?: boolean
    showWarehouseMode?: boolean
    showShipperDetails?: boolean
    requireShipperDetails?: boolean
    showConsigneeDetails?: boolean
    requireConsigneeDetails?: boolean
    showWeight?: boolean
    requireWeight?: boolean
    showDimensions?: boolean
    requireDimensions?: boolean
    showStorageType?: boolean
    showSpecialInstructions?: boolean
    showEstimatedDays?: boolean
    requireEstimatedDays?: boolean
    defaultEstimatedDays?: number
    formSectionOrder?: string | null
    defaultStorageType?: string
    allowMultipleRacks?: boolean
    requireRackAssignment?: boolean
    autoAssignRack?: boolean
    notifyOnLowCapacity?: boolean
    lowCapacityThreshold?: number
    requireReleaseApproval?: boolean
    releaseApproverRole?: string
    requireReleasePhotos?: boolean
    requireIDVerification?: boolean
    generateReleaseInvoice?: boolean
    autoSendInvoiceEmail?: boolean
    storageRatePerDay?: number
    storageRatePerBox?: number
    chargePartialDay?: boolean
    minimumChargeDays?: number
    releaseHandlingFee?: number
    releasePerBoxFee?: number
    releaseTransportFee?: number
    notifyClientOnIntake?: boolean
    notifyClientOnRelease?: boolean
    notifyOnStorageAlert?: boolean
    storageAlertDays?: number
    enableCustomFields?: boolean
    requiredCustomFields?: string | null
    allowPartialRelease?: boolean
    partialReleaseMinBoxes?: number
    requirePartialApproval?: boolean
    requireReleaseSignature?: boolean
    requireCollectorID?: boolean
    allowProxyCollection?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutShipmentSettingsInput
  }

  export type ShipmentSettingsUncheckedCreateInput = {
    id?: string
    companyId: string
    requireClientEmail?: boolean
    requireClientPhone?: boolean
    requireEstimatedValue?: boolean
    requirePhotos?: boolean
    autoGenerateQR?: boolean
    qrCodePrefix?: string
    showClientAddress?: boolean
    requireClientAddress?: boolean
    showDescription?: boolean
    requireDescription?: boolean
    showReferenceId?: boolean
    requireReferenceId?: boolean
    showNotes?: boolean
    requireNotes?: boolean
    showWarehouseMode?: boolean
    showShipperDetails?: boolean
    requireShipperDetails?: boolean
    showConsigneeDetails?: boolean
    requireConsigneeDetails?: boolean
    showWeight?: boolean
    requireWeight?: boolean
    showDimensions?: boolean
    requireDimensions?: boolean
    showStorageType?: boolean
    showSpecialInstructions?: boolean
    showEstimatedDays?: boolean
    requireEstimatedDays?: boolean
    defaultEstimatedDays?: number
    formSectionOrder?: string | null
    defaultStorageType?: string
    allowMultipleRacks?: boolean
    requireRackAssignment?: boolean
    autoAssignRack?: boolean
    notifyOnLowCapacity?: boolean
    lowCapacityThreshold?: number
    requireReleaseApproval?: boolean
    releaseApproverRole?: string
    requireReleasePhotos?: boolean
    requireIDVerification?: boolean
    generateReleaseInvoice?: boolean
    autoSendInvoiceEmail?: boolean
    storageRatePerDay?: number
    storageRatePerBox?: number
    chargePartialDay?: boolean
    minimumChargeDays?: number
    releaseHandlingFee?: number
    releasePerBoxFee?: number
    releaseTransportFee?: number
    notifyClientOnIntake?: boolean
    notifyClientOnRelease?: boolean
    notifyOnStorageAlert?: boolean
    storageAlertDays?: number
    enableCustomFields?: boolean
    requiredCustomFields?: string | null
    allowPartialRelease?: boolean
    partialReleaseMinBoxes?: number
    requirePartialApproval?: boolean
    requireReleaseSignature?: boolean
    requireCollectorID?: boolean
    allowProxyCollection?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentSettingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    requireClientEmail?: BoolFieldUpdateOperationsInput | boolean
    requireClientPhone?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedValue?: BoolFieldUpdateOperationsInput | boolean
    requirePhotos?: BoolFieldUpdateOperationsInput | boolean
    autoGenerateQR?: BoolFieldUpdateOperationsInput | boolean
    qrCodePrefix?: StringFieldUpdateOperationsInput | string
    showClientAddress?: BoolFieldUpdateOperationsInput | boolean
    requireClientAddress?: BoolFieldUpdateOperationsInput | boolean
    showDescription?: BoolFieldUpdateOperationsInput | boolean
    requireDescription?: BoolFieldUpdateOperationsInput | boolean
    showReferenceId?: BoolFieldUpdateOperationsInput | boolean
    requireReferenceId?: BoolFieldUpdateOperationsInput | boolean
    showNotes?: BoolFieldUpdateOperationsInput | boolean
    requireNotes?: BoolFieldUpdateOperationsInput | boolean
    showWarehouseMode?: BoolFieldUpdateOperationsInput | boolean
    showShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    requireShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    showConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    requireConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    showWeight?: BoolFieldUpdateOperationsInput | boolean
    requireWeight?: BoolFieldUpdateOperationsInput | boolean
    showDimensions?: BoolFieldUpdateOperationsInput | boolean
    requireDimensions?: BoolFieldUpdateOperationsInput | boolean
    showStorageType?: BoolFieldUpdateOperationsInput | boolean
    showSpecialInstructions?: BoolFieldUpdateOperationsInput | boolean
    showEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    defaultEstimatedDays?: IntFieldUpdateOperationsInput | number
    formSectionOrder?: NullableStringFieldUpdateOperationsInput | string | null
    defaultStorageType?: StringFieldUpdateOperationsInput | string
    allowMultipleRacks?: BoolFieldUpdateOperationsInput | boolean
    requireRackAssignment?: BoolFieldUpdateOperationsInput | boolean
    autoAssignRack?: BoolFieldUpdateOperationsInput | boolean
    notifyOnLowCapacity?: BoolFieldUpdateOperationsInput | boolean
    lowCapacityThreshold?: IntFieldUpdateOperationsInput | number
    requireReleaseApproval?: BoolFieldUpdateOperationsInput | boolean
    releaseApproverRole?: StringFieldUpdateOperationsInput | string
    requireReleasePhotos?: BoolFieldUpdateOperationsInput | boolean
    requireIDVerification?: BoolFieldUpdateOperationsInput | boolean
    generateReleaseInvoice?: BoolFieldUpdateOperationsInput | boolean
    autoSendInvoiceEmail?: BoolFieldUpdateOperationsInput | boolean
    storageRatePerDay?: FloatFieldUpdateOperationsInput | number
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    chargePartialDay?: BoolFieldUpdateOperationsInput | boolean
    minimumChargeDays?: IntFieldUpdateOperationsInput | number
    releaseHandlingFee?: FloatFieldUpdateOperationsInput | number
    releasePerBoxFee?: FloatFieldUpdateOperationsInput | number
    releaseTransportFee?: FloatFieldUpdateOperationsInput | number
    notifyClientOnIntake?: BoolFieldUpdateOperationsInput | boolean
    notifyClientOnRelease?: BoolFieldUpdateOperationsInput | boolean
    notifyOnStorageAlert?: BoolFieldUpdateOperationsInput | boolean
    storageAlertDays?: IntFieldUpdateOperationsInput | number
    enableCustomFields?: BoolFieldUpdateOperationsInput | boolean
    requiredCustomFields?: NullableStringFieldUpdateOperationsInput | string | null
    allowPartialRelease?: BoolFieldUpdateOperationsInput | boolean
    partialReleaseMinBoxes?: IntFieldUpdateOperationsInput | number
    requirePartialApproval?: BoolFieldUpdateOperationsInput | boolean
    requireReleaseSignature?: BoolFieldUpdateOperationsInput | boolean
    requireCollectorID?: BoolFieldUpdateOperationsInput | boolean
    allowProxyCollection?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutShipmentSettingsNestedInput
  }

  export type ShipmentSettingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    requireClientEmail?: BoolFieldUpdateOperationsInput | boolean
    requireClientPhone?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedValue?: BoolFieldUpdateOperationsInput | boolean
    requirePhotos?: BoolFieldUpdateOperationsInput | boolean
    autoGenerateQR?: BoolFieldUpdateOperationsInput | boolean
    qrCodePrefix?: StringFieldUpdateOperationsInput | string
    showClientAddress?: BoolFieldUpdateOperationsInput | boolean
    requireClientAddress?: BoolFieldUpdateOperationsInput | boolean
    showDescription?: BoolFieldUpdateOperationsInput | boolean
    requireDescription?: BoolFieldUpdateOperationsInput | boolean
    showReferenceId?: BoolFieldUpdateOperationsInput | boolean
    requireReferenceId?: BoolFieldUpdateOperationsInput | boolean
    showNotes?: BoolFieldUpdateOperationsInput | boolean
    requireNotes?: BoolFieldUpdateOperationsInput | boolean
    showWarehouseMode?: BoolFieldUpdateOperationsInput | boolean
    showShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    requireShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    showConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    requireConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    showWeight?: BoolFieldUpdateOperationsInput | boolean
    requireWeight?: BoolFieldUpdateOperationsInput | boolean
    showDimensions?: BoolFieldUpdateOperationsInput | boolean
    requireDimensions?: BoolFieldUpdateOperationsInput | boolean
    showStorageType?: BoolFieldUpdateOperationsInput | boolean
    showSpecialInstructions?: BoolFieldUpdateOperationsInput | boolean
    showEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    defaultEstimatedDays?: IntFieldUpdateOperationsInput | number
    formSectionOrder?: NullableStringFieldUpdateOperationsInput | string | null
    defaultStorageType?: StringFieldUpdateOperationsInput | string
    allowMultipleRacks?: BoolFieldUpdateOperationsInput | boolean
    requireRackAssignment?: BoolFieldUpdateOperationsInput | boolean
    autoAssignRack?: BoolFieldUpdateOperationsInput | boolean
    notifyOnLowCapacity?: BoolFieldUpdateOperationsInput | boolean
    lowCapacityThreshold?: IntFieldUpdateOperationsInput | number
    requireReleaseApproval?: BoolFieldUpdateOperationsInput | boolean
    releaseApproverRole?: StringFieldUpdateOperationsInput | string
    requireReleasePhotos?: BoolFieldUpdateOperationsInput | boolean
    requireIDVerification?: BoolFieldUpdateOperationsInput | boolean
    generateReleaseInvoice?: BoolFieldUpdateOperationsInput | boolean
    autoSendInvoiceEmail?: BoolFieldUpdateOperationsInput | boolean
    storageRatePerDay?: FloatFieldUpdateOperationsInput | number
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    chargePartialDay?: BoolFieldUpdateOperationsInput | boolean
    minimumChargeDays?: IntFieldUpdateOperationsInput | number
    releaseHandlingFee?: FloatFieldUpdateOperationsInput | number
    releasePerBoxFee?: FloatFieldUpdateOperationsInput | number
    releaseTransportFee?: FloatFieldUpdateOperationsInput | number
    notifyClientOnIntake?: BoolFieldUpdateOperationsInput | boolean
    notifyClientOnRelease?: BoolFieldUpdateOperationsInput | boolean
    notifyOnStorageAlert?: BoolFieldUpdateOperationsInput | boolean
    storageAlertDays?: IntFieldUpdateOperationsInput | number
    enableCustomFields?: BoolFieldUpdateOperationsInput | boolean
    requiredCustomFields?: NullableStringFieldUpdateOperationsInput | string | null
    allowPartialRelease?: BoolFieldUpdateOperationsInput | boolean
    partialReleaseMinBoxes?: IntFieldUpdateOperationsInput | number
    requirePartialApproval?: BoolFieldUpdateOperationsInput | boolean
    requireReleaseSignature?: BoolFieldUpdateOperationsInput | boolean
    requireCollectorID?: BoolFieldUpdateOperationsInput | boolean
    allowProxyCollection?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentSettingsCreateManyInput = {
    id?: string
    companyId: string
    requireClientEmail?: boolean
    requireClientPhone?: boolean
    requireEstimatedValue?: boolean
    requirePhotos?: boolean
    autoGenerateQR?: boolean
    qrCodePrefix?: string
    showClientAddress?: boolean
    requireClientAddress?: boolean
    showDescription?: boolean
    requireDescription?: boolean
    showReferenceId?: boolean
    requireReferenceId?: boolean
    showNotes?: boolean
    requireNotes?: boolean
    showWarehouseMode?: boolean
    showShipperDetails?: boolean
    requireShipperDetails?: boolean
    showConsigneeDetails?: boolean
    requireConsigneeDetails?: boolean
    showWeight?: boolean
    requireWeight?: boolean
    showDimensions?: boolean
    requireDimensions?: boolean
    showStorageType?: boolean
    showSpecialInstructions?: boolean
    showEstimatedDays?: boolean
    requireEstimatedDays?: boolean
    defaultEstimatedDays?: number
    formSectionOrder?: string | null
    defaultStorageType?: string
    allowMultipleRacks?: boolean
    requireRackAssignment?: boolean
    autoAssignRack?: boolean
    notifyOnLowCapacity?: boolean
    lowCapacityThreshold?: number
    requireReleaseApproval?: boolean
    releaseApproverRole?: string
    requireReleasePhotos?: boolean
    requireIDVerification?: boolean
    generateReleaseInvoice?: boolean
    autoSendInvoiceEmail?: boolean
    storageRatePerDay?: number
    storageRatePerBox?: number
    chargePartialDay?: boolean
    minimumChargeDays?: number
    releaseHandlingFee?: number
    releasePerBoxFee?: number
    releaseTransportFee?: number
    notifyClientOnIntake?: boolean
    notifyClientOnRelease?: boolean
    notifyOnStorageAlert?: boolean
    storageAlertDays?: number
    enableCustomFields?: boolean
    requiredCustomFields?: string | null
    allowPartialRelease?: boolean
    partialReleaseMinBoxes?: number
    requirePartialApproval?: boolean
    requireReleaseSignature?: boolean
    requireCollectorID?: boolean
    allowProxyCollection?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentSettingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    requireClientEmail?: BoolFieldUpdateOperationsInput | boolean
    requireClientPhone?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedValue?: BoolFieldUpdateOperationsInput | boolean
    requirePhotos?: BoolFieldUpdateOperationsInput | boolean
    autoGenerateQR?: BoolFieldUpdateOperationsInput | boolean
    qrCodePrefix?: StringFieldUpdateOperationsInput | string
    showClientAddress?: BoolFieldUpdateOperationsInput | boolean
    requireClientAddress?: BoolFieldUpdateOperationsInput | boolean
    showDescription?: BoolFieldUpdateOperationsInput | boolean
    requireDescription?: BoolFieldUpdateOperationsInput | boolean
    showReferenceId?: BoolFieldUpdateOperationsInput | boolean
    requireReferenceId?: BoolFieldUpdateOperationsInput | boolean
    showNotes?: BoolFieldUpdateOperationsInput | boolean
    requireNotes?: BoolFieldUpdateOperationsInput | boolean
    showWarehouseMode?: BoolFieldUpdateOperationsInput | boolean
    showShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    requireShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    showConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    requireConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    showWeight?: BoolFieldUpdateOperationsInput | boolean
    requireWeight?: BoolFieldUpdateOperationsInput | boolean
    showDimensions?: BoolFieldUpdateOperationsInput | boolean
    requireDimensions?: BoolFieldUpdateOperationsInput | boolean
    showStorageType?: BoolFieldUpdateOperationsInput | boolean
    showSpecialInstructions?: BoolFieldUpdateOperationsInput | boolean
    showEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    defaultEstimatedDays?: IntFieldUpdateOperationsInput | number
    formSectionOrder?: NullableStringFieldUpdateOperationsInput | string | null
    defaultStorageType?: StringFieldUpdateOperationsInput | string
    allowMultipleRacks?: BoolFieldUpdateOperationsInput | boolean
    requireRackAssignment?: BoolFieldUpdateOperationsInput | boolean
    autoAssignRack?: BoolFieldUpdateOperationsInput | boolean
    notifyOnLowCapacity?: BoolFieldUpdateOperationsInput | boolean
    lowCapacityThreshold?: IntFieldUpdateOperationsInput | number
    requireReleaseApproval?: BoolFieldUpdateOperationsInput | boolean
    releaseApproverRole?: StringFieldUpdateOperationsInput | string
    requireReleasePhotos?: BoolFieldUpdateOperationsInput | boolean
    requireIDVerification?: BoolFieldUpdateOperationsInput | boolean
    generateReleaseInvoice?: BoolFieldUpdateOperationsInput | boolean
    autoSendInvoiceEmail?: BoolFieldUpdateOperationsInput | boolean
    storageRatePerDay?: FloatFieldUpdateOperationsInput | number
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    chargePartialDay?: BoolFieldUpdateOperationsInput | boolean
    minimumChargeDays?: IntFieldUpdateOperationsInput | number
    releaseHandlingFee?: FloatFieldUpdateOperationsInput | number
    releasePerBoxFee?: FloatFieldUpdateOperationsInput | number
    releaseTransportFee?: FloatFieldUpdateOperationsInput | number
    notifyClientOnIntake?: BoolFieldUpdateOperationsInput | boolean
    notifyClientOnRelease?: BoolFieldUpdateOperationsInput | boolean
    notifyOnStorageAlert?: BoolFieldUpdateOperationsInput | boolean
    storageAlertDays?: IntFieldUpdateOperationsInput | number
    enableCustomFields?: BoolFieldUpdateOperationsInput | boolean
    requiredCustomFields?: NullableStringFieldUpdateOperationsInput | string | null
    allowPartialRelease?: BoolFieldUpdateOperationsInput | boolean
    partialReleaseMinBoxes?: IntFieldUpdateOperationsInput | number
    requirePartialApproval?: BoolFieldUpdateOperationsInput | boolean
    requireReleaseSignature?: BoolFieldUpdateOperationsInput | boolean
    requireCollectorID?: BoolFieldUpdateOperationsInput | boolean
    allowProxyCollection?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentSettingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    requireClientEmail?: BoolFieldUpdateOperationsInput | boolean
    requireClientPhone?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedValue?: BoolFieldUpdateOperationsInput | boolean
    requirePhotos?: BoolFieldUpdateOperationsInput | boolean
    autoGenerateQR?: BoolFieldUpdateOperationsInput | boolean
    qrCodePrefix?: StringFieldUpdateOperationsInput | string
    showClientAddress?: BoolFieldUpdateOperationsInput | boolean
    requireClientAddress?: BoolFieldUpdateOperationsInput | boolean
    showDescription?: BoolFieldUpdateOperationsInput | boolean
    requireDescription?: BoolFieldUpdateOperationsInput | boolean
    showReferenceId?: BoolFieldUpdateOperationsInput | boolean
    requireReferenceId?: BoolFieldUpdateOperationsInput | boolean
    showNotes?: BoolFieldUpdateOperationsInput | boolean
    requireNotes?: BoolFieldUpdateOperationsInput | boolean
    showWarehouseMode?: BoolFieldUpdateOperationsInput | boolean
    showShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    requireShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    showConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    requireConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    showWeight?: BoolFieldUpdateOperationsInput | boolean
    requireWeight?: BoolFieldUpdateOperationsInput | boolean
    showDimensions?: BoolFieldUpdateOperationsInput | boolean
    requireDimensions?: BoolFieldUpdateOperationsInput | boolean
    showStorageType?: BoolFieldUpdateOperationsInput | boolean
    showSpecialInstructions?: BoolFieldUpdateOperationsInput | boolean
    showEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    defaultEstimatedDays?: IntFieldUpdateOperationsInput | number
    formSectionOrder?: NullableStringFieldUpdateOperationsInput | string | null
    defaultStorageType?: StringFieldUpdateOperationsInput | string
    allowMultipleRacks?: BoolFieldUpdateOperationsInput | boolean
    requireRackAssignment?: BoolFieldUpdateOperationsInput | boolean
    autoAssignRack?: BoolFieldUpdateOperationsInput | boolean
    notifyOnLowCapacity?: BoolFieldUpdateOperationsInput | boolean
    lowCapacityThreshold?: IntFieldUpdateOperationsInput | number
    requireReleaseApproval?: BoolFieldUpdateOperationsInput | boolean
    releaseApproverRole?: StringFieldUpdateOperationsInput | string
    requireReleasePhotos?: BoolFieldUpdateOperationsInput | boolean
    requireIDVerification?: BoolFieldUpdateOperationsInput | boolean
    generateReleaseInvoice?: BoolFieldUpdateOperationsInput | boolean
    autoSendInvoiceEmail?: BoolFieldUpdateOperationsInput | boolean
    storageRatePerDay?: FloatFieldUpdateOperationsInput | number
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    chargePartialDay?: BoolFieldUpdateOperationsInput | boolean
    minimumChargeDays?: IntFieldUpdateOperationsInput | number
    releaseHandlingFee?: FloatFieldUpdateOperationsInput | number
    releasePerBoxFee?: FloatFieldUpdateOperationsInput | number
    releaseTransportFee?: FloatFieldUpdateOperationsInput | number
    notifyClientOnIntake?: BoolFieldUpdateOperationsInput | boolean
    notifyClientOnRelease?: BoolFieldUpdateOperationsInput | boolean
    notifyOnStorageAlert?: BoolFieldUpdateOperationsInput | boolean
    storageAlertDays?: IntFieldUpdateOperationsInput | number
    enableCustomFields?: BoolFieldUpdateOperationsInput | boolean
    requiredCustomFields?: NullableStringFieldUpdateOperationsInput | string | null
    allowPartialRelease?: BoolFieldUpdateOperationsInput | boolean
    partialReleaseMinBoxes?: IntFieldUpdateOperationsInput | number
    requirePartialApproval?: BoolFieldUpdateOperationsInput | boolean
    requireReleaseSignature?: BoolFieldUpdateOperationsInput | boolean
    requireCollectorID?: BoolFieldUpdateOperationsInput | boolean
    allowProxyCollection?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TemplateSettingsCreateInput = {
    id?: string
    companyName?: string | null
    companyLogo?: string | null
    companyAddress?: string | null
    companyPhone?: string | null
    companyEmail?: string | null
    companyWebsite?: string | null
    companyLicense?: string | null
    invoiceTemplateType?: string | null
    invoiceTitle?: string | null
    invoiceShowLogo?: boolean | null
    invoiceShowAddress?: boolean | null
    invoiceShowPhone?: boolean | null
    invoiceShowEmail?: boolean | null
    invoiceShowWebsite?: boolean | null
    invoiceShowLicense?: boolean | null
    invoiceShowFooter?: boolean | null
    invoiceHeaderBg?: string | null
    invoiceHeaderText?: string | null
    invoiceFooterText?: string | null
    invoiceTerms?: string | null
    invoiceShowBorders?: boolean | null
    invoiceShowGrid?: boolean | null
    invoiceTableStyle?: string | null
    invoiceFontSize?: string | null
    invoicePaperSize?: string | null
    invoicePrimaryColor?: string | null
    invoiceSecondaryColor?: string | null
    invoiceAccentColor?: string | null
    invoiceDangerColor?: string | null
    releaseNoteTemplate?: string | null
    releaseNoteTitle?: string | null
    releaseNoteHeaderBg?: string | null
    releaseNoteShowLogo?: boolean | null
    releaseShowShipment?: boolean | null
    releaseShowStorage?: boolean | null
    releaseShowItems?: boolean | null
    releaseShowCollector?: boolean | null
    releaseShowCharges?: boolean | null
    releaseShowPhotos?: boolean | null
    releaseShowTerms?: boolean | null
    releaseShowSignatures?: boolean | null
    releaseTerms?: string | null
    releaseFooterText?: string | null
    releasePrimaryColor?: string | null
    printMarginTop?: number | null
    printMarginBottom?: number | null
    printMarginLeft?: number | null
    printMarginRight?: number | null
    language?: string | null
    dateFormat?: string | null
    timeFormat?: string | null
    currencySymbol?: string | null
    currencyPosition?: string | null
    customField1Label?: string | null
    customField1Value?: string | null
    customField2Label?: string | null
    customField2Value?: string | null
    customField3Label?: string | null
    customField3Value?: string | null
    requireStaffSignature?: boolean | null
    requireClientSignature?: boolean | null
    signatureHeight?: number | null
    showQRCode?: boolean | null
    qrCodePosition?: string | null
    qrCodeSize?: number | null
    showWatermark?: boolean | null
    watermarkText?: string | null
    watermarkOpacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutTemplateSettingsInput
  }

  export type TemplateSettingsUncheckedCreateInput = {
    id?: string
    companyId: string
    companyName?: string | null
    companyLogo?: string | null
    companyAddress?: string | null
    companyPhone?: string | null
    companyEmail?: string | null
    companyWebsite?: string | null
    companyLicense?: string | null
    invoiceTemplateType?: string | null
    invoiceTitle?: string | null
    invoiceShowLogo?: boolean | null
    invoiceShowAddress?: boolean | null
    invoiceShowPhone?: boolean | null
    invoiceShowEmail?: boolean | null
    invoiceShowWebsite?: boolean | null
    invoiceShowLicense?: boolean | null
    invoiceShowFooter?: boolean | null
    invoiceHeaderBg?: string | null
    invoiceHeaderText?: string | null
    invoiceFooterText?: string | null
    invoiceTerms?: string | null
    invoiceShowBorders?: boolean | null
    invoiceShowGrid?: boolean | null
    invoiceTableStyle?: string | null
    invoiceFontSize?: string | null
    invoicePaperSize?: string | null
    invoicePrimaryColor?: string | null
    invoiceSecondaryColor?: string | null
    invoiceAccentColor?: string | null
    invoiceDangerColor?: string | null
    releaseNoteTemplate?: string | null
    releaseNoteTitle?: string | null
    releaseNoteHeaderBg?: string | null
    releaseNoteShowLogo?: boolean | null
    releaseShowShipment?: boolean | null
    releaseShowStorage?: boolean | null
    releaseShowItems?: boolean | null
    releaseShowCollector?: boolean | null
    releaseShowCharges?: boolean | null
    releaseShowPhotos?: boolean | null
    releaseShowTerms?: boolean | null
    releaseShowSignatures?: boolean | null
    releaseTerms?: string | null
    releaseFooterText?: string | null
    releasePrimaryColor?: string | null
    printMarginTop?: number | null
    printMarginBottom?: number | null
    printMarginLeft?: number | null
    printMarginRight?: number | null
    language?: string | null
    dateFormat?: string | null
    timeFormat?: string | null
    currencySymbol?: string | null
    currencyPosition?: string | null
    customField1Label?: string | null
    customField1Value?: string | null
    customField2Label?: string | null
    customField2Value?: string | null
    customField3Label?: string | null
    customField3Value?: string | null
    requireStaffSignature?: boolean | null
    requireClientSignature?: boolean | null
    signatureHeight?: number | null
    showQRCode?: boolean | null
    qrCodePosition?: string | null
    qrCodeSize?: number | null
    showWatermark?: boolean | null
    watermarkText?: string | null
    watermarkOpacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TemplateSettingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogo?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    companyEmail?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyLicense?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTemplateType?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTitle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowPhone?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowEmail?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowWebsite?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowFooter?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceHeaderText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTerms?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowBorders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowGrid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceTableStyle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFontSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePaperSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceSecondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceAccentColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDangerColor?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTitle?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowShipment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowStorage?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowItems?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCollector?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCharges?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowPhotos?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowTerms?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowSignatures?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseTerms?: NullableStringFieldUpdateOperationsInput | string | null
    releaseFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    releasePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    printMarginTop?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginBottom?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginLeft?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginRight?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    dateFormat?: NullableStringFieldUpdateOperationsInput | string | null
    timeFormat?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    currencyPosition?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Value?: NullableStringFieldUpdateOperationsInput | string | null
    requireStaffSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    requireClientSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    signatureHeight?: NullableIntFieldUpdateOperationsInput | number | null
    showQRCode?: NullableBoolFieldUpdateOperationsInput | boolean | null
    qrCodePosition?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeSize?: NullableIntFieldUpdateOperationsInput | number | null
    showWatermark?: NullableBoolFieldUpdateOperationsInput | boolean | null
    watermarkText?: NullableStringFieldUpdateOperationsInput | string | null
    watermarkOpacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutTemplateSettingsNestedInput
  }

  export type TemplateSettingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogo?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    companyEmail?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyLicense?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTemplateType?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTitle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowPhone?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowEmail?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowWebsite?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowFooter?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceHeaderText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTerms?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowBorders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowGrid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceTableStyle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFontSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePaperSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceSecondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceAccentColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDangerColor?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTitle?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowShipment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowStorage?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowItems?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCollector?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCharges?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowPhotos?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowTerms?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowSignatures?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseTerms?: NullableStringFieldUpdateOperationsInput | string | null
    releaseFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    releasePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    printMarginTop?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginBottom?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginLeft?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginRight?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    dateFormat?: NullableStringFieldUpdateOperationsInput | string | null
    timeFormat?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    currencyPosition?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Value?: NullableStringFieldUpdateOperationsInput | string | null
    requireStaffSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    requireClientSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    signatureHeight?: NullableIntFieldUpdateOperationsInput | number | null
    showQRCode?: NullableBoolFieldUpdateOperationsInput | boolean | null
    qrCodePosition?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeSize?: NullableIntFieldUpdateOperationsInput | number | null
    showWatermark?: NullableBoolFieldUpdateOperationsInput | boolean | null
    watermarkText?: NullableStringFieldUpdateOperationsInput | string | null
    watermarkOpacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TemplateSettingsCreateManyInput = {
    id?: string
    companyId: string
    companyName?: string | null
    companyLogo?: string | null
    companyAddress?: string | null
    companyPhone?: string | null
    companyEmail?: string | null
    companyWebsite?: string | null
    companyLicense?: string | null
    invoiceTemplateType?: string | null
    invoiceTitle?: string | null
    invoiceShowLogo?: boolean | null
    invoiceShowAddress?: boolean | null
    invoiceShowPhone?: boolean | null
    invoiceShowEmail?: boolean | null
    invoiceShowWebsite?: boolean | null
    invoiceShowLicense?: boolean | null
    invoiceShowFooter?: boolean | null
    invoiceHeaderBg?: string | null
    invoiceHeaderText?: string | null
    invoiceFooterText?: string | null
    invoiceTerms?: string | null
    invoiceShowBorders?: boolean | null
    invoiceShowGrid?: boolean | null
    invoiceTableStyle?: string | null
    invoiceFontSize?: string | null
    invoicePaperSize?: string | null
    invoicePrimaryColor?: string | null
    invoiceSecondaryColor?: string | null
    invoiceAccentColor?: string | null
    invoiceDangerColor?: string | null
    releaseNoteTemplate?: string | null
    releaseNoteTitle?: string | null
    releaseNoteHeaderBg?: string | null
    releaseNoteShowLogo?: boolean | null
    releaseShowShipment?: boolean | null
    releaseShowStorage?: boolean | null
    releaseShowItems?: boolean | null
    releaseShowCollector?: boolean | null
    releaseShowCharges?: boolean | null
    releaseShowPhotos?: boolean | null
    releaseShowTerms?: boolean | null
    releaseShowSignatures?: boolean | null
    releaseTerms?: string | null
    releaseFooterText?: string | null
    releasePrimaryColor?: string | null
    printMarginTop?: number | null
    printMarginBottom?: number | null
    printMarginLeft?: number | null
    printMarginRight?: number | null
    language?: string | null
    dateFormat?: string | null
    timeFormat?: string | null
    currencySymbol?: string | null
    currencyPosition?: string | null
    customField1Label?: string | null
    customField1Value?: string | null
    customField2Label?: string | null
    customField2Value?: string | null
    customField3Label?: string | null
    customField3Value?: string | null
    requireStaffSignature?: boolean | null
    requireClientSignature?: boolean | null
    signatureHeight?: number | null
    showQRCode?: boolean | null
    qrCodePosition?: string | null
    qrCodeSize?: number | null
    showWatermark?: boolean | null
    watermarkText?: string | null
    watermarkOpacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TemplateSettingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogo?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    companyEmail?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyLicense?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTemplateType?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTitle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowPhone?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowEmail?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowWebsite?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowFooter?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceHeaderText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTerms?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowBorders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowGrid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceTableStyle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFontSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePaperSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceSecondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceAccentColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDangerColor?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTitle?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowShipment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowStorage?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowItems?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCollector?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCharges?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowPhotos?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowTerms?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowSignatures?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseTerms?: NullableStringFieldUpdateOperationsInput | string | null
    releaseFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    releasePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    printMarginTop?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginBottom?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginLeft?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginRight?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    dateFormat?: NullableStringFieldUpdateOperationsInput | string | null
    timeFormat?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    currencyPosition?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Value?: NullableStringFieldUpdateOperationsInput | string | null
    requireStaffSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    requireClientSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    signatureHeight?: NullableIntFieldUpdateOperationsInput | number | null
    showQRCode?: NullableBoolFieldUpdateOperationsInput | boolean | null
    qrCodePosition?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeSize?: NullableIntFieldUpdateOperationsInput | number | null
    showWatermark?: NullableBoolFieldUpdateOperationsInput | boolean | null
    watermarkText?: NullableStringFieldUpdateOperationsInput | string | null
    watermarkOpacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TemplateSettingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogo?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    companyEmail?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyLicense?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTemplateType?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTitle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowPhone?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowEmail?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowWebsite?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowFooter?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceHeaderText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTerms?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowBorders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowGrid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceTableStyle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFontSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePaperSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceSecondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceAccentColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDangerColor?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTitle?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowShipment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowStorage?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowItems?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCollector?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCharges?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowPhotos?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowTerms?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowSignatures?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseTerms?: NullableStringFieldUpdateOperationsInput | string | null
    releaseFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    releasePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    printMarginTop?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginBottom?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginLeft?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginRight?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    dateFormat?: NullableStringFieldUpdateOperationsInput | string | null
    timeFormat?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    currencyPosition?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Value?: NullableStringFieldUpdateOperationsInput | string | null
    requireStaffSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    requireClientSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    signatureHeight?: NullableIntFieldUpdateOperationsInput | number | null
    showQRCode?: NullableBoolFieldUpdateOperationsInput | boolean | null
    qrCodePosition?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeSize?: NullableIntFieldUpdateOperationsInput | number | null
    showWatermark?: NullableBoolFieldUpdateOperationsInput | boolean | null
    watermarkText?: NullableStringFieldUpdateOperationsInput | string | null
    watermarkOpacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionCreateInput = {
    id?: string
    resource: string
    action: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    rolePermissions?: RolePermissionCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateInput = {
    id?: string
    resource: string
    action: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rolePermissions?: RolePermissionUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionCreateManyInput = {
    id?: string
    resource: string
    action: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionCreateInput = {
    id?: string
    role: string
    createdAt?: Date | string
    updatedAt?: Date | string
    permission: PermissionCreateNestedOneWithoutRolePermissionsInput
    company: CompanyCreateNestedOneWithoutRolePermissionsInput
  }

  export type RolePermissionUncheckedCreateInput = {
    id?: string
    role: string
    permissionId: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RolePermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permission?: PermissionUpdateOneRequiredWithoutRolePermissionsNestedInput
    company?: CompanyUpdateOneRequiredWithoutRolePermissionsNestedInput
  }

  export type RolePermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissionId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionCreateManyInput = {
    id?: string
    role: string
    permissionId: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RolePermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissionId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovingJobCreateInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutMovingJobsInput
    teamLeader?: UserCreateNestedOneWithoutMovingJobsLeadInput
    assignments?: JobAssignmentCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalCreateNestedManyWithoutJobInput
  }

  export type MovingJobUncheckedCreateInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    teamLeaderId?: string | null
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
    assignments?: JobAssignmentUncheckedCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalUncheckedCreateNestedManyWithoutJobInput
  }

  export type MovingJobUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutMovingJobsNestedInput
    teamLeader?: UserUpdateOneWithoutMovingJobsLeadNestedInput
    assignments?: JobAssignmentUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUpdateManyWithoutJobNestedInput
  }

  export type MovingJobUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    teamLeaderId?: NullableStringFieldUpdateOperationsInput | string | null
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    assignments?: JobAssignmentUncheckedUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUncheckedUpdateManyWithoutJobNestedInput
  }

  export type MovingJobCreateManyInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    teamLeaderId?: string | null
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
  }

  export type MovingJobUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovingJobUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    teamLeaderId?: NullableStringFieldUpdateOperationsInput | string | null
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type JobAssignmentCreateInput = {
    id?: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    job: MovingJobCreateNestedOneWithoutAssignmentsInput
    user: UserCreateNestedOneWithoutJobAssignmentsInput
    company: CompanyCreateNestedOneWithoutJobAssignmentInput
  }

  export type JobAssignmentUncheckedCreateInput = {
    id?: string
    jobId: string
    userId: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
  }

  export type JobAssignmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    job?: MovingJobUpdateOneRequiredWithoutAssignmentsNestedInput
    user?: UserUpdateOneRequiredWithoutJobAssignmentsNestedInput
    company?: CompanyUpdateOneRequiredWithoutJobAssignmentNestedInput
  }

  export type JobAssignmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type JobAssignmentCreateManyInput = {
    id?: string
    jobId: string
    userId: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
  }

  export type JobAssignmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobAssignmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type PackingMaterialCreateInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutPackingMaterialsInput
    stockBatches?: StockBatchCreateNestedManyWithoutMaterialInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialUncheckedCreateInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutMaterialInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutPackingMaterialsNestedInput
    stockBatches?: StockBatchUpdateManyWithoutMaterialNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutMaterialNestedInput
  }

  export type PackingMaterialUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stockBatches?: StockBatchUncheckedUpdateManyWithoutMaterialNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type PackingMaterialCreateManyInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PackingMaterialUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PackingMaterialUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VendorCreateInput = {
    id?: string
    name: string
    contact?: string | null
    phone?: string | null
    email?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutVendorsInput
    stockBatches?: StockBatchCreateNestedManyWithoutVendorInput
  }

  export type VendorUncheckedCreateInput = {
    id?: string
    name: string
    contact?: string | null
    phone?: string | null
    email?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutVendorInput
  }

  export type VendorUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutVendorsNestedInput
    stockBatches?: StockBatchUpdateManyWithoutVendorNestedInput
  }

  export type VendorUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stockBatches?: StockBatchUncheckedUpdateManyWithoutVendorNestedInput
  }

  export type VendorCreateManyInput = {
    id?: string
    name: string
    contact?: string | null
    phone?: string | null
    email?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VendorUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VendorUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockBatchCreateInput = {
    id?: string
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    material: PackingMaterialCreateNestedOneWithoutStockBatchesInput
    vendor?: VendorCreateNestedOneWithoutStockBatchesInput
    receivedBy?: UserCreateNestedOneWithoutStockBatchesReceivedInput
    company: CompanyCreateNestedOneWithoutStockBatchesInput
    rackAllocations?: RackStockLevelCreateNestedManyWithoutStockBatchInput
    issues?: MaterialIssueCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchUncheckedCreateInput = {
    id?: string
    materialId: string
    vendorId?: string | null
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    receivedById?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    rackAllocations?: RackStockLevelUncheckedCreateNestedManyWithoutStockBatchInput
    issues?: MaterialIssueUncheckedCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: PackingMaterialUpdateOneRequiredWithoutStockBatchesNestedInput
    vendor?: VendorUpdateOneWithoutStockBatchesNestedInput
    receivedBy?: UserUpdateOneWithoutStockBatchesReceivedNestedInput
    company?: CompanyUpdateOneRequiredWithoutStockBatchesNestedInput
    rackAllocations?: RackStockLevelUpdateManyWithoutStockBatchNestedInput
    issues?: MaterialIssueUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    receivedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rackAllocations?: RackStockLevelUncheckedUpdateManyWithoutStockBatchNestedInput
    issues?: MaterialIssueUncheckedUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchCreateManyInput = {
    id?: string
    materialId: string
    vendorId?: string | null
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    receivedById?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockBatchUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockBatchUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    receivedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RackStockLevelCreateInput = {
    id?: string
    quantity: number
    lastUpdated?: Date | string
    material: PackingMaterialCreateNestedOneWithoutRackLevelsInput
    rack: RackCreateNestedOneWithoutMaterialLevelsInput
    stockBatch?: StockBatchCreateNestedOneWithoutRackAllocationsInput
    company: CompanyCreateNestedOneWithoutRackLevelsInput
  }

  export type RackStockLevelUncheckedCreateInput = {
    id?: string
    materialId: string
    rackId: string
    stockBatchId?: string | null
    quantity: number
    lastUpdated?: Date | string
    companyId: string
  }

  export type RackStockLevelUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: PackingMaterialUpdateOneRequiredWithoutRackLevelsNestedInput
    rack?: RackUpdateOneRequiredWithoutMaterialLevelsNestedInput
    stockBatch?: StockBatchUpdateOneWithoutRackAllocationsNestedInput
    company?: CompanyUpdateOneRequiredWithoutRackLevelsNestedInput
  }

  export type RackStockLevelUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackStockLevelCreateManyInput = {
    id?: string
    materialId: string
    rackId: string
    stockBatchId?: string | null
    quantity: number
    lastUpdated?: Date | string
    companyId: string
  }

  export type RackStockLevelUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RackStockLevelUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialIssueCreateInput = {
    id?: string
    quantity: number
    unitCost: number
    totalCost: number
    issuedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialIssuesInput
    material: PackingMaterialCreateNestedOneWithoutMaterialIssuesInput
    stockBatch?: StockBatchCreateNestedOneWithoutIssuesInput
    rack?: RackCreateNestedOneWithoutJobMaterialsInput
    issuedBy?: UserCreateNestedOneWithoutMaterialIssuesCreatedInput
    company: CompanyCreateNestedOneWithoutMaterialIssuesInput
    returns?: MaterialReturnCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueUncheckedCreateInput = {
    id?: string
    jobId: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
    returns?: MaterialReturnUncheckedCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialIssuesNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialIssuesNestedInput
    stockBatch?: StockBatchUpdateOneWithoutIssuesNestedInput
    rack?: RackUpdateOneWithoutJobMaterialsNestedInput
    issuedBy?: UserUpdateOneWithoutMaterialIssuesCreatedNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialIssuesNestedInput
    returns?: MaterialReturnUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    returns?: MaterialReturnUncheckedUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueCreateManyInput = {
    id?: string
    jobId: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type MaterialIssueUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaterialIssueUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialReturnCreateInput = {
    id?: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialReturnsInput
    material: PackingMaterialCreateNestedOneWithoutMaterialReturnsInput
    issue?: MaterialIssueCreateNestedOneWithoutReturnsInput
    rack?: RackCreateNestedOneWithoutMaterialReturnInput
    recordedBy?: UserCreateNestedOneWithoutMaterialReturnsRecordedInput
    damages?: MaterialDamageCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectReturnInput
    company: CompanyCreateNestedOneWithoutMaterialReturnsInput
  }

  export type MaterialReturnUncheckedCreateInput = {
    id?: string
    jobId: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
    damages?: MaterialDamageUncheckedCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectReturnInput
  }

  export type MaterialReturnUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialReturnsNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialReturnsNestedInput
    issue?: MaterialIssueUpdateOneWithoutReturnsNestedInput
    rack?: RackUpdateOneWithoutMaterialReturnNestedInput
    recordedBy?: UserUpdateOneWithoutMaterialReturnsRecordedNestedInput
    damages?: MaterialDamageUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectReturnNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialReturnsNestedInput
  }

  export type MaterialReturnUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    damages?: MaterialDamageUncheckedUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectReturnNestedInput
  }

  export type MaterialReturnCreateManyInput = {
    id?: string
    jobId: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type MaterialReturnUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaterialReturnUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialDamageCreateInput = {
    id?: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedAt?: Date | string
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    material: PackingMaterialCreateNestedOneWithoutMaterialDamagesInput
    return: MaterialReturnCreateNestedOneWithoutDamagesInput
    recordedBy?: UserCreateNestedOneWithoutDamagesRecordedInput
    approvedBy?: UserCreateNestedOneWithoutDamagesApprovedInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectDamageInput
    company: CompanyCreateNestedOneWithoutMaterialDamagesInput
  }

  export type MaterialDamageUncheckedCreateInput = {
    id?: string
    returnId: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectDamageInput
  }

  export type MaterialDamageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialDamagesNestedInput
    return?: MaterialReturnUpdateOneRequiredWithoutDamagesNestedInput
    recordedBy?: UserUpdateOneWithoutDamagesRecordedNestedInput
    approvedBy?: UserUpdateOneWithoutDamagesApprovedNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectDamageNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialDamagesNestedInput
  }

  export type MaterialDamageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectDamageNestedInput
  }

  export type MaterialDamageCreateManyInput = {
    id?: string
    returnId: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
  }

  export type MaterialDamageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaterialDamageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialApprovalCreateInput = {
    id?: string
    approvalType: string
    status?: string
    requestedAt?: Date | string
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    job: MovingJobCreateNestedOneWithoutApprovalsInput
    requestedBy?: UserCreateNestedOneWithoutApprovalsRequestedInput
    decisionBy?: UserCreateNestedOneWithoutApprovalsDecidedInput
    subjectReturn?: MaterialReturnCreateNestedOneWithoutApprovalInput
    subjectDamage?: MaterialDamageCreateNestedOneWithoutApprovalInput
    company: CompanyCreateNestedOneWithoutMaterialApprovalsInput
  }

  export type MaterialApprovalUncheckedCreateInput = {
    id?: string
    jobId: string
    approvalType: string
    status?: string
    requestedById?: string | null
    requestedAt?: Date | string
    decisionById?: string | null
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    subjectDamageId?: string | null
    companyId: string
  }

  export type MaterialApprovalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutApprovalsNestedInput
    requestedBy?: UserUpdateOneWithoutApprovalsRequestedNestedInput
    decisionBy?: UserUpdateOneWithoutApprovalsDecidedNestedInput
    subjectReturn?: MaterialReturnUpdateOneWithoutApprovalNestedInput
    subjectDamage?: MaterialDamageUpdateOneWithoutApprovalNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialApprovalsNestedInput
  }

  export type MaterialApprovalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedById?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisionById?: NullableStringFieldUpdateOperationsInput | string | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialApprovalCreateManyInput = {
    id?: string
    jobId: string
    approvalType: string
    status?: string
    requestedById?: string | null
    requestedAt?: Date | string
    decisionById?: string | null
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    subjectDamageId?: string | null
    companyId: string
  }

  export type MaterialApprovalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaterialApprovalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedById?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisionById?: NullableStringFieldUpdateOperationsInput | string | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type JobCostSnapshotCreateInput = {
    id?: string
    recordedAt?: Date | string
    materialsCost?: number
    laborCost?: number
    damageLoss?: number
    otherCost?: number
    revenue?: number
    profit?: number
    profitMargin?: number | null
    currency?: string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutCostSnapshotsInput
    company: CompanyCreateNestedOneWithoutJobCostSnapshotsInput
  }

  export type JobCostSnapshotUncheckedCreateInput = {
    id?: string
    jobId: string
    recordedAt?: Date | string
    materialsCost?: number
    laborCost?: number
    damageLoss?: number
    otherCost?: number
    revenue?: number
    profit?: number
    profitMargin?: number | null
    currency?: string
    notes?: string | null
    companyId: string
  }

  export type JobCostSnapshotUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materialsCost?: FloatFieldUpdateOperationsInput | number
    laborCost?: FloatFieldUpdateOperationsInput | number
    damageLoss?: FloatFieldUpdateOperationsInput | number
    otherCost?: FloatFieldUpdateOperationsInput | number
    revenue?: FloatFieldUpdateOperationsInput | number
    profit?: FloatFieldUpdateOperationsInput | number
    profitMargin?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutCostSnapshotsNestedInput
    company?: CompanyUpdateOneRequiredWithoutJobCostSnapshotsNestedInput
  }

  export type JobCostSnapshotUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materialsCost?: FloatFieldUpdateOperationsInput | number
    laborCost?: FloatFieldUpdateOperationsInput | number
    damageLoss?: FloatFieldUpdateOperationsInput | number
    otherCost?: FloatFieldUpdateOperationsInput | number
    revenue?: FloatFieldUpdateOperationsInput | number
    profit?: FloatFieldUpdateOperationsInput | number
    profitMargin?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type JobCostSnapshotCreateManyInput = {
    id?: string
    jobId: string
    recordedAt?: Date | string
    materialsCost?: number
    laborCost?: number
    damageLoss?: number
    otherCost?: number
    revenue?: number
    profit?: number
    profitMargin?: number | null
    currency?: string
    notes?: string | null
    companyId: string
  }

  export type JobCostSnapshotUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materialsCost?: FloatFieldUpdateOperationsInput | number
    laborCost?: FloatFieldUpdateOperationsInput | number
    damageLoss?: FloatFieldUpdateOperationsInput | number
    otherCost?: FloatFieldUpdateOperationsInput | number
    revenue?: FloatFieldUpdateOperationsInput | number
    profit?: FloatFieldUpdateOperationsInput | number
    profitMargin?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JobCostSnapshotUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materialsCost?: FloatFieldUpdateOperationsInput | number
    laborCost?: FloatFieldUpdateOperationsInput | number
    damageLoss?: FloatFieldUpdateOperationsInput | number
    otherCost?: FloatFieldUpdateOperationsInput | number
    revenue?: FloatFieldUpdateOperationsInput | number
    profit?: FloatFieldUpdateOperationsInput | number
    profitMargin?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type SystemPluginCreateInput = {
    id?: string
    name: string
    description?: string | null
    version?: string
    status?: string
    entryPointUrl?: string | null
    checksum?: string | null
    installedAt?: Date | string
    activatedAt?: Date | string | null
    deactivatedAt?: Date | string | null
    company: CompanyCreateNestedOneWithoutSystemPluginsInput
    auditLogs?: SystemPluginLogCreateNestedManyWithoutPluginInput
  }

  export type SystemPluginUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    version?: string
    status?: string
    entryPointUrl?: string | null
    checksum?: string | null
    installedAt?: Date | string
    activatedAt?: Date | string | null
    deactivatedAt?: Date | string | null
    companyId: string
    auditLogs?: SystemPluginLogUncheckedCreateNestedManyWithoutPluginInput
  }

  export type SystemPluginUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    entryPointUrl?: NullableStringFieldUpdateOperationsInput | string | null
    checksum?: NullableStringFieldUpdateOperationsInput | string | null
    installedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutSystemPluginsNestedInput
    auditLogs?: SystemPluginLogUpdateManyWithoutPluginNestedInput
  }

  export type SystemPluginUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    entryPointUrl?: NullableStringFieldUpdateOperationsInput | string | null
    checksum?: NullableStringFieldUpdateOperationsInput | string | null
    installedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    auditLogs?: SystemPluginLogUncheckedUpdateManyWithoutPluginNestedInput
  }

  export type SystemPluginCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    version?: string
    status?: string
    entryPointUrl?: string | null
    checksum?: string | null
    installedAt?: Date | string
    activatedAt?: Date | string | null
    deactivatedAt?: Date | string | null
    companyId: string
  }

  export type SystemPluginUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    entryPointUrl?: NullableStringFieldUpdateOperationsInput | string | null
    checksum?: NullableStringFieldUpdateOperationsInput | string | null
    installedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SystemPluginUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    entryPointUrl?: NullableStringFieldUpdateOperationsInput | string | null
    checksum?: NullableStringFieldUpdateOperationsInput | string | null
    installedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type SystemPluginLogCreateInput = {
    id?: string
    action: string
    status: string
    message?: string | null
    performedBy?: string | null
    createdAt?: Date | string
    plugin: SystemPluginCreateNestedOneWithoutAuditLogsInput
    company: CompanyCreateNestedOneWithoutSystemPluginLogInput
  }

  export type SystemPluginLogUncheckedCreateInput = {
    id?: string
    pluginId: string
    action: string
    status: string
    message?: string | null
    performedBy?: string | null
    createdAt?: Date | string
    companyId: string
  }

  export type SystemPluginLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    plugin?: SystemPluginUpdateOneRequiredWithoutAuditLogsNestedInput
    company?: CompanyUpdateOneRequiredWithoutSystemPluginLogNestedInput
  }

  export type SystemPluginLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pluginId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type SystemPluginLogCreateManyInput = {
    id?: string
    pluginId: string
    action: string
    status: string
    message?: string | null
    performedBy?: string | null
    createdAt?: Date | string
    companyId: string
  }

  export type SystemPluginLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemPluginLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    pluginId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type RackListRelationFilter = {
    every?: RackWhereInput
    some?: RackWhereInput
    none?: RackWhereInput
  }

  export type ShipmentListRelationFilter = {
    every?: ShipmentWhereInput
    some?: ShipmentWhereInput
    none?: ShipmentWhereInput
  }

  export type MovingJobListRelationFilter = {
    every?: MovingJobWhereInput
    some?: MovingJobWhereInput
    none?: MovingJobWhereInput
  }

  export type ExpenseListRelationFilter = {
    every?: ExpenseWhereInput
    some?: ExpenseWhereInput
    none?: ExpenseWhereInput
  }

  export type InvoiceSettingsNullableRelationFilter = {
    is?: InvoiceSettingsWhereInput | null
    isNot?: InvoiceSettingsWhereInput | null
  }

  export type CustomFieldListRelationFilter = {
    every?: CustomFieldWhereInput
    some?: CustomFieldWhereInput
    none?: CustomFieldWhereInput
  }

  export type BillingSettingsNullableRelationFilter = {
    is?: BillingSettingsWhereInput | null
    isNot?: BillingSettingsWhereInput | null
  }

  export type ChargeTypeListRelationFilter = {
    every?: ChargeTypeWhereInput
    some?: ChargeTypeWhereInput
    none?: ChargeTypeWhereInput
  }

  export type InvoiceListRelationFilter = {
    every?: InvoiceWhereInput
    some?: InvoiceWhereInput
    none?: InvoiceWhereInput
  }

  export type InvoiceLineItemListRelationFilter = {
    every?: InvoiceLineItemWhereInput
    some?: InvoiceLineItemWhereInput
    none?: InvoiceLineItemWhereInput
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type ShipmentChargesListRelationFilter = {
    every?: ShipmentChargesWhereInput
    some?: ShipmentChargesWhereInput
    none?: ShipmentChargesWhereInput
  }

  export type ShipmentSettingsNullableRelationFilter = {
    is?: ShipmentSettingsWhereInput | null
    isNot?: ShipmentSettingsWhereInput | null
  }

  export type TemplateSettingsNullableRelationFilter = {
    is?: TemplateSettingsWhereInput | null
    isNot?: TemplateSettingsWhereInput | null
  }

  export type RolePermissionListRelationFilter = {
    every?: RolePermissionWhereInput
    some?: RolePermissionWhereInput
    none?: RolePermissionWhereInput
  }

  export type PackingMaterialListRelationFilter = {
    every?: PackingMaterialWhereInput
    some?: PackingMaterialWhereInput
    none?: PackingMaterialWhereInput
  }

  export type VendorListRelationFilter = {
    every?: VendorWhereInput
    some?: VendorWhereInput
    none?: VendorWhereInput
  }

  export type StockBatchListRelationFilter = {
    every?: StockBatchWhereInput
    some?: StockBatchWhereInput
    none?: StockBatchWhereInput
  }

  export type RackStockLevelListRelationFilter = {
    every?: RackStockLevelWhereInput
    some?: RackStockLevelWhereInput
    none?: RackStockLevelWhereInput
  }

  export type MaterialIssueListRelationFilter = {
    every?: MaterialIssueWhereInput
    some?: MaterialIssueWhereInput
    none?: MaterialIssueWhereInput
  }

  export type MaterialReturnListRelationFilter = {
    every?: MaterialReturnWhereInput
    some?: MaterialReturnWhereInput
    none?: MaterialReturnWhereInput
  }

  export type MaterialDamageListRelationFilter = {
    every?: MaterialDamageWhereInput
    some?: MaterialDamageWhereInput
    none?: MaterialDamageWhereInput
  }

  export type MaterialApprovalListRelationFilter = {
    every?: MaterialApprovalWhereInput
    some?: MaterialApprovalWhereInput
    none?: MaterialApprovalWhereInput
  }

  export type JobCostSnapshotListRelationFilter = {
    every?: JobCostSnapshotWhereInput
    some?: JobCostSnapshotWhereInput
    none?: JobCostSnapshotWhereInput
  }

  export type SystemPluginListRelationFilter = {
    every?: SystemPluginWhereInput
    some?: SystemPluginWhereInput
    none?: SystemPluginWhereInput
  }

  export type JobAssignmentListRelationFilter = {
    every?: JobAssignmentWhereInput
    some?: JobAssignmentWhereInput
    none?: JobAssignmentWhereInput
  }

  export type SystemPluginLogListRelationFilter = {
    every?: SystemPluginLogWhereInput
    some?: SystemPluginLogWhereInput
    none?: SystemPluginLogWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RackOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShipmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MovingJobOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ExpenseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomFieldOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChargeTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvoiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvoiceLineItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShipmentChargesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RolePermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PackingMaterialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VendorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StockBatchOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RackStockLevelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MaterialIssueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MaterialReturnOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MaterialDamageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MaterialApprovalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JobCostSnapshotOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SystemPluginOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JobAssignmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SystemPluginLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CompanyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    website?: SortOrder
    logo?: SortOrder
    plan?: SortOrder
    ratePerDay?: SortOrder
    currency?: SortOrder
    isActive?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    accentColor?: SortOrder
    showCompanyName?: SortOrder
    logoSize?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompanyAvgOrderByAggregateInput = {
    ratePerDay?: SortOrder
  }

  export type CompanyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    website?: SortOrder
    logo?: SortOrder
    plan?: SortOrder
    ratePerDay?: SortOrder
    currency?: SortOrder
    isActive?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    accentColor?: SortOrder
    showCompanyName?: SortOrder
    logoSize?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompanyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    website?: SortOrder
    logo?: SortOrder
    plan?: SortOrder
    ratePerDay?: SortOrder
    currency?: SortOrder
    isActive?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    accentColor?: SortOrder
    showCompanyName?: SortOrder
    logoSize?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CompanySumOrderByAggregateInput = {
    ratePerDay?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type CompanyRelationFilter = {
    is?: CompanyWhereInput
    isNot?: CompanyWhereInput
  }

  export type RackActivityListRelationFilter = {
    every?: RackActivityWhereInput
    some?: RackActivityWhereInput
    none?: RackActivityWhereInput
  }

  export type RackActivityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    skills?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    avatar?: SortOrder
    position?: SortOrder
    department?: SortOrder
    lastLoginAt?: SortOrder
    resetToken?: SortOrder
    resetTokenExpiry?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    skills?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    avatar?: SortOrder
    position?: SortOrder
    department?: SortOrder
    lastLoginAt?: SortOrder
    resetToken?: SortOrder
    resetTokenExpiry?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    skills?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    avatar?: SortOrder
    position?: SortOrder
    department?: SortOrder
    lastLoginAt?: SortOrder
    resetToken?: SortOrder
    resetTokenExpiry?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type ShipmentBoxListRelationFilter = {
    every?: ShipmentBoxWhereInput
    some?: ShipmentBoxWhereInput
    none?: ShipmentBoxWhereInput
  }

  export type RackInventoryListRelationFilter = {
    every?: RackInventoryWhereInput
    some?: RackInventoryWhereInput
    none?: RackInventoryWhereInput
  }

  export type ShipmentBoxOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RackInventoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RackCodeCompanyIdCompoundUniqueInput = {
    code: string
    companyId: string
  }

  export type RackCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    qrCode?: SortOrder
    rackType?: SortOrder
    location?: SortOrder
    capacityTotal?: SortOrder
    capacityUsed?: SortOrder
    minCapacity?: SortOrder
    status?: SortOrder
    lastActivity?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RackAvgOrderByAggregateInput = {
    capacityTotal?: SortOrder
    capacityUsed?: SortOrder
    minCapacity?: SortOrder
  }

  export type RackMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    qrCode?: SortOrder
    rackType?: SortOrder
    location?: SortOrder
    capacityTotal?: SortOrder
    capacityUsed?: SortOrder
    minCapacity?: SortOrder
    status?: SortOrder
    lastActivity?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RackMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    qrCode?: SortOrder
    rackType?: SortOrder
    location?: SortOrder
    capacityTotal?: SortOrder
    capacityUsed?: SortOrder
    minCapacity?: SortOrder
    status?: SortOrder
    lastActivity?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RackSumOrderByAggregateInput = {
    capacityTotal?: SortOrder
    capacityUsed?: SortOrder
    minCapacity?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type RackRelationFilter = {
    is?: RackWhereInput
    isNot?: RackWhereInput
  }

  export type RackInventoryCountOrderByAggregateInput = {
    id?: SortOrder
    rackId?: SortOrder
    itemType?: SortOrder
    itemId?: SortOrder
    quantityCurrent?: SortOrder
    quantityReserved?: SortOrder
    lastMovement?: SortOrder
    updatedBy?: SortOrder
    companyId?: SortOrder
  }

  export type RackInventoryAvgOrderByAggregateInput = {
    quantityCurrent?: SortOrder
    quantityReserved?: SortOrder
  }

  export type RackInventoryMaxOrderByAggregateInput = {
    id?: SortOrder
    rackId?: SortOrder
    itemType?: SortOrder
    itemId?: SortOrder
    quantityCurrent?: SortOrder
    quantityReserved?: SortOrder
    lastMovement?: SortOrder
    updatedBy?: SortOrder
    companyId?: SortOrder
  }

  export type RackInventoryMinOrderByAggregateInput = {
    id?: SortOrder
    rackId?: SortOrder
    itemType?: SortOrder
    itemId?: SortOrder
    quantityCurrent?: SortOrder
    quantityReserved?: SortOrder
    lastMovement?: SortOrder
    updatedBy?: SortOrder
    companyId?: SortOrder
  }

  export type RackInventorySumOrderByAggregateInput = {
    quantityCurrent?: SortOrder
    quantityReserved?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type RackActivityCountOrderByAggregateInput = {
    id?: SortOrder
    rackId?: SortOrder
    userId?: SortOrder
    activityType?: SortOrder
    itemDetails?: SortOrder
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
    photos?: SortOrder
    notes?: SortOrder
    gpsLocation?: SortOrder
    timestamp?: SortOrder
    companyId?: SortOrder
  }

  export type RackActivityAvgOrderByAggregateInput = {
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
  }

  export type RackActivityMaxOrderByAggregateInput = {
    id?: SortOrder
    rackId?: SortOrder
    userId?: SortOrder
    activityType?: SortOrder
    itemDetails?: SortOrder
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
    photos?: SortOrder
    notes?: SortOrder
    gpsLocation?: SortOrder
    timestamp?: SortOrder
    companyId?: SortOrder
  }

  export type RackActivityMinOrderByAggregateInput = {
    id?: SortOrder
    rackId?: SortOrder
    userId?: SortOrder
    activityType?: SortOrder
    itemDetails?: SortOrder
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
    photos?: SortOrder
    notes?: SortOrder
    gpsLocation?: SortOrder
    timestamp?: SortOrder
    companyId?: SortOrder
  }

  export type RackActivitySumOrderByAggregateInput = {
    quantityBefore?: SortOrder
    quantityAfter?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type RackNullableRelationFilter = {
    is?: RackWhereInput | null
    isNot?: RackWhereInput | null
  }

  export type WithdrawalListRelationFilter = {
    every?: WithdrawalWhereInput
    some?: WithdrawalWhereInput
    none?: WithdrawalWhereInput
  }

  export type ShipmentChargesNullableRelationFilter = {
    is?: ShipmentChargesWhereInput | null
    isNot?: ShipmentChargesWhereInput | null
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type WithdrawalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShipmentCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    referenceId?: SortOrder
    originalBoxCount?: SortOrder
    currentBoxCount?: SortOrder
    type?: SortOrder
    arrivalDate?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientEmail?: SortOrder
    description?: SortOrder
    estimatedValue?: SortOrder
    notes?: SortOrder
    qrCode?: SortOrder
    status?: SortOrder
    rackId?: SortOrder
    assignedAt?: SortOrder
    releasedAt?: SortOrder
    storageCharge?: SortOrder
    companyId?: SortOrder
    createdById?: SortOrder
    assignedById?: SortOrder
    releasedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isWarehouseShipment?: SortOrder
    warehouseData?: SortOrder
    shipper?: SortOrder
    consignee?: SortOrder
  }

  export type ShipmentAvgOrderByAggregateInput = {
    originalBoxCount?: SortOrder
    currentBoxCount?: SortOrder
    estimatedValue?: SortOrder
    storageCharge?: SortOrder
  }

  export type ShipmentMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    referenceId?: SortOrder
    originalBoxCount?: SortOrder
    currentBoxCount?: SortOrder
    type?: SortOrder
    arrivalDate?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientEmail?: SortOrder
    description?: SortOrder
    estimatedValue?: SortOrder
    notes?: SortOrder
    qrCode?: SortOrder
    status?: SortOrder
    rackId?: SortOrder
    assignedAt?: SortOrder
    releasedAt?: SortOrder
    storageCharge?: SortOrder
    companyId?: SortOrder
    createdById?: SortOrder
    assignedById?: SortOrder
    releasedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isWarehouseShipment?: SortOrder
    warehouseData?: SortOrder
    shipper?: SortOrder
    consignee?: SortOrder
  }

  export type ShipmentMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    referenceId?: SortOrder
    originalBoxCount?: SortOrder
    currentBoxCount?: SortOrder
    type?: SortOrder
    arrivalDate?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientEmail?: SortOrder
    description?: SortOrder
    estimatedValue?: SortOrder
    notes?: SortOrder
    qrCode?: SortOrder
    status?: SortOrder
    rackId?: SortOrder
    assignedAt?: SortOrder
    releasedAt?: SortOrder
    storageCharge?: SortOrder
    companyId?: SortOrder
    createdById?: SortOrder
    assignedById?: SortOrder
    releasedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isWarehouseShipment?: SortOrder
    warehouseData?: SortOrder
    shipper?: SortOrder
    consignee?: SortOrder
  }

  export type ShipmentSumOrderByAggregateInput = {
    originalBoxCount?: SortOrder
    currentBoxCount?: SortOrder
    estimatedValue?: SortOrder
    storageCharge?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type ShipmentRelationFilter = {
    is?: ShipmentWhereInput
    isNot?: ShipmentWhereInput
  }

  export type ShipmentBoxShipmentIdBoxNumberCompoundUniqueInput = {
    shipmentId: string
    boxNumber: number
  }

  export type ShipmentBoxCountOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    boxNumber?: SortOrder
    qrCode?: SortOrder
    rackId?: SortOrder
    status?: SortOrder
    assignedAt?: SortOrder
    releasedAt?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    pieceWeight?: SortOrder
    pieceQR?: SortOrder
  }

  export type ShipmentBoxAvgOrderByAggregateInput = {
    boxNumber?: SortOrder
    pieceWeight?: SortOrder
  }

  export type ShipmentBoxMaxOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    boxNumber?: SortOrder
    qrCode?: SortOrder
    rackId?: SortOrder
    status?: SortOrder
    assignedAt?: SortOrder
    releasedAt?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    pieceWeight?: SortOrder
    pieceQR?: SortOrder
  }

  export type ShipmentBoxMinOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    boxNumber?: SortOrder
    qrCode?: SortOrder
    rackId?: SortOrder
    status?: SortOrder
    assignedAt?: SortOrder
    releasedAt?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    pieceWeight?: SortOrder
    pieceQR?: SortOrder
  }

  export type ShipmentBoxSumOrderByAggregateInput = {
    boxNumber?: SortOrder
    pieceWeight?: SortOrder
  }

  export type WithdrawalCountOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    withdrawnBoxCount?: SortOrder
    remainingBoxCount?: SortOrder
    withdrawalDate?: SortOrder
    status?: SortOrder
    reason?: SortOrder
    notes?: SortOrder
    photos?: SortOrder
    receiptNumber?: SortOrder
    withdrawnBy?: SortOrder
    authorizedBy?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WithdrawalAvgOrderByAggregateInput = {
    withdrawnBoxCount?: SortOrder
    remainingBoxCount?: SortOrder
  }

  export type WithdrawalMaxOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    withdrawnBoxCount?: SortOrder
    remainingBoxCount?: SortOrder
    withdrawalDate?: SortOrder
    status?: SortOrder
    reason?: SortOrder
    notes?: SortOrder
    photos?: SortOrder
    receiptNumber?: SortOrder
    withdrawnBy?: SortOrder
    authorizedBy?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WithdrawalMinOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    withdrawnBoxCount?: SortOrder
    remainingBoxCount?: SortOrder
    withdrawalDate?: SortOrder
    status?: SortOrder
    reason?: SortOrder
    notes?: SortOrder
    photos?: SortOrder
    receiptNumber?: SortOrder
    withdrawnBy?: SortOrder
    authorizedBy?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WithdrawalSumOrderByAggregateInput = {
    withdrawnBoxCount?: SortOrder
    remainingBoxCount?: SortOrder
  }

  export type ExpenseCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    description?: SortOrder
    receipts?: SortOrder
    expenseDate?: SortOrder
    approvedBy?: SortOrder
    status?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ExpenseAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type ExpenseMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    description?: SortOrder
    receipts?: SortOrder
    expenseDate?: SortOrder
    approvedBy?: SortOrder
    status?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ExpenseMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    category?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    description?: SortOrder
    receipts?: SortOrder
    expenseDate?: SortOrder
    approvedBy?: SortOrder
    status?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ExpenseSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type InvoiceSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    templateType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    showLogo?: SortOrder
    footerText?: SortOrder
    termsConditions?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InvoiceSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    templateType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    showLogo?: SortOrder
    footerText?: SortOrder
    termsConditions?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InvoiceSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    templateType?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    showLogo?: SortOrder
    footerText?: SortOrder
    termsConditions?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BillingSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    storageRateType?: SortOrder
    storageRatePerBox?: SortOrder
    storageRatePerWeek?: SortOrder
    storageRatePerMonth?: SortOrder
    taxEnabled?: SortOrder
    taxRate?: SortOrder
    currency?: SortOrder
    invoicePrefix?: SortOrder
    invoiceDueDays?: SortOrder
    gracePeriodDays?: SortOrder
    minimumCharge?: SortOrder
    logoUrl?: SortOrder
    logoPosition?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    showCompanyDetails?: SortOrder
    showBankDetails?: SortOrder
    showTermsConditions?: SortOrder
    bankName?: SortOrder
    accountNumber?: SortOrder
    accountName?: SortOrder
    iban?: SortOrder
    swiftCode?: SortOrder
    invoiceFooterText?: SortOrder
    termsAndConditions?: SortOrder
    paymentInstructions?: SortOrder
    taxRegistrationNo?: SortOrder
    companyRegistrationNo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BillingSettingsAvgOrderByAggregateInput = {
    storageRatePerBox?: SortOrder
    storageRatePerWeek?: SortOrder
    storageRatePerMonth?: SortOrder
    taxRate?: SortOrder
    invoiceDueDays?: SortOrder
    gracePeriodDays?: SortOrder
    minimumCharge?: SortOrder
  }

  export type BillingSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    storageRateType?: SortOrder
    storageRatePerBox?: SortOrder
    storageRatePerWeek?: SortOrder
    storageRatePerMonth?: SortOrder
    taxEnabled?: SortOrder
    taxRate?: SortOrder
    currency?: SortOrder
    invoicePrefix?: SortOrder
    invoiceDueDays?: SortOrder
    gracePeriodDays?: SortOrder
    minimumCharge?: SortOrder
    logoUrl?: SortOrder
    logoPosition?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    showCompanyDetails?: SortOrder
    showBankDetails?: SortOrder
    showTermsConditions?: SortOrder
    bankName?: SortOrder
    accountNumber?: SortOrder
    accountName?: SortOrder
    iban?: SortOrder
    swiftCode?: SortOrder
    invoiceFooterText?: SortOrder
    termsAndConditions?: SortOrder
    paymentInstructions?: SortOrder
    taxRegistrationNo?: SortOrder
    companyRegistrationNo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BillingSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    storageRateType?: SortOrder
    storageRatePerBox?: SortOrder
    storageRatePerWeek?: SortOrder
    storageRatePerMonth?: SortOrder
    taxEnabled?: SortOrder
    taxRate?: SortOrder
    currency?: SortOrder
    invoicePrefix?: SortOrder
    invoiceDueDays?: SortOrder
    gracePeriodDays?: SortOrder
    minimumCharge?: SortOrder
    logoUrl?: SortOrder
    logoPosition?: SortOrder
    primaryColor?: SortOrder
    secondaryColor?: SortOrder
    showCompanyDetails?: SortOrder
    showBankDetails?: SortOrder
    showTermsConditions?: SortOrder
    bankName?: SortOrder
    accountNumber?: SortOrder
    accountName?: SortOrder
    iban?: SortOrder
    swiftCode?: SortOrder
    invoiceFooterText?: SortOrder
    termsAndConditions?: SortOrder
    paymentInstructions?: SortOrder
    taxRegistrationNo?: SortOrder
    companyRegistrationNo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BillingSettingsSumOrderByAggregateInput = {
    storageRatePerBox?: SortOrder
    storageRatePerWeek?: SortOrder
    storageRatePerMonth?: SortOrder
    taxRate?: SortOrder
    invoiceDueDays?: SortOrder
    gracePeriodDays?: SortOrder
    minimumCharge?: SortOrder
  }

  export type BillingSettingsRelationFilter = {
    is?: BillingSettingsWhereInput
    isNot?: BillingSettingsWhereInput
  }

  export type ChargeTypeCompanyIdCodeCompoundUniqueInput = {
    companyId: string
    code: string
  }

  export type ChargeTypeCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    billingSettingsId?: SortOrder
    name?: SortOrder
    code?: SortOrder
    description?: SortOrder
    category?: SortOrder
    calculationType?: SortOrder
    rate?: SortOrder
    minCharge?: SortOrder
    maxCharge?: SortOrder
    applyOnRelease?: SortOrder
    applyOnStorage?: SortOrder
    isTaxable?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ChargeTypeAvgOrderByAggregateInput = {
    rate?: SortOrder
    minCharge?: SortOrder
    maxCharge?: SortOrder
    displayOrder?: SortOrder
  }

  export type ChargeTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    billingSettingsId?: SortOrder
    name?: SortOrder
    code?: SortOrder
    description?: SortOrder
    category?: SortOrder
    calculationType?: SortOrder
    rate?: SortOrder
    minCharge?: SortOrder
    maxCharge?: SortOrder
    applyOnRelease?: SortOrder
    applyOnStorage?: SortOrder
    isTaxable?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ChargeTypeMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    billingSettingsId?: SortOrder
    name?: SortOrder
    code?: SortOrder
    description?: SortOrder
    category?: SortOrder
    calculationType?: SortOrder
    rate?: SortOrder
    minCharge?: SortOrder
    maxCharge?: SortOrder
    applyOnRelease?: SortOrder
    applyOnStorage?: SortOrder
    isTaxable?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ChargeTypeSumOrderByAggregateInput = {
    rate?: SortOrder
    minCharge?: SortOrder
    maxCharge?: SortOrder
    displayOrder?: SortOrder
  }

  export type InvoiceCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    companyId?: SortOrder
    shipmentId?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientAddress?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    invoiceType?: SortOrder
    isWarehouseInvoice?: SortOrder
    warehouseData?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    paymentStatus?: SortOrder
    paidAmount?: SortOrder
    balanceDue?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    transactionRef?: SortOrder
    notes?: SortOrder
    termsAndConditions?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InvoiceAvgOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    balanceDue?: SortOrder
  }

  export type InvoiceMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    companyId?: SortOrder
    shipmentId?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientAddress?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    invoiceType?: SortOrder
    isWarehouseInvoice?: SortOrder
    warehouseData?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    paymentStatus?: SortOrder
    paidAmount?: SortOrder
    balanceDue?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    transactionRef?: SortOrder
    notes?: SortOrder
    termsAndConditions?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InvoiceMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    companyId?: SortOrder
    shipmentId?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientAddress?: SortOrder
    invoiceDate?: SortOrder
    dueDate?: SortOrder
    invoiceType?: SortOrder
    isWarehouseInvoice?: SortOrder
    warehouseData?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    paymentStatus?: SortOrder
    paidAmount?: SortOrder
    balanceDue?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    transactionRef?: SortOrder
    notes?: SortOrder
    termsAndConditions?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InvoiceSumOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    balanceDue?: SortOrder
  }

  export type InvoiceRelationFilter = {
    is?: InvoiceWhereInput
    isNot?: InvoiceWhereInput
  }

  export type InvoiceLineItemCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    companyId?: SortOrder
    chargeTypeId?: SortOrder
    description?: SortOrder
    category?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    isTaxable?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
  }

  export type InvoiceLineItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    displayOrder?: SortOrder
  }

  export type InvoiceLineItemMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    companyId?: SortOrder
    chargeTypeId?: SortOrder
    description?: SortOrder
    category?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    isTaxable?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
  }

  export type InvoiceLineItemMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    companyId?: SortOrder
    chargeTypeId?: SortOrder
    description?: SortOrder
    category?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    isTaxable?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
  }

  export type InvoiceLineItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    amount?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    displayOrder?: SortOrder
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    companyId?: SortOrder
    amount?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    transactionRef?: SortOrder
    receiptNumber?: SortOrder
    notes?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    companyId?: SortOrder
    amount?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    transactionRef?: SortOrder
    receiptNumber?: SortOrder
    notes?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    companyId?: SortOrder
    amount?: SortOrder
    paymentDate?: SortOrder
    paymentMethod?: SortOrder
    transactionRef?: SortOrder
    receiptNumber?: SortOrder
    notes?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type ShipmentChargesCountOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    companyId?: SortOrder
    currentStorageCharge?: SortOrder
    daysStored?: SortOrder
    lastCalculatedDate?: SortOrder
    totalBoxesReleased?: SortOrder
    totalInvoiced?: SortOrder
    totalPaid?: SortOrder
    outstandingBalance?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShipmentChargesAvgOrderByAggregateInput = {
    currentStorageCharge?: SortOrder
    daysStored?: SortOrder
    totalBoxesReleased?: SortOrder
    totalInvoiced?: SortOrder
    totalPaid?: SortOrder
    outstandingBalance?: SortOrder
  }

  export type ShipmentChargesMaxOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    companyId?: SortOrder
    currentStorageCharge?: SortOrder
    daysStored?: SortOrder
    lastCalculatedDate?: SortOrder
    totalBoxesReleased?: SortOrder
    totalInvoiced?: SortOrder
    totalPaid?: SortOrder
    outstandingBalance?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShipmentChargesMinOrderByAggregateInput = {
    id?: SortOrder
    shipmentId?: SortOrder
    companyId?: SortOrder
    currentStorageCharge?: SortOrder
    daysStored?: SortOrder
    lastCalculatedDate?: SortOrder
    totalBoxesReleased?: SortOrder
    totalInvoiced?: SortOrder
    totalPaid?: SortOrder
    outstandingBalance?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShipmentChargesSumOrderByAggregateInput = {
    currentStorageCharge?: SortOrder
    daysStored?: SortOrder
    totalBoxesReleased?: SortOrder
    totalInvoiced?: SortOrder
    totalPaid?: SortOrder
    outstandingBalance?: SortOrder
  }

  export type CustomFieldValueListRelationFilter = {
    every?: CustomFieldValueWhereInput
    some?: CustomFieldValueWhereInput
    none?: CustomFieldValueWhereInput
  }

  export type CustomFieldValueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomFieldCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    fieldName?: SortOrder
    fieldType?: SortOrder
    fieldOptions?: SortOrder
    isRequired?: SortOrder
    isActive?: SortOrder
    section?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomFieldMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    fieldName?: SortOrder
    fieldType?: SortOrder
    fieldOptions?: SortOrder
    isRequired?: SortOrder
    isActive?: SortOrder
    section?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomFieldMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    fieldName?: SortOrder
    fieldType?: SortOrder
    fieldOptions?: SortOrder
    isRequired?: SortOrder
    isActive?: SortOrder
    section?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomFieldRelationFilter = {
    is?: CustomFieldWhereInput
    isNot?: CustomFieldWhereInput
  }

  export type CustomFieldValueCustomFieldIdEntityIdCompoundUniqueInput = {
    customFieldId: string
    entityId: string
  }

  export type CustomFieldValueCountOrderByAggregateInput = {
    id?: SortOrder
    customFieldId?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    fieldValue?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomFieldValueMaxOrderByAggregateInput = {
    id?: SortOrder
    customFieldId?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    fieldValue?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomFieldValueMinOrderByAggregateInput = {
    id?: SortOrder
    customFieldId?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    fieldValue?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShipmentSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    requireClientEmail?: SortOrder
    requireClientPhone?: SortOrder
    requireEstimatedValue?: SortOrder
    requirePhotos?: SortOrder
    autoGenerateQR?: SortOrder
    qrCodePrefix?: SortOrder
    showClientAddress?: SortOrder
    requireClientAddress?: SortOrder
    showDescription?: SortOrder
    requireDescription?: SortOrder
    showReferenceId?: SortOrder
    requireReferenceId?: SortOrder
    showNotes?: SortOrder
    requireNotes?: SortOrder
    showWarehouseMode?: SortOrder
    showShipperDetails?: SortOrder
    requireShipperDetails?: SortOrder
    showConsigneeDetails?: SortOrder
    requireConsigneeDetails?: SortOrder
    showWeight?: SortOrder
    requireWeight?: SortOrder
    showDimensions?: SortOrder
    requireDimensions?: SortOrder
    showStorageType?: SortOrder
    showSpecialInstructions?: SortOrder
    showEstimatedDays?: SortOrder
    requireEstimatedDays?: SortOrder
    defaultEstimatedDays?: SortOrder
    formSectionOrder?: SortOrder
    defaultStorageType?: SortOrder
    allowMultipleRacks?: SortOrder
    requireRackAssignment?: SortOrder
    autoAssignRack?: SortOrder
    notifyOnLowCapacity?: SortOrder
    lowCapacityThreshold?: SortOrder
    requireReleaseApproval?: SortOrder
    releaseApproverRole?: SortOrder
    requireReleasePhotos?: SortOrder
    requireIDVerification?: SortOrder
    generateReleaseInvoice?: SortOrder
    autoSendInvoiceEmail?: SortOrder
    storageRatePerDay?: SortOrder
    storageRatePerBox?: SortOrder
    chargePartialDay?: SortOrder
    minimumChargeDays?: SortOrder
    releaseHandlingFee?: SortOrder
    releasePerBoxFee?: SortOrder
    releaseTransportFee?: SortOrder
    notifyClientOnIntake?: SortOrder
    notifyClientOnRelease?: SortOrder
    notifyOnStorageAlert?: SortOrder
    storageAlertDays?: SortOrder
    enableCustomFields?: SortOrder
    requiredCustomFields?: SortOrder
    allowPartialRelease?: SortOrder
    partialReleaseMinBoxes?: SortOrder
    requirePartialApproval?: SortOrder
    requireReleaseSignature?: SortOrder
    requireCollectorID?: SortOrder
    allowProxyCollection?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShipmentSettingsAvgOrderByAggregateInput = {
    defaultEstimatedDays?: SortOrder
    lowCapacityThreshold?: SortOrder
    storageRatePerDay?: SortOrder
    storageRatePerBox?: SortOrder
    minimumChargeDays?: SortOrder
    releaseHandlingFee?: SortOrder
    releasePerBoxFee?: SortOrder
    releaseTransportFee?: SortOrder
    storageAlertDays?: SortOrder
    partialReleaseMinBoxes?: SortOrder
  }

  export type ShipmentSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    requireClientEmail?: SortOrder
    requireClientPhone?: SortOrder
    requireEstimatedValue?: SortOrder
    requirePhotos?: SortOrder
    autoGenerateQR?: SortOrder
    qrCodePrefix?: SortOrder
    showClientAddress?: SortOrder
    requireClientAddress?: SortOrder
    showDescription?: SortOrder
    requireDescription?: SortOrder
    showReferenceId?: SortOrder
    requireReferenceId?: SortOrder
    showNotes?: SortOrder
    requireNotes?: SortOrder
    showWarehouseMode?: SortOrder
    showShipperDetails?: SortOrder
    requireShipperDetails?: SortOrder
    showConsigneeDetails?: SortOrder
    requireConsigneeDetails?: SortOrder
    showWeight?: SortOrder
    requireWeight?: SortOrder
    showDimensions?: SortOrder
    requireDimensions?: SortOrder
    showStorageType?: SortOrder
    showSpecialInstructions?: SortOrder
    showEstimatedDays?: SortOrder
    requireEstimatedDays?: SortOrder
    defaultEstimatedDays?: SortOrder
    formSectionOrder?: SortOrder
    defaultStorageType?: SortOrder
    allowMultipleRacks?: SortOrder
    requireRackAssignment?: SortOrder
    autoAssignRack?: SortOrder
    notifyOnLowCapacity?: SortOrder
    lowCapacityThreshold?: SortOrder
    requireReleaseApproval?: SortOrder
    releaseApproverRole?: SortOrder
    requireReleasePhotos?: SortOrder
    requireIDVerification?: SortOrder
    generateReleaseInvoice?: SortOrder
    autoSendInvoiceEmail?: SortOrder
    storageRatePerDay?: SortOrder
    storageRatePerBox?: SortOrder
    chargePartialDay?: SortOrder
    minimumChargeDays?: SortOrder
    releaseHandlingFee?: SortOrder
    releasePerBoxFee?: SortOrder
    releaseTransportFee?: SortOrder
    notifyClientOnIntake?: SortOrder
    notifyClientOnRelease?: SortOrder
    notifyOnStorageAlert?: SortOrder
    storageAlertDays?: SortOrder
    enableCustomFields?: SortOrder
    requiredCustomFields?: SortOrder
    allowPartialRelease?: SortOrder
    partialReleaseMinBoxes?: SortOrder
    requirePartialApproval?: SortOrder
    requireReleaseSignature?: SortOrder
    requireCollectorID?: SortOrder
    allowProxyCollection?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShipmentSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    requireClientEmail?: SortOrder
    requireClientPhone?: SortOrder
    requireEstimatedValue?: SortOrder
    requirePhotos?: SortOrder
    autoGenerateQR?: SortOrder
    qrCodePrefix?: SortOrder
    showClientAddress?: SortOrder
    requireClientAddress?: SortOrder
    showDescription?: SortOrder
    requireDescription?: SortOrder
    showReferenceId?: SortOrder
    requireReferenceId?: SortOrder
    showNotes?: SortOrder
    requireNotes?: SortOrder
    showWarehouseMode?: SortOrder
    showShipperDetails?: SortOrder
    requireShipperDetails?: SortOrder
    showConsigneeDetails?: SortOrder
    requireConsigneeDetails?: SortOrder
    showWeight?: SortOrder
    requireWeight?: SortOrder
    showDimensions?: SortOrder
    requireDimensions?: SortOrder
    showStorageType?: SortOrder
    showSpecialInstructions?: SortOrder
    showEstimatedDays?: SortOrder
    requireEstimatedDays?: SortOrder
    defaultEstimatedDays?: SortOrder
    formSectionOrder?: SortOrder
    defaultStorageType?: SortOrder
    allowMultipleRacks?: SortOrder
    requireRackAssignment?: SortOrder
    autoAssignRack?: SortOrder
    notifyOnLowCapacity?: SortOrder
    lowCapacityThreshold?: SortOrder
    requireReleaseApproval?: SortOrder
    releaseApproverRole?: SortOrder
    requireReleasePhotos?: SortOrder
    requireIDVerification?: SortOrder
    generateReleaseInvoice?: SortOrder
    autoSendInvoiceEmail?: SortOrder
    storageRatePerDay?: SortOrder
    storageRatePerBox?: SortOrder
    chargePartialDay?: SortOrder
    minimumChargeDays?: SortOrder
    releaseHandlingFee?: SortOrder
    releasePerBoxFee?: SortOrder
    releaseTransportFee?: SortOrder
    notifyClientOnIntake?: SortOrder
    notifyClientOnRelease?: SortOrder
    notifyOnStorageAlert?: SortOrder
    storageAlertDays?: SortOrder
    enableCustomFields?: SortOrder
    requiredCustomFields?: SortOrder
    allowPartialRelease?: SortOrder
    partialReleaseMinBoxes?: SortOrder
    requirePartialApproval?: SortOrder
    requireReleaseSignature?: SortOrder
    requireCollectorID?: SortOrder
    allowProxyCollection?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShipmentSettingsSumOrderByAggregateInput = {
    defaultEstimatedDays?: SortOrder
    lowCapacityThreshold?: SortOrder
    storageRatePerDay?: SortOrder
    storageRatePerBox?: SortOrder
    minimumChargeDays?: SortOrder
    releaseHandlingFee?: SortOrder
    releasePerBoxFee?: SortOrder
    releaseTransportFee?: SortOrder
    storageAlertDays?: SortOrder
    partialReleaseMinBoxes?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type TemplateSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    companyName?: SortOrder
    companyLogo?: SortOrder
    companyAddress?: SortOrder
    companyPhone?: SortOrder
    companyEmail?: SortOrder
    companyWebsite?: SortOrder
    companyLicense?: SortOrder
    invoiceTemplateType?: SortOrder
    invoiceTitle?: SortOrder
    invoiceShowLogo?: SortOrder
    invoiceShowAddress?: SortOrder
    invoiceShowPhone?: SortOrder
    invoiceShowEmail?: SortOrder
    invoiceShowWebsite?: SortOrder
    invoiceShowLicense?: SortOrder
    invoiceShowFooter?: SortOrder
    invoiceHeaderBg?: SortOrder
    invoiceHeaderText?: SortOrder
    invoiceFooterText?: SortOrder
    invoiceTerms?: SortOrder
    invoiceShowBorders?: SortOrder
    invoiceShowGrid?: SortOrder
    invoiceTableStyle?: SortOrder
    invoiceFontSize?: SortOrder
    invoicePaperSize?: SortOrder
    invoicePrimaryColor?: SortOrder
    invoiceSecondaryColor?: SortOrder
    invoiceAccentColor?: SortOrder
    invoiceDangerColor?: SortOrder
    releaseNoteTemplate?: SortOrder
    releaseNoteTitle?: SortOrder
    releaseNoteHeaderBg?: SortOrder
    releaseNoteShowLogo?: SortOrder
    releaseShowShipment?: SortOrder
    releaseShowStorage?: SortOrder
    releaseShowItems?: SortOrder
    releaseShowCollector?: SortOrder
    releaseShowCharges?: SortOrder
    releaseShowPhotos?: SortOrder
    releaseShowTerms?: SortOrder
    releaseShowSignatures?: SortOrder
    releaseTerms?: SortOrder
    releaseFooterText?: SortOrder
    releasePrimaryColor?: SortOrder
    printMarginTop?: SortOrder
    printMarginBottom?: SortOrder
    printMarginLeft?: SortOrder
    printMarginRight?: SortOrder
    language?: SortOrder
    dateFormat?: SortOrder
    timeFormat?: SortOrder
    currencySymbol?: SortOrder
    currencyPosition?: SortOrder
    customField1Label?: SortOrder
    customField1Value?: SortOrder
    customField2Label?: SortOrder
    customField2Value?: SortOrder
    customField3Label?: SortOrder
    customField3Value?: SortOrder
    requireStaffSignature?: SortOrder
    requireClientSignature?: SortOrder
    signatureHeight?: SortOrder
    showQRCode?: SortOrder
    qrCodePosition?: SortOrder
    qrCodeSize?: SortOrder
    showWatermark?: SortOrder
    watermarkText?: SortOrder
    watermarkOpacity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TemplateSettingsAvgOrderByAggregateInput = {
    printMarginTop?: SortOrder
    printMarginBottom?: SortOrder
    printMarginLeft?: SortOrder
    printMarginRight?: SortOrder
    signatureHeight?: SortOrder
    qrCodeSize?: SortOrder
    watermarkOpacity?: SortOrder
  }

  export type TemplateSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    companyName?: SortOrder
    companyLogo?: SortOrder
    companyAddress?: SortOrder
    companyPhone?: SortOrder
    companyEmail?: SortOrder
    companyWebsite?: SortOrder
    companyLicense?: SortOrder
    invoiceTemplateType?: SortOrder
    invoiceTitle?: SortOrder
    invoiceShowLogo?: SortOrder
    invoiceShowAddress?: SortOrder
    invoiceShowPhone?: SortOrder
    invoiceShowEmail?: SortOrder
    invoiceShowWebsite?: SortOrder
    invoiceShowLicense?: SortOrder
    invoiceShowFooter?: SortOrder
    invoiceHeaderBg?: SortOrder
    invoiceHeaderText?: SortOrder
    invoiceFooterText?: SortOrder
    invoiceTerms?: SortOrder
    invoiceShowBorders?: SortOrder
    invoiceShowGrid?: SortOrder
    invoiceTableStyle?: SortOrder
    invoiceFontSize?: SortOrder
    invoicePaperSize?: SortOrder
    invoicePrimaryColor?: SortOrder
    invoiceSecondaryColor?: SortOrder
    invoiceAccentColor?: SortOrder
    invoiceDangerColor?: SortOrder
    releaseNoteTemplate?: SortOrder
    releaseNoteTitle?: SortOrder
    releaseNoteHeaderBg?: SortOrder
    releaseNoteShowLogo?: SortOrder
    releaseShowShipment?: SortOrder
    releaseShowStorage?: SortOrder
    releaseShowItems?: SortOrder
    releaseShowCollector?: SortOrder
    releaseShowCharges?: SortOrder
    releaseShowPhotos?: SortOrder
    releaseShowTerms?: SortOrder
    releaseShowSignatures?: SortOrder
    releaseTerms?: SortOrder
    releaseFooterText?: SortOrder
    releasePrimaryColor?: SortOrder
    printMarginTop?: SortOrder
    printMarginBottom?: SortOrder
    printMarginLeft?: SortOrder
    printMarginRight?: SortOrder
    language?: SortOrder
    dateFormat?: SortOrder
    timeFormat?: SortOrder
    currencySymbol?: SortOrder
    currencyPosition?: SortOrder
    customField1Label?: SortOrder
    customField1Value?: SortOrder
    customField2Label?: SortOrder
    customField2Value?: SortOrder
    customField3Label?: SortOrder
    customField3Value?: SortOrder
    requireStaffSignature?: SortOrder
    requireClientSignature?: SortOrder
    signatureHeight?: SortOrder
    showQRCode?: SortOrder
    qrCodePosition?: SortOrder
    qrCodeSize?: SortOrder
    showWatermark?: SortOrder
    watermarkText?: SortOrder
    watermarkOpacity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TemplateSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    companyName?: SortOrder
    companyLogo?: SortOrder
    companyAddress?: SortOrder
    companyPhone?: SortOrder
    companyEmail?: SortOrder
    companyWebsite?: SortOrder
    companyLicense?: SortOrder
    invoiceTemplateType?: SortOrder
    invoiceTitle?: SortOrder
    invoiceShowLogo?: SortOrder
    invoiceShowAddress?: SortOrder
    invoiceShowPhone?: SortOrder
    invoiceShowEmail?: SortOrder
    invoiceShowWebsite?: SortOrder
    invoiceShowLicense?: SortOrder
    invoiceShowFooter?: SortOrder
    invoiceHeaderBg?: SortOrder
    invoiceHeaderText?: SortOrder
    invoiceFooterText?: SortOrder
    invoiceTerms?: SortOrder
    invoiceShowBorders?: SortOrder
    invoiceShowGrid?: SortOrder
    invoiceTableStyle?: SortOrder
    invoiceFontSize?: SortOrder
    invoicePaperSize?: SortOrder
    invoicePrimaryColor?: SortOrder
    invoiceSecondaryColor?: SortOrder
    invoiceAccentColor?: SortOrder
    invoiceDangerColor?: SortOrder
    releaseNoteTemplate?: SortOrder
    releaseNoteTitle?: SortOrder
    releaseNoteHeaderBg?: SortOrder
    releaseNoteShowLogo?: SortOrder
    releaseShowShipment?: SortOrder
    releaseShowStorage?: SortOrder
    releaseShowItems?: SortOrder
    releaseShowCollector?: SortOrder
    releaseShowCharges?: SortOrder
    releaseShowPhotos?: SortOrder
    releaseShowTerms?: SortOrder
    releaseShowSignatures?: SortOrder
    releaseTerms?: SortOrder
    releaseFooterText?: SortOrder
    releasePrimaryColor?: SortOrder
    printMarginTop?: SortOrder
    printMarginBottom?: SortOrder
    printMarginLeft?: SortOrder
    printMarginRight?: SortOrder
    language?: SortOrder
    dateFormat?: SortOrder
    timeFormat?: SortOrder
    currencySymbol?: SortOrder
    currencyPosition?: SortOrder
    customField1Label?: SortOrder
    customField1Value?: SortOrder
    customField2Label?: SortOrder
    customField2Value?: SortOrder
    customField3Label?: SortOrder
    customField3Value?: SortOrder
    requireStaffSignature?: SortOrder
    requireClientSignature?: SortOrder
    signatureHeight?: SortOrder
    showQRCode?: SortOrder
    qrCodePosition?: SortOrder
    qrCodeSize?: SortOrder
    showWatermark?: SortOrder
    watermarkText?: SortOrder
    watermarkOpacity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TemplateSettingsSumOrderByAggregateInput = {
    printMarginTop?: SortOrder
    printMarginBottom?: SortOrder
    printMarginLeft?: SortOrder
    printMarginRight?: SortOrder
    signatureHeight?: SortOrder
    qrCodeSize?: SortOrder
    watermarkOpacity?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type PermissionResourceActionCompoundUniqueInput = {
    resource: string
    action: string
  }

  export type PermissionCountOrderByAggregateInput = {
    id?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PermissionMinOrderByAggregateInput = {
    id?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PermissionRelationFilter = {
    is?: PermissionWhereInput
    isNot?: PermissionWhereInput
  }

  export type RolePermissionRolePermissionIdCompanyIdCompoundUniqueInput = {
    role: string
    permissionId: string
    companyId: string
  }

  export type RolePermissionCountOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    permissionId?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RolePermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    permissionId?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RolePermissionMinOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    permissionId?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MovingJobCountOrderByAggregateInput = {
    id?: SortOrder
    jobCode?: SortOrder
    jobTitle?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientEmail?: SortOrder
    jobDate?: SortOrder
    jobAddress?: SortOrder
    dropoffAddress?: SortOrder
    status?: SortOrder
    teamLeaderId?: SortOrder
    driverName?: SortOrder
    vehicleNumber?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type MovingJobMaxOrderByAggregateInput = {
    id?: SortOrder
    jobCode?: SortOrder
    jobTitle?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientEmail?: SortOrder
    jobDate?: SortOrder
    jobAddress?: SortOrder
    dropoffAddress?: SortOrder
    status?: SortOrder
    teamLeaderId?: SortOrder
    driverName?: SortOrder
    vehicleNumber?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type MovingJobMinOrderByAggregateInput = {
    id?: SortOrder
    jobCode?: SortOrder
    jobTitle?: SortOrder
    clientName?: SortOrder
    clientPhone?: SortOrder
    clientEmail?: SortOrder
    jobDate?: SortOrder
    jobAddress?: SortOrder
    dropoffAddress?: SortOrder
    status?: SortOrder
    teamLeaderId?: SortOrder
    driverName?: SortOrder
    vehicleNumber?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type MovingJobRelationFilter = {
    is?: MovingJobWhereInput
    isNot?: MovingJobWhereInput
  }

  export type JobAssignmentJobIdUserIdRoleCompoundUniqueInput = {
    jobId: string
    userId: string
    role: string
  }

  export type JobAssignmentCountOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    checkInAt?: SortOrder
    checkOutAt?: SortOrder
    hourlyRate?: SortOrder
    hoursWorked?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type JobAssignmentAvgOrderByAggregateInput = {
    hourlyRate?: SortOrder
    hoursWorked?: SortOrder
  }

  export type JobAssignmentMaxOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    checkInAt?: SortOrder
    checkOutAt?: SortOrder
    hourlyRate?: SortOrder
    hoursWorked?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type JobAssignmentMinOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    checkInAt?: SortOrder
    checkOutAt?: SortOrder
    hourlyRate?: SortOrder
    hoursWorked?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type JobAssignmentSumOrderByAggregateInput = {
    hourlyRate?: SortOrder
    hoursWorked?: SortOrder
  }

  export type PackingMaterialSkuCompanyIdCompoundUniqueInput = {
    sku: string
    companyId: string
  }

  export type PackingMaterialCountOrderByAggregateInput = {
    id?: SortOrder
    sku?: SortOrder
    name?: SortOrder
    description?: SortOrder
    unit?: SortOrder
    category?: SortOrder
    minStockLevel?: SortOrder
    totalQuantity?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PackingMaterialAvgOrderByAggregateInput = {
    minStockLevel?: SortOrder
    totalQuantity?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrder
  }

  export type PackingMaterialMaxOrderByAggregateInput = {
    id?: SortOrder
    sku?: SortOrder
    name?: SortOrder
    description?: SortOrder
    unit?: SortOrder
    category?: SortOrder
    minStockLevel?: SortOrder
    totalQuantity?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PackingMaterialMinOrderByAggregateInput = {
    id?: SortOrder
    sku?: SortOrder
    name?: SortOrder
    description?: SortOrder
    unit?: SortOrder
    category?: SortOrder
    minStockLevel?: SortOrder
    totalQuantity?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrder
    isActive?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PackingMaterialSumOrderByAggregateInput = {
    minStockLevel?: SortOrder
    totalQuantity?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrder
  }

  export type VendorNameCompanyIdCompoundUniqueInput = {
    name: string
    companyId: string
  }

  export type VendorCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    contact?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VendorMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    contact?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VendorMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    contact?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PackingMaterialRelationFilter = {
    is?: PackingMaterialWhereInput
    isNot?: PackingMaterialWhereInput
  }

  export type VendorNullableRelationFilter = {
    is?: VendorWhereInput | null
    isNot?: VendorWhereInput | null
  }

  export type StockBatchCountOrderByAggregateInput = {
    id?: SortOrder
    materialId?: SortOrder
    vendorId?: SortOrder
    vendorName?: SortOrder
    purchaseOrder?: SortOrder
    purchaseDate?: SortOrder
    quantityPurchased?: SortOrder
    quantityRemaining?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrder
    receivedById?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockBatchAvgOrderByAggregateInput = {
    quantityPurchased?: SortOrder
    quantityRemaining?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrder
  }

  export type StockBatchMaxOrderByAggregateInput = {
    id?: SortOrder
    materialId?: SortOrder
    vendorId?: SortOrder
    vendorName?: SortOrder
    purchaseOrder?: SortOrder
    purchaseDate?: SortOrder
    quantityPurchased?: SortOrder
    quantityRemaining?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrder
    receivedById?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockBatchMinOrderByAggregateInput = {
    id?: SortOrder
    materialId?: SortOrder
    vendorId?: SortOrder
    vendorName?: SortOrder
    purchaseOrder?: SortOrder
    purchaseDate?: SortOrder
    quantityPurchased?: SortOrder
    quantityRemaining?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrder
    receivedById?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StockBatchSumOrderByAggregateInput = {
    quantityPurchased?: SortOrder
    quantityRemaining?: SortOrder
    unitCost?: SortOrder
    sellingPrice?: SortOrder
  }

  export type StockBatchNullableRelationFilter = {
    is?: StockBatchWhereInput | null
    isNot?: StockBatchWhereInput | null
  }

  export type RackStockLevelMaterialIdRackIdStockBatchIdCompoundUniqueInput = {
    materialId: string
    rackId: string
    stockBatchId: string
  }

  export type RackStockLevelCountOrderByAggregateInput = {
    id?: SortOrder
    materialId?: SortOrder
    rackId?: SortOrder
    stockBatchId?: SortOrder
    quantity?: SortOrder
    lastUpdated?: SortOrder
    companyId?: SortOrder
  }

  export type RackStockLevelAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type RackStockLevelMaxOrderByAggregateInput = {
    id?: SortOrder
    materialId?: SortOrder
    rackId?: SortOrder
    stockBatchId?: SortOrder
    quantity?: SortOrder
    lastUpdated?: SortOrder
    companyId?: SortOrder
  }

  export type RackStockLevelMinOrderByAggregateInput = {
    id?: SortOrder
    materialId?: SortOrder
    rackId?: SortOrder
    stockBatchId?: SortOrder
    quantity?: SortOrder
    lastUpdated?: SortOrder
    companyId?: SortOrder
  }

  export type RackStockLevelSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type MaterialIssueCountOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    materialId?: SortOrder
    stockBatchId?: SortOrder
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    rackId?: SortOrder
    issuedById?: SortOrder
    issuedAt?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialIssueAvgOrderByAggregateInput = {
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
  }

  export type MaterialIssueMaxOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    materialId?: SortOrder
    stockBatchId?: SortOrder
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    rackId?: SortOrder
    issuedById?: SortOrder
    issuedAt?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialIssueMinOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    materialId?: SortOrder
    stockBatchId?: SortOrder
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
    rackId?: SortOrder
    issuedById?: SortOrder
    issuedAt?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialIssueSumOrderByAggregateInput = {
    quantity?: SortOrder
    unitCost?: SortOrder
    totalCost?: SortOrder
  }

  export type MaterialIssueNullableRelationFilter = {
    is?: MaterialIssueWhereInput | null
    isNot?: MaterialIssueWhereInput | null
  }

  export type MaterialApprovalNullableRelationFilter = {
    is?: MaterialApprovalWhereInput | null
    isNot?: MaterialApprovalWhereInput | null
  }

  export type MaterialReturnCountOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    materialId?: SortOrder
    issueId?: SortOrder
    quantityIssued?: SortOrder
    quantityUsed?: SortOrder
    quantityGood?: SortOrder
    quantityDamaged?: SortOrder
    restocked?: SortOrder
    restockedAt?: SortOrder
    rackId?: SortOrder
    recordedById?: SortOrder
    recordedAt?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialReturnAvgOrderByAggregateInput = {
    quantityIssued?: SortOrder
    quantityUsed?: SortOrder
    quantityGood?: SortOrder
    quantityDamaged?: SortOrder
  }

  export type MaterialReturnMaxOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    materialId?: SortOrder
    issueId?: SortOrder
    quantityIssued?: SortOrder
    quantityUsed?: SortOrder
    quantityGood?: SortOrder
    quantityDamaged?: SortOrder
    restocked?: SortOrder
    restockedAt?: SortOrder
    rackId?: SortOrder
    recordedById?: SortOrder
    recordedAt?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialReturnMinOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    materialId?: SortOrder
    issueId?: SortOrder
    quantityIssued?: SortOrder
    quantityUsed?: SortOrder
    quantityGood?: SortOrder
    quantityDamaged?: SortOrder
    restocked?: SortOrder
    restockedAt?: SortOrder
    rackId?: SortOrder
    recordedById?: SortOrder
    recordedAt?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialReturnSumOrderByAggregateInput = {
    quantityIssued?: SortOrder
    quantityUsed?: SortOrder
    quantityGood?: SortOrder
    quantityDamaged?: SortOrder
  }

  export type MaterialReturnRelationFilter = {
    is?: MaterialReturnWhereInput
    isNot?: MaterialReturnWhereInput
  }

  export type MaterialDamageCountOrderByAggregateInput = {
    id?: SortOrder
    returnId?: SortOrder
    materialId?: SortOrder
    quantity?: SortOrder
    reason?: SortOrder
    photoUrls?: SortOrder
    status?: SortOrder
    recordedById?: SortOrder
    recordedAt?: SortOrder
    approvedById?: SortOrder
    approvedAt?: SortOrder
    approvalNotes?: SortOrder
    rejectionReason?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialDamageAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type MaterialDamageMaxOrderByAggregateInput = {
    id?: SortOrder
    returnId?: SortOrder
    materialId?: SortOrder
    quantity?: SortOrder
    reason?: SortOrder
    photoUrls?: SortOrder
    status?: SortOrder
    recordedById?: SortOrder
    recordedAt?: SortOrder
    approvedById?: SortOrder
    approvedAt?: SortOrder
    approvalNotes?: SortOrder
    rejectionReason?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialDamageMinOrderByAggregateInput = {
    id?: SortOrder
    returnId?: SortOrder
    materialId?: SortOrder
    quantity?: SortOrder
    reason?: SortOrder
    photoUrls?: SortOrder
    status?: SortOrder
    recordedById?: SortOrder
    recordedAt?: SortOrder
    approvedById?: SortOrder
    approvedAt?: SortOrder
    approvalNotes?: SortOrder
    rejectionReason?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialDamageSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type MaterialReturnNullableRelationFilter = {
    is?: MaterialReturnWhereInput | null
    isNot?: MaterialReturnWhereInput | null
  }

  export type MaterialDamageNullableRelationFilter = {
    is?: MaterialDamageWhereInput | null
    isNot?: MaterialDamageWhereInput | null
  }

  export type MaterialApprovalCountOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    approvalType?: SortOrder
    status?: SortOrder
    requestedById?: SortOrder
    requestedAt?: SortOrder
    decisionById?: SortOrder
    decidedAt?: SortOrder
    decisionNotes?: SortOrder
    subjectReturnId?: SortOrder
    subjectDamageId?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialApprovalMaxOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    approvalType?: SortOrder
    status?: SortOrder
    requestedById?: SortOrder
    requestedAt?: SortOrder
    decisionById?: SortOrder
    decidedAt?: SortOrder
    decisionNotes?: SortOrder
    subjectReturnId?: SortOrder
    subjectDamageId?: SortOrder
    companyId?: SortOrder
  }

  export type MaterialApprovalMinOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    approvalType?: SortOrder
    status?: SortOrder
    requestedById?: SortOrder
    requestedAt?: SortOrder
    decisionById?: SortOrder
    decidedAt?: SortOrder
    decisionNotes?: SortOrder
    subjectReturnId?: SortOrder
    subjectDamageId?: SortOrder
    companyId?: SortOrder
  }

  export type JobCostSnapshotCountOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    recordedAt?: SortOrder
    materialsCost?: SortOrder
    laborCost?: SortOrder
    damageLoss?: SortOrder
    otherCost?: SortOrder
    revenue?: SortOrder
    profit?: SortOrder
    profitMargin?: SortOrder
    currency?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
  }

  export type JobCostSnapshotAvgOrderByAggregateInput = {
    materialsCost?: SortOrder
    laborCost?: SortOrder
    damageLoss?: SortOrder
    otherCost?: SortOrder
    revenue?: SortOrder
    profit?: SortOrder
    profitMargin?: SortOrder
  }

  export type JobCostSnapshotMaxOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    recordedAt?: SortOrder
    materialsCost?: SortOrder
    laborCost?: SortOrder
    damageLoss?: SortOrder
    otherCost?: SortOrder
    revenue?: SortOrder
    profit?: SortOrder
    profitMargin?: SortOrder
    currency?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
  }

  export type JobCostSnapshotMinOrderByAggregateInput = {
    id?: SortOrder
    jobId?: SortOrder
    recordedAt?: SortOrder
    materialsCost?: SortOrder
    laborCost?: SortOrder
    damageLoss?: SortOrder
    otherCost?: SortOrder
    revenue?: SortOrder
    profit?: SortOrder
    profitMargin?: SortOrder
    currency?: SortOrder
    notes?: SortOrder
    companyId?: SortOrder
  }

  export type JobCostSnapshotSumOrderByAggregateInput = {
    materialsCost?: SortOrder
    laborCost?: SortOrder
    damageLoss?: SortOrder
    otherCost?: SortOrder
    revenue?: SortOrder
    profit?: SortOrder
    profitMargin?: SortOrder
  }

  export type SystemPluginNameCompanyIdCompoundUniqueInput = {
    name: string
    companyId: string
  }

  export type SystemPluginCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    version?: SortOrder
    status?: SortOrder
    entryPointUrl?: SortOrder
    checksum?: SortOrder
    installedAt?: SortOrder
    activatedAt?: SortOrder
    deactivatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type SystemPluginMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    version?: SortOrder
    status?: SortOrder
    entryPointUrl?: SortOrder
    checksum?: SortOrder
    installedAt?: SortOrder
    activatedAt?: SortOrder
    deactivatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type SystemPluginMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    version?: SortOrder
    status?: SortOrder
    entryPointUrl?: SortOrder
    checksum?: SortOrder
    installedAt?: SortOrder
    activatedAt?: SortOrder
    deactivatedAt?: SortOrder
    companyId?: SortOrder
  }

  export type SystemPluginRelationFilter = {
    is?: SystemPluginWhereInput
    isNot?: SystemPluginWhereInput
  }

  export type SystemPluginLogCountOrderByAggregateInput = {
    id?: SortOrder
    pluginId?: SortOrder
    action?: SortOrder
    status?: SortOrder
    message?: SortOrder
    performedBy?: SortOrder
    createdAt?: SortOrder
    companyId?: SortOrder
  }

  export type SystemPluginLogMaxOrderByAggregateInput = {
    id?: SortOrder
    pluginId?: SortOrder
    action?: SortOrder
    status?: SortOrder
    message?: SortOrder
    performedBy?: SortOrder
    createdAt?: SortOrder
    companyId?: SortOrder
  }

  export type SystemPluginLogMinOrderByAggregateInput = {
    id?: SortOrder
    pluginId?: SortOrder
    action?: SortOrder
    status?: SortOrder
    message?: SortOrder
    performedBy?: SortOrder
    createdAt?: SortOrder
    companyId?: SortOrder
  }

  export type UserCreateNestedManyWithoutCompanyInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type RackCreateNestedManyWithoutCompanyInput = {
    create?: XOR<RackCreateWithoutCompanyInput, RackUncheckedCreateWithoutCompanyInput> | RackCreateWithoutCompanyInput[] | RackUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RackCreateOrConnectWithoutCompanyInput | RackCreateOrConnectWithoutCompanyInput[]
    createMany?: RackCreateManyCompanyInputEnvelope
    connect?: RackWhereUniqueInput | RackWhereUniqueInput[]
  }

  export type ShipmentCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ShipmentCreateWithoutCompanyInput, ShipmentUncheckedCreateWithoutCompanyInput> | ShipmentCreateWithoutCompanyInput[] | ShipmentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutCompanyInput | ShipmentCreateOrConnectWithoutCompanyInput[]
    createMany?: ShipmentCreateManyCompanyInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type MovingJobCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MovingJobCreateWithoutCompanyInput, MovingJobUncheckedCreateWithoutCompanyInput> | MovingJobCreateWithoutCompanyInput[] | MovingJobUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MovingJobCreateOrConnectWithoutCompanyInput | MovingJobCreateOrConnectWithoutCompanyInput[]
    createMany?: MovingJobCreateManyCompanyInputEnvelope
    connect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
  }

  export type ExpenseCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ExpenseCreateWithoutCompanyInput, ExpenseUncheckedCreateWithoutCompanyInput> | ExpenseCreateWithoutCompanyInput[] | ExpenseUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCompanyInput | ExpenseCreateOrConnectWithoutCompanyInput[]
    createMany?: ExpenseCreateManyCompanyInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type InvoiceSettingsCreateNestedOneWithoutCompanyInput = {
    create?: XOR<InvoiceSettingsCreateWithoutCompanyInput, InvoiceSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: InvoiceSettingsCreateOrConnectWithoutCompanyInput
    connect?: InvoiceSettingsWhereUniqueInput
  }

  export type CustomFieldCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CustomFieldCreateWithoutCompanyInput, CustomFieldUncheckedCreateWithoutCompanyInput> | CustomFieldCreateWithoutCompanyInput[] | CustomFieldUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CustomFieldCreateOrConnectWithoutCompanyInput | CustomFieldCreateOrConnectWithoutCompanyInput[]
    createMany?: CustomFieldCreateManyCompanyInputEnvelope
    connect?: CustomFieldWhereUniqueInput | CustomFieldWhereUniqueInput[]
  }

  export type BillingSettingsCreateNestedOneWithoutCompanyInput = {
    create?: XOR<BillingSettingsCreateWithoutCompanyInput, BillingSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: BillingSettingsCreateOrConnectWithoutCompanyInput
    connect?: BillingSettingsWhereUniqueInput
  }

  export type ChargeTypeCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ChargeTypeCreateWithoutCompanyInput, ChargeTypeUncheckedCreateWithoutCompanyInput> | ChargeTypeCreateWithoutCompanyInput[] | ChargeTypeUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ChargeTypeCreateOrConnectWithoutCompanyInput | ChargeTypeCreateOrConnectWithoutCompanyInput[]
    createMany?: ChargeTypeCreateManyCompanyInputEnvelope
    connect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutCompanyInput = {
    create?: XOR<InvoiceCreateWithoutCompanyInput, InvoiceUncheckedCreateWithoutCompanyInput> | InvoiceCreateWithoutCompanyInput[] | InvoiceUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutCompanyInput | InvoiceCreateOrConnectWithoutCompanyInput[]
    createMany?: InvoiceCreateManyCompanyInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type InvoiceLineItemCreateNestedManyWithoutCompanyInput = {
    create?: XOR<InvoiceLineItemCreateWithoutCompanyInput, InvoiceLineItemUncheckedCreateWithoutCompanyInput> | InvoiceLineItemCreateWithoutCompanyInput[] | InvoiceLineItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: InvoiceLineItemCreateOrConnectWithoutCompanyInput | InvoiceLineItemCreateOrConnectWithoutCompanyInput[]
    createMany?: InvoiceLineItemCreateManyCompanyInputEnvelope
    connect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutCompanyInput = {
    create?: XOR<PaymentCreateWithoutCompanyInput, PaymentUncheckedCreateWithoutCompanyInput> | PaymentCreateWithoutCompanyInput[] | PaymentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutCompanyInput | PaymentCreateOrConnectWithoutCompanyInput[]
    createMany?: PaymentCreateManyCompanyInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type ShipmentChargesCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ShipmentChargesCreateWithoutCompanyInput, ShipmentChargesUncheckedCreateWithoutCompanyInput> | ShipmentChargesCreateWithoutCompanyInput[] | ShipmentChargesUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ShipmentChargesCreateOrConnectWithoutCompanyInput | ShipmentChargesCreateOrConnectWithoutCompanyInput[]
    createMany?: ShipmentChargesCreateManyCompanyInputEnvelope
    connect?: ShipmentChargesWhereUniqueInput | ShipmentChargesWhereUniqueInput[]
  }

  export type ShipmentSettingsCreateNestedOneWithoutCompanyInput = {
    create?: XOR<ShipmentSettingsCreateWithoutCompanyInput, ShipmentSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: ShipmentSettingsCreateOrConnectWithoutCompanyInput
    connect?: ShipmentSettingsWhereUniqueInput
  }

  export type TemplateSettingsCreateNestedOneWithoutCompanyInput = {
    create?: XOR<TemplateSettingsCreateWithoutCompanyInput, TemplateSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: TemplateSettingsCreateOrConnectWithoutCompanyInput
    connect?: TemplateSettingsWhereUniqueInput
  }

  export type RolePermissionCreateNestedManyWithoutCompanyInput = {
    create?: XOR<RolePermissionCreateWithoutCompanyInput, RolePermissionUncheckedCreateWithoutCompanyInput> | RolePermissionCreateWithoutCompanyInput[] | RolePermissionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutCompanyInput | RolePermissionCreateOrConnectWithoutCompanyInput[]
    createMany?: RolePermissionCreateManyCompanyInputEnvelope
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
  }

  export type PackingMaterialCreateNestedManyWithoutCompanyInput = {
    create?: XOR<PackingMaterialCreateWithoutCompanyInput, PackingMaterialUncheckedCreateWithoutCompanyInput> | PackingMaterialCreateWithoutCompanyInput[] | PackingMaterialUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutCompanyInput | PackingMaterialCreateOrConnectWithoutCompanyInput[]
    createMany?: PackingMaterialCreateManyCompanyInputEnvelope
    connect?: PackingMaterialWhereUniqueInput | PackingMaterialWhereUniqueInput[]
  }

  export type VendorCreateNestedManyWithoutCompanyInput = {
    create?: XOR<VendorCreateWithoutCompanyInput, VendorUncheckedCreateWithoutCompanyInput> | VendorCreateWithoutCompanyInput[] | VendorUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutCompanyInput | VendorCreateOrConnectWithoutCompanyInput[]
    createMany?: VendorCreateManyCompanyInputEnvelope
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
  }

  export type StockBatchCreateNestedManyWithoutCompanyInput = {
    create?: XOR<StockBatchCreateWithoutCompanyInput, StockBatchUncheckedCreateWithoutCompanyInput> | StockBatchCreateWithoutCompanyInput[] | StockBatchUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutCompanyInput | StockBatchCreateOrConnectWithoutCompanyInput[]
    createMany?: StockBatchCreateManyCompanyInputEnvelope
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
  }

  export type RackStockLevelCreateNestedManyWithoutCompanyInput = {
    create?: XOR<RackStockLevelCreateWithoutCompanyInput, RackStockLevelUncheckedCreateWithoutCompanyInput> | RackStockLevelCreateWithoutCompanyInput[] | RackStockLevelUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutCompanyInput | RackStockLevelCreateOrConnectWithoutCompanyInput[]
    createMany?: RackStockLevelCreateManyCompanyInputEnvelope
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
  }

  export type MaterialIssueCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MaterialIssueCreateWithoutCompanyInput, MaterialIssueUncheckedCreateWithoutCompanyInput> | MaterialIssueCreateWithoutCompanyInput[] | MaterialIssueUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutCompanyInput | MaterialIssueCreateOrConnectWithoutCompanyInput[]
    createMany?: MaterialIssueCreateManyCompanyInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type MaterialReturnCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MaterialReturnCreateWithoutCompanyInput, MaterialReturnUncheckedCreateWithoutCompanyInput> | MaterialReturnCreateWithoutCompanyInput[] | MaterialReturnUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutCompanyInput | MaterialReturnCreateOrConnectWithoutCompanyInput[]
    createMany?: MaterialReturnCreateManyCompanyInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type MaterialDamageCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MaterialDamageCreateWithoutCompanyInput, MaterialDamageUncheckedCreateWithoutCompanyInput> | MaterialDamageCreateWithoutCompanyInput[] | MaterialDamageUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutCompanyInput | MaterialDamageCreateOrConnectWithoutCompanyInput[]
    createMany?: MaterialDamageCreateManyCompanyInputEnvelope
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
  }

  export type MaterialApprovalCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MaterialApprovalCreateWithoutCompanyInput, MaterialApprovalUncheckedCreateWithoutCompanyInput> | MaterialApprovalCreateWithoutCompanyInput[] | MaterialApprovalUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutCompanyInput | MaterialApprovalCreateOrConnectWithoutCompanyInput[]
    createMany?: MaterialApprovalCreateManyCompanyInputEnvelope
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
  }

  export type JobCostSnapshotCreateNestedManyWithoutCompanyInput = {
    create?: XOR<JobCostSnapshotCreateWithoutCompanyInput, JobCostSnapshotUncheckedCreateWithoutCompanyInput> | JobCostSnapshotCreateWithoutCompanyInput[] | JobCostSnapshotUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobCostSnapshotCreateOrConnectWithoutCompanyInput | JobCostSnapshotCreateOrConnectWithoutCompanyInput[]
    createMany?: JobCostSnapshotCreateManyCompanyInputEnvelope
    connect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
  }

  export type SystemPluginCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SystemPluginCreateWithoutCompanyInput, SystemPluginUncheckedCreateWithoutCompanyInput> | SystemPluginCreateWithoutCompanyInput[] | SystemPluginUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemPluginCreateOrConnectWithoutCompanyInput | SystemPluginCreateOrConnectWithoutCompanyInput[]
    createMany?: SystemPluginCreateManyCompanyInputEnvelope
    connect?: SystemPluginWhereUniqueInput | SystemPluginWhereUniqueInput[]
  }

  export type JobAssignmentCreateNestedManyWithoutCompanyInput = {
    create?: XOR<JobAssignmentCreateWithoutCompanyInput, JobAssignmentUncheckedCreateWithoutCompanyInput> | JobAssignmentCreateWithoutCompanyInput[] | JobAssignmentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutCompanyInput | JobAssignmentCreateOrConnectWithoutCompanyInput[]
    createMany?: JobAssignmentCreateManyCompanyInputEnvelope
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
  }

  export type SystemPluginLogCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SystemPluginLogCreateWithoutCompanyInput, SystemPluginLogUncheckedCreateWithoutCompanyInput> | SystemPluginLogCreateWithoutCompanyInput[] | SystemPluginLogUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemPluginLogCreateOrConnectWithoutCompanyInput | SystemPluginLogCreateOrConnectWithoutCompanyInput[]
    createMany?: SystemPluginLogCreateManyCompanyInputEnvelope
    connect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type RackUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<RackCreateWithoutCompanyInput, RackUncheckedCreateWithoutCompanyInput> | RackCreateWithoutCompanyInput[] | RackUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RackCreateOrConnectWithoutCompanyInput | RackCreateOrConnectWithoutCompanyInput[]
    createMany?: RackCreateManyCompanyInputEnvelope
    connect?: RackWhereUniqueInput | RackWhereUniqueInput[]
  }

  export type ShipmentUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ShipmentCreateWithoutCompanyInput, ShipmentUncheckedCreateWithoutCompanyInput> | ShipmentCreateWithoutCompanyInput[] | ShipmentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutCompanyInput | ShipmentCreateOrConnectWithoutCompanyInput[]
    createMany?: ShipmentCreateManyCompanyInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type MovingJobUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MovingJobCreateWithoutCompanyInput, MovingJobUncheckedCreateWithoutCompanyInput> | MovingJobCreateWithoutCompanyInput[] | MovingJobUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MovingJobCreateOrConnectWithoutCompanyInput | MovingJobCreateOrConnectWithoutCompanyInput[]
    createMany?: MovingJobCreateManyCompanyInputEnvelope
    connect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
  }

  export type ExpenseUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ExpenseCreateWithoutCompanyInput, ExpenseUncheckedCreateWithoutCompanyInput> | ExpenseCreateWithoutCompanyInput[] | ExpenseUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCompanyInput | ExpenseCreateOrConnectWithoutCompanyInput[]
    createMany?: ExpenseCreateManyCompanyInputEnvelope
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
  }

  export type InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput = {
    create?: XOR<InvoiceSettingsCreateWithoutCompanyInput, InvoiceSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: InvoiceSettingsCreateOrConnectWithoutCompanyInput
    connect?: InvoiceSettingsWhereUniqueInput
  }

  export type CustomFieldUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CustomFieldCreateWithoutCompanyInput, CustomFieldUncheckedCreateWithoutCompanyInput> | CustomFieldCreateWithoutCompanyInput[] | CustomFieldUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CustomFieldCreateOrConnectWithoutCompanyInput | CustomFieldCreateOrConnectWithoutCompanyInput[]
    createMany?: CustomFieldCreateManyCompanyInputEnvelope
    connect?: CustomFieldWhereUniqueInput | CustomFieldWhereUniqueInput[]
  }

  export type BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput = {
    create?: XOR<BillingSettingsCreateWithoutCompanyInput, BillingSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: BillingSettingsCreateOrConnectWithoutCompanyInput
    connect?: BillingSettingsWhereUniqueInput
  }

  export type ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ChargeTypeCreateWithoutCompanyInput, ChargeTypeUncheckedCreateWithoutCompanyInput> | ChargeTypeCreateWithoutCompanyInput[] | ChargeTypeUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ChargeTypeCreateOrConnectWithoutCompanyInput | ChargeTypeCreateOrConnectWithoutCompanyInput[]
    createMany?: ChargeTypeCreateManyCompanyInputEnvelope
    connect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<InvoiceCreateWithoutCompanyInput, InvoiceUncheckedCreateWithoutCompanyInput> | InvoiceCreateWithoutCompanyInput[] | InvoiceUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutCompanyInput | InvoiceCreateOrConnectWithoutCompanyInput[]
    createMany?: InvoiceCreateManyCompanyInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<InvoiceLineItemCreateWithoutCompanyInput, InvoiceLineItemUncheckedCreateWithoutCompanyInput> | InvoiceLineItemCreateWithoutCompanyInput[] | InvoiceLineItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: InvoiceLineItemCreateOrConnectWithoutCompanyInput | InvoiceLineItemCreateOrConnectWithoutCompanyInput[]
    createMany?: InvoiceLineItemCreateManyCompanyInputEnvelope
    connect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<PaymentCreateWithoutCompanyInput, PaymentUncheckedCreateWithoutCompanyInput> | PaymentCreateWithoutCompanyInput[] | PaymentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutCompanyInput | PaymentCreateOrConnectWithoutCompanyInput[]
    createMany?: PaymentCreateManyCompanyInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ShipmentChargesCreateWithoutCompanyInput, ShipmentChargesUncheckedCreateWithoutCompanyInput> | ShipmentChargesCreateWithoutCompanyInput[] | ShipmentChargesUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ShipmentChargesCreateOrConnectWithoutCompanyInput | ShipmentChargesCreateOrConnectWithoutCompanyInput[]
    createMany?: ShipmentChargesCreateManyCompanyInputEnvelope
    connect?: ShipmentChargesWhereUniqueInput | ShipmentChargesWhereUniqueInput[]
  }

  export type ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput = {
    create?: XOR<ShipmentSettingsCreateWithoutCompanyInput, ShipmentSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: ShipmentSettingsCreateOrConnectWithoutCompanyInput
    connect?: ShipmentSettingsWhereUniqueInput
  }

  export type TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput = {
    create?: XOR<TemplateSettingsCreateWithoutCompanyInput, TemplateSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: TemplateSettingsCreateOrConnectWithoutCompanyInput
    connect?: TemplateSettingsWhereUniqueInput
  }

  export type RolePermissionUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<RolePermissionCreateWithoutCompanyInput, RolePermissionUncheckedCreateWithoutCompanyInput> | RolePermissionCreateWithoutCompanyInput[] | RolePermissionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutCompanyInput | RolePermissionCreateOrConnectWithoutCompanyInput[]
    createMany?: RolePermissionCreateManyCompanyInputEnvelope
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
  }

  export type PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<PackingMaterialCreateWithoutCompanyInput, PackingMaterialUncheckedCreateWithoutCompanyInput> | PackingMaterialCreateWithoutCompanyInput[] | PackingMaterialUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutCompanyInput | PackingMaterialCreateOrConnectWithoutCompanyInput[]
    createMany?: PackingMaterialCreateManyCompanyInputEnvelope
    connect?: PackingMaterialWhereUniqueInput | PackingMaterialWhereUniqueInput[]
  }

  export type VendorUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<VendorCreateWithoutCompanyInput, VendorUncheckedCreateWithoutCompanyInput> | VendorCreateWithoutCompanyInput[] | VendorUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutCompanyInput | VendorCreateOrConnectWithoutCompanyInput[]
    createMany?: VendorCreateManyCompanyInputEnvelope
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
  }

  export type StockBatchUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<StockBatchCreateWithoutCompanyInput, StockBatchUncheckedCreateWithoutCompanyInput> | StockBatchCreateWithoutCompanyInput[] | StockBatchUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutCompanyInput | StockBatchCreateOrConnectWithoutCompanyInput[]
    createMany?: StockBatchCreateManyCompanyInputEnvelope
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
  }

  export type RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<RackStockLevelCreateWithoutCompanyInput, RackStockLevelUncheckedCreateWithoutCompanyInput> | RackStockLevelCreateWithoutCompanyInput[] | RackStockLevelUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutCompanyInput | RackStockLevelCreateOrConnectWithoutCompanyInput[]
    createMany?: RackStockLevelCreateManyCompanyInputEnvelope
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
  }

  export type MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MaterialIssueCreateWithoutCompanyInput, MaterialIssueUncheckedCreateWithoutCompanyInput> | MaterialIssueCreateWithoutCompanyInput[] | MaterialIssueUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutCompanyInput | MaterialIssueCreateOrConnectWithoutCompanyInput[]
    createMany?: MaterialIssueCreateManyCompanyInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MaterialReturnCreateWithoutCompanyInput, MaterialReturnUncheckedCreateWithoutCompanyInput> | MaterialReturnCreateWithoutCompanyInput[] | MaterialReturnUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutCompanyInput | MaterialReturnCreateOrConnectWithoutCompanyInput[]
    createMany?: MaterialReturnCreateManyCompanyInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MaterialDamageCreateWithoutCompanyInput, MaterialDamageUncheckedCreateWithoutCompanyInput> | MaterialDamageCreateWithoutCompanyInput[] | MaterialDamageUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutCompanyInput | MaterialDamageCreateOrConnectWithoutCompanyInput[]
    createMany?: MaterialDamageCreateManyCompanyInputEnvelope
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
  }

  export type MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MaterialApprovalCreateWithoutCompanyInput, MaterialApprovalUncheckedCreateWithoutCompanyInput> | MaterialApprovalCreateWithoutCompanyInput[] | MaterialApprovalUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutCompanyInput | MaterialApprovalCreateOrConnectWithoutCompanyInput[]
    createMany?: MaterialApprovalCreateManyCompanyInputEnvelope
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
  }

  export type JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<JobCostSnapshotCreateWithoutCompanyInput, JobCostSnapshotUncheckedCreateWithoutCompanyInput> | JobCostSnapshotCreateWithoutCompanyInput[] | JobCostSnapshotUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobCostSnapshotCreateOrConnectWithoutCompanyInput | JobCostSnapshotCreateOrConnectWithoutCompanyInput[]
    createMany?: JobCostSnapshotCreateManyCompanyInputEnvelope
    connect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
  }

  export type SystemPluginUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SystemPluginCreateWithoutCompanyInput, SystemPluginUncheckedCreateWithoutCompanyInput> | SystemPluginCreateWithoutCompanyInput[] | SystemPluginUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemPluginCreateOrConnectWithoutCompanyInput | SystemPluginCreateOrConnectWithoutCompanyInput[]
    createMany?: SystemPluginCreateManyCompanyInputEnvelope
    connect?: SystemPluginWhereUniqueInput | SystemPluginWhereUniqueInput[]
  }

  export type JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<JobAssignmentCreateWithoutCompanyInput, JobAssignmentUncheckedCreateWithoutCompanyInput> | JobAssignmentCreateWithoutCompanyInput[] | JobAssignmentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutCompanyInput | JobAssignmentCreateOrConnectWithoutCompanyInput[]
    createMany?: JobAssignmentCreateManyCompanyInputEnvelope
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
  }

  export type SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SystemPluginLogCreateWithoutCompanyInput, SystemPluginLogUncheckedCreateWithoutCompanyInput> | SystemPluginLogCreateWithoutCompanyInput[] | SystemPluginLogUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemPluginLogCreateOrConnectWithoutCompanyInput | SystemPluginLogCreateOrConnectWithoutCompanyInput[]
    createMany?: SystemPluginLogCreateManyCompanyInputEnvelope
    connect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCompanyInput | UserUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCompanyInput | UserUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCompanyInput | UserUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type RackUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<RackCreateWithoutCompanyInput, RackUncheckedCreateWithoutCompanyInput> | RackCreateWithoutCompanyInput[] | RackUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RackCreateOrConnectWithoutCompanyInput | RackCreateOrConnectWithoutCompanyInput[]
    upsert?: RackUpsertWithWhereUniqueWithoutCompanyInput | RackUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: RackCreateManyCompanyInputEnvelope
    set?: RackWhereUniqueInput | RackWhereUniqueInput[]
    disconnect?: RackWhereUniqueInput | RackWhereUniqueInput[]
    delete?: RackWhereUniqueInput | RackWhereUniqueInput[]
    connect?: RackWhereUniqueInput | RackWhereUniqueInput[]
    update?: RackUpdateWithWhereUniqueWithoutCompanyInput | RackUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: RackUpdateManyWithWhereWithoutCompanyInput | RackUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: RackScalarWhereInput | RackScalarWhereInput[]
  }

  export type ShipmentUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ShipmentCreateWithoutCompanyInput, ShipmentUncheckedCreateWithoutCompanyInput> | ShipmentCreateWithoutCompanyInput[] | ShipmentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutCompanyInput | ShipmentCreateOrConnectWithoutCompanyInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutCompanyInput | ShipmentUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ShipmentCreateManyCompanyInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutCompanyInput | ShipmentUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutCompanyInput | ShipmentUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type MovingJobUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MovingJobCreateWithoutCompanyInput, MovingJobUncheckedCreateWithoutCompanyInput> | MovingJobCreateWithoutCompanyInput[] | MovingJobUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MovingJobCreateOrConnectWithoutCompanyInput | MovingJobCreateOrConnectWithoutCompanyInput[]
    upsert?: MovingJobUpsertWithWhereUniqueWithoutCompanyInput | MovingJobUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MovingJobCreateManyCompanyInputEnvelope
    set?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    disconnect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    delete?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    connect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    update?: MovingJobUpdateWithWhereUniqueWithoutCompanyInput | MovingJobUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MovingJobUpdateManyWithWhereWithoutCompanyInput | MovingJobUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MovingJobScalarWhereInput | MovingJobScalarWhereInput[]
  }

  export type ExpenseUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ExpenseCreateWithoutCompanyInput, ExpenseUncheckedCreateWithoutCompanyInput> | ExpenseCreateWithoutCompanyInput[] | ExpenseUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCompanyInput | ExpenseCreateOrConnectWithoutCompanyInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutCompanyInput | ExpenseUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ExpenseCreateManyCompanyInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutCompanyInput | ExpenseUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutCompanyInput | ExpenseUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type InvoiceSettingsUpdateOneWithoutCompanyNestedInput = {
    create?: XOR<InvoiceSettingsCreateWithoutCompanyInput, InvoiceSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: InvoiceSettingsCreateOrConnectWithoutCompanyInput
    upsert?: InvoiceSettingsUpsertWithoutCompanyInput
    disconnect?: InvoiceSettingsWhereInput | boolean
    delete?: InvoiceSettingsWhereInput | boolean
    connect?: InvoiceSettingsWhereUniqueInput
    update?: XOR<XOR<InvoiceSettingsUpdateToOneWithWhereWithoutCompanyInput, InvoiceSettingsUpdateWithoutCompanyInput>, InvoiceSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type CustomFieldUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CustomFieldCreateWithoutCompanyInput, CustomFieldUncheckedCreateWithoutCompanyInput> | CustomFieldCreateWithoutCompanyInput[] | CustomFieldUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CustomFieldCreateOrConnectWithoutCompanyInput | CustomFieldCreateOrConnectWithoutCompanyInput[]
    upsert?: CustomFieldUpsertWithWhereUniqueWithoutCompanyInput | CustomFieldUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CustomFieldCreateManyCompanyInputEnvelope
    set?: CustomFieldWhereUniqueInput | CustomFieldWhereUniqueInput[]
    disconnect?: CustomFieldWhereUniqueInput | CustomFieldWhereUniqueInput[]
    delete?: CustomFieldWhereUniqueInput | CustomFieldWhereUniqueInput[]
    connect?: CustomFieldWhereUniqueInput | CustomFieldWhereUniqueInput[]
    update?: CustomFieldUpdateWithWhereUniqueWithoutCompanyInput | CustomFieldUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CustomFieldUpdateManyWithWhereWithoutCompanyInput | CustomFieldUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CustomFieldScalarWhereInput | CustomFieldScalarWhereInput[]
  }

  export type BillingSettingsUpdateOneWithoutCompanyNestedInput = {
    create?: XOR<BillingSettingsCreateWithoutCompanyInput, BillingSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: BillingSettingsCreateOrConnectWithoutCompanyInput
    upsert?: BillingSettingsUpsertWithoutCompanyInput
    disconnect?: BillingSettingsWhereInput | boolean
    delete?: BillingSettingsWhereInput | boolean
    connect?: BillingSettingsWhereUniqueInput
    update?: XOR<XOR<BillingSettingsUpdateToOneWithWhereWithoutCompanyInput, BillingSettingsUpdateWithoutCompanyInput>, BillingSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type ChargeTypeUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ChargeTypeCreateWithoutCompanyInput, ChargeTypeUncheckedCreateWithoutCompanyInput> | ChargeTypeCreateWithoutCompanyInput[] | ChargeTypeUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ChargeTypeCreateOrConnectWithoutCompanyInput | ChargeTypeCreateOrConnectWithoutCompanyInput[]
    upsert?: ChargeTypeUpsertWithWhereUniqueWithoutCompanyInput | ChargeTypeUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ChargeTypeCreateManyCompanyInputEnvelope
    set?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    disconnect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    delete?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    connect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    update?: ChargeTypeUpdateWithWhereUniqueWithoutCompanyInput | ChargeTypeUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ChargeTypeUpdateManyWithWhereWithoutCompanyInput | ChargeTypeUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ChargeTypeScalarWhereInput | ChargeTypeScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<InvoiceCreateWithoutCompanyInput, InvoiceUncheckedCreateWithoutCompanyInput> | InvoiceCreateWithoutCompanyInput[] | InvoiceUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutCompanyInput | InvoiceCreateOrConnectWithoutCompanyInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutCompanyInput | InvoiceUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: InvoiceCreateManyCompanyInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutCompanyInput | InvoiceUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutCompanyInput | InvoiceUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type InvoiceLineItemUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<InvoiceLineItemCreateWithoutCompanyInput, InvoiceLineItemUncheckedCreateWithoutCompanyInput> | InvoiceLineItemCreateWithoutCompanyInput[] | InvoiceLineItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: InvoiceLineItemCreateOrConnectWithoutCompanyInput | InvoiceLineItemCreateOrConnectWithoutCompanyInput[]
    upsert?: InvoiceLineItemUpsertWithWhereUniqueWithoutCompanyInput | InvoiceLineItemUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: InvoiceLineItemCreateManyCompanyInputEnvelope
    set?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    disconnect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    delete?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    connect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    update?: InvoiceLineItemUpdateWithWhereUniqueWithoutCompanyInput | InvoiceLineItemUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: InvoiceLineItemUpdateManyWithWhereWithoutCompanyInput | InvoiceLineItemUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: InvoiceLineItemScalarWhereInput | InvoiceLineItemScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<PaymentCreateWithoutCompanyInput, PaymentUncheckedCreateWithoutCompanyInput> | PaymentCreateWithoutCompanyInput[] | PaymentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutCompanyInput | PaymentCreateOrConnectWithoutCompanyInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutCompanyInput | PaymentUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: PaymentCreateManyCompanyInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutCompanyInput | PaymentUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutCompanyInput | PaymentUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type ShipmentChargesUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ShipmentChargesCreateWithoutCompanyInput, ShipmentChargesUncheckedCreateWithoutCompanyInput> | ShipmentChargesCreateWithoutCompanyInput[] | ShipmentChargesUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ShipmentChargesCreateOrConnectWithoutCompanyInput | ShipmentChargesCreateOrConnectWithoutCompanyInput[]
    upsert?: ShipmentChargesUpsertWithWhereUniqueWithoutCompanyInput | ShipmentChargesUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ShipmentChargesCreateManyCompanyInputEnvelope
    set?: ShipmentChargesWhereUniqueInput | ShipmentChargesWhereUniqueInput[]
    disconnect?: ShipmentChargesWhereUniqueInput | ShipmentChargesWhereUniqueInput[]
    delete?: ShipmentChargesWhereUniqueInput | ShipmentChargesWhereUniqueInput[]
    connect?: ShipmentChargesWhereUniqueInput | ShipmentChargesWhereUniqueInput[]
    update?: ShipmentChargesUpdateWithWhereUniqueWithoutCompanyInput | ShipmentChargesUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ShipmentChargesUpdateManyWithWhereWithoutCompanyInput | ShipmentChargesUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ShipmentChargesScalarWhereInput | ShipmentChargesScalarWhereInput[]
  }

  export type ShipmentSettingsUpdateOneWithoutCompanyNestedInput = {
    create?: XOR<ShipmentSettingsCreateWithoutCompanyInput, ShipmentSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: ShipmentSettingsCreateOrConnectWithoutCompanyInput
    upsert?: ShipmentSettingsUpsertWithoutCompanyInput
    disconnect?: ShipmentSettingsWhereInput | boolean
    delete?: ShipmentSettingsWhereInput | boolean
    connect?: ShipmentSettingsWhereUniqueInput
    update?: XOR<XOR<ShipmentSettingsUpdateToOneWithWhereWithoutCompanyInput, ShipmentSettingsUpdateWithoutCompanyInput>, ShipmentSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type TemplateSettingsUpdateOneWithoutCompanyNestedInput = {
    create?: XOR<TemplateSettingsCreateWithoutCompanyInput, TemplateSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: TemplateSettingsCreateOrConnectWithoutCompanyInput
    upsert?: TemplateSettingsUpsertWithoutCompanyInput
    disconnect?: TemplateSettingsWhereInput | boolean
    delete?: TemplateSettingsWhereInput | boolean
    connect?: TemplateSettingsWhereUniqueInput
    update?: XOR<XOR<TemplateSettingsUpdateToOneWithWhereWithoutCompanyInput, TemplateSettingsUpdateWithoutCompanyInput>, TemplateSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type RolePermissionUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<RolePermissionCreateWithoutCompanyInput, RolePermissionUncheckedCreateWithoutCompanyInput> | RolePermissionCreateWithoutCompanyInput[] | RolePermissionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutCompanyInput | RolePermissionCreateOrConnectWithoutCompanyInput[]
    upsert?: RolePermissionUpsertWithWhereUniqueWithoutCompanyInput | RolePermissionUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: RolePermissionCreateManyCompanyInputEnvelope
    set?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    disconnect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    delete?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    update?: RolePermissionUpdateWithWhereUniqueWithoutCompanyInput | RolePermissionUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: RolePermissionUpdateManyWithWhereWithoutCompanyInput | RolePermissionUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
  }

  export type PackingMaterialUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<PackingMaterialCreateWithoutCompanyInput, PackingMaterialUncheckedCreateWithoutCompanyInput> | PackingMaterialCreateWithoutCompanyInput[] | PackingMaterialUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutCompanyInput | PackingMaterialCreateOrConnectWithoutCompanyInput[]
    upsert?: PackingMaterialUpsertWithWhereUniqueWithoutCompanyInput | PackingMaterialUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: PackingMaterialCreateManyCompanyInputEnvelope
    set?: PackingMaterialWhereUniqueInput | PackingMaterialWhereUniqueInput[]
    disconnect?: PackingMaterialWhereUniqueInput | PackingMaterialWhereUniqueInput[]
    delete?: PackingMaterialWhereUniqueInput | PackingMaterialWhereUniqueInput[]
    connect?: PackingMaterialWhereUniqueInput | PackingMaterialWhereUniqueInput[]
    update?: PackingMaterialUpdateWithWhereUniqueWithoutCompanyInput | PackingMaterialUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: PackingMaterialUpdateManyWithWhereWithoutCompanyInput | PackingMaterialUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: PackingMaterialScalarWhereInput | PackingMaterialScalarWhereInput[]
  }

  export type VendorUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<VendorCreateWithoutCompanyInput, VendorUncheckedCreateWithoutCompanyInput> | VendorCreateWithoutCompanyInput[] | VendorUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutCompanyInput | VendorCreateOrConnectWithoutCompanyInput[]
    upsert?: VendorUpsertWithWhereUniqueWithoutCompanyInput | VendorUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: VendorCreateManyCompanyInputEnvelope
    set?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    disconnect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    delete?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    update?: VendorUpdateWithWhereUniqueWithoutCompanyInput | VendorUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: VendorUpdateManyWithWhereWithoutCompanyInput | VendorUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: VendorScalarWhereInput | VendorScalarWhereInput[]
  }

  export type StockBatchUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<StockBatchCreateWithoutCompanyInput, StockBatchUncheckedCreateWithoutCompanyInput> | StockBatchCreateWithoutCompanyInput[] | StockBatchUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutCompanyInput | StockBatchCreateOrConnectWithoutCompanyInput[]
    upsert?: StockBatchUpsertWithWhereUniqueWithoutCompanyInput | StockBatchUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: StockBatchCreateManyCompanyInputEnvelope
    set?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    disconnect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    delete?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    update?: StockBatchUpdateWithWhereUniqueWithoutCompanyInput | StockBatchUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: StockBatchUpdateManyWithWhereWithoutCompanyInput | StockBatchUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: StockBatchScalarWhereInput | StockBatchScalarWhereInput[]
  }

  export type RackStockLevelUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<RackStockLevelCreateWithoutCompanyInput, RackStockLevelUncheckedCreateWithoutCompanyInput> | RackStockLevelCreateWithoutCompanyInput[] | RackStockLevelUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutCompanyInput | RackStockLevelCreateOrConnectWithoutCompanyInput[]
    upsert?: RackStockLevelUpsertWithWhereUniqueWithoutCompanyInput | RackStockLevelUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: RackStockLevelCreateManyCompanyInputEnvelope
    set?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    disconnect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    delete?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    update?: RackStockLevelUpdateWithWhereUniqueWithoutCompanyInput | RackStockLevelUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: RackStockLevelUpdateManyWithWhereWithoutCompanyInput | RackStockLevelUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: RackStockLevelScalarWhereInput | RackStockLevelScalarWhereInput[]
  }

  export type MaterialIssueUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutCompanyInput, MaterialIssueUncheckedCreateWithoutCompanyInput> | MaterialIssueCreateWithoutCompanyInput[] | MaterialIssueUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutCompanyInput | MaterialIssueCreateOrConnectWithoutCompanyInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutCompanyInput | MaterialIssueUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MaterialIssueCreateManyCompanyInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutCompanyInput | MaterialIssueUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutCompanyInput | MaterialIssueUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type MaterialReturnUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutCompanyInput, MaterialReturnUncheckedCreateWithoutCompanyInput> | MaterialReturnCreateWithoutCompanyInput[] | MaterialReturnUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutCompanyInput | MaterialReturnCreateOrConnectWithoutCompanyInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutCompanyInput | MaterialReturnUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MaterialReturnCreateManyCompanyInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutCompanyInput | MaterialReturnUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutCompanyInput | MaterialReturnUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type MaterialDamageUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutCompanyInput, MaterialDamageUncheckedCreateWithoutCompanyInput> | MaterialDamageCreateWithoutCompanyInput[] | MaterialDamageUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutCompanyInput | MaterialDamageCreateOrConnectWithoutCompanyInput[]
    upsert?: MaterialDamageUpsertWithWhereUniqueWithoutCompanyInput | MaterialDamageUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MaterialDamageCreateManyCompanyInputEnvelope
    set?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    disconnect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    delete?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    update?: MaterialDamageUpdateWithWhereUniqueWithoutCompanyInput | MaterialDamageUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MaterialDamageUpdateManyWithWhereWithoutCompanyInput | MaterialDamageUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
  }

  export type MaterialApprovalUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutCompanyInput, MaterialApprovalUncheckedCreateWithoutCompanyInput> | MaterialApprovalCreateWithoutCompanyInput[] | MaterialApprovalUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutCompanyInput | MaterialApprovalCreateOrConnectWithoutCompanyInput[]
    upsert?: MaterialApprovalUpsertWithWhereUniqueWithoutCompanyInput | MaterialApprovalUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MaterialApprovalCreateManyCompanyInputEnvelope
    set?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    disconnect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    delete?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    update?: MaterialApprovalUpdateWithWhereUniqueWithoutCompanyInput | MaterialApprovalUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MaterialApprovalUpdateManyWithWhereWithoutCompanyInput | MaterialApprovalUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MaterialApprovalScalarWhereInput | MaterialApprovalScalarWhereInput[]
  }

  export type JobCostSnapshotUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<JobCostSnapshotCreateWithoutCompanyInput, JobCostSnapshotUncheckedCreateWithoutCompanyInput> | JobCostSnapshotCreateWithoutCompanyInput[] | JobCostSnapshotUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobCostSnapshotCreateOrConnectWithoutCompanyInput | JobCostSnapshotCreateOrConnectWithoutCompanyInput[]
    upsert?: JobCostSnapshotUpsertWithWhereUniqueWithoutCompanyInput | JobCostSnapshotUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: JobCostSnapshotCreateManyCompanyInputEnvelope
    set?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    disconnect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    delete?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    connect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    update?: JobCostSnapshotUpdateWithWhereUniqueWithoutCompanyInput | JobCostSnapshotUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: JobCostSnapshotUpdateManyWithWhereWithoutCompanyInput | JobCostSnapshotUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: JobCostSnapshotScalarWhereInput | JobCostSnapshotScalarWhereInput[]
  }

  export type SystemPluginUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SystemPluginCreateWithoutCompanyInput, SystemPluginUncheckedCreateWithoutCompanyInput> | SystemPluginCreateWithoutCompanyInput[] | SystemPluginUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemPluginCreateOrConnectWithoutCompanyInput | SystemPluginCreateOrConnectWithoutCompanyInput[]
    upsert?: SystemPluginUpsertWithWhereUniqueWithoutCompanyInput | SystemPluginUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SystemPluginCreateManyCompanyInputEnvelope
    set?: SystemPluginWhereUniqueInput | SystemPluginWhereUniqueInput[]
    disconnect?: SystemPluginWhereUniqueInput | SystemPluginWhereUniqueInput[]
    delete?: SystemPluginWhereUniqueInput | SystemPluginWhereUniqueInput[]
    connect?: SystemPluginWhereUniqueInput | SystemPluginWhereUniqueInput[]
    update?: SystemPluginUpdateWithWhereUniqueWithoutCompanyInput | SystemPluginUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SystemPluginUpdateManyWithWhereWithoutCompanyInput | SystemPluginUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SystemPluginScalarWhereInput | SystemPluginScalarWhereInput[]
  }

  export type JobAssignmentUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<JobAssignmentCreateWithoutCompanyInput, JobAssignmentUncheckedCreateWithoutCompanyInput> | JobAssignmentCreateWithoutCompanyInput[] | JobAssignmentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutCompanyInput | JobAssignmentCreateOrConnectWithoutCompanyInput[]
    upsert?: JobAssignmentUpsertWithWhereUniqueWithoutCompanyInput | JobAssignmentUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: JobAssignmentCreateManyCompanyInputEnvelope
    set?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    disconnect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    delete?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    update?: JobAssignmentUpdateWithWhereUniqueWithoutCompanyInput | JobAssignmentUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: JobAssignmentUpdateManyWithWhereWithoutCompanyInput | JobAssignmentUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: JobAssignmentScalarWhereInput | JobAssignmentScalarWhereInput[]
  }

  export type SystemPluginLogUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SystemPluginLogCreateWithoutCompanyInput, SystemPluginLogUncheckedCreateWithoutCompanyInput> | SystemPluginLogCreateWithoutCompanyInput[] | SystemPluginLogUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemPluginLogCreateOrConnectWithoutCompanyInput | SystemPluginLogCreateOrConnectWithoutCompanyInput[]
    upsert?: SystemPluginLogUpsertWithWhereUniqueWithoutCompanyInput | SystemPluginLogUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SystemPluginLogCreateManyCompanyInputEnvelope
    set?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    disconnect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    delete?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    connect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    update?: SystemPluginLogUpdateWithWhereUniqueWithoutCompanyInput | SystemPluginLogUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SystemPluginLogUpdateManyWithWhereWithoutCompanyInput | SystemPluginLogUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SystemPluginLogScalarWhereInput | SystemPluginLogScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCompanyInput | UserUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCompanyInput | UserUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCompanyInput | UserUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type RackUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<RackCreateWithoutCompanyInput, RackUncheckedCreateWithoutCompanyInput> | RackCreateWithoutCompanyInput[] | RackUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RackCreateOrConnectWithoutCompanyInput | RackCreateOrConnectWithoutCompanyInput[]
    upsert?: RackUpsertWithWhereUniqueWithoutCompanyInput | RackUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: RackCreateManyCompanyInputEnvelope
    set?: RackWhereUniqueInput | RackWhereUniqueInput[]
    disconnect?: RackWhereUniqueInput | RackWhereUniqueInput[]
    delete?: RackWhereUniqueInput | RackWhereUniqueInput[]
    connect?: RackWhereUniqueInput | RackWhereUniqueInput[]
    update?: RackUpdateWithWhereUniqueWithoutCompanyInput | RackUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: RackUpdateManyWithWhereWithoutCompanyInput | RackUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: RackScalarWhereInput | RackScalarWhereInput[]
  }

  export type ShipmentUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ShipmentCreateWithoutCompanyInput, ShipmentUncheckedCreateWithoutCompanyInput> | ShipmentCreateWithoutCompanyInput[] | ShipmentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutCompanyInput | ShipmentCreateOrConnectWithoutCompanyInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutCompanyInput | ShipmentUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ShipmentCreateManyCompanyInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutCompanyInput | ShipmentUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutCompanyInput | ShipmentUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type MovingJobUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MovingJobCreateWithoutCompanyInput, MovingJobUncheckedCreateWithoutCompanyInput> | MovingJobCreateWithoutCompanyInput[] | MovingJobUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MovingJobCreateOrConnectWithoutCompanyInput | MovingJobCreateOrConnectWithoutCompanyInput[]
    upsert?: MovingJobUpsertWithWhereUniqueWithoutCompanyInput | MovingJobUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MovingJobCreateManyCompanyInputEnvelope
    set?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    disconnect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    delete?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    connect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    update?: MovingJobUpdateWithWhereUniqueWithoutCompanyInput | MovingJobUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MovingJobUpdateManyWithWhereWithoutCompanyInput | MovingJobUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MovingJobScalarWhereInput | MovingJobScalarWhereInput[]
  }

  export type ExpenseUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ExpenseCreateWithoutCompanyInput, ExpenseUncheckedCreateWithoutCompanyInput> | ExpenseCreateWithoutCompanyInput[] | ExpenseUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ExpenseCreateOrConnectWithoutCompanyInput | ExpenseCreateOrConnectWithoutCompanyInput[]
    upsert?: ExpenseUpsertWithWhereUniqueWithoutCompanyInput | ExpenseUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ExpenseCreateManyCompanyInputEnvelope
    set?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    disconnect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    delete?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    connect?: ExpenseWhereUniqueInput | ExpenseWhereUniqueInput[]
    update?: ExpenseUpdateWithWhereUniqueWithoutCompanyInput | ExpenseUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ExpenseUpdateManyWithWhereWithoutCompanyInput | ExpenseUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
  }

  export type InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput = {
    create?: XOR<InvoiceSettingsCreateWithoutCompanyInput, InvoiceSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: InvoiceSettingsCreateOrConnectWithoutCompanyInput
    upsert?: InvoiceSettingsUpsertWithoutCompanyInput
    disconnect?: InvoiceSettingsWhereInput | boolean
    delete?: InvoiceSettingsWhereInput | boolean
    connect?: InvoiceSettingsWhereUniqueInput
    update?: XOR<XOR<InvoiceSettingsUpdateToOneWithWhereWithoutCompanyInput, InvoiceSettingsUpdateWithoutCompanyInput>, InvoiceSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CustomFieldCreateWithoutCompanyInput, CustomFieldUncheckedCreateWithoutCompanyInput> | CustomFieldCreateWithoutCompanyInput[] | CustomFieldUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CustomFieldCreateOrConnectWithoutCompanyInput | CustomFieldCreateOrConnectWithoutCompanyInput[]
    upsert?: CustomFieldUpsertWithWhereUniqueWithoutCompanyInput | CustomFieldUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CustomFieldCreateManyCompanyInputEnvelope
    set?: CustomFieldWhereUniqueInput | CustomFieldWhereUniqueInput[]
    disconnect?: CustomFieldWhereUniqueInput | CustomFieldWhereUniqueInput[]
    delete?: CustomFieldWhereUniqueInput | CustomFieldWhereUniqueInput[]
    connect?: CustomFieldWhereUniqueInput | CustomFieldWhereUniqueInput[]
    update?: CustomFieldUpdateWithWhereUniqueWithoutCompanyInput | CustomFieldUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CustomFieldUpdateManyWithWhereWithoutCompanyInput | CustomFieldUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CustomFieldScalarWhereInput | CustomFieldScalarWhereInput[]
  }

  export type BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput = {
    create?: XOR<BillingSettingsCreateWithoutCompanyInput, BillingSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: BillingSettingsCreateOrConnectWithoutCompanyInput
    upsert?: BillingSettingsUpsertWithoutCompanyInput
    disconnect?: BillingSettingsWhereInput | boolean
    delete?: BillingSettingsWhereInput | boolean
    connect?: BillingSettingsWhereUniqueInput
    update?: XOR<XOR<BillingSettingsUpdateToOneWithWhereWithoutCompanyInput, BillingSettingsUpdateWithoutCompanyInput>, BillingSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ChargeTypeCreateWithoutCompanyInput, ChargeTypeUncheckedCreateWithoutCompanyInput> | ChargeTypeCreateWithoutCompanyInput[] | ChargeTypeUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ChargeTypeCreateOrConnectWithoutCompanyInput | ChargeTypeCreateOrConnectWithoutCompanyInput[]
    upsert?: ChargeTypeUpsertWithWhereUniqueWithoutCompanyInput | ChargeTypeUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ChargeTypeCreateManyCompanyInputEnvelope
    set?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    disconnect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    delete?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    connect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    update?: ChargeTypeUpdateWithWhereUniqueWithoutCompanyInput | ChargeTypeUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ChargeTypeUpdateManyWithWhereWithoutCompanyInput | ChargeTypeUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ChargeTypeScalarWhereInput | ChargeTypeScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<InvoiceCreateWithoutCompanyInput, InvoiceUncheckedCreateWithoutCompanyInput> | InvoiceCreateWithoutCompanyInput[] | InvoiceUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutCompanyInput | InvoiceCreateOrConnectWithoutCompanyInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutCompanyInput | InvoiceUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: InvoiceCreateManyCompanyInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutCompanyInput | InvoiceUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutCompanyInput | InvoiceUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<InvoiceLineItemCreateWithoutCompanyInput, InvoiceLineItemUncheckedCreateWithoutCompanyInput> | InvoiceLineItemCreateWithoutCompanyInput[] | InvoiceLineItemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: InvoiceLineItemCreateOrConnectWithoutCompanyInput | InvoiceLineItemCreateOrConnectWithoutCompanyInput[]
    upsert?: InvoiceLineItemUpsertWithWhereUniqueWithoutCompanyInput | InvoiceLineItemUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: InvoiceLineItemCreateManyCompanyInputEnvelope
    set?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    disconnect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    delete?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    connect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    update?: InvoiceLineItemUpdateWithWhereUniqueWithoutCompanyInput | InvoiceLineItemUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: InvoiceLineItemUpdateManyWithWhereWithoutCompanyInput | InvoiceLineItemUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: InvoiceLineItemScalarWhereInput | InvoiceLineItemScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<PaymentCreateWithoutCompanyInput, PaymentUncheckedCreateWithoutCompanyInput> | PaymentCreateWithoutCompanyInput[] | PaymentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutCompanyInput | PaymentCreateOrConnectWithoutCompanyInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutCompanyInput | PaymentUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: PaymentCreateManyCompanyInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutCompanyInput | PaymentUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutCompanyInput | PaymentUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ShipmentChargesCreateWithoutCompanyInput, ShipmentChargesUncheckedCreateWithoutCompanyInput> | ShipmentChargesCreateWithoutCompanyInput[] | ShipmentChargesUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ShipmentChargesCreateOrConnectWithoutCompanyInput | ShipmentChargesCreateOrConnectWithoutCompanyInput[]
    upsert?: ShipmentChargesUpsertWithWhereUniqueWithoutCompanyInput | ShipmentChargesUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ShipmentChargesCreateManyCompanyInputEnvelope
    set?: ShipmentChargesWhereUniqueInput | ShipmentChargesWhereUniqueInput[]
    disconnect?: ShipmentChargesWhereUniqueInput | ShipmentChargesWhereUniqueInput[]
    delete?: ShipmentChargesWhereUniqueInput | ShipmentChargesWhereUniqueInput[]
    connect?: ShipmentChargesWhereUniqueInput | ShipmentChargesWhereUniqueInput[]
    update?: ShipmentChargesUpdateWithWhereUniqueWithoutCompanyInput | ShipmentChargesUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ShipmentChargesUpdateManyWithWhereWithoutCompanyInput | ShipmentChargesUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ShipmentChargesScalarWhereInput | ShipmentChargesScalarWhereInput[]
  }

  export type ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput = {
    create?: XOR<ShipmentSettingsCreateWithoutCompanyInput, ShipmentSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: ShipmentSettingsCreateOrConnectWithoutCompanyInput
    upsert?: ShipmentSettingsUpsertWithoutCompanyInput
    disconnect?: ShipmentSettingsWhereInput | boolean
    delete?: ShipmentSettingsWhereInput | boolean
    connect?: ShipmentSettingsWhereUniqueInput
    update?: XOR<XOR<ShipmentSettingsUpdateToOneWithWhereWithoutCompanyInput, ShipmentSettingsUpdateWithoutCompanyInput>, ShipmentSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput = {
    create?: XOR<TemplateSettingsCreateWithoutCompanyInput, TemplateSettingsUncheckedCreateWithoutCompanyInput>
    connectOrCreate?: TemplateSettingsCreateOrConnectWithoutCompanyInput
    upsert?: TemplateSettingsUpsertWithoutCompanyInput
    disconnect?: TemplateSettingsWhereInput | boolean
    delete?: TemplateSettingsWhereInput | boolean
    connect?: TemplateSettingsWhereUniqueInput
    update?: XOR<XOR<TemplateSettingsUpdateToOneWithWhereWithoutCompanyInput, TemplateSettingsUpdateWithoutCompanyInput>, TemplateSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<RolePermissionCreateWithoutCompanyInput, RolePermissionUncheckedCreateWithoutCompanyInput> | RolePermissionCreateWithoutCompanyInput[] | RolePermissionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutCompanyInput | RolePermissionCreateOrConnectWithoutCompanyInput[]
    upsert?: RolePermissionUpsertWithWhereUniqueWithoutCompanyInput | RolePermissionUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: RolePermissionCreateManyCompanyInputEnvelope
    set?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    disconnect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    delete?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    update?: RolePermissionUpdateWithWhereUniqueWithoutCompanyInput | RolePermissionUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: RolePermissionUpdateManyWithWhereWithoutCompanyInput | RolePermissionUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
  }

  export type PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<PackingMaterialCreateWithoutCompanyInput, PackingMaterialUncheckedCreateWithoutCompanyInput> | PackingMaterialCreateWithoutCompanyInput[] | PackingMaterialUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutCompanyInput | PackingMaterialCreateOrConnectWithoutCompanyInput[]
    upsert?: PackingMaterialUpsertWithWhereUniqueWithoutCompanyInput | PackingMaterialUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: PackingMaterialCreateManyCompanyInputEnvelope
    set?: PackingMaterialWhereUniqueInput | PackingMaterialWhereUniqueInput[]
    disconnect?: PackingMaterialWhereUniqueInput | PackingMaterialWhereUniqueInput[]
    delete?: PackingMaterialWhereUniqueInput | PackingMaterialWhereUniqueInput[]
    connect?: PackingMaterialWhereUniqueInput | PackingMaterialWhereUniqueInput[]
    update?: PackingMaterialUpdateWithWhereUniqueWithoutCompanyInput | PackingMaterialUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: PackingMaterialUpdateManyWithWhereWithoutCompanyInput | PackingMaterialUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: PackingMaterialScalarWhereInput | PackingMaterialScalarWhereInput[]
  }

  export type VendorUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<VendorCreateWithoutCompanyInput, VendorUncheckedCreateWithoutCompanyInput> | VendorCreateWithoutCompanyInput[] | VendorUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: VendorCreateOrConnectWithoutCompanyInput | VendorCreateOrConnectWithoutCompanyInput[]
    upsert?: VendorUpsertWithWhereUniqueWithoutCompanyInput | VendorUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: VendorCreateManyCompanyInputEnvelope
    set?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    disconnect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    delete?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    connect?: VendorWhereUniqueInput | VendorWhereUniqueInput[]
    update?: VendorUpdateWithWhereUniqueWithoutCompanyInput | VendorUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: VendorUpdateManyWithWhereWithoutCompanyInput | VendorUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: VendorScalarWhereInput | VendorScalarWhereInput[]
  }

  export type StockBatchUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<StockBatchCreateWithoutCompanyInput, StockBatchUncheckedCreateWithoutCompanyInput> | StockBatchCreateWithoutCompanyInput[] | StockBatchUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutCompanyInput | StockBatchCreateOrConnectWithoutCompanyInput[]
    upsert?: StockBatchUpsertWithWhereUniqueWithoutCompanyInput | StockBatchUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: StockBatchCreateManyCompanyInputEnvelope
    set?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    disconnect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    delete?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    update?: StockBatchUpdateWithWhereUniqueWithoutCompanyInput | StockBatchUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: StockBatchUpdateManyWithWhereWithoutCompanyInput | StockBatchUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: StockBatchScalarWhereInput | StockBatchScalarWhereInput[]
  }

  export type RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<RackStockLevelCreateWithoutCompanyInput, RackStockLevelUncheckedCreateWithoutCompanyInput> | RackStockLevelCreateWithoutCompanyInput[] | RackStockLevelUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutCompanyInput | RackStockLevelCreateOrConnectWithoutCompanyInput[]
    upsert?: RackStockLevelUpsertWithWhereUniqueWithoutCompanyInput | RackStockLevelUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: RackStockLevelCreateManyCompanyInputEnvelope
    set?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    disconnect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    delete?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    update?: RackStockLevelUpdateWithWhereUniqueWithoutCompanyInput | RackStockLevelUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: RackStockLevelUpdateManyWithWhereWithoutCompanyInput | RackStockLevelUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: RackStockLevelScalarWhereInput | RackStockLevelScalarWhereInput[]
  }

  export type MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutCompanyInput, MaterialIssueUncheckedCreateWithoutCompanyInput> | MaterialIssueCreateWithoutCompanyInput[] | MaterialIssueUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutCompanyInput | MaterialIssueCreateOrConnectWithoutCompanyInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutCompanyInput | MaterialIssueUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MaterialIssueCreateManyCompanyInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutCompanyInput | MaterialIssueUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutCompanyInput | MaterialIssueUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutCompanyInput, MaterialReturnUncheckedCreateWithoutCompanyInput> | MaterialReturnCreateWithoutCompanyInput[] | MaterialReturnUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutCompanyInput | MaterialReturnCreateOrConnectWithoutCompanyInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutCompanyInput | MaterialReturnUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MaterialReturnCreateManyCompanyInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutCompanyInput | MaterialReturnUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutCompanyInput | MaterialReturnUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutCompanyInput, MaterialDamageUncheckedCreateWithoutCompanyInput> | MaterialDamageCreateWithoutCompanyInput[] | MaterialDamageUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutCompanyInput | MaterialDamageCreateOrConnectWithoutCompanyInput[]
    upsert?: MaterialDamageUpsertWithWhereUniqueWithoutCompanyInput | MaterialDamageUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MaterialDamageCreateManyCompanyInputEnvelope
    set?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    disconnect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    delete?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    update?: MaterialDamageUpdateWithWhereUniqueWithoutCompanyInput | MaterialDamageUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MaterialDamageUpdateManyWithWhereWithoutCompanyInput | MaterialDamageUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
  }

  export type MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutCompanyInput, MaterialApprovalUncheckedCreateWithoutCompanyInput> | MaterialApprovalCreateWithoutCompanyInput[] | MaterialApprovalUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutCompanyInput | MaterialApprovalCreateOrConnectWithoutCompanyInput[]
    upsert?: MaterialApprovalUpsertWithWhereUniqueWithoutCompanyInput | MaterialApprovalUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MaterialApprovalCreateManyCompanyInputEnvelope
    set?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    disconnect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    delete?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    update?: MaterialApprovalUpdateWithWhereUniqueWithoutCompanyInput | MaterialApprovalUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MaterialApprovalUpdateManyWithWhereWithoutCompanyInput | MaterialApprovalUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MaterialApprovalScalarWhereInput | MaterialApprovalScalarWhereInput[]
  }

  export type JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<JobCostSnapshotCreateWithoutCompanyInput, JobCostSnapshotUncheckedCreateWithoutCompanyInput> | JobCostSnapshotCreateWithoutCompanyInput[] | JobCostSnapshotUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobCostSnapshotCreateOrConnectWithoutCompanyInput | JobCostSnapshotCreateOrConnectWithoutCompanyInput[]
    upsert?: JobCostSnapshotUpsertWithWhereUniqueWithoutCompanyInput | JobCostSnapshotUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: JobCostSnapshotCreateManyCompanyInputEnvelope
    set?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    disconnect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    delete?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    connect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    update?: JobCostSnapshotUpdateWithWhereUniqueWithoutCompanyInput | JobCostSnapshotUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: JobCostSnapshotUpdateManyWithWhereWithoutCompanyInput | JobCostSnapshotUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: JobCostSnapshotScalarWhereInput | JobCostSnapshotScalarWhereInput[]
  }

  export type SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SystemPluginCreateWithoutCompanyInput, SystemPluginUncheckedCreateWithoutCompanyInput> | SystemPluginCreateWithoutCompanyInput[] | SystemPluginUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemPluginCreateOrConnectWithoutCompanyInput | SystemPluginCreateOrConnectWithoutCompanyInput[]
    upsert?: SystemPluginUpsertWithWhereUniqueWithoutCompanyInput | SystemPluginUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SystemPluginCreateManyCompanyInputEnvelope
    set?: SystemPluginWhereUniqueInput | SystemPluginWhereUniqueInput[]
    disconnect?: SystemPluginWhereUniqueInput | SystemPluginWhereUniqueInput[]
    delete?: SystemPluginWhereUniqueInput | SystemPluginWhereUniqueInput[]
    connect?: SystemPluginWhereUniqueInput | SystemPluginWhereUniqueInput[]
    update?: SystemPluginUpdateWithWhereUniqueWithoutCompanyInput | SystemPluginUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SystemPluginUpdateManyWithWhereWithoutCompanyInput | SystemPluginUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SystemPluginScalarWhereInput | SystemPluginScalarWhereInput[]
  }

  export type JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<JobAssignmentCreateWithoutCompanyInput, JobAssignmentUncheckedCreateWithoutCompanyInput> | JobAssignmentCreateWithoutCompanyInput[] | JobAssignmentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutCompanyInput | JobAssignmentCreateOrConnectWithoutCompanyInput[]
    upsert?: JobAssignmentUpsertWithWhereUniqueWithoutCompanyInput | JobAssignmentUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: JobAssignmentCreateManyCompanyInputEnvelope
    set?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    disconnect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    delete?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    update?: JobAssignmentUpdateWithWhereUniqueWithoutCompanyInput | JobAssignmentUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: JobAssignmentUpdateManyWithWhereWithoutCompanyInput | JobAssignmentUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: JobAssignmentScalarWhereInput | JobAssignmentScalarWhereInput[]
  }

  export type SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SystemPluginLogCreateWithoutCompanyInput, SystemPluginLogUncheckedCreateWithoutCompanyInput> | SystemPluginLogCreateWithoutCompanyInput[] | SystemPluginLogUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemPluginLogCreateOrConnectWithoutCompanyInput | SystemPluginLogCreateOrConnectWithoutCompanyInput[]
    upsert?: SystemPluginLogUpsertWithWhereUniqueWithoutCompanyInput | SystemPluginLogUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SystemPluginLogCreateManyCompanyInputEnvelope
    set?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    disconnect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    delete?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    connect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    update?: SystemPluginLogUpdateWithWhereUniqueWithoutCompanyInput | SystemPluginLogUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SystemPluginLogUpdateManyWithWhereWithoutCompanyInput | SystemPluginLogUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SystemPluginLogScalarWhereInput | SystemPluginLogScalarWhereInput[]
  }

  export type CompanyCreateNestedOneWithoutUsersInput = {
    create?: XOR<CompanyCreateWithoutUsersInput, CompanyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutUsersInput
    connect?: CompanyWhereUniqueInput
  }

  export type RackActivityCreateNestedManyWithoutUserInput = {
    create?: XOR<RackActivityCreateWithoutUserInput, RackActivityUncheckedCreateWithoutUserInput> | RackActivityCreateWithoutUserInput[] | RackActivityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RackActivityCreateOrConnectWithoutUserInput | RackActivityCreateOrConnectWithoutUserInput[]
    createMany?: RackActivityCreateManyUserInputEnvelope
    connect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
  }

  export type JobAssignmentCreateNestedManyWithoutUserInput = {
    create?: XOR<JobAssignmentCreateWithoutUserInput, JobAssignmentUncheckedCreateWithoutUserInput> | JobAssignmentCreateWithoutUserInput[] | JobAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutUserInput | JobAssignmentCreateOrConnectWithoutUserInput[]
    createMany?: JobAssignmentCreateManyUserInputEnvelope
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
  }

  export type MovingJobCreateNestedManyWithoutTeamLeaderInput = {
    create?: XOR<MovingJobCreateWithoutTeamLeaderInput, MovingJobUncheckedCreateWithoutTeamLeaderInput> | MovingJobCreateWithoutTeamLeaderInput[] | MovingJobUncheckedCreateWithoutTeamLeaderInput[]
    connectOrCreate?: MovingJobCreateOrConnectWithoutTeamLeaderInput | MovingJobCreateOrConnectWithoutTeamLeaderInput[]
    createMany?: MovingJobCreateManyTeamLeaderInputEnvelope
    connect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
  }

  export type StockBatchCreateNestedManyWithoutReceivedByInput = {
    create?: XOR<StockBatchCreateWithoutReceivedByInput, StockBatchUncheckedCreateWithoutReceivedByInput> | StockBatchCreateWithoutReceivedByInput[] | StockBatchUncheckedCreateWithoutReceivedByInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutReceivedByInput | StockBatchCreateOrConnectWithoutReceivedByInput[]
    createMany?: StockBatchCreateManyReceivedByInputEnvelope
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
  }

  export type MaterialIssueCreateNestedManyWithoutIssuedByInput = {
    create?: XOR<MaterialIssueCreateWithoutIssuedByInput, MaterialIssueUncheckedCreateWithoutIssuedByInput> | MaterialIssueCreateWithoutIssuedByInput[] | MaterialIssueUncheckedCreateWithoutIssuedByInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutIssuedByInput | MaterialIssueCreateOrConnectWithoutIssuedByInput[]
    createMany?: MaterialIssueCreateManyIssuedByInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type MaterialReturnCreateNestedManyWithoutRecordedByInput = {
    create?: XOR<MaterialReturnCreateWithoutRecordedByInput, MaterialReturnUncheckedCreateWithoutRecordedByInput> | MaterialReturnCreateWithoutRecordedByInput[] | MaterialReturnUncheckedCreateWithoutRecordedByInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutRecordedByInput | MaterialReturnCreateOrConnectWithoutRecordedByInput[]
    createMany?: MaterialReturnCreateManyRecordedByInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type MaterialDamageCreateNestedManyWithoutRecordedByInput = {
    create?: XOR<MaterialDamageCreateWithoutRecordedByInput, MaterialDamageUncheckedCreateWithoutRecordedByInput> | MaterialDamageCreateWithoutRecordedByInput[] | MaterialDamageUncheckedCreateWithoutRecordedByInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutRecordedByInput | MaterialDamageCreateOrConnectWithoutRecordedByInput[]
    createMany?: MaterialDamageCreateManyRecordedByInputEnvelope
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
  }

  export type MaterialDamageCreateNestedManyWithoutApprovedByInput = {
    create?: XOR<MaterialDamageCreateWithoutApprovedByInput, MaterialDamageUncheckedCreateWithoutApprovedByInput> | MaterialDamageCreateWithoutApprovedByInput[] | MaterialDamageUncheckedCreateWithoutApprovedByInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutApprovedByInput | MaterialDamageCreateOrConnectWithoutApprovedByInput[]
    createMany?: MaterialDamageCreateManyApprovedByInputEnvelope
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
  }

  export type MaterialApprovalCreateNestedManyWithoutRequestedByInput = {
    create?: XOR<MaterialApprovalCreateWithoutRequestedByInput, MaterialApprovalUncheckedCreateWithoutRequestedByInput> | MaterialApprovalCreateWithoutRequestedByInput[] | MaterialApprovalUncheckedCreateWithoutRequestedByInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutRequestedByInput | MaterialApprovalCreateOrConnectWithoutRequestedByInput[]
    createMany?: MaterialApprovalCreateManyRequestedByInputEnvelope
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
  }

  export type MaterialApprovalCreateNestedManyWithoutDecisionByInput = {
    create?: XOR<MaterialApprovalCreateWithoutDecisionByInput, MaterialApprovalUncheckedCreateWithoutDecisionByInput> | MaterialApprovalCreateWithoutDecisionByInput[] | MaterialApprovalUncheckedCreateWithoutDecisionByInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutDecisionByInput | MaterialApprovalCreateOrConnectWithoutDecisionByInput[]
    createMany?: MaterialApprovalCreateManyDecisionByInputEnvelope
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
  }

  export type ShipmentCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ShipmentCreateWithoutCreatedByInput, ShipmentUncheckedCreateWithoutCreatedByInput> | ShipmentCreateWithoutCreatedByInput[] | ShipmentUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutCreatedByInput | ShipmentCreateOrConnectWithoutCreatedByInput[]
    createMany?: ShipmentCreateManyCreatedByInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type ShipmentCreateNestedManyWithoutAssignedByInput = {
    create?: XOR<ShipmentCreateWithoutAssignedByInput, ShipmentUncheckedCreateWithoutAssignedByInput> | ShipmentCreateWithoutAssignedByInput[] | ShipmentUncheckedCreateWithoutAssignedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutAssignedByInput | ShipmentCreateOrConnectWithoutAssignedByInput[]
    createMany?: ShipmentCreateManyAssignedByInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type ShipmentCreateNestedManyWithoutReleasedByInput = {
    create?: XOR<ShipmentCreateWithoutReleasedByInput, ShipmentUncheckedCreateWithoutReleasedByInput> | ShipmentCreateWithoutReleasedByInput[] | ShipmentUncheckedCreateWithoutReleasedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutReleasedByInput | ShipmentCreateOrConnectWithoutReleasedByInput[]
    createMany?: ShipmentCreateManyReleasedByInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type RackActivityUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RackActivityCreateWithoutUserInput, RackActivityUncheckedCreateWithoutUserInput> | RackActivityCreateWithoutUserInput[] | RackActivityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RackActivityCreateOrConnectWithoutUserInput | RackActivityCreateOrConnectWithoutUserInput[]
    createMany?: RackActivityCreateManyUserInputEnvelope
    connect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
  }

  export type JobAssignmentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<JobAssignmentCreateWithoutUserInput, JobAssignmentUncheckedCreateWithoutUserInput> | JobAssignmentCreateWithoutUserInput[] | JobAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutUserInput | JobAssignmentCreateOrConnectWithoutUserInput[]
    createMany?: JobAssignmentCreateManyUserInputEnvelope
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
  }

  export type MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput = {
    create?: XOR<MovingJobCreateWithoutTeamLeaderInput, MovingJobUncheckedCreateWithoutTeamLeaderInput> | MovingJobCreateWithoutTeamLeaderInput[] | MovingJobUncheckedCreateWithoutTeamLeaderInput[]
    connectOrCreate?: MovingJobCreateOrConnectWithoutTeamLeaderInput | MovingJobCreateOrConnectWithoutTeamLeaderInput[]
    createMany?: MovingJobCreateManyTeamLeaderInputEnvelope
    connect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
  }

  export type StockBatchUncheckedCreateNestedManyWithoutReceivedByInput = {
    create?: XOR<StockBatchCreateWithoutReceivedByInput, StockBatchUncheckedCreateWithoutReceivedByInput> | StockBatchCreateWithoutReceivedByInput[] | StockBatchUncheckedCreateWithoutReceivedByInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutReceivedByInput | StockBatchCreateOrConnectWithoutReceivedByInput[]
    createMany?: StockBatchCreateManyReceivedByInputEnvelope
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
  }

  export type MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput = {
    create?: XOR<MaterialIssueCreateWithoutIssuedByInput, MaterialIssueUncheckedCreateWithoutIssuedByInput> | MaterialIssueCreateWithoutIssuedByInput[] | MaterialIssueUncheckedCreateWithoutIssuedByInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutIssuedByInput | MaterialIssueCreateOrConnectWithoutIssuedByInput[]
    createMany?: MaterialIssueCreateManyIssuedByInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput = {
    create?: XOR<MaterialReturnCreateWithoutRecordedByInput, MaterialReturnUncheckedCreateWithoutRecordedByInput> | MaterialReturnCreateWithoutRecordedByInput[] | MaterialReturnUncheckedCreateWithoutRecordedByInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutRecordedByInput | MaterialReturnCreateOrConnectWithoutRecordedByInput[]
    createMany?: MaterialReturnCreateManyRecordedByInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput = {
    create?: XOR<MaterialDamageCreateWithoutRecordedByInput, MaterialDamageUncheckedCreateWithoutRecordedByInput> | MaterialDamageCreateWithoutRecordedByInput[] | MaterialDamageUncheckedCreateWithoutRecordedByInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutRecordedByInput | MaterialDamageCreateOrConnectWithoutRecordedByInput[]
    createMany?: MaterialDamageCreateManyRecordedByInputEnvelope
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
  }

  export type MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput = {
    create?: XOR<MaterialDamageCreateWithoutApprovedByInput, MaterialDamageUncheckedCreateWithoutApprovedByInput> | MaterialDamageCreateWithoutApprovedByInput[] | MaterialDamageUncheckedCreateWithoutApprovedByInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutApprovedByInput | MaterialDamageCreateOrConnectWithoutApprovedByInput[]
    createMany?: MaterialDamageCreateManyApprovedByInputEnvelope
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
  }

  export type MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput = {
    create?: XOR<MaterialApprovalCreateWithoutRequestedByInput, MaterialApprovalUncheckedCreateWithoutRequestedByInput> | MaterialApprovalCreateWithoutRequestedByInput[] | MaterialApprovalUncheckedCreateWithoutRequestedByInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutRequestedByInput | MaterialApprovalCreateOrConnectWithoutRequestedByInput[]
    createMany?: MaterialApprovalCreateManyRequestedByInputEnvelope
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
  }

  export type MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput = {
    create?: XOR<MaterialApprovalCreateWithoutDecisionByInput, MaterialApprovalUncheckedCreateWithoutDecisionByInput> | MaterialApprovalCreateWithoutDecisionByInput[] | MaterialApprovalUncheckedCreateWithoutDecisionByInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutDecisionByInput | MaterialApprovalCreateOrConnectWithoutDecisionByInput[]
    createMany?: MaterialApprovalCreateManyDecisionByInputEnvelope
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
  }

  export type ShipmentUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ShipmentCreateWithoutCreatedByInput, ShipmentUncheckedCreateWithoutCreatedByInput> | ShipmentCreateWithoutCreatedByInput[] | ShipmentUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutCreatedByInput | ShipmentCreateOrConnectWithoutCreatedByInput[]
    createMany?: ShipmentCreateManyCreatedByInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type ShipmentUncheckedCreateNestedManyWithoutAssignedByInput = {
    create?: XOR<ShipmentCreateWithoutAssignedByInput, ShipmentUncheckedCreateWithoutAssignedByInput> | ShipmentCreateWithoutAssignedByInput[] | ShipmentUncheckedCreateWithoutAssignedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutAssignedByInput | ShipmentCreateOrConnectWithoutAssignedByInput[]
    createMany?: ShipmentCreateManyAssignedByInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type ShipmentUncheckedCreateNestedManyWithoutReleasedByInput = {
    create?: XOR<ShipmentCreateWithoutReleasedByInput, ShipmentUncheckedCreateWithoutReleasedByInput> | ShipmentCreateWithoutReleasedByInput[] | ShipmentUncheckedCreateWithoutReleasedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutReleasedByInput | ShipmentCreateOrConnectWithoutReleasedByInput[]
    createMany?: ShipmentCreateManyReleasedByInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type CompanyUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<CompanyCreateWithoutUsersInput, CompanyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutUsersInput
    upsert?: CompanyUpsertWithoutUsersInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutUsersInput, CompanyUpdateWithoutUsersInput>, CompanyUncheckedUpdateWithoutUsersInput>
  }

  export type RackActivityUpdateManyWithoutUserNestedInput = {
    create?: XOR<RackActivityCreateWithoutUserInput, RackActivityUncheckedCreateWithoutUserInput> | RackActivityCreateWithoutUserInput[] | RackActivityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RackActivityCreateOrConnectWithoutUserInput | RackActivityCreateOrConnectWithoutUserInput[]
    upsert?: RackActivityUpsertWithWhereUniqueWithoutUserInput | RackActivityUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RackActivityCreateManyUserInputEnvelope
    set?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    disconnect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    delete?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    connect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    update?: RackActivityUpdateWithWhereUniqueWithoutUserInput | RackActivityUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RackActivityUpdateManyWithWhereWithoutUserInput | RackActivityUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RackActivityScalarWhereInput | RackActivityScalarWhereInput[]
  }

  export type JobAssignmentUpdateManyWithoutUserNestedInput = {
    create?: XOR<JobAssignmentCreateWithoutUserInput, JobAssignmentUncheckedCreateWithoutUserInput> | JobAssignmentCreateWithoutUserInput[] | JobAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutUserInput | JobAssignmentCreateOrConnectWithoutUserInput[]
    upsert?: JobAssignmentUpsertWithWhereUniqueWithoutUserInput | JobAssignmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: JobAssignmentCreateManyUserInputEnvelope
    set?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    disconnect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    delete?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    update?: JobAssignmentUpdateWithWhereUniqueWithoutUserInput | JobAssignmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: JobAssignmentUpdateManyWithWhereWithoutUserInput | JobAssignmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: JobAssignmentScalarWhereInput | JobAssignmentScalarWhereInput[]
  }

  export type MovingJobUpdateManyWithoutTeamLeaderNestedInput = {
    create?: XOR<MovingJobCreateWithoutTeamLeaderInput, MovingJobUncheckedCreateWithoutTeamLeaderInput> | MovingJobCreateWithoutTeamLeaderInput[] | MovingJobUncheckedCreateWithoutTeamLeaderInput[]
    connectOrCreate?: MovingJobCreateOrConnectWithoutTeamLeaderInput | MovingJobCreateOrConnectWithoutTeamLeaderInput[]
    upsert?: MovingJobUpsertWithWhereUniqueWithoutTeamLeaderInput | MovingJobUpsertWithWhereUniqueWithoutTeamLeaderInput[]
    createMany?: MovingJobCreateManyTeamLeaderInputEnvelope
    set?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    disconnect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    delete?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    connect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    update?: MovingJobUpdateWithWhereUniqueWithoutTeamLeaderInput | MovingJobUpdateWithWhereUniqueWithoutTeamLeaderInput[]
    updateMany?: MovingJobUpdateManyWithWhereWithoutTeamLeaderInput | MovingJobUpdateManyWithWhereWithoutTeamLeaderInput[]
    deleteMany?: MovingJobScalarWhereInput | MovingJobScalarWhereInput[]
  }

  export type StockBatchUpdateManyWithoutReceivedByNestedInput = {
    create?: XOR<StockBatchCreateWithoutReceivedByInput, StockBatchUncheckedCreateWithoutReceivedByInput> | StockBatchCreateWithoutReceivedByInput[] | StockBatchUncheckedCreateWithoutReceivedByInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutReceivedByInput | StockBatchCreateOrConnectWithoutReceivedByInput[]
    upsert?: StockBatchUpsertWithWhereUniqueWithoutReceivedByInput | StockBatchUpsertWithWhereUniqueWithoutReceivedByInput[]
    createMany?: StockBatchCreateManyReceivedByInputEnvelope
    set?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    disconnect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    delete?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    update?: StockBatchUpdateWithWhereUniqueWithoutReceivedByInput | StockBatchUpdateWithWhereUniqueWithoutReceivedByInput[]
    updateMany?: StockBatchUpdateManyWithWhereWithoutReceivedByInput | StockBatchUpdateManyWithWhereWithoutReceivedByInput[]
    deleteMany?: StockBatchScalarWhereInput | StockBatchScalarWhereInput[]
  }

  export type MaterialIssueUpdateManyWithoutIssuedByNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutIssuedByInput, MaterialIssueUncheckedCreateWithoutIssuedByInput> | MaterialIssueCreateWithoutIssuedByInput[] | MaterialIssueUncheckedCreateWithoutIssuedByInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutIssuedByInput | MaterialIssueCreateOrConnectWithoutIssuedByInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutIssuedByInput | MaterialIssueUpsertWithWhereUniqueWithoutIssuedByInput[]
    createMany?: MaterialIssueCreateManyIssuedByInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutIssuedByInput | MaterialIssueUpdateWithWhereUniqueWithoutIssuedByInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutIssuedByInput | MaterialIssueUpdateManyWithWhereWithoutIssuedByInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type MaterialReturnUpdateManyWithoutRecordedByNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutRecordedByInput, MaterialReturnUncheckedCreateWithoutRecordedByInput> | MaterialReturnCreateWithoutRecordedByInput[] | MaterialReturnUncheckedCreateWithoutRecordedByInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutRecordedByInput | MaterialReturnCreateOrConnectWithoutRecordedByInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutRecordedByInput | MaterialReturnUpsertWithWhereUniqueWithoutRecordedByInput[]
    createMany?: MaterialReturnCreateManyRecordedByInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutRecordedByInput | MaterialReturnUpdateWithWhereUniqueWithoutRecordedByInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutRecordedByInput | MaterialReturnUpdateManyWithWhereWithoutRecordedByInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type MaterialDamageUpdateManyWithoutRecordedByNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutRecordedByInput, MaterialDamageUncheckedCreateWithoutRecordedByInput> | MaterialDamageCreateWithoutRecordedByInput[] | MaterialDamageUncheckedCreateWithoutRecordedByInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutRecordedByInput | MaterialDamageCreateOrConnectWithoutRecordedByInput[]
    upsert?: MaterialDamageUpsertWithWhereUniqueWithoutRecordedByInput | MaterialDamageUpsertWithWhereUniqueWithoutRecordedByInput[]
    createMany?: MaterialDamageCreateManyRecordedByInputEnvelope
    set?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    disconnect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    delete?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    update?: MaterialDamageUpdateWithWhereUniqueWithoutRecordedByInput | MaterialDamageUpdateWithWhereUniqueWithoutRecordedByInput[]
    updateMany?: MaterialDamageUpdateManyWithWhereWithoutRecordedByInput | MaterialDamageUpdateManyWithWhereWithoutRecordedByInput[]
    deleteMany?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
  }

  export type MaterialDamageUpdateManyWithoutApprovedByNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutApprovedByInput, MaterialDamageUncheckedCreateWithoutApprovedByInput> | MaterialDamageCreateWithoutApprovedByInput[] | MaterialDamageUncheckedCreateWithoutApprovedByInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutApprovedByInput | MaterialDamageCreateOrConnectWithoutApprovedByInput[]
    upsert?: MaterialDamageUpsertWithWhereUniqueWithoutApprovedByInput | MaterialDamageUpsertWithWhereUniqueWithoutApprovedByInput[]
    createMany?: MaterialDamageCreateManyApprovedByInputEnvelope
    set?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    disconnect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    delete?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    update?: MaterialDamageUpdateWithWhereUniqueWithoutApprovedByInput | MaterialDamageUpdateWithWhereUniqueWithoutApprovedByInput[]
    updateMany?: MaterialDamageUpdateManyWithWhereWithoutApprovedByInput | MaterialDamageUpdateManyWithWhereWithoutApprovedByInput[]
    deleteMany?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
  }

  export type MaterialApprovalUpdateManyWithoutRequestedByNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutRequestedByInput, MaterialApprovalUncheckedCreateWithoutRequestedByInput> | MaterialApprovalCreateWithoutRequestedByInput[] | MaterialApprovalUncheckedCreateWithoutRequestedByInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutRequestedByInput | MaterialApprovalCreateOrConnectWithoutRequestedByInput[]
    upsert?: MaterialApprovalUpsertWithWhereUniqueWithoutRequestedByInput | MaterialApprovalUpsertWithWhereUniqueWithoutRequestedByInput[]
    createMany?: MaterialApprovalCreateManyRequestedByInputEnvelope
    set?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    disconnect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    delete?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    update?: MaterialApprovalUpdateWithWhereUniqueWithoutRequestedByInput | MaterialApprovalUpdateWithWhereUniqueWithoutRequestedByInput[]
    updateMany?: MaterialApprovalUpdateManyWithWhereWithoutRequestedByInput | MaterialApprovalUpdateManyWithWhereWithoutRequestedByInput[]
    deleteMany?: MaterialApprovalScalarWhereInput | MaterialApprovalScalarWhereInput[]
  }

  export type MaterialApprovalUpdateManyWithoutDecisionByNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutDecisionByInput, MaterialApprovalUncheckedCreateWithoutDecisionByInput> | MaterialApprovalCreateWithoutDecisionByInput[] | MaterialApprovalUncheckedCreateWithoutDecisionByInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutDecisionByInput | MaterialApprovalCreateOrConnectWithoutDecisionByInput[]
    upsert?: MaterialApprovalUpsertWithWhereUniqueWithoutDecisionByInput | MaterialApprovalUpsertWithWhereUniqueWithoutDecisionByInput[]
    createMany?: MaterialApprovalCreateManyDecisionByInputEnvelope
    set?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    disconnect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    delete?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    update?: MaterialApprovalUpdateWithWhereUniqueWithoutDecisionByInput | MaterialApprovalUpdateWithWhereUniqueWithoutDecisionByInput[]
    updateMany?: MaterialApprovalUpdateManyWithWhereWithoutDecisionByInput | MaterialApprovalUpdateManyWithWhereWithoutDecisionByInput[]
    deleteMany?: MaterialApprovalScalarWhereInput | MaterialApprovalScalarWhereInput[]
  }

  export type ShipmentUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ShipmentCreateWithoutCreatedByInput, ShipmentUncheckedCreateWithoutCreatedByInput> | ShipmentCreateWithoutCreatedByInput[] | ShipmentUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutCreatedByInput | ShipmentCreateOrConnectWithoutCreatedByInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutCreatedByInput | ShipmentUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ShipmentCreateManyCreatedByInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutCreatedByInput | ShipmentUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutCreatedByInput | ShipmentUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type ShipmentUpdateManyWithoutAssignedByNestedInput = {
    create?: XOR<ShipmentCreateWithoutAssignedByInput, ShipmentUncheckedCreateWithoutAssignedByInput> | ShipmentCreateWithoutAssignedByInput[] | ShipmentUncheckedCreateWithoutAssignedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutAssignedByInput | ShipmentCreateOrConnectWithoutAssignedByInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutAssignedByInput | ShipmentUpsertWithWhereUniqueWithoutAssignedByInput[]
    createMany?: ShipmentCreateManyAssignedByInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutAssignedByInput | ShipmentUpdateWithWhereUniqueWithoutAssignedByInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutAssignedByInput | ShipmentUpdateManyWithWhereWithoutAssignedByInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type ShipmentUpdateManyWithoutReleasedByNestedInput = {
    create?: XOR<ShipmentCreateWithoutReleasedByInput, ShipmentUncheckedCreateWithoutReleasedByInput> | ShipmentCreateWithoutReleasedByInput[] | ShipmentUncheckedCreateWithoutReleasedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutReleasedByInput | ShipmentCreateOrConnectWithoutReleasedByInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutReleasedByInput | ShipmentUpsertWithWhereUniqueWithoutReleasedByInput[]
    createMany?: ShipmentCreateManyReleasedByInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutReleasedByInput | ShipmentUpdateWithWhereUniqueWithoutReleasedByInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutReleasedByInput | ShipmentUpdateManyWithWhereWithoutReleasedByInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type RackActivityUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RackActivityCreateWithoutUserInput, RackActivityUncheckedCreateWithoutUserInput> | RackActivityCreateWithoutUserInput[] | RackActivityUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RackActivityCreateOrConnectWithoutUserInput | RackActivityCreateOrConnectWithoutUserInput[]
    upsert?: RackActivityUpsertWithWhereUniqueWithoutUserInput | RackActivityUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RackActivityCreateManyUserInputEnvelope
    set?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    disconnect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    delete?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    connect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    update?: RackActivityUpdateWithWhereUniqueWithoutUserInput | RackActivityUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RackActivityUpdateManyWithWhereWithoutUserInput | RackActivityUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RackActivityScalarWhereInput | RackActivityScalarWhereInput[]
  }

  export type JobAssignmentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<JobAssignmentCreateWithoutUserInput, JobAssignmentUncheckedCreateWithoutUserInput> | JobAssignmentCreateWithoutUserInput[] | JobAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutUserInput | JobAssignmentCreateOrConnectWithoutUserInput[]
    upsert?: JobAssignmentUpsertWithWhereUniqueWithoutUserInput | JobAssignmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: JobAssignmentCreateManyUserInputEnvelope
    set?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    disconnect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    delete?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    update?: JobAssignmentUpdateWithWhereUniqueWithoutUserInput | JobAssignmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: JobAssignmentUpdateManyWithWhereWithoutUserInput | JobAssignmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: JobAssignmentScalarWhereInput | JobAssignmentScalarWhereInput[]
  }

  export type MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput = {
    create?: XOR<MovingJobCreateWithoutTeamLeaderInput, MovingJobUncheckedCreateWithoutTeamLeaderInput> | MovingJobCreateWithoutTeamLeaderInput[] | MovingJobUncheckedCreateWithoutTeamLeaderInput[]
    connectOrCreate?: MovingJobCreateOrConnectWithoutTeamLeaderInput | MovingJobCreateOrConnectWithoutTeamLeaderInput[]
    upsert?: MovingJobUpsertWithWhereUniqueWithoutTeamLeaderInput | MovingJobUpsertWithWhereUniqueWithoutTeamLeaderInput[]
    createMany?: MovingJobCreateManyTeamLeaderInputEnvelope
    set?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    disconnect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    delete?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    connect?: MovingJobWhereUniqueInput | MovingJobWhereUniqueInput[]
    update?: MovingJobUpdateWithWhereUniqueWithoutTeamLeaderInput | MovingJobUpdateWithWhereUniqueWithoutTeamLeaderInput[]
    updateMany?: MovingJobUpdateManyWithWhereWithoutTeamLeaderInput | MovingJobUpdateManyWithWhereWithoutTeamLeaderInput[]
    deleteMany?: MovingJobScalarWhereInput | MovingJobScalarWhereInput[]
  }

  export type StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput = {
    create?: XOR<StockBatchCreateWithoutReceivedByInput, StockBatchUncheckedCreateWithoutReceivedByInput> | StockBatchCreateWithoutReceivedByInput[] | StockBatchUncheckedCreateWithoutReceivedByInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutReceivedByInput | StockBatchCreateOrConnectWithoutReceivedByInput[]
    upsert?: StockBatchUpsertWithWhereUniqueWithoutReceivedByInput | StockBatchUpsertWithWhereUniqueWithoutReceivedByInput[]
    createMany?: StockBatchCreateManyReceivedByInputEnvelope
    set?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    disconnect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    delete?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    update?: StockBatchUpdateWithWhereUniqueWithoutReceivedByInput | StockBatchUpdateWithWhereUniqueWithoutReceivedByInput[]
    updateMany?: StockBatchUpdateManyWithWhereWithoutReceivedByInput | StockBatchUpdateManyWithWhereWithoutReceivedByInput[]
    deleteMany?: StockBatchScalarWhereInput | StockBatchScalarWhereInput[]
  }

  export type MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutIssuedByInput, MaterialIssueUncheckedCreateWithoutIssuedByInput> | MaterialIssueCreateWithoutIssuedByInput[] | MaterialIssueUncheckedCreateWithoutIssuedByInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutIssuedByInput | MaterialIssueCreateOrConnectWithoutIssuedByInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutIssuedByInput | MaterialIssueUpsertWithWhereUniqueWithoutIssuedByInput[]
    createMany?: MaterialIssueCreateManyIssuedByInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutIssuedByInput | MaterialIssueUpdateWithWhereUniqueWithoutIssuedByInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutIssuedByInput | MaterialIssueUpdateManyWithWhereWithoutIssuedByInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutRecordedByInput, MaterialReturnUncheckedCreateWithoutRecordedByInput> | MaterialReturnCreateWithoutRecordedByInput[] | MaterialReturnUncheckedCreateWithoutRecordedByInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutRecordedByInput | MaterialReturnCreateOrConnectWithoutRecordedByInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutRecordedByInput | MaterialReturnUpsertWithWhereUniqueWithoutRecordedByInput[]
    createMany?: MaterialReturnCreateManyRecordedByInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutRecordedByInput | MaterialReturnUpdateWithWhereUniqueWithoutRecordedByInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutRecordedByInput | MaterialReturnUpdateManyWithWhereWithoutRecordedByInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutRecordedByInput, MaterialDamageUncheckedCreateWithoutRecordedByInput> | MaterialDamageCreateWithoutRecordedByInput[] | MaterialDamageUncheckedCreateWithoutRecordedByInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutRecordedByInput | MaterialDamageCreateOrConnectWithoutRecordedByInput[]
    upsert?: MaterialDamageUpsertWithWhereUniqueWithoutRecordedByInput | MaterialDamageUpsertWithWhereUniqueWithoutRecordedByInput[]
    createMany?: MaterialDamageCreateManyRecordedByInputEnvelope
    set?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    disconnect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    delete?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    update?: MaterialDamageUpdateWithWhereUniqueWithoutRecordedByInput | MaterialDamageUpdateWithWhereUniqueWithoutRecordedByInput[]
    updateMany?: MaterialDamageUpdateManyWithWhereWithoutRecordedByInput | MaterialDamageUpdateManyWithWhereWithoutRecordedByInput[]
    deleteMany?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
  }

  export type MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutApprovedByInput, MaterialDamageUncheckedCreateWithoutApprovedByInput> | MaterialDamageCreateWithoutApprovedByInput[] | MaterialDamageUncheckedCreateWithoutApprovedByInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutApprovedByInput | MaterialDamageCreateOrConnectWithoutApprovedByInput[]
    upsert?: MaterialDamageUpsertWithWhereUniqueWithoutApprovedByInput | MaterialDamageUpsertWithWhereUniqueWithoutApprovedByInput[]
    createMany?: MaterialDamageCreateManyApprovedByInputEnvelope
    set?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    disconnect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    delete?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    update?: MaterialDamageUpdateWithWhereUniqueWithoutApprovedByInput | MaterialDamageUpdateWithWhereUniqueWithoutApprovedByInput[]
    updateMany?: MaterialDamageUpdateManyWithWhereWithoutApprovedByInput | MaterialDamageUpdateManyWithWhereWithoutApprovedByInput[]
    deleteMany?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
  }

  export type MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutRequestedByInput, MaterialApprovalUncheckedCreateWithoutRequestedByInput> | MaterialApprovalCreateWithoutRequestedByInput[] | MaterialApprovalUncheckedCreateWithoutRequestedByInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutRequestedByInput | MaterialApprovalCreateOrConnectWithoutRequestedByInput[]
    upsert?: MaterialApprovalUpsertWithWhereUniqueWithoutRequestedByInput | MaterialApprovalUpsertWithWhereUniqueWithoutRequestedByInput[]
    createMany?: MaterialApprovalCreateManyRequestedByInputEnvelope
    set?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    disconnect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    delete?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    update?: MaterialApprovalUpdateWithWhereUniqueWithoutRequestedByInput | MaterialApprovalUpdateWithWhereUniqueWithoutRequestedByInput[]
    updateMany?: MaterialApprovalUpdateManyWithWhereWithoutRequestedByInput | MaterialApprovalUpdateManyWithWhereWithoutRequestedByInput[]
    deleteMany?: MaterialApprovalScalarWhereInput | MaterialApprovalScalarWhereInput[]
  }

  export type MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutDecisionByInput, MaterialApprovalUncheckedCreateWithoutDecisionByInput> | MaterialApprovalCreateWithoutDecisionByInput[] | MaterialApprovalUncheckedCreateWithoutDecisionByInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutDecisionByInput | MaterialApprovalCreateOrConnectWithoutDecisionByInput[]
    upsert?: MaterialApprovalUpsertWithWhereUniqueWithoutDecisionByInput | MaterialApprovalUpsertWithWhereUniqueWithoutDecisionByInput[]
    createMany?: MaterialApprovalCreateManyDecisionByInputEnvelope
    set?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    disconnect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    delete?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    update?: MaterialApprovalUpdateWithWhereUniqueWithoutDecisionByInput | MaterialApprovalUpdateWithWhereUniqueWithoutDecisionByInput[]
    updateMany?: MaterialApprovalUpdateManyWithWhereWithoutDecisionByInput | MaterialApprovalUpdateManyWithWhereWithoutDecisionByInput[]
    deleteMany?: MaterialApprovalScalarWhereInput | MaterialApprovalScalarWhereInput[]
  }

  export type ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ShipmentCreateWithoutCreatedByInput, ShipmentUncheckedCreateWithoutCreatedByInput> | ShipmentCreateWithoutCreatedByInput[] | ShipmentUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutCreatedByInput | ShipmentCreateOrConnectWithoutCreatedByInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutCreatedByInput | ShipmentUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ShipmentCreateManyCreatedByInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutCreatedByInput | ShipmentUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutCreatedByInput | ShipmentUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput = {
    create?: XOR<ShipmentCreateWithoutAssignedByInput, ShipmentUncheckedCreateWithoutAssignedByInput> | ShipmentCreateWithoutAssignedByInput[] | ShipmentUncheckedCreateWithoutAssignedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutAssignedByInput | ShipmentCreateOrConnectWithoutAssignedByInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutAssignedByInput | ShipmentUpsertWithWhereUniqueWithoutAssignedByInput[]
    createMany?: ShipmentCreateManyAssignedByInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutAssignedByInput | ShipmentUpdateWithWhereUniqueWithoutAssignedByInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutAssignedByInput | ShipmentUpdateManyWithWhereWithoutAssignedByInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput = {
    create?: XOR<ShipmentCreateWithoutReleasedByInput, ShipmentUncheckedCreateWithoutReleasedByInput> | ShipmentCreateWithoutReleasedByInput[] | ShipmentUncheckedCreateWithoutReleasedByInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutReleasedByInput | ShipmentCreateOrConnectWithoutReleasedByInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutReleasedByInput | ShipmentUpsertWithWhereUniqueWithoutReleasedByInput[]
    createMany?: ShipmentCreateManyReleasedByInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutReleasedByInput | ShipmentUpdateWithWhereUniqueWithoutReleasedByInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutReleasedByInput | ShipmentUpdateManyWithWhereWithoutReleasedByInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type CompanyCreateNestedOneWithoutRacksInput = {
    create?: XOR<CompanyCreateWithoutRacksInput, CompanyUncheckedCreateWithoutRacksInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutRacksInput
    connect?: CompanyWhereUniqueInput
  }

  export type ShipmentCreateNestedManyWithoutRackInput = {
    create?: XOR<ShipmentCreateWithoutRackInput, ShipmentUncheckedCreateWithoutRackInput> | ShipmentCreateWithoutRackInput[] | ShipmentUncheckedCreateWithoutRackInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutRackInput | ShipmentCreateOrConnectWithoutRackInput[]
    createMany?: ShipmentCreateManyRackInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type ShipmentBoxCreateNestedManyWithoutRackInput = {
    create?: XOR<ShipmentBoxCreateWithoutRackInput, ShipmentBoxUncheckedCreateWithoutRackInput> | ShipmentBoxCreateWithoutRackInput[] | ShipmentBoxUncheckedCreateWithoutRackInput[]
    connectOrCreate?: ShipmentBoxCreateOrConnectWithoutRackInput | ShipmentBoxCreateOrConnectWithoutRackInput[]
    createMany?: ShipmentBoxCreateManyRackInputEnvelope
    connect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
  }

  export type RackActivityCreateNestedManyWithoutRackInput = {
    create?: XOR<RackActivityCreateWithoutRackInput, RackActivityUncheckedCreateWithoutRackInput> | RackActivityCreateWithoutRackInput[] | RackActivityUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackActivityCreateOrConnectWithoutRackInput | RackActivityCreateOrConnectWithoutRackInput[]
    createMany?: RackActivityCreateManyRackInputEnvelope
    connect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
  }

  export type RackInventoryCreateNestedManyWithoutRackInput = {
    create?: XOR<RackInventoryCreateWithoutRackInput, RackInventoryUncheckedCreateWithoutRackInput> | RackInventoryCreateWithoutRackInput[] | RackInventoryUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackInventoryCreateOrConnectWithoutRackInput | RackInventoryCreateOrConnectWithoutRackInput[]
    createMany?: RackInventoryCreateManyRackInputEnvelope
    connect?: RackInventoryWhereUniqueInput | RackInventoryWhereUniqueInput[]
  }

  export type RackStockLevelCreateNestedManyWithoutRackInput = {
    create?: XOR<RackStockLevelCreateWithoutRackInput, RackStockLevelUncheckedCreateWithoutRackInput> | RackStockLevelCreateWithoutRackInput[] | RackStockLevelUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutRackInput | RackStockLevelCreateOrConnectWithoutRackInput[]
    createMany?: RackStockLevelCreateManyRackInputEnvelope
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
  }

  export type MaterialReturnCreateNestedManyWithoutRackInput = {
    create?: XOR<MaterialReturnCreateWithoutRackInput, MaterialReturnUncheckedCreateWithoutRackInput> | MaterialReturnCreateWithoutRackInput[] | MaterialReturnUncheckedCreateWithoutRackInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutRackInput | MaterialReturnCreateOrConnectWithoutRackInput[]
    createMany?: MaterialReturnCreateManyRackInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type MaterialIssueCreateNestedManyWithoutRackInput = {
    create?: XOR<MaterialIssueCreateWithoutRackInput, MaterialIssueUncheckedCreateWithoutRackInput> | MaterialIssueCreateWithoutRackInput[] | MaterialIssueUncheckedCreateWithoutRackInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutRackInput | MaterialIssueCreateOrConnectWithoutRackInput[]
    createMany?: MaterialIssueCreateManyRackInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type ShipmentUncheckedCreateNestedManyWithoutRackInput = {
    create?: XOR<ShipmentCreateWithoutRackInput, ShipmentUncheckedCreateWithoutRackInput> | ShipmentCreateWithoutRackInput[] | ShipmentUncheckedCreateWithoutRackInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutRackInput | ShipmentCreateOrConnectWithoutRackInput[]
    createMany?: ShipmentCreateManyRackInputEnvelope
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
  }

  export type ShipmentBoxUncheckedCreateNestedManyWithoutRackInput = {
    create?: XOR<ShipmentBoxCreateWithoutRackInput, ShipmentBoxUncheckedCreateWithoutRackInput> | ShipmentBoxCreateWithoutRackInput[] | ShipmentBoxUncheckedCreateWithoutRackInput[]
    connectOrCreate?: ShipmentBoxCreateOrConnectWithoutRackInput | ShipmentBoxCreateOrConnectWithoutRackInput[]
    createMany?: ShipmentBoxCreateManyRackInputEnvelope
    connect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
  }

  export type RackActivityUncheckedCreateNestedManyWithoutRackInput = {
    create?: XOR<RackActivityCreateWithoutRackInput, RackActivityUncheckedCreateWithoutRackInput> | RackActivityCreateWithoutRackInput[] | RackActivityUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackActivityCreateOrConnectWithoutRackInput | RackActivityCreateOrConnectWithoutRackInput[]
    createMany?: RackActivityCreateManyRackInputEnvelope
    connect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
  }

  export type RackInventoryUncheckedCreateNestedManyWithoutRackInput = {
    create?: XOR<RackInventoryCreateWithoutRackInput, RackInventoryUncheckedCreateWithoutRackInput> | RackInventoryCreateWithoutRackInput[] | RackInventoryUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackInventoryCreateOrConnectWithoutRackInput | RackInventoryCreateOrConnectWithoutRackInput[]
    createMany?: RackInventoryCreateManyRackInputEnvelope
    connect?: RackInventoryWhereUniqueInput | RackInventoryWhereUniqueInput[]
  }

  export type RackStockLevelUncheckedCreateNestedManyWithoutRackInput = {
    create?: XOR<RackStockLevelCreateWithoutRackInput, RackStockLevelUncheckedCreateWithoutRackInput> | RackStockLevelCreateWithoutRackInput[] | RackStockLevelUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutRackInput | RackStockLevelCreateOrConnectWithoutRackInput[]
    createMany?: RackStockLevelCreateManyRackInputEnvelope
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
  }

  export type MaterialReturnUncheckedCreateNestedManyWithoutRackInput = {
    create?: XOR<MaterialReturnCreateWithoutRackInput, MaterialReturnUncheckedCreateWithoutRackInput> | MaterialReturnCreateWithoutRackInput[] | MaterialReturnUncheckedCreateWithoutRackInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutRackInput | MaterialReturnCreateOrConnectWithoutRackInput[]
    createMany?: MaterialReturnCreateManyRackInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type MaterialIssueUncheckedCreateNestedManyWithoutRackInput = {
    create?: XOR<MaterialIssueCreateWithoutRackInput, MaterialIssueUncheckedCreateWithoutRackInput> | MaterialIssueCreateWithoutRackInput[] | MaterialIssueUncheckedCreateWithoutRackInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutRackInput | MaterialIssueCreateOrConnectWithoutRackInput[]
    createMany?: MaterialIssueCreateManyRackInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CompanyUpdateOneRequiredWithoutRacksNestedInput = {
    create?: XOR<CompanyCreateWithoutRacksInput, CompanyUncheckedCreateWithoutRacksInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutRacksInput
    upsert?: CompanyUpsertWithoutRacksInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutRacksInput, CompanyUpdateWithoutRacksInput>, CompanyUncheckedUpdateWithoutRacksInput>
  }

  export type ShipmentUpdateManyWithoutRackNestedInput = {
    create?: XOR<ShipmentCreateWithoutRackInput, ShipmentUncheckedCreateWithoutRackInput> | ShipmentCreateWithoutRackInput[] | ShipmentUncheckedCreateWithoutRackInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutRackInput | ShipmentCreateOrConnectWithoutRackInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutRackInput | ShipmentUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: ShipmentCreateManyRackInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutRackInput | ShipmentUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutRackInput | ShipmentUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type ShipmentBoxUpdateManyWithoutRackNestedInput = {
    create?: XOR<ShipmentBoxCreateWithoutRackInput, ShipmentBoxUncheckedCreateWithoutRackInput> | ShipmentBoxCreateWithoutRackInput[] | ShipmentBoxUncheckedCreateWithoutRackInput[]
    connectOrCreate?: ShipmentBoxCreateOrConnectWithoutRackInput | ShipmentBoxCreateOrConnectWithoutRackInput[]
    upsert?: ShipmentBoxUpsertWithWhereUniqueWithoutRackInput | ShipmentBoxUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: ShipmentBoxCreateManyRackInputEnvelope
    set?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    disconnect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    delete?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    connect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    update?: ShipmentBoxUpdateWithWhereUniqueWithoutRackInput | ShipmentBoxUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: ShipmentBoxUpdateManyWithWhereWithoutRackInput | ShipmentBoxUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: ShipmentBoxScalarWhereInput | ShipmentBoxScalarWhereInput[]
  }

  export type RackActivityUpdateManyWithoutRackNestedInput = {
    create?: XOR<RackActivityCreateWithoutRackInput, RackActivityUncheckedCreateWithoutRackInput> | RackActivityCreateWithoutRackInput[] | RackActivityUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackActivityCreateOrConnectWithoutRackInput | RackActivityCreateOrConnectWithoutRackInput[]
    upsert?: RackActivityUpsertWithWhereUniqueWithoutRackInput | RackActivityUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: RackActivityCreateManyRackInputEnvelope
    set?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    disconnect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    delete?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    connect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    update?: RackActivityUpdateWithWhereUniqueWithoutRackInput | RackActivityUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: RackActivityUpdateManyWithWhereWithoutRackInput | RackActivityUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: RackActivityScalarWhereInput | RackActivityScalarWhereInput[]
  }

  export type RackInventoryUpdateManyWithoutRackNestedInput = {
    create?: XOR<RackInventoryCreateWithoutRackInput, RackInventoryUncheckedCreateWithoutRackInput> | RackInventoryCreateWithoutRackInput[] | RackInventoryUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackInventoryCreateOrConnectWithoutRackInput | RackInventoryCreateOrConnectWithoutRackInput[]
    upsert?: RackInventoryUpsertWithWhereUniqueWithoutRackInput | RackInventoryUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: RackInventoryCreateManyRackInputEnvelope
    set?: RackInventoryWhereUniqueInput | RackInventoryWhereUniqueInput[]
    disconnect?: RackInventoryWhereUniqueInput | RackInventoryWhereUniqueInput[]
    delete?: RackInventoryWhereUniqueInput | RackInventoryWhereUniqueInput[]
    connect?: RackInventoryWhereUniqueInput | RackInventoryWhereUniqueInput[]
    update?: RackInventoryUpdateWithWhereUniqueWithoutRackInput | RackInventoryUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: RackInventoryUpdateManyWithWhereWithoutRackInput | RackInventoryUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: RackInventoryScalarWhereInput | RackInventoryScalarWhereInput[]
  }

  export type RackStockLevelUpdateManyWithoutRackNestedInput = {
    create?: XOR<RackStockLevelCreateWithoutRackInput, RackStockLevelUncheckedCreateWithoutRackInput> | RackStockLevelCreateWithoutRackInput[] | RackStockLevelUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutRackInput | RackStockLevelCreateOrConnectWithoutRackInput[]
    upsert?: RackStockLevelUpsertWithWhereUniqueWithoutRackInput | RackStockLevelUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: RackStockLevelCreateManyRackInputEnvelope
    set?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    disconnect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    delete?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    update?: RackStockLevelUpdateWithWhereUniqueWithoutRackInput | RackStockLevelUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: RackStockLevelUpdateManyWithWhereWithoutRackInput | RackStockLevelUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: RackStockLevelScalarWhereInput | RackStockLevelScalarWhereInput[]
  }

  export type MaterialReturnUpdateManyWithoutRackNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutRackInput, MaterialReturnUncheckedCreateWithoutRackInput> | MaterialReturnCreateWithoutRackInput[] | MaterialReturnUncheckedCreateWithoutRackInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutRackInput | MaterialReturnCreateOrConnectWithoutRackInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutRackInput | MaterialReturnUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: MaterialReturnCreateManyRackInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutRackInput | MaterialReturnUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutRackInput | MaterialReturnUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type MaterialIssueUpdateManyWithoutRackNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutRackInput, MaterialIssueUncheckedCreateWithoutRackInput> | MaterialIssueCreateWithoutRackInput[] | MaterialIssueUncheckedCreateWithoutRackInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutRackInput | MaterialIssueCreateOrConnectWithoutRackInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutRackInput | MaterialIssueUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: MaterialIssueCreateManyRackInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutRackInput | MaterialIssueUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutRackInput | MaterialIssueUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type ShipmentUncheckedUpdateManyWithoutRackNestedInput = {
    create?: XOR<ShipmentCreateWithoutRackInput, ShipmentUncheckedCreateWithoutRackInput> | ShipmentCreateWithoutRackInput[] | ShipmentUncheckedCreateWithoutRackInput[]
    connectOrCreate?: ShipmentCreateOrConnectWithoutRackInput | ShipmentCreateOrConnectWithoutRackInput[]
    upsert?: ShipmentUpsertWithWhereUniqueWithoutRackInput | ShipmentUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: ShipmentCreateManyRackInputEnvelope
    set?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    disconnect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    delete?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    connect?: ShipmentWhereUniqueInput | ShipmentWhereUniqueInput[]
    update?: ShipmentUpdateWithWhereUniqueWithoutRackInput | ShipmentUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: ShipmentUpdateManyWithWhereWithoutRackInput | ShipmentUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
  }

  export type ShipmentBoxUncheckedUpdateManyWithoutRackNestedInput = {
    create?: XOR<ShipmentBoxCreateWithoutRackInput, ShipmentBoxUncheckedCreateWithoutRackInput> | ShipmentBoxCreateWithoutRackInput[] | ShipmentBoxUncheckedCreateWithoutRackInput[]
    connectOrCreate?: ShipmentBoxCreateOrConnectWithoutRackInput | ShipmentBoxCreateOrConnectWithoutRackInput[]
    upsert?: ShipmentBoxUpsertWithWhereUniqueWithoutRackInput | ShipmentBoxUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: ShipmentBoxCreateManyRackInputEnvelope
    set?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    disconnect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    delete?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    connect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    update?: ShipmentBoxUpdateWithWhereUniqueWithoutRackInput | ShipmentBoxUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: ShipmentBoxUpdateManyWithWhereWithoutRackInput | ShipmentBoxUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: ShipmentBoxScalarWhereInput | ShipmentBoxScalarWhereInput[]
  }

  export type RackActivityUncheckedUpdateManyWithoutRackNestedInput = {
    create?: XOR<RackActivityCreateWithoutRackInput, RackActivityUncheckedCreateWithoutRackInput> | RackActivityCreateWithoutRackInput[] | RackActivityUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackActivityCreateOrConnectWithoutRackInput | RackActivityCreateOrConnectWithoutRackInput[]
    upsert?: RackActivityUpsertWithWhereUniqueWithoutRackInput | RackActivityUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: RackActivityCreateManyRackInputEnvelope
    set?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    disconnect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    delete?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    connect?: RackActivityWhereUniqueInput | RackActivityWhereUniqueInput[]
    update?: RackActivityUpdateWithWhereUniqueWithoutRackInput | RackActivityUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: RackActivityUpdateManyWithWhereWithoutRackInput | RackActivityUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: RackActivityScalarWhereInput | RackActivityScalarWhereInput[]
  }

  export type RackInventoryUncheckedUpdateManyWithoutRackNestedInput = {
    create?: XOR<RackInventoryCreateWithoutRackInput, RackInventoryUncheckedCreateWithoutRackInput> | RackInventoryCreateWithoutRackInput[] | RackInventoryUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackInventoryCreateOrConnectWithoutRackInput | RackInventoryCreateOrConnectWithoutRackInput[]
    upsert?: RackInventoryUpsertWithWhereUniqueWithoutRackInput | RackInventoryUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: RackInventoryCreateManyRackInputEnvelope
    set?: RackInventoryWhereUniqueInput | RackInventoryWhereUniqueInput[]
    disconnect?: RackInventoryWhereUniqueInput | RackInventoryWhereUniqueInput[]
    delete?: RackInventoryWhereUniqueInput | RackInventoryWhereUniqueInput[]
    connect?: RackInventoryWhereUniqueInput | RackInventoryWhereUniqueInput[]
    update?: RackInventoryUpdateWithWhereUniqueWithoutRackInput | RackInventoryUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: RackInventoryUpdateManyWithWhereWithoutRackInput | RackInventoryUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: RackInventoryScalarWhereInput | RackInventoryScalarWhereInput[]
  }

  export type RackStockLevelUncheckedUpdateManyWithoutRackNestedInput = {
    create?: XOR<RackStockLevelCreateWithoutRackInput, RackStockLevelUncheckedCreateWithoutRackInput> | RackStockLevelCreateWithoutRackInput[] | RackStockLevelUncheckedCreateWithoutRackInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutRackInput | RackStockLevelCreateOrConnectWithoutRackInput[]
    upsert?: RackStockLevelUpsertWithWhereUniqueWithoutRackInput | RackStockLevelUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: RackStockLevelCreateManyRackInputEnvelope
    set?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    disconnect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    delete?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    update?: RackStockLevelUpdateWithWhereUniqueWithoutRackInput | RackStockLevelUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: RackStockLevelUpdateManyWithWhereWithoutRackInput | RackStockLevelUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: RackStockLevelScalarWhereInput | RackStockLevelScalarWhereInput[]
  }

  export type MaterialReturnUncheckedUpdateManyWithoutRackNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutRackInput, MaterialReturnUncheckedCreateWithoutRackInput> | MaterialReturnCreateWithoutRackInput[] | MaterialReturnUncheckedCreateWithoutRackInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutRackInput | MaterialReturnCreateOrConnectWithoutRackInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutRackInput | MaterialReturnUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: MaterialReturnCreateManyRackInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutRackInput | MaterialReturnUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutRackInput | MaterialReturnUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type MaterialIssueUncheckedUpdateManyWithoutRackNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutRackInput, MaterialIssueUncheckedCreateWithoutRackInput> | MaterialIssueCreateWithoutRackInput[] | MaterialIssueUncheckedCreateWithoutRackInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutRackInput | MaterialIssueCreateOrConnectWithoutRackInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutRackInput | MaterialIssueUpsertWithWhereUniqueWithoutRackInput[]
    createMany?: MaterialIssueCreateManyRackInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutRackInput | MaterialIssueUpdateWithWhereUniqueWithoutRackInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutRackInput | MaterialIssueUpdateManyWithWhereWithoutRackInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type RackCreateNestedOneWithoutInventoryInput = {
    create?: XOR<RackCreateWithoutInventoryInput, RackUncheckedCreateWithoutInventoryInput>
    connectOrCreate?: RackCreateOrConnectWithoutInventoryInput
    connect?: RackWhereUniqueInput
  }

  export type RackUpdateOneRequiredWithoutInventoryNestedInput = {
    create?: XOR<RackCreateWithoutInventoryInput, RackUncheckedCreateWithoutInventoryInput>
    connectOrCreate?: RackCreateOrConnectWithoutInventoryInput
    upsert?: RackUpsertWithoutInventoryInput
    connect?: RackWhereUniqueInput
    update?: XOR<XOR<RackUpdateToOneWithWhereWithoutInventoryInput, RackUpdateWithoutInventoryInput>, RackUncheckedUpdateWithoutInventoryInput>
  }

  export type RackCreateNestedOneWithoutActivitiesInput = {
    create?: XOR<RackCreateWithoutActivitiesInput, RackUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: RackCreateOrConnectWithoutActivitiesInput
    connect?: RackWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutActivitiesInput = {
    create?: XOR<UserCreateWithoutActivitiesInput, UserUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutActivitiesInput
    connect?: UserWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type RackUpdateOneRequiredWithoutActivitiesNestedInput = {
    create?: XOR<RackCreateWithoutActivitiesInput, RackUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: RackCreateOrConnectWithoutActivitiesInput
    upsert?: RackUpsertWithoutActivitiesInput
    connect?: RackWhereUniqueInput
    update?: XOR<XOR<RackUpdateToOneWithWhereWithoutActivitiesInput, RackUpdateWithoutActivitiesInput>, RackUncheckedUpdateWithoutActivitiesInput>
  }

  export type UserUpdateOneRequiredWithoutActivitiesNestedInput = {
    create?: XOR<UserCreateWithoutActivitiesInput, UserUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutActivitiesInput
    upsert?: UserUpsertWithoutActivitiesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutActivitiesInput, UserUpdateWithoutActivitiesInput>, UserUncheckedUpdateWithoutActivitiesInput>
  }

  export type CompanyCreateNestedOneWithoutShipmentsInput = {
    create?: XOR<CompanyCreateWithoutShipmentsInput, CompanyUncheckedCreateWithoutShipmentsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutShipmentsInput
    connect?: CompanyWhereUniqueInput
  }

  export type RackCreateNestedOneWithoutShipmentsInput = {
    create?: XOR<RackCreateWithoutShipmentsInput, RackUncheckedCreateWithoutShipmentsInput>
    connectOrCreate?: RackCreateOrConnectWithoutShipmentsInput
    connect?: RackWhereUniqueInput
  }

  export type ShipmentBoxCreateNestedManyWithoutShipmentInput = {
    create?: XOR<ShipmentBoxCreateWithoutShipmentInput, ShipmentBoxUncheckedCreateWithoutShipmentInput> | ShipmentBoxCreateWithoutShipmentInput[] | ShipmentBoxUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentBoxCreateOrConnectWithoutShipmentInput | ShipmentBoxCreateOrConnectWithoutShipmentInput[]
    createMany?: ShipmentBoxCreateManyShipmentInputEnvelope
    connect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
  }

  export type WithdrawalCreateNestedManyWithoutShipmentInput = {
    create?: XOR<WithdrawalCreateWithoutShipmentInput, WithdrawalUncheckedCreateWithoutShipmentInput> | WithdrawalCreateWithoutShipmentInput[] | WithdrawalUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: WithdrawalCreateOrConnectWithoutShipmentInput | WithdrawalCreateOrConnectWithoutShipmentInput[]
    createMany?: WithdrawalCreateManyShipmentInputEnvelope
    connect?: WithdrawalWhereUniqueInput | WithdrawalWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutShipmentInput = {
    create?: XOR<InvoiceCreateWithoutShipmentInput, InvoiceUncheckedCreateWithoutShipmentInput> | InvoiceCreateWithoutShipmentInput[] | InvoiceUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutShipmentInput | InvoiceCreateOrConnectWithoutShipmentInput[]
    createMany?: InvoiceCreateManyShipmentInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type ShipmentChargesCreateNestedOneWithoutShipmentInput = {
    create?: XOR<ShipmentChargesCreateWithoutShipmentInput, ShipmentChargesUncheckedCreateWithoutShipmentInput>
    connectOrCreate?: ShipmentChargesCreateOrConnectWithoutShipmentInput
    connect?: ShipmentChargesWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutShipmentsCreatedInput = {
    create?: XOR<UserCreateWithoutShipmentsCreatedInput, UserUncheckedCreateWithoutShipmentsCreatedInput>
    connectOrCreate?: UserCreateOrConnectWithoutShipmentsCreatedInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutShipmentsAssignedInput = {
    create?: XOR<UserCreateWithoutShipmentsAssignedInput, UserUncheckedCreateWithoutShipmentsAssignedInput>
    connectOrCreate?: UserCreateOrConnectWithoutShipmentsAssignedInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutShipmentsReleasedInput = {
    create?: XOR<UserCreateWithoutShipmentsReleasedInput, UserUncheckedCreateWithoutShipmentsReleasedInput>
    connectOrCreate?: UserCreateOrConnectWithoutShipmentsReleasedInput
    connect?: UserWhereUniqueInput
  }

  export type ShipmentBoxUncheckedCreateNestedManyWithoutShipmentInput = {
    create?: XOR<ShipmentBoxCreateWithoutShipmentInput, ShipmentBoxUncheckedCreateWithoutShipmentInput> | ShipmentBoxCreateWithoutShipmentInput[] | ShipmentBoxUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentBoxCreateOrConnectWithoutShipmentInput | ShipmentBoxCreateOrConnectWithoutShipmentInput[]
    createMany?: ShipmentBoxCreateManyShipmentInputEnvelope
    connect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
  }

  export type WithdrawalUncheckedCreateNestedManyWithoutShipmentInput = {
    create?: XOR<WithdrawalCreateWithoutShipmentInput, WithdrawalUncheckedCreateWithoutShipmentInput> | WithdrawalCreateWithoutShipmentInput[] | WithdrawalUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: WithdrawalCreateOrConnectWithoutShipmentInput | WithdrawalCreateOrConnectWithoutShipmentInput[]
    createMany?: WithdrawalCreateManyShipmentInputEnvelope
    connect?: WithdrawalWhereUniqueInput | WithdrawalWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutShipmentInput = {
    create?: XOR<InvoiceCreateWithoutShipmentInput, InvoiceUncheckedCreateWithoutShipmentInput> | InvoiceCreateWithoutShipmentInput[] | InvoiceUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutShipmentInput | InvoiceCreateOrConnectWithoutShipmentInput[]
    createMany?: InvoiceCreateManyShipmentInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type ShipmentChargesUncheckedCreateNestedOneWithoutShipmentInput = {
    create?: XOR<ShipmentChargesCreateWithoutShipmentInput, ShipmentChargesUncheckedCreateWithoutShipmentInput>
    connectOrCreate?: ShipmentChargesCreateOrConnectWithoutShipmentInput
    connect?: ShipmentChargesWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CompanyUpdateOneRequiredWithoutShipmentsNestedInput = {
    create?: XOR<CompanyCreateWithoutShipmentsInput, CompanyUncheckedCreateWithoutShipmentsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutShipmentsInput
    upsert?: CompanyUpsertWithoutShipmentsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutShipmentsInput, CompanyUpdateWithoutShipmentsInput>, CompanyUncheckedUpdateWithoutShipmentsInput>
  }

  export type RackUpdateOneWithoutShipmentsNestedInput = {
    create?: XOR<RackCreateWithoutShipmentsInput, RackUncheckedCreateWithoutShipmentsInput>
    connectOrCreate?: RackCreateOrConnectWithoutShipmentsInput
    upsert?: RackUpsertWithoutShipmentsInput
    disconnect?: RackWhereInput | boolean
    delete?: RackWhereInput | boolean
    connect?: RackWhereUniqueInput
    update?: XOR<XOR<RackUpdateToOneWithWhereWithoutShipmentsInput, RackUpdateWithoutShipmentsInput>, RackUncheckedUpdateWithoutShipmentsInput>
  }

  export type ShipmentBoxUpdateManyWithoutShipmentNestedInput = {
    create?: XOR<ShipmentBoxCreateWithoutShipmentInput, ShipmentBoxUncheckedCreateWithoutShipmentInput> | ShipmentBoxCreateWithoutShipmentInput[] | ShipmentBoxUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentBoxCreateOrConnectWithoutShipmentInput | ShipmentBoxCreateOrConnectWithoutShipmentInput[]
    upsert?: ShipmentBoxUpsertWithWhereUniqueWithoutShipmentInput | ShipmentBoxUpsertWithWhereUniqueWithoutShipmentInput[]
    createMany?: ShipmentBoxCreateManyShipmentInputEnvelope
    set?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    disconnect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    delete?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    connect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    update?: ShipmentBoxUpdateWithWhereUniqueWithoutShipmentInput | ShipmentBoxUpdateWithWhereUniqueWithoutShipmentInput[]
    updateMany?: ShipmentBoxUpdateManyWithWhereWithoutShipmentInput | ShipmentBoxUpdateManyWithWhereWithoutShipmentInput[]
    deleteMany?: ShipmentBoxScalarWhereInput | ShipmentBoxScalarWhereInput[]
  }

  export type WithdrawalUpdateManyWithoutShipmentNestedInput = {
    create?: XOR<WithdrawalCreateWithoutShipmentInput, WithdrawalUncheckedCreateWithoutShipmentInput> | WithdrawalCreateWithoutShipmentInput[] | WithdrawalUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: WithdrawalCreateOrConnectWithoutShipmentInput | WithdrawalCreateOrConnectWithoutShipmentInput[]
    upsert?: WithdrawalUpsertWithWhereUniqueWithoutShipmentInput | WithdrawalUpsertWithWhereUniqueWithoutShipmentInput[]
    createMany?: WithdrawalCreateManyShipmentInputEnvelope
    set?: WithdrawalWhereUniqueInput | WithdrawalWhereUniqueInput[]
    disconnect?: WithdrawalWhereUniqueInput | WithdrawalWhereUniqueInput[]
    delete?: WithdrawalWhereUniqueInput | WithdrawalWhereUniqueInput[]
    connect?: WithdrawalWhereUniqueInput | WithdrawalWhereUniqueInput[]
    update?: WithdrawalUpdateWithWhereUniqueWithoutShipmentInput | WithdrawalUpdateWithWhereUniqueWithoutShipmentInput[]
    updateMany?: WithdrawalUpdateManyWithWhereWithoutShipmentInput | WithdrawalUpdateManyWithWhereWithoutShipmentInput[]
    deleteMany?: WithdrawalScalarWhereInput | WithdrawalScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutShipmentNestedInput = {
    create?: XOR<InvoiceCreateWithoutShipmentInput, InvoiceUncheckedCreateWithoutShipmentInput> | InvoiceCreateWithoutShipmentInput[] | InvoiceUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutShipmentInput | InvoiceCreateOrConnectWithoutShipmentInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutShipmentInput | InvoiceUpsertWithWhereUniqueWithoutShipmentInput[]
    createMany?: InvoiceCreateManyShipmentInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutShipmentInput | InvoiceUpdateWithWhereUniqueWithoutShipmentInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutShipmentInput | InvoiceUpdateManyWithWhereWithoutShipmentInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type ShipmentChargesUpdateOneWithoutShipmentNestedInput = {
    create?: XOR<ShipmentChargesCreateWithoutShipmentInput, ShipmentChargesUncheckedCreateWithoutShipmentInput>
    connectOrCreate?: ShipmentChargesCreateOrConnectWithoutShipmentInput
    upsert?: ShipmentChargesUpsertWithoutShipmentInput
    disconnect?: ShipmentChargesWhereInput | boolean
    delete?: ShipmentChargesWhereInput | boolean
    connect?: ShipmentChargesWhereUniqueInput
    update?: XOR<XOR<ShipmentChargesUpdateToOneWithWhereWithoutShipmentInput, ShipmentChargesUpdateWithoutShipmentInput>, ShipmentChargesUncheckedUpdateWithoutShipmentInput>
  }

  export type UserUpdateOneWithoutShipmentsCreatedNestedInput = {
    create?: XOR<UserCreateWithoutShipmentsCreatedInput, UserUncheckedCreateWithoutShipmentsCreatedInput>
    connectOrCreate?: UserCreateOrConnectWithoutShipmentsCreatedInput
    upsert?: UserUpsertWithoutShipmentsCreatedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutShipmentsCreatedInput, UserUpdateWithoutShipmentsCreatedInput>, UserUncheckedUpdateWithoutShipmentsCreatedInput>
  }

  export type UserUpdateOneWithoutShipmentsAssignedNestedInput = {
    create?: XOR<UserCreateWithoutShipmentsAssignedInput, UserUncheckedCreateWithoutShipmentsAssignedInput>
    connectOrCreate?: UserCreateOrConnectWithoutShipmentsAssignedInput
    upsert?: UserUpsertWithoutShipmentsAssignedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutShipmentsAssignedInput, UserUpdateWithoutShipmentsAssignedInput>, UserUncheckedUpdateWithoutShipmentsAssignedInput>
  }

  export type UserUpdateOneWithoutShipmentsReleasedNestedInput = {
    create?: XOR<UserCreateWithoutShipmentsReleasedInput, UserUncheckedCreateWithoutShipmentsReleasedInput>
    connectOrCreate?: UserCreateOrConnectWithoutShipmentsReleasedInput
    upsert?: UserUpsertWithoutShipmentsReleasedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutShipmentsReleasedInput, UserUpdateWithoutShipmentsReleasedInput>, UserUncheckedUpdateWithoutShipmentsReleasedInput>
  }

  export type ShipmentBoxUncheckedUpdateManyWithoutShipmentNestedInput = {
    create?: XOR<ShipmentBoxCreateWithoutShipmentInput, ShipmentBoxUncheckedCreateWithoutShipmentInput> | ShipmentBoxCreateWithoutShipmentInput[] | ShipmentBoxUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: ShipmentBoxCreateOrConnectWithoutShipmentInput | ShipmentBoxCreateOrConnectWithoutShipmentInput[]
    upsert?: ShipmentBoxUpsertWithWhereUniqueWithoutShipmentInput | ShipmentBoxUpsertWithWhereUniqueWithoutShipmentInput[]
    createMany?: ShipmentBoxCreateManyShipmentInputEnvelope
    set?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    disconnect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    delete?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    connect?: ShipmentBoxWhereUniqueInput | ShipmentBoxWhereUniqueInput[]
    update?: ShipmentBoxUpdateWithWhereUniqueWithoutShipmentInput | ShipmentBoxUpdateWithWhereUniqueWithoutShipmentInput[]
    updateMany?: ShipmentBoxUpdateManyWithWhereWithoutShipmentInput | ShipmentBoxUpdateManyWithWhereWithoutShipmentInput[]
    deleteMany?: ShipmentBoxScalarWhereInput | ShipmentBoxScalarWhereInput[]
  }

  export type WithdrawalUncheckedUpdateManyWithoutShipmentNestedInput = {
    create?: XOR<WithdrawalCreateWithoutShipmentInput, WithdrawalUncheckedCreateWithoutShipmentInput> | WithdrawalCreateWithoutShipmentInput[] | WithdrawalUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: WithdrawalCreateOrConnectWithoutShipmentInput | WithdrawalCreateOrConnectWithoutShipmentInput[]
    upsert?: WithdrawalUpsertWithWhereUniqueWithoutShipmentInput | WithdrawalUpsertWithWhereUniqueWithoutShipmentInput[]
    createMany?: WithdrawalCreateManyShipmentInputEnvelope
    set?: WithdrawalWhereUniqueInput | WithdrawalWhereUniqueInput[]
    disconnect?: WithdrawalWhereUniqueInput | WithdrawalWhereUniqueInput[]
    delete?: WithdrawalWhereUniqueInput | WithdrawalWhereUniqueInput[]
    connect?: WithdrawalWhereUniqueInput | WithdrawalWhereUniqueInput[]
    update?: WithdrawalUpdateWithWhereUniqueWithoutShipmentInput | WithdrawalUpdateWithWhereUniqueWithoutShipmentInput[]
    updateMany?: WithdrawalUpdateManyWithWhereWithoutShipmentInput | WithdrawalUpdateManyWithWhereWithoutShipmentInput[]
    deleteMany?: WithdrawalScalarWhereInput | WithdrawalScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutShipmentNestedInput = {
    create?: XOR<InvoiceCreateWithoutShipmentInput, InvoiceUncheckedCreateWithoutShipmentInput> | InvoiceCreateWithoutShipmentInput[] | InvoiceUncheckedCreateWithoutShipmentInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutShipmentInput | InvoiceCreateOrConnectWithoutShipmentInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutShipmentInput | InvoiceUpsertWithWhereUniqueWithoutShipmentInput[]
    createMany?: InvoiceCreateManyShipmentInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutShipmentInput | InvoiceUpdateWithWhereUniqueWithoutShipmentInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutShipmentInput | InvoiceUpdateManyWithWhereWithoutShipmentInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type ShipmentChargesUncheckedUpdateOneWithoutShipmentNestedInput = {
    create?: XOR<ShipmentChargesCreateWithoutShipmentInput, ShipmentChargesUncheckedCreateWithoutShipmentInput>
    connectOrCreate?: ShipmentChargesCreateOrConnectWithoutShipmentInput
    upsert?: ShipmentChargesUpsertWithoutShipmentInput
    disconnect?: ShipmentChargesWhereInput | boolean
    delete?: ShipmentChargesWhereInput | boolean
    connect?: ShipmentChargesWhereUniqueInput
    update?: XOR<XOR<ShipmentChargesUpdateToOneWithWhereWithoutShipmentInput, ShipmentChargesUpdateWithoutShipmentInput>, ShipmentChargesUncheckedUpdateWithoutShipmentInput>
  }

  export type ShipmentCreateNestedOneWithoutBoxesInput = {
    create?: XOR<ShipmentCreateWithoutBoxesInput, ShipmentUncheckedCreateWithoutBoxesInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutBoxesInput
    connect?: ShipmentWhereUniqueInput
  }

  export type RackCreateNestedOneWithoutBoxesInput = {
    create?: XOR<RackCreateWithoutBoxesInput, RackUncheckedCreateWithoutBoxesInput>
    connectOrCreate?: RackCreateOrConnectWithoutBoxesInput
    connect?: RackWhereUniqueInput
  }

  export type ShipmentUpdateOneRequiredWithoutBoxesNestedInput = {
    create?: XOR<ShipmentCreateWithoutBoxesInput, ShipmentUncheckedCreateWithoutBoxesInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutBoxesInput
    upsert?: ShipmentUpsertWithoutBoxesInput
    connect?: ShipmentWhereUniqueInput
    update?: XOR<XOR<ShipmentUpdateToOneWithWhereWithoutBoxesInput, ShipmentUpdateWithoutBoxesInput>, ShipmentUncheckedUpdateWithoutBoxesInput>
  }

  export type RackUpdateOneWithoutBoxesNestedInput = {
    create?: XOR<RackCreateWithoutBoxesInput, RackUncheckedCreateWithoutBoxesInput>
    connectOrCreate?: RackCreateOrConnectWithoutBoxesInput
    upsert?: RackUpsertWithoutBoxesInput
    disconnect?: RackWhereInput | boolean
    delete?: RackWhereInput | boolean
    connect?: RackWhereUniqueInput
    update?: XOR<XOR<RackUpdateToOneWithWhereWithoutBoxesInput, RackUpdateWithoutBoxesInput>, RackUncheckedUpdateWithoutBoxesInput>
  }

  export type ShipmentCreateNestedOneWithoutWithdrawalsInput = {
    create?: XOR<ShipmentCreateWithoutWithdrawalsInput, ShipmentUncheckedCreateWithoutWithdrawalsInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutWithdrawalsInput
    connect?: ShipmentWhereUniqueInput
  }

  export type ShipmentUpdateOneRequiredWithoutWithdrawalsNestedInput = {
    create?: XOR<ShipmentCreateWithoutWithdrawalsInput, ShipmentUncheckedCreateWithoutWithdrawalsInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutWithdrawalsInput
    upsert?: ShipmentUpsertWithoutWithdrawalsInput
    connect?: ShipmentWhereUniqueInput
    update?: XOR<XOR<ShipmentUpdateToOneWithWhereWithoutWithdrawalsInput, ShipmentUpdateWithoutWithdrawalsInput>, ShipmentUncheckedUpdateWithoutWithdrawalsInput>
  }

  export type CompanyCreateNestedOneWithoutExpensesInput = {
    create?: XOR<CompanyCreateWithoutExpensesInput, CompanyUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutExpensesInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutExpensesNestedInput = {
    create?: XOR<CompanyCreateWithoutExpensesInput, CompanyUncheckedCreateWithoutExpensesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutExpensesInput
    upsert?: CompanyUpsertWithoutExpensesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutExpensesInput, CompanyUpdateWithoutExpensesInput>, CompanyUncheckedUpdateWithoutExpensesInput>
  }

  export type CompanyCreateNestedOneWithoutInvoiceSettingsInput = {
    create?: XOR<CompanyCreateWithoutInvoiceSettingsInput, CompanyUncheckedCreateWithoutInvoiceSettingsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutInvoiceSettingsInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutInvoiceSettingsNestedInput = {
    create?: XOR<CompanyCreateWithoutInvoiceSettingsInput, CompanyUncheckedCreateWithoutInvoiceSettingsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutInvoiceSettingsInput
    upsert?: CompanyUpsertWithoutInvoiceSettingsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutInvoiceSettingsInput, CompanyUpdateWithoutInvoiceSettingsInput>, CompanyUncheckedUpdateWithoutInvoiceSettingsInput>
  }

  export type CompanyCreateNestedOneWithoutBillingSettingsInput = {
    create?: XOR<CompanyCreateWithoutBillingSettingsInput, CompanyUncheckedCreateWithoutBillingSettingsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutBillingSettingsInput
    connect?: CompanyWhereUniqueInput
  }

  export type ChargeTypeCreateNestedManyWithoutBillingSettingsInput = {
    create?: XOR<ChargeTypeCreateWithoutBillingSettingsInput, ChargeTypeUncheckedCreateWithoutBillingSettingsInput> | ChargeTypeCreateWithoutBillingSettingsInput[] | ChargeTypeUncheckedCreateWithoutBillingSettingsInput[]
    connectOrCreate?: ChargeTypeCreateOrConnectWithoutBillingSettingsInput | ChargeTypeCreateOrConnectWithoutBillingSettingsInput[]
    createMany?: ChargeTypeCreateManyBillingSettingsInputEnvelope
    connect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
  }

  export type ChargeTypeUncheckedCreateNestedManyWithoutBillingSettingsInput = {
    create?: XOR<ChargeTypeCreateWithoutBillingSettingsInput, ChargeTypeUncheckedCreateWithoutBillingSettingsInput> | ChargeTypeCreateWithoutBillingSettingsInput[] | ChargeTypeUncheckedCreateWithoutBillingSettingsInput[]
    connectOrCreate?: ChargeTypeCreateOrConnectWithoutBillingSettingsInput | ChargeTypeCreateOrConnectWithoutBillingSettingsInput[]
    createMany?: ChargeTypeCreateManyBillingSettingsInputEnvelope
    connect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
  }

  export type CompanyUpdateOneRequiredWithoutBillingSettingsNestedInput = {
    create?: XOR<CompanyCreateWithoutBillingSettingsInput, CompanyUncheckedCreateWithoutBillingSettingsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutBillingSettingsInput
    upsert?: CompanyUpsertWithoutBillingSettingsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutBillingSettingsInput, CompanyUpdateWithoutBillingSettingsInput>, CompanyUncheckedUpdateWithoutBillingSettingsInput>
  }

  export type ChargeTypeUpdateManyWithoutBillingSettingsNestedInput = {
    create?: XOR<ChargeTypeCreateWithoutBillingSettingsInput, ChargeTypeUncheckedCreateWithoutBillingSettingsInput> | ChargeTypeCreateWithoutBillingSettingsInput[] | ChargeTypeUncheckedCreateWithoutBillingSettingsInput[]
    connectOrCreate?: ChargeTypeCreateOrConnectWithoutBillingSettingsInput | ChargeTypeCreateOrConnectWithoutBillingSettingsInput[]
    upsert?: ChargeTypeUpsertWithWhereUniqueWithoutBillingSettingsInput | ChargeTypeUpsertWithWhereUniqueWithoutBillingSettingsInput[]
    createMany?: ChargeTypeCreateManyBillingSettingsInputEnvelope
    set?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    disconnect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    delete?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    connect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    update?: ChargeTypeUpdateWithWhereUniqueWithoutBillingSettingsInput | ChargeTypeUpdateWithWhereUniqueWithoutBillingSettingsInput[]
    updateMany?: ChargeTypeUpdateManyWithWhereWithoutBillingSettingsInput | ChargeTypeUpdateManyWithWhereWithoutBillingSettingsInput[]
    deleteMany?: ChargeTypeScalarWhereInput | ChargeTypeScalarWhereInput[]
  }

  export type ChargeTypeUncheckedUpdateManyWithoutBillingSettingsNestedInput = {
    create?: XOR<ChargeTypeCreateWithoutBillingSettingsInput, ChargeTypeUncheckedCreateWithoutBillingSettingsInput> | ChargeTypeCreateWithoutBillingSettingsInput[] | ChargeTypeUncheckedCreateWithoutBillingSettingsInput[]
    connectOrCreate?: ChargeTypeCreateOrConnectWithoutBillingSettingsInput | ChargeTypeCreateOrConnectWithoutBillingSettingsInput[]
    upsert?: ChargeTypeUpsertWithWhereUniqueWithoutBillingSettingsInput | ChargeTypeUpsertWithWhereUniqueWithoutBillingSettingsInput[]
    createMany?: ChargeTypeCreateManyBillingSettingsInputEnvelope
    set?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    disconnect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    delete?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    connect?: ChargeTypeWhereUniqueInput | ChargeTypeWhereUniqueInput[]
    update?: ChargeTypeUpdateWithWhereUniqueWithoutBillingSettingsInput | ChargeTypeUpdateWithWhereUniqueWithoutBillingSettingsInput[]
    updateMany?: ChargeTypeUpdateManyWithWhereWithoutBillingSettingsInput | ChargeTypeUpdateManyWithWhereWithoutBillingSettingsInput[]
    deleteMany?: ChargeTypeScalarWhereInput | ChargeTypeScalarWhereInput[]
  }

  export type CompanyCreateNestedOneWithoutChargeTypesInput = {
    create?: XOR<CompanyCreateWithoutChargeTypesInput, CompanyUncheckedCreateWithoutChargeTypesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutChargeTypesInput
    connect?: CompanyWhereUniqueInput
  }

  export type BillingSettingsCreateNestedOneWithoutChargeTypesInput = {
    create?: XOR<BillingSettingsCreateWithoutChargeTypesInput, BillingSettingsUncheckedCreateWithoutChargeTypesInput>
    connectOrCreate?: BillingSettingsCreateOrConnectWithoutChargeTypesInput
    connect?: BillingSettingsWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutChargeTypesNestedInput = {
    create?: XOR<CompanyCreateWithoutChargeTypesInput, CompanyUncheckedCreateWithoutChargeTypesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutChargeTypesInput
    upsert?: CompanyUpsertWithoutChargeTypesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutChargeTypesInput, CompanyUpdateWithoutChargeTypesInput>, CompanyUncheckedUpdateWithoutChargeTypesInput>
  }

  export type BillingSettingsUpdateOneRequiredWithoutChargeTypesNestedInput = {
    create?: XOR<BillingSettingsCreateWithoutChargeTypesInput, BillingSettingsUncheckedCreateWithoutChargeTypesInput>
    connectOrCreate?: BillingSettingsCreateOrConnectWithoutChargeTypesInput
    upsert?: BillingSettingsUpsertWithoutChargeTypesInput
    connect?: BillingSettingsWhereUniqueInput
    update?: XOR<XOR<BillingSettingsUpdateToOneWithWhereWithoutChargeTypesInput, BillingSettingsUpdateWithoutChargeTypesInput>, BillingSettingsUncheckedUpdateWithoutChargeTypesInput>
  }

  export type CompanyCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<CompanyCreateWithoutInvoicesInput, CompanyUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutInvoicesInput
    connect?: CompanyWhereUniqueInput
  }

  export type ShipmentCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<ShipmentCreateWithoutInvoicesInput, ShipmentUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutInvoicesInput
    connect?: ShipmentWhereUniqueInput
  }

  export type InvoiceLineItemCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<InvoiceLineItemCreateWithoutInvoiceInput, InvoiceLineItemUncheckedCreateWithoutInvoiceInput> | InvoiceLineItemCreateWithoutInvoiceInput[] | InvoiceLineItemUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceLineItemCreateOrConnectWithoutInvoiceInput | InvoiceLineItemCreateOrConnectWithoutInvoiceInput[]
    createMany?: InvoiceLineItemCreateManyInvoiceInputEnvelope
    connect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type InvoiceLineItemUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<InvoiceLineItemCreateWithoutInvoiceInput, InvoiceLineItemUncheckedCreateWithoutInvoiceInput> | InvoiceLineItemCreateWithoutInvoiceInput[] | InvoiceLineItemUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceLineItemCreateOrConnectWithoutInvoiceInput | InvoiceLineItemCreateOrConnectWithoutInvoiceInput[]
    createMany?: InvoiceLineItemCreateManyInvoiceInputEnvelope
    connect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type CompanyUpdateOneRequiredWithoutInvoicesNestedInput = {
    create?: XOR<CompanyCreateWithoutInvoicesInput, CompanyUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutInvoicesInput
    upsert?: CompanyUpsertWithoutInvoicesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutInvoicesInput, CompanyUpdateWithoutInvoicesInput>, CompanyUncheckedUpdateWithoutInvoicesInput>
  }

  export type ShipmentUpdateOneRequiredWithoutInvoicesNestedInput = {
    create?: XOR<ShipmentCreateWithoutInvoicesInput, ShipmentUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutInvoicesInput
    upsert?: ShipmentUpsertWithoutInvoicesInput
    connect?: ShipmentWhereUniqueInput
    update?: XOR<XOR<ShipmentUpdateToOneWithWhereWithoutInvoicesInput, ShipmentUpdateWithoutInvoicesInput>, ShipmentUncheckedUpdateWithoutInvoicesInput>
  }

  export type InvoiceLineItemUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<InvoiceLineItemCreateWithoutInvoiceInput, InvoiceLineItemUncheckedCreateWithoutInvoiceInput> | InvoiceLineItemCreateWithoutInvoiceInput[] | InvoiceLineItemUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceLineItemCreateOrConnectWithoutInvoiceInput | InvoiceLineItemCreateOrConnectWithoutInvoiceInput[]
    upsert?: InvoiceLineItemUpsertWithWhereUniqueWithoutInvoiceInput | InvoiceLineItemUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: InvoiceLineItemCreateManyInvoiceInputEnvelope
    set?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    disconnect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    delete?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    connect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    update?: InvoiceLineItemUpdateWithWhereUniqueWithoutInvoiceInput | InvoiceLineItemUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: InvoiceLineItemUpdateManyWithWhereWithoutInvoiceInput | InvoiceLineItemUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: InvoiceLineItemScalarWhereInput | InvoiceLineItemScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutInvoiceInput | PaymentUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutInvoiceInput | PaymentUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutInvoiceInput | PaymentUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type InvoiceLineItemUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<InvoiceLineItemCreateWithoutInvoiceInput, InvoiceLineItemUncheckedCreateWithoutInvoiceInput> | InvoiceLineItemCreateWithoutInvoiceInput[] | InvoiceLineItemUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceLineItemCreateOrConnectWithoutInvoiceInput | InvoiceLineItemCreateOrConnectWithoutInvoiceInput[]
    upsert?: InvoiceLineItemUpsertWithWhereUniqueWithoutInvoiceInput | InvoiceLineItemUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: InvoiceLineItemCreateManyInvoiceInputEnvelope
    set?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    disconnect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    delete?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    connect?: InvoiceLineItemWhereUniqueInput | InvoiceLineItemWhereUniqueInput[]
    update?: InvoiceLineItemUpdateWithWhereUniqueWithoutInvoiceInput | InvoiceLineItemUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: InvoiceLineItemUpdateManyWithWhereWithoutInvoiceInput | InvoiceLineItemUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: InvoiceLineItemScalarWhereInput | InvoiceLineItemScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutInvoiceInput | PaymentUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutInvoiceInput | PaymentUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutInvoiceInput | PaymentUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type InvoiceCreateNestedOneWithoutLineItemsInput = {
    create?: XOR<InvoiceCreateWithoutLineItemsInput, InvoiceUncheckedCreateWithoutLineItemsInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutLineItemsInput
    connect?: InvoiceWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutInvoiceLineItemsInput = {
    create?: XOR<CompanyCreateWithoutInvoiceLineItemsInput, CompanyUncheckedCreateWithoutInvoiceLineItemsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutInvoiceLineItemsInput
    connect?: CompanyWhereUniqueInput
  }

  export type InvoiceUpdateOneRequiredWithoutLineItemsNestedInput = {
    create?: XOR<InvoiceCreateWithoutLineItemsInput, InvoiceUncheckedCreateWithoutLineItemsInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutLineItemsInput
    upsert?: InvoiceUpsertWithoutLineItemsInput
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutLineItemsInput, InvoiceUpdateWithoutLineItemsInput>, InvoiceUncheckedUpdateWithoutLineItemsInput>
  }

  export type CompanyUpdateOneRequiredWithoutInvoiceLineItemsNestedInput = {
    create?: XOR<CompanyCreateWithoutInvoiceLineItemsInput, CompanyUncheckedCreateWithoutInvoiceLineItemsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutInvoiceLineItemsInput
    upsert?: CompanyUpsertWithoutInvoiceLineItemsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutInvoiceLineItemsInput, CompanyUpdateWithoutInvoiceLineItemsInput>, CompanyUncheckedUpdateWithoutInvoiceLineItemsInput>
  }

  export type InvoiceCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<InvoiceCreateWithoutPaymentsInput, InvoiceUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutPaymentsInput
    connect?: InvoiceWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<CompanyCreateWithoutPaymentsInput, CompanyUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutPaymentsInput
    connect?: CompanyWhereUniqueInput
  }

  export type InvoiceUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<InvoiceCreateWithoutPaymentsInput, InvoiceUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutPaymentsInput
    upsert?: InvoiceUpsertWithoutPaymentsInput
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutPaymentsInput, InvoiceUpdateWithoutPaymentsInput>, InvoiceUncheckedUpdateWithoutPaymentsInput>
  }

  export type CompanyUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<CompanyCreateWithoutPaymentsInput, CompanyUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutPaymentsInput
    upsert?: CompanyUpsertWithoutPaymentsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutPaymentsInput, CompanyUpdateWithoutPaymentsInput>, CompanyUncheckedUpdateWithoutPaymentsInput>
  }

  export type ShipmentCreateNestedOneWithoutChargesInput = {
    create?: XOR<ShipmentCreateWithoutChargesInput, ShipmentUncheckedCreateWithoutChargesInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutChargesInput
    connect?: ShipmentWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutShipmentChargesInput = {
    create?: XOR<CompanyCreateWithoutShipmentChargesInput, CompanyUncheckedCreateWithoutShipmentChargesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutShipmentChargesInput
    connect?: CompanyWhereUniqueInput
  }

  export type ShipmentUpdateOneRequiredWithoutChargesNestedInput = {
    create?: XOR<ShipmentCreateWithoutChargesInput, ShipmentUncheckedCreateWithoutChargesInput>
    connectOrCreate?: ShipmentCreateOrConnectWithoutChargesInput
    upsert?: ShipmentUpsertWithoutChargesInput
    connect?: ShipmentWhereUniqueInput
    update?: XOR<XOR<ShipmentUpdateToOneWithWhereWithoutChargesInput, ShipmentUpdateWithoutChargesInput>, ShipmentUncheckedUpdateWithoutChargesInput>
  }

  export type CompanyUpdateOneRequiredWithoutShipmentChargesNestedInput = {
    create?: XOR<CompanyCreateWithoutShipmentChargesInput, CompanyUncheckedCreateWithoutShipmentChargesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutShipmentChargesInput
    upsert?: CompanyUpsertWithoutShipmentChargesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutShipmentChargesInput, CompanyUpdateWithoutShipmentChargesInput>, CompanyUncheckedUpdateWithoutShipmentChargesInput>
  }

  export type CompanyCreateNestedOneWithoutCustomFieldsInput = {
    create?: XOR<CompanyCreateWithoutCustomFieldsInput, CompanyUncheckedCreateWithoutCustomFieldsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCustomFieldsInput
    connect?: CompanyWhereUniqueInput
  }

  export type CustomFieldValueCreateNestedManyWithoutCustomFieldInput = {
    create?: XOR<CustomFieldValueCreateWithoutCustomFieldInput, CustomFieldValueUncheckedCreateWithoutCustomFieldInput> | CustomFieldValueCreateWithoutCustomFieldInput[] | CustomFieldValueUncheckedCreateWithoutCustomFieldInput[]
    connectOrCreate?: CustomFieldValueCreateOrConnectWithoutCustomFieldInput | CustomFieldValueCreateOrConnectWithoutCustomFieldInput[]
    createMany?: CustomFieldValueCreateManyCustomFieldInputEnvelope
    connect?: CustomFieldValueWhereUniqueInput | CustomFieldValueWhereUniqueInput[]
  }

  export type CustomFieldValueUncheckedCreateNestedManyWithoutCustomFieldInput = {
    create?: XOR<CustomFieldValueCreateWithoutCustomFieldInput, CustomFieldValueUncheckedCreateWithoutCustomFieldInput> | CustomFieldValueCreateWithoutCustomFieldInput[] | CustomFieldValueUncheckedCreateWithoutCustomFieldInput[]
    connectOrCreate?: CustomFieldValueCreateOrConnectWithoutCustomFieldInput | CustomFieldValueCreateOrConnectWithoutCustomFieldInput[]
    createMany?: CustomFieldValueCreateManyCustomFieldInputEnvelope
    connect?: CustomFieldValueWhereUniqueInput | CustomFieldValueWhereUniqueInput[]
  }

  export type CompanyUpdateOneRequiredWithoutCustomFieldsNestedInput = {
    create?: XOR<CompanyCreateWithoutCustomFieldsInput, CompanyUncheckedCreateWithoutCustomFieldsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCustomFieldsInput
    upsert?: CompanyUpsertWithoutCustomFieldsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutCustomFieldsInput, CompanyUpdateWithoutCustomFieldsInput>, CompanyUncheckedUpdateWithoutCustomFieldsInput>
  }

  export type CustomFieldValueUpdateManyWithoutCustomFieldNestedInput = {
    create?: XOR<CustomFieldValueCreateWithoutCustomFieldInput, CustomFieldValueUncheckedCreateWithoutCustomFieldInput> | CustomFieldValueCreateWithoutCustomFieldInput[] | CustomFieldValueUncheckedCreateWithoutCustomFieldInput[]
    connectOrCreate?: CustomFieldValueCreateOrConnectWithoutCustomFieldInput | CustomFieldValueCreateOrConnectWithoutCustomFieldInput[]
    upsert?: CustomFieldValueUpsertWithWhereUniqueWithoutCustomFieldInput | CustomFieldValueUpsertWithWhereUniqueWithoutCustomFieldInput[]
    createMany?: CustomFieldValueCreateManyCustomFieldInputEnvelope
    set?: CustomFieldValueWhereUniqueInput | CustomFieldValueWhereUniqueInput[]
    disconnect?: CustomFieldValueWhereUniqueInput | CustomFieldValueWhereUniqueInput[]
    delete?: CustomFieldValueWhereUniqueInput | CustomFieldValueWhereUniqueInput[]
    connect?: CustomFieldValueWhereUniqueInput | CustomFieldValueWhereUniqueInput[]
    update?: CustomFieldValueUpdateWithWhereUniqueWithoutCustomFieldInput | CustomFieldValueUpdateWithWhereUniqueWithoutCustomFieldInput[]
    updateMany?: CustomFieldValueUpdateManyWithWhereWithoutCustomFieldInput | CustomFieldValueUpdateManyWithWhereWithoutCustomFieldInput[]
    deleteMany?: CustomFieldValueScalarWhereInput | CustomFieldValueScalarWhereInput[]
  }

  export type CustomFieldValueUncheckedUpdateManyWithoutCustomFieldNestedInput = {
    create?: XOR<CustomFieldValueCreateWithoutCustomFieldInput, CustomFieldValueUncheckedCreateWithoutCustomFieldInput> | CustomFieldValueCreateWithoutCustomFieldInput[] | CustomFieldValueUncheckedCreateWithoutCustomFieldInput[]
    connectOrCreate?: CustomFieldValueCreateOrConnectWithoutCustomFieldInput | CustomFieldValueCreateOrConnectWithoutCustomFieldInput[]
    upsert?: CustomFieldValueUpsertWithWhereUniqueWithoutCustomFieldInput | CustomFieldValueUpsertWithWhereUniqueWithoutCustomFieldInput[]
    createMany?: CustomFieldValueCreateManyCustomFieldInputEnvelope
    set?: CustomFieldValueWhereUniqueInput | CustomFieldValueWhereUniqueInput[]
    disconnect?: CustomFieldValueWhereUniqueInput | CustomFieldValueWhereUniqueInput[]
    delete?: CustomFieldValueWhereUniqueInput | CustomFieldValueWhereUniqueInput[]
    connect?: CustomFieldValueWhereUniqueInput | CustomFieldValueWhereUniqueInput[]
    update?: CustomFieldValueUpdateWithWhereUniqueWithoutCustomFieldInput | CustomFieldValueUpdateWithWhereUniqueWithoutCustomFieldInput[]
    updateMany?: CustomFieldValueUpdateManyWithWhereWithoutCustomFieldInput | CustomFieldValueUpdateManyWithWhereWithoutCustomFieldInput[]
    deleteMany?: CustomFieldValueScalarWhereInput | CustomFieldValueScalarWhereInput[]
  }

  export type CustomFieldCreateNestedOneWithoutValuesInput = {
    create?: XOR<CustomFieldCreateWithoutValuesInput, CustomFieldUncheckedCreateWithoutValuesInput>
    connectOrCreate?: CustomFieldCreateOrConnectWithoutValuesInput
    connect?: CustomFieldWhereUniqueInput
  }

  export type CustomFieldUpdateOneRequiredWithoutValuesNestedInput = {
    create?: XOR<CustomFieldCreateWithoutValuesInput, CustomFieldUncheckedCreateWithoutValuesInput>
    connectOrCreate?: CustomFieldCreateOrConnectWithoutValuesInput
    upsert?: CustomFieldUpsertWithoutValuesInput
    connect?: CustomFieldWhereUniqueInput
    update?: XOR<XOR<CustomFieldUpdateToOneWithWhereWithoutValuesInput, CustomFieldUpdateWithoutValuesInput>, CustomFieldUncheckedUpdateWithoutValuesInput>
  }

  export type CompanyCreateNestedOneWithoutShipmentSettingsInput = {
    create?: XOR<CompanyCreateWithoutShipmentSettingsInput, CompanyUncheckedCreateWithoutShipmentSettingsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutShipmentSettingsInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutShipmentSettingsNestedInput = {
    create?: XOR<CompanyCreateWithoutShipmentSettingsInput, CompanyUncheckedCreateWithoutShipmentSettingsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutShipmentSettingsInput
    upsert?: CompanyUpsertWithoutShipmentSettingsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutShipmentSettingsInput, CompanyUpdateWithoutShipmentSettingsInput>, CompanyUncheckedUpdateWithoutShipmentSettingsInput>
  }

  export type CompanyCreateNestedOneWithoutTemplateSettingsInput = {
    create?: XOR<CompanyCreateWithoutTemplateSettingsInput, CompanyUncheckedCreateWithoutTemplateSettingsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutTemplateSettingsInput
    connect?: CompanyWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type CompanyUpdateOneRequiredWithoutTemplateSettingsNestedInput = {
    create?: XOR<CompanyCreateWithoutTemplateSettingsInput, CompanyUncheckedCreateWithoutTemplateSettingsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutTemplateSettingsInput
    upsert?: CompanyUpsertWithoutTemplateSettingsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutTemplateSettingsInput, CompanyUpdateWithoutTemplateSettingsInput>, CompanyUncheckedUpdateWithoutTemplateSettingsInput>
  }

  export type RolePermissionCreateNestedManyWithoutPermissionInput = {
    create?: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput> | RolePermissionCreateWithoutPermissionInput[] | RolePermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutPermissionInput | RolePermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: RolePermissionCreateManyPermissionInputEnvelope
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
  }

  export type RolePermissionUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput> | RolePermissionCreateWithoutPermissionInput[] | RolePermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutPermissionInput | RolePermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: RolePermissionCreateManyPermissionInputEnvelope
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
  }

  export type RolePermissionUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput> | RolePermissionCreateWithoutPermissionInput[] | RolePermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutPermissionInput | RolePermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: RolePermissionUpsertWithWhereUniqueWithoutPermissionInput | RolePermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: RolePermissionCreateManyPermissionInputEnvelope
    set?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    disconnect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    delete?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    update?: RolePermissionUpdateWithWhereUniqueWithoutPermissionInput | RolePermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: RolePermissionUpdateManyWithWhereWithoutPermissionInput | RolePermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
  }

  export type RolePermissionUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput> | RolePermissionCreateWithoutPermissionInput[] | RolePermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutPermissionInput | RolePermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: RolePermissionUpsertWithWhereUniqueWithoutPermissionInput | RolePermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: RolePermissionCreateManyPermissionInputEnvelope
    set?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    disconnect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    delete?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    update?: RolePermissionUpdateWithWhereUniqueWithoutPermissionInput | RolePermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: RolePermissionUpdateManyWithWhereWithoutPermissionInput | RolePermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
  }

  export type PermissionCreateNestedOneWithoutRolePermissionsInput = {
    create?: XOR<PermissionCreateWithoutRolePermissionsInput, PermissionUncheckedCreateWithoutRolePermissionsInput>
    connectOrCreate?: PermissionCreateOrConnectWithoutRolePermissionsInput
    connect?: PermissionWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutRolePermissionsInput = {
    create?: XOR<CompanyCreateWithoutRolePermissionsInput, CompanyUncheckedCreateWithoutRolePermissionsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutRolePermissionsInput
    connect?: CompanyWhereUniqueInput
  }

  export type PermissionUpdateOneRequiredWithoutRolePermissionsNestedInput = {
    create?: XOR<PermissionCreateWithoutRolePermissionsInput, PermissionUncheckedCreateWithoutRolePermissionsInput>
    connectOrCreate?: PermissionCreateOrConnectWithoutRolePermissionsInput
    upsert?: PermissionUpsertWithoutRolePermissionsInput
    connect?: PermissionWhereUniqueInput
    update?: XOR<XOR<PermissionUpdateToOneWithWhereWithoutRolePermissionsInput, PermissionUpdateWithoutRolePermissionsInput>, PermissionUncheckedUpdateWithoutRolePermissionsInput>
  }

  export type CompanyUpdateOneRequiredWithoutRolePermissionsNestedInput = {
    create?: XOR<CompanyCreateWithoutRolePermissionsInput, CompanyUncheckedCreateWithoutRolePermissionsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutRolePermissionsInput
    upsert?: CompanyUpsertWithoutRolePermissionsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutRolePermissionsInput, CompanyUpdateWithoutRolePermissionsInput>, CompanyUncheckedUpdateWithoutRolePermissionsInput>
  }

  export type CompanyCreateNestedOneWithoutMovingJobsInput = {
    create?: XOR<CompanyCreateWithoutMovingJobsInput, CompanyUncheckedCreateWithoutMovingJobsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMovingJobsInput
    connect?: CompanyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMovingJobsLeadInput = {
    create?: XOR<UserCreateWithoutMovingJobsLeadInput, UserUncheckedCreateWithoutMovingJobsLeadInput>
    connectOrCreate?: UserCreateOrConnectWithoutMovingJobsLeadInput
    connect?: UserWhereUniqueInput
  }

  export type JobAssignmentCreateNestedManyWithoutJobInput = {
    create?: XOR<JobAssignmentCreateWithoutJobInput, JobAssignmentUncheckedCreateWithoutJobInput> | JobAssignmentCreateWithoutJobInput[] | JobAssignmentUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutJobInput | JobAssignmentCreateOrConnectWithoutJobInput[]
    createMany?: JobAssignmentCreateManyJobInputEnvelope
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
  }

  export type MaterialIssueCreateNestedManyWithoutJobInput = {
    create?: XOR<MaterialIssueCreateWithoutJobInput, MaterialIssueUncheckedCreateWithoutJobInput> | MaterialIssueCreateWithoutJobInput[] | MaterialIssueUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutJobInput | MaterialIssueCreateOrConnectWithoutJobInput[]
    createMany?: MaterialIssueCreateManyJobInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type MaterialReturnCreateNestedManyWithoutJobInput = {
    create?: XOR<MaterialReturnCreateWithoutJobInput, MaterialReturnUncheckedCreateWithoutJobInput> | MaterialReturnCreateWithoutJobInput[] | MaterialReturnUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutJobInput | MaterialReturnCreateOrConnectWithoutJobInput[]
    createMany?: MaterialReturnCreateManyJobInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type JobCostSnapshotCreateNestedManyWithoutJobInput = {
    create?: XOR<JobCostSnapshotCreateWithoutJobInput, JobCostSnapshotUncheckedCreateWithoutJobInput> | JobCostSnapshotCreateWithoutJobInput[] | JobCostSnapshotUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobCostSnapshotCreateOrConnectWithoutJobInput | JobCostSnapshotCreateOrConnectWithoutJobInput[]
    createMany?: JobCostSnapshotCreateManyJobInputEnvelope
    connect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
  }

  export type MaterialApprovalCreateNestedManyWithoutJobInput = {
    create?: XOR<MaterialApprovalCreateWithoutJobInput, MaterialApprovalUncheckedCreateWithoutJobInput> | MaterialApprovalCreateWithoutJobInput[] | MaterialApprovalUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutJobInput | MaterialApprovalCreateOrConnectWithoutJobInput[]
    createMany?: MaterialApprovalCreateManyJobInputEnvelope
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
  }

  export type JobAssignmentUncheckedCreateNestedManyWithoutJobInput = {
    create?: XOR<JobAssignmentCreateWithoutJobInput, JobAssignmentUncheckedCreateWithoutJobInput> | JobAssignmentCreateWithoutJobInput[] | JobAssignmentUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutJobInput | JobAssignmentCreateOrConnectWithoutJobInput[]
    createMany?: JobAssignmentCreateManyJobInputEnvelope
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
  }

  export type MaterialIssueUncheckedCreateNestedManyWithoutJobInput = {
    create?: XOR<MaterialIssueCreateWithoutJobInput, MaterialIssueUncheckedCreateWithoutJobInput> | MaterialIssueCreateWithoutJobInput[] | MaterialIssueUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutJobInput | MaterialIssueCreateOrConnectWithoutJobInput[]
    createMany?: MaterialIssueCreateManyJobInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type MaterialReturnUncheckedCreateNestedManyWithoutJobInput = {
    create?: XOR<MaterialReturnCreateWithoutJobInput, MaterialReturnUncheckedCreateWithoutJobInput> | MaterialReturnCreateWithoutJobInput[] | MaterialReturnUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutJobInput | MaterialReturnCreateOrConnectWithoutJobInput[]
    createMany?: MaterialReturnCreateManyJobInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type JobCostSnapshotUncheckedCreateNestedManyWithoutJobInput = {
    create?: XOR<JobCostSnapshotCreateWithoutJobInput, JobCostSnapshotUncheckedCreateWithoutJobInput> | JobCostSnapshotCreateWithoutJobInput[] | JobCostSnapshotUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobCostSnapshotCreateOrConnectWithoutJobInput | JobCostSnapshotCreateOrConnectWithoutJobInput[]
    createMany?: JobCostSnapshotCreateManyJobInputEnvelope
    connect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
  }

  export type MaterialApprovalUncheckedCreateNestedManyWithoutJobInput = {
    create?: XOR<MaterialApprovalCreateWithoutJobInput, MaterialApprovalUncheckedCreateWithoutJobInput> | MaterialApprovalCreateWithoutJobInput[] | MaterialApprovalUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutJobInput | MaterialApprovalCreateOrConnectWithoutJobInput[]
    createMany?: MaterialApprovalCreateManyJobInputEnvelope
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
  }

  export type CompanyUpdateOneRequiredWithoutMovingJobsNestedInput = {
    create?: XOR<CompanyCreateWithoutMovingJobsInput, CompanyUncheckedCreateWithoutMovingJobsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMovingJobsInput
    upsert?: CompanyUpsertWithoutMovingJobsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutMovingJobsInput, CompanyUpdateWithoutMovingJobsInput>, CompanyUncheckedUpdateWithoutMovingJobsInput>
  }

  export type UserUpdateOneWithoutMovingJobsLeadNestedInput = {
    create?: XOR<UserCreateWithoutMovingJobsLeadInput, UserUncheckedCreateWithoutMovingJobsLeadInput>
    connectOrCreate?: UserCreateOrConnectWithoutMovingJobsLeadInput
    upsert?: UserUpsertWithoutMovingJobsLeadInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMovingJobsLeadInput, UserUpdateWithoutMovingJobsLeadInput>, UserUncheckedUpdateWithoutMovingJobsLeadInput>
  }

  export type JobAssignmentUpdateManyWithoutJobNestedInput = {
    create?: XOR<JobAssignmentCreateWithoutJobInput, JobAssignmentUncheckedCreateWithoutJobInput> | JobAssignmentCreateWithoutJobInput[] | JobAssignmentUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutJobInput | JobAssignmentCreateOrConnectWithoutJobInput[]
    upsert?: JobAssignmentUpsertWithWhereUniqueWithoutJobInput | JobAssignmentUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: JobAssignmentCreateManyJobInputEnvelope
    set?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    disconnect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    delete?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    update?: JobAssignmentUpdateWithWhereUniqueWithoutJobInput | JobAssignmentUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: JobAssignmentUpdateManyWithWhereWithoutJobInput | JobAssignmentUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: JobAssignmentScalarWhereInput | JobAssignmentScalarWhereInput[]
  }

  export type MaterialIssueUpdateManyWithoutJobNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutJobInput, MaterialIssueUncheckedCreateWithoutJobInput> | MaterialIssueCreateWithoutJobInput[] | MaterialIssueUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutJobInput | MaterialIssueCreateOrConnectWithoutJobInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutJobInput | MaterialIssueUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: MaterialIssueCreateManyJobInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutJobInput | MaterialIssueUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutJobInput | MaterialIssueUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type MaterialReturnUpdateManyWithoutJobNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutJobInput, MaterialReturnUncheckedCreateWithoutJobInput> | MaterialReturnCreateWithoutJobInput[] | MaterialReturnUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutJobInput | MaterialReturnCreateOrConnectWithoutJobInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutJobInput | MaterialReturnUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: MaterialReturnCreateManyJobInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutJobInput | MaterialReturnUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutJobInput | MaterialReturnUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type JobCostSnapshotUpdateManyWithoutJobNestedInput = {
    create?: XOR<JobCostSnapshotCreateWithoutJobInput, JobCostSnapshotUncheckedCreateWithoutJobInput> | JobCostSnapshotCreateWithoutJobInput[] | JobCostSnapshotUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobCostSnapshotCreateOrConnectWithoutJobInput | JobCostSnapshotCreateOrConnectWithoutJobInput[]
    upsert?: JobCostSnapshotUpsertWithWhereUniqueWithoutJobInput | JobCostSnapshotUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: JobCostSnapshotCreateManyJobInputEnvelope
    set?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    disconnect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    delete?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    connect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    update?: JobCostSnapshotUpdateWithWhereUniqueWithoutJobInput | JobCostSnapshotUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: JobCostSnapshotUpdateManyWithWhereWithoutJobInput | JobCostSnapshotUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: JobCostSnapshotScalarWhereInput | JobCostSnapshotScalarWhereInput[]
  }

  export type MaterialApprovalUpdateManyWithoutJobNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutJobInput, MaterialApprovalUncheckedCreateWithoutJobInput> | MaterialApprovalCreateWithoutJobInput[] | MaterialApprovalUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutJobInput | MaterialApprovalCreateOrConnectWithoutJobInput[]
    upsert?: MaterialApprovalUpsertWithWhereUniqueWithoutJobInput | MaterialApprovalUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: MaterialApprovalCreateManyJobInputEnvelope
    set?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    disconnect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    delete?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    update?: MaterialApprovalUpdateWithWhereUniqueWithoutJobInput | MaterialApprovalUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: MaterialApprovalUpdateManyWithWhereWithoutJobInput | MaterialApprovalUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: MaterialApprovalScalarWhereInput | MaterialApprovalScalarWhereInput[]
  }

  export type JobAssignmentUncheckedUpdateManyWithoutJobNestedInput = {
    create?: XOR<JobAssignmentCreateWithoutJobInput, JobAssignmentUncheckedCreateWithoutJobInput> | JobAssignmentCreateWithoutJobInput[] | JobAssignmentUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobAssignmentCreateOrConnectWithoutJobInput | JobAssignmentCreateOrConnectWithoutJobInput[]
    upsert?: JobAssignmentUpsertWithWhereUniqueWithoutJobInput | JobAssignmentUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: JobAssignmentCreateManyJobInputEnvelope
    set?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    disconnect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    delete?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    connect?: JobAssignmentWhereUniqueInput | JobAssignmentWhereUniqueInput[]
    update?: JobAssignmentUpdateWithWhereUniqueWithoutJobInput | JobAssignmentUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: JobAssignmentUpdateManyWithWhereWithoutJobInput | JobAssignmentUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: JobAssignmentScalarWhereInput | JobAssignmentScalarWhereInput[]
  }

  export type MaterialIssueUncheckedUpdateManyWithoutJobNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutJobInput, MaterialIssueUncheckedCreateWithoutJobInput> | MaterialIssueCreateWithoutJobInput[] | MaterialIssueUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutJobInput | MaterialIssueCreateOrConnectWithoutJobInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutJobInput | MaterialIssueUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: MaterialIssueCreateManyJobInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutJobInput | MaterialIssueUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutJobInput | MaterialIssueUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type MaterialReturnUncheckedUpdateManyWithoutJobNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutJobInput, MaterialReturnUncheckedCreateWithoutJobInput> | MaterialReturnCreateWithoutJobInput[] | MaterialReturnUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutJobInput | MaterialReturnCreateOrConnectWithoutJobInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutJobInput | MaterialReturnUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: MaterialReturnCreateManyJobInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutJobInput | MaterialReturnUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutJobInput | MaterialReturnUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type JobCostSnapshotUncheckedUpdateManyWithoutJobNestedInput = {
    create?: XOR<JobCostSnapshotCreateWithoutJobInput, JobCostSnapshotUncheckedCreateWithoutJobInput> | JobCostSnapshotCreateWithoutJobInput[] | JobCostSnapshotUncheckedCreateWithoutJobInput[]
    connectOrCreate?: JobCostSnapshotCreateOrConnectWithoutJobInput | JobCostSnapshotCreateOrConnectWithoutJobInput[]
    upsert?: JobCostSnapshotUpsertWithWhereUniqueWithoutJobInput | JobCostSnapshotUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: JobCostSnapshotCreateManyJobInputEnvelope
    set?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    disconnect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    delete?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    connect?: JobCostSnapshotWhereUniqueInput | JobCostSnapshotWhereUniqueInput[]
    update?: JobCostSnapshotUpdateWithWhereUniqueWithoutJobInput | JobCostSnapshotUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: JobCostSnapshotUpdateManyWithWhereWithoutJobInput | JobCostSnapshotUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: JobCostSnapshotScalarWhereInput | JobCostSnapshotScalarWhereInput[]
  }

  export type MaterialApprovalUncheckedUpdateManyWithoutJobNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutJobInput, MaterialApprovalUncheckedCreateWithoutJobInput> | MaterialApprovalCreateWithoutJobInput[] | MaterialApprovalUncheckedCreateWithoutJobInput[]
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutJobInput | MaterialApprovalCreateOrConnectWithoutJobInput[]
    upsert?: MaterialApprovalUpsertWithWhereUniqueWithoutJobInput | MaterialApprovalUpsertWithWhereUniqueWithoutJobInput[]
    createMany?: MaterialApprovalCreateManyJobInputEnvelope
    set?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    disconnect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    delete?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    connect?: MaterialApprovalWhereUniqueInput | MaterialApprovalWhereUniqueInput[]
    update?: MaterialApprovalUpdateWithWhereUniqueWithoutJobInput | MaterialApprovalUpdateWithWhereUniqueWithoutJobInput[]
    updateMany?: MaterialApprovalUpdateManyWithWhereWithoutJobInput | MaterialApprovalUpdateManyWithWhereWithoutJobInput[]
    deleteMany?: MaterialApprovalScalarWhereInput | MaterialApprovalScalarWhereInput[]
  }

  export type MovingJobCreateNestedOneWithoutAssignmentsInput = {
    create?: XOR<MovingJobCreateWithoutAssignmentsInput, MovingJobUncheckedCreateWithoutAssignmentsInput>
    connectOrCreate?: MovingJobCreateOrConnectWithoutAssignmentsInput
    connect?: MovingJobWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutJobAssignmentsInput = {
    create?: XOR<UserCreateWithoutJobAssignmentsInput, UserUncheckedCreateWithoutJobAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutJobAssignmentsInput
    connect?: UserWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutJobAssignmentInput = {
    create?: XOR<CompanyCreateWithoutJobAssignmentInput, CompanyUncheckedCreateWithoutJobAssignmentInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutJobAssignmentInput
    connect?: CompanyWhereUniqueInput
  }

  export type MovingJobUpdateOneRequiredWithoutAssignmentsNestedInput = {
    create?: XOR<MovingJobCreateWithoutAssignmentsInput, MovingJobUncheckedCreateWithoutAssignmentsInput>
    connectOrCreate?: MovingJobCreateOrConnectWithoutAssignmentsInput
    upsert?: MovingJobUpsertWithoutAssignmentsInput
    connect?: MovingJobWhereUniqueInput
    update?: XOR<XOR<MovingJobUpdateToOneWithWhereWithoutAssignmentsInput, MovingJobUpdateWithoutAssignmentsInput>, MovingJobUncheckedUpdateWithoutAssignmentsInput>
  }

  export type UserUpdateOneRequiredWithoutJobAssignmentsNestedInput = {
    create?: XOR<UserCreateWithoutJobAssignmentsInput, UserUncheckedCreateWithoutJobAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutJobAssignmentsInput
    upsert?: UserUpsertWithoutJobAssignmentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutJobAssignmentsInput, UserUpdateWithoutJobAssignmentsInput>, UserUncheckedUpdateWithoutJobAssignmentsInput>
  }

  export type CompanyUpdateOneRequiredWithoutJobAssignmentNestedInput = {
    create?: XOR<CompanyCreateWithoutJobAssignmentInput, CompanyUncheckedCreateWithoutJobAssignmentInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutJobAssignmentInput
    upsert?: CompanyUpsertWithoutJobAssignmentInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutJobAssignmentInput, CompanyUpdateWithoutJobAssignmentInput>, CompanyUncheckedUpdateWithoutJobAssignmentInput>
  }

  export type CompanyCreateNestedOneWithoutPackingMaterialsInput = {
    create?: XOR<CompanyCreateWithoutPackingMaterialsInput, CompanyUncheckedCreateWithoutPackingMaterialsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutPackingMaterialsInput
    connect?: CompanyWhereUniqueInput
  }

  export type StockBatchCreateNestedManyWithoutMaterialInput = {
    create?: XOR<StockBatchCreateWithoutMaterialInput, StockBatchUncheckedCreateWithoutMaterialInput> | StockBatchCreateWithoutMaterialInput[] | StockBatchUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutMaterialInput | StockBatchCreateOrConnectWithoutMaterialInput[]
    createMany?: StockBatchCreateManyMaterialInputEnvelope
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
  }

  export type RackStockLevelCreateNestedManyWithoutMaterialInput = {
    create?: XOR<RackStockLevelCreateWithoutMaterialInput, RackStockLevelUncheckedCreateWithoutMaterialInput> | RackStockLevelCreateWithoutMaterialInput[] | RackStockLevelUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutMaterialInput | RackStockLevelCreateOrConnectWithoutMaterialInput[]
    createMany?: RackStockLevelCreateManyMaterialInputEnvelope
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
  }

  export type MaterialIssueCreateNestedManyWithoutMaterialInput = {
    create?: XOR<MaterialIssueCreateWithoutMaterialInput, MaterialIssueUncheckedCreateWithoutMaterialInput> | MaterialIssueCreateWithoutMaterialInput[] | MaterialIssueUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutMaterialInput | MaterialIssueCreateOrConnectWithoutMaterialInput[]
    createMany?: MaterialIssueCreateManyMaterialInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type MaterialReturnCreateNestedManyWithoutMaterialInput = {
    create?: XOR<MaterialReturnCreateWithoutMaterialInput, MaterialReturnUncheckedCreateWithoutMaterialInput> | MaterialReturnCreateWithoutMaterialInput[] | MaterialReturnUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutMaterialInput | MaterialReturnCreateOrConnectWithoutMaterialInput[]
    createMany?: MaterialReturnCreateManyMaterialInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type MaterialDamageCreateNestedManyWithoutMaterialInput = {
    create?: XOR<MaterialDamageCreateWithoutMaterialInput, MaterialDamageUncheckedCreateWithoutMaterialInput> | MaterialDamageCreateWithoutMaterialInput[] | MaterialDamageUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutMaterialInput | MaterialDamageCreateOrConnectWithoutMaterialInput[]
    createMany?: MaterialDamageCreateManyMaterialInputEnvelope
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
  }

  export type StockBatchUncheckedCreateNestedManyWithoutMaterialInput = {
    create?: XOR<StockBatchCreateWithoutMaterialInput, StockBatchUncheckedCreateWithoutMaterialInput> | StockBatchCreateWithoutMaterialInput[] | StockBatchUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutMaterialInput | StockBatchCreateOrConnectWithoutMaterialInput[]
    createMany?: StockBatchCreateManyMaterialInputEnvelope
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
  }

  export type RackStockLevelUncheckedCreateNestedManyWithoutMaterialInput = {
    create?: XOR<RackStockLevelCreateWithoutMaterialInput, RackStockLevelUncheckedCreateWithoutMaterialInput> | RackStockLevelCreateWithoutMaterialInput[] | RackStockLevelUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutMaterialInput | RackStockLevelCreateOrConnectWithoutMaterialInput[]
    createMany?: RackStockLevelCreateManyMaterialInputEnvelope
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
  }

  export type MaterialIssueUncheckedCreateNestedManyWithoutMaterialInput = {
    create?: XOR<MaterialIssueCreateWithoutMaterialInput, MaterialIssueUncheckedCreateWithoutMaterialInput> | MaterialIssueCreateWithoutMaterialInput[] | MaterialIssueUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutMaterialInput | MaterialIssueCreateOrConnectWithoutMaterialInput[]
    createMany?: MaterialIssueCreateManyMaterialInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type MaterialReturnUncheckedCreateNestedManyWithoutMaterialInput = {
    create?: XOR<MaterialReturnCreateWithoutMaterialInput, MaterialReturnUncheckedCreateWithoutMaterialInput> | MaterialReturnCreateWithoutMaterialInput[] | MaterialReturnUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutMaterialInput | MaterialReturnCreateOrConnectWithoutMaterialInput[]
    createMany?: MaterialReturnCreateManyMaterialInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type MaterialDamageUncheckedCreateNestedManyWithoutMaterialInput = {
    create?: XOR<MaterialDamageCreateWithoutMaterialInput, MaterialDamageUncheckedCreateWithoutMaterialInput> | MaterialDamageCreateWithoutMaterialInput[] | MaterialDamageUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutMaterialInput | MaterialDamageCreateOrConnectWithoutMaterialInput[]
    createMany?: MaterialDamageCreateManyMaterialInputEnvelope
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
  }

  export type CompanyUpdateOneRequiredWithoutPackingMaterialsNestedInput = {
    create?: XOR<CompanyCreateWithoutPackingMaterialsInput, CompanyUncheckedCreateWithoutPackingMaterialsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutPackingMaterialsInput
    upsert?: CompanyUpsertWithoutPackingMaterialsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutPackingMaterialsInput, CompanyUpdateWithoutPackingMaterialsInput>, CompanyUncheckedUpdateWithoutPackingMaterialsInput>
  }

  export type StockBatchUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<StockBatchCreateWithoutMaterialInput, StockBatchUncheckedCreateWithoutMaterialInput> | StockBatchCreateWithoutMaterialInput[] | StockBatchUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutMaterialInput | StockBatchCreateOrConnectWithoutMaterialInput[]
    upsert?: StockBatchUpsertWithWhereUniqueWithoutMaterialInput | StockBatchUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: StockBatchCreateManyMaterialInputEnvelope
    set?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    disconnect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    delete?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    update?: StockBatchUpdateWithWhereUniqueWithoutMaterialInput | StockBatchUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: StockBatchUpdateManyWithWhereWithoutMaterialInput | StockBatchUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: StockBatchScalarWhereInput | StockBatchScalarWhereInput[]
  }

  export type RackStockLevelUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<RackStockLevelCreateWithoutMaterialInput, RackStockLevelUncheckedCreateWithoutMaterialInput> | RackStockLevelCreateWithoutMaterialInput[] | RackStockLevelUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutMaterialInput | RackStockLevelCreateOrConnectWithoutMaterialInput[]
    upsert?: RackStockLevelUpsertWithWhereUniqueWithoutMaterialInput | RackStockLevelUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: RackStockLevelCreateManyMaterialInputEnvelope
    set?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    disconnect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    delete?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    update?: RackStockLevelUpdateWithWhereUniqueWithoutMaterialInput | RackStockLevelUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: RackStockLevelUpdateManyWithWhereWithoutMaterialInput | RackStockLevelUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: RackStockLevelScalarWhereInput | RackStockLevelScalarWhereInput[]
  }

  export type MaterialIssueUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutMaterialInput, MaterialIssueUncheckedCreateWithoutMaterialInput> | MaterialIssueCreateWithoutMaterialInput[] | MaterialIssueUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutMaterialInput | MaterialIssueCreateOrConnectWithoutMaterialInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutMaterialInput | MaterialIssueUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: MaterialIssueCreateManyMaterialInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutMaterialInput | MaterialIssueUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutMaterialInput | MaterialIssueUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type MaterialReturnUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutMaterialInput, MaterialReturnUncheckedCreateWithoutMaterialInput> | MaterialReturnCreateWithoutMaterialInput[] | MaterialReturnUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutMaterialInput | MaterialReturnCreateOrConnectWithoutMaterialInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutMaterialInput | MaterialReturnUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: MaterialReturnCreateManyMaterialInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutMaterialInput | MaterialReturnUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutMaterialInput | MaterialReturnUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type MaterialDamageUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutMaterialInput, MaterialDamageUncheckedCreateWithoutMaterialInput> | MaterialDamageCreateWithoutMaterialInput[] | MaterialDamageUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutMaterialInput | MaterialDamageCreateOrConnectWithoutMaterialInput[]
    upsert?: MaterialDamageUpsertWithWhereUniqueWithoutMaterialInput | MaterialDamageUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: MaterialDamageCreateManyMaterialInputEnvelope
    set?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    disconnect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    delete?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    update?: MaterialDamageUpdateWithWhereUniqueWithoutMaterialInput | MaterialDamageUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: MaterialDamageUpdateManyWithWhereWithoutMaterialInput | MaterialDamageUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
  }

  export type StockBatchUncheckedUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<StockBatchCreateWithoutMaterialInput, StockBatchUncheckedCreateWithoutMaterialInput> | StockBatchCreateWithoutMaterialInput[] | StockBatchUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutMaterialInput | StockBatchCreateOrConnectWithoutMaterialInput[]
    upsert?: StockBatchUpsertWithWhereUniqueWithoutMaterialInput | StockBatchUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: StockBatchCreateManyMaterialInputEnvelope
    set?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    disconnect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    delete?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    update?: StockBatchUpdateWithWhereUniqueWithoutMaterialInput | StockBatchUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: StockBatchUpdateManyWithWhereWithoutMaterialInput | StockBatchUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: StockBatchScalarWhereInput | StockBatchScalarWhereInput[]
  }

  export type RackStockLevelUncheckedUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<RackStockLevelCreateWithoutMaterialInput, RackStockLevelUncheckedCreateWithoutMaterialInput> | RackStockLevelCreateWithoutMaterialInput[] | RackStockLevelUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutMaterialInput | RackStockLevelCreateOrConnectWithoutMaterialInput[]
    upsert?: RackStockLevelUpsertWithWhereUniqueWithoutMaterialInput | RackStockLevelUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: RackStockLevelCreateManyMaterialInputEnvelope
    set?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    disconnect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    delete?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    update?: RackStockLevelUpdateWithWhereUniqueWithoutMaterialInput | RackStockLevelUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: RackStockLevelUpdateManyWithWhereWithoutMaterialInput | RackStockLevelUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: RackStockLevelScalarWhereInput | RackStockLevelScalarWhereInput[]
  }

  export type MaterialIssueUncheckedUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutMaterialInput, MaterialIssueUncheckedCreateWithoutMaterialInput> | MaterialIssueCreateWithoutMaterialInput[] | MaterialIssueUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutMaterialInput | MaterialIssueCreateOrConnectWithoutMaterialInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutMaterialInput | MaterialIssueUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: MaterialIssueCreateManyMaterialInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutMaterialInput | MaterialIssueUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutMaterialInput | MaterialIssueUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type MaterialReturnUncheckedUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutMaterialInput, MaterialReturnUncheckedCreateWithoutMaterialInput> | MaterialReturnCreateWithoutMaterialInput[] | MaterialReturnUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutMaterialInput | MaterialReturnCreateOrConnectWithoutMaterialInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutMaterialInput | MaterialReturnUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: MaterialReturnCreateManyMaterialInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutMaterialInput | MaterialReturnUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutMaterialInput | MaterialReturnUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type MaterialDamageUncheckedUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutMaterialInput, MaterialDamageUncheckedCreateWithoutMaterialInput> | MaterialDamageCreateWithoutMaterialInput[] | MaterialDamageUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutMaterialInput | MaterialDamageCreateOrConnectWithoutMaterialInput[]
    upsert?: MaterialDamageUpsertWithWhereUniqueWithoutMaterialInput | MaterialDamageUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: MaterialDamageCreateManyMaterialInputEnvelope
    set?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    disconnect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    delete?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    update?: MaterialDamageUpdateWithWhereUniqueWithoutMaterialInput | MaterialDamageUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: MaterialDamageUpdateManyWithWhereWithoutMaterialInput | MaterialDamageUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
  }

  export type CompanyCreateNestedOneWithoutVendorsInput = {
    create?: XOR<CompanyCreateWithoutVendorsInput, CompanyUncheckedCreateWithoutVendorsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutVendorsInput
    connect?: CompanyWhereUniqueInput
  }

  export type StockBatchCreateNestedManyWithoutVendorInput = {
    create?: XOR<StockBatchCreateWithoutVendorInput, StockBatchUncheckedCreateWithoutVendorInput> | StockBatchCreateWithoutVendorInput[] | StockBatchUncheckedCreateWithoutVendorInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutVendorInput | StockBatchCreateOrConnectWithoutVendorInput[]
    createMany?: StockBatchCreateManyVendorInputEnvelope
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
  }

  export type StockBatchUncheckedCreateNestedManyWithoutVendorInput = {
    create?: XOR<StockBatchCreateWithoutVendorInput, StockBatchUncheckedCreateWithoutVendorInput> | StockBatchCreateWithoutVendorInput[] | StockBatchUncheckedCreateWithoutVendorInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutVendorInput | StockBatchCreateOrConnectWithoutVendorInput[]
    createMany?: StockBatchCreateManyVendorInputEnvelope
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
  }

  export type CompanyUpdateOneRequiredWithoutVendorsNestedInput = {
    create?: XOR<CompanyCreateWithoutVendorsInput, CompanyUncheckedCreateWithoutVendorsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutVendorsInput
    upsert?: CompanyUpsertWithoutVendorsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutVendorsInput, CompanyUpdateWithoutVendorsInput>, CompanyUncheckedUpdateWithoutVendorsInput>
  }

  export type StockBatchUpdateManyWithoutVendorNestedInput = {
    create?: XOR<StockBatchCreateWithoutVendorInput, StockBatchUncheckedCreateWithoutVendorInput> | StockBatchCreateWithoutVendorInput[] | StockBatchUncheckedCreateWithoutVendorInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutVendorInput | StockBatchCreateOrConnectWithoutVendorInput[]
    upsert?: StockBatchUpsertWithWhereUniqueWithoutVendorInput | StockBatchUpsertWithWhereUniqueWithoutVendorInput[]
    createMany?: StockBatchCreateManyVendorInputEnvelope
    set?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    disconnect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    delete?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    update?: StockBatchUpdateWithWhereUniqueWithoutVendorInput | StockBatchUpdateWithWhereUniqueWithoutVendorInput[]
    updateMany?: StockBatchUpdateManyWithWhereWithoutVendorInput | StockBatchUpdateManyWithWhereWithoutVendorInput[]
    deleteMany?: StockBatchScalarWhereInput | StockBatchScalarWhereInput[]
  }

  export type StockBatchUncheckedUpdateManyWithoutVendorNestedInput = {
    create?: XOR<StockBatchCreateWithoutVendorInput, StockBatchUncheckedCreateWithoutVendorInput> | StockBatchCreateWithoutVendorInput[] | StockBatchUncheckedCreateWithoutVendorInput[]
    connectOrCreate?: StockBatchCreateOrConnectWithoutVendorInput | StockBatchCreateOrConnectWithoutVendorInput[]
    upsert?: StockBatchUpsertWithWhereUniqueWithoutVendorInput | StockBatchUpsertWithWhereUniqueWithoutVendorInput[]
    createMany?: StockBatchCreateManyVendorInputEnvelope
    set?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    disconnect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    delete?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    connect?: StockBatchWhereUniqueInput | StockBatchWhereUniqueInput[]
    update?: StockBatchUpdateWithWhereUniqueWithoutVendorInput | StockBatchUpdateWithWhereUniqueWithoutVendorInput[]
    updateMany?: StockBatchUpdateManyWithWhereWithoutVendorInput | StockBatchUpdateManyWithWhereWithoutVendorInput[]
    deleteMany?: StockBatchScalarWhereInput | StockBatchScalarWhereInput[]
  }

  export type PackingMaterialCreateNestedOneWithoutStockBatchesInput = {
    create?: XOR<PackingMaterialCreateWithoutStockBatchesInput, PackingMaterialUncheckedCreateWithoutStockBatchesInput>
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutStockBatchesInput
    connect?: PackingMaterialWhereUniqueInput
  }

  export type VendorCreateNestedOneWithoutStockBatchesInput = {
    create?: XOR<VendorCreateWithoutStockBatchesInput, VendorUncheckedCreateWithoutStockBatchesInput>
    connectOrCreate?: VendorCreateOrConnectWithoutStockBatchesInput
    connect?: VendorWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStockBatchesReceivedInput = {
    create?: XOR<UserCreateWithoutStockBatchesReceivedInput, UserUncheckedCreateWithoutStockBatchesReceivedInput>
    connectOrCreate?: UserCreateOrConnectWithoutStockBatchesReceivedInput
    connect?: UserWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutStockBatchesInput = {
    create?: XOR<CompanyCreateWithoutStockBatchesInput, CompanyUncheckedCreateWithoutStockBatchesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutStockBatchesInput
    connect?: CompanyWhereUniqueInput
  }

  export type RackStockLevelCreateNestedManyWithoutStockBatchInput = {
    create?: XOR<RackStockLevelCreateWithoutStockBatchInput, RackStockLevelUncheckedCreateWithoutStockBatchInput> | RackStockLevelCreateWithoutStockBatchInput[] | RackStockLevelUncheckedCreateWithoutStockBatchInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutStockBatchInput | RackStockLevelCreateOrConnectWithoutStockBatchInput[]
    createMany?: RackStockLevelCreateManyStockBatchInputEnvelope
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
  }

  export type MaterialIssueCreateNestedManyWithoutStockBatchInput = {
    create?: XOR<MaterialIssueCreateWithoutStockBatchInput, MaterialIssueUncheckedCreateWithoutStockBatchInput> | MaterialIssueCreateWithoutStockBatchInput[] | MaterialIssueUncheckedCreateWithoutStockBatchInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutStockBatchInput | MaterialIssueCreateOrConnectWithoutStockBatchInput[]
    createMany?: MaterialIssueCreateManyStockBatchInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type RackStockLevelUncheckedCreateNestedManyWithoutStockBatchInput = {
    create?: XOR<RackStockLevelCreateWithoutStockBatchInput, RackStockLevelUncheckedCreateWithoutStockBatchInput> | RackStockLevelCreateWithoutStockBatchInput[] | RackStockLevelUncheckedCreateWithoutStockBatchInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutStockBatchInput | RackStockLevelCreateOrConnectWithoutStockBatchInput[]
    createMany?: RackStockLevelCreateManyStockBatchInputEnvelope
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
  }

  export type MaterialIssueUncheckedCreateNestedManyWithoutStockBatchInput = {
    create?: XOR<MaterialIssueCreateWithoutStockBatchInput, MaterialIssueUncheckedCreateWithoutStockBatchInput> | MaterialIssueCreateWithoutStockBatchInput[] | MaterialIssueUncheckedCreateWithoutStockBatchInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutStockBatchInput | MaterialIssueCreateOrConnectWithoutStockBatchInput[]
    createMany?: MaterialIssueCreateManyStockBatchInputEnvelope
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
  }

  export type PackingMaterialUpdateOneRequiredWithoutStockBatchesNestedInput = {
    create?: XOR<PackingMaterialCreateWithoutStockBatchesInput, PackingMaterialUncheckedCreateWithoutStockBatchesInput>
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutStockBatchesInput
    upsert?: PackingMaterialUpsertWithoutStockBatchesInput
    connect?: PackingMaterialWhereUniqueInput
    update?: XOR<XOR<PackingMaterialUpdateToOneWithWhereWithoutStockBatchesInput, PackingMaterialUpdateWithoutStockBatchesInput>, PackingMaterialUncheckedUpdateWithoutStockBatchesInput>
  }

  export type VendorUpdateOneWithoutStockBatchesNestedInput = {
    create?: XOR<VendorCreateWithoutStockBatchesInput, VendorUncheckedCreateWithoutStockBatchesInput>
    connectOrCreate?: VendorCreateOrConnectWithoutStockBatchesInput
    upsert?: VendorUpsertWithoutStockBatchesInput
    disconnect?: VendorWhereInput | boolean
    delete?: VendorWhereInput | boolean
    connect?: VendorWhereUniqueInput
    update?: XOR<XOR<VendorUpdateToOneWithWhereWithoutStockBatchesInput, VendorUpdateWithoutStockBatchesInput>, VendorUncheckedUpdateWithoutStockBatchesInput>
  }

  export type UserUpdateOneWithoutStockBatchesReceivedNestedInput = {
    create?: XOR<UserCreateWithoutStockBatchesReceivedInput, UserUncheckedCreateWithoutStockBatchesReceivedInput>
    connectOrCreate?: UserCreateOrConnectWithoutStockBatchesReceivedInput
    upsert?: UserUpsertWithoutStockBatchesReceivedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStockBatchesReceivedInput, UserUpdateWithoutStockBatchesReceivedInput>, UserUncheckedUpdateWithoutStockBatchesReceivedInput>
  }

  export type CompanyUpdateOneRequiredWithoutStockBatchesNestedInput = {
    create?: XOR<CompanyCreateWithoutStockBatchesInput, CompanyUncheckedCreateWithoutStockBatchesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutStockBatchesInput
    upsert?: CompanyUpsertWithoutStockBatchesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutStockBatchesInput, CompanyUpdateWithoutStockBatchesInput>, CompanyUncheckedUpdateWithoutStockBatchesInput>
  }

  export type RackStockLevelUpdateManyWithoutStockBatchNestedInput = {
    create?: XOR<RackStockLevelCreateWithoutStockBatchInput, RackStockLevelUncheckedCreateWithoutStockBatchInput> | RackStockLevelCreateWithoutStockBatchInput[] | RackStockLevelUncheckedCreateWithoutStockBatchInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutStockBatchInput | RackStockLevelCreateOrConnectWithoutStockBatchInput[]
    upsert?: RackStockLevelUpsertWithWhereUniqueWithoutStockBatchInput | RackStockLevelUpsertWithWhereUniqueWithoutStockBatchInput[]
    createMany?: RackStockLevelCreateManyStockBatchInputEnvelope
    set?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    disconnect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    delete?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    update?: RackStockLevelUpdateWithWhereUniqueWithoutStockBatchInput | RackStockLevelUpdateWithWhereUniqueWithoutStockBatchInput[]
    updateMany?: RackStockLevelUpdateManyWithWhereWithoutStockBatchInput | RackStockLevelUpdateManyWithWhereWithoutStockBatchInput[]
    deleteMany?: RackStockLevelScalarWhereInput | RackStockLevelScalarWhereInput[]
  }

  export type MaterialIssueUpdateManyWithoutStockBatchNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutStockBatchInput, MaterialIssueUncheckedCreateWithoutStockBatchInput> | MaterialIssueCreateWithoutStockBatchInput[] | MaterialIssueUncheckedCreateWithoutStockBatchInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutStockBatchInput | MaterialIssueCreateOrConnectWithoutStockBatchInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutStockBatchInput | MaterialIssueUpsertWithWhereUniqueWithoutStockBatchInput[]
    createMany?: MaterialIssueCreateManyStockBatchInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutStockBatchInput | MaterialIssueUpdateWithWhereUniqueWithoutStockBatchInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutStockBatchInput | MaterialIssueUpdateManyWithWhereWithoutStockBatchInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type RackStockLevelUncheckedUpdateManyWithoutStockBatchNestedInput = {
    create?: XOR<RackStockLevelCreateWithoutStockBatchInput, RackStockLevelUncheckedCreateWithoutStockBatchInput> | RackStockLevelCreateWithoutStockBatchInput[] | RackStockLevelUncheckedCreateWithoutStockBatchInput[]
    connectOrCreate?: RackStockLevelCreateOrConnectWithoutStockBatchInput | RackStockLevelCreateOrConnectWithoutStockBatchInput[]
    upsert?: RackStockLevelUpsertWithWhereUniqueWithoutStockBatchInput | RackStockLevelUpsertWithWhereUniqueWithoutStockBatchInput[]
    createMany?: RackStockLevelCreateManyStockBatchInputEnvelope
    set?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    disconnect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    delete?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    connect?: RackStockLevelWhereUniqueInput | RackStockLevelWhereUniqueInput[]
    update?: RackStockLevelUpdateWithWhereUniqueWithoutStockBatchInput | RackStockLevelUpdateWithWhereUniqueWithoutStockBatchInput[]
    updateMany?: RackStockLevelUpdateManyWithWhereWithoutStockBatchInput | RackStockLevelUpdateManyWithWhereWithoutStockBatchInput[]
    deleteMany?: RackStockLevelScalarWhereInput | RackStockLevelScalarWhereInput[]
  }

  export type MaterialIssueUncheckedUpdateManyWithoutStockBatchNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutStockBatchInput, MaterialIssueUncheckedCreateWithoutStockBatchInput> | MaterialIssueCreateWithoutStockBatchInput[] | MaterialIssueUncheckedCreateWithoutStockBatchInput[]
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutStockBatchInput | MaterialIssueCreateOrConnectWithoutStockBatchInput[]
    upsert?: MaterialIssueUpsertWithWhereUniqueWithoutStockBatchInput | MaterialIssueUpsertWithWhereUniqueWithoutStockBatchInput[]
    createMany?: MaterialIssueCreateManyStockBatchInputEnvelope
    set?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    disconnect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    delete?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    connect?: MaterialIssueWhereUniqueInput | MaterialIssueWhereUniqueInput[]
    update?: MaterialIssueUpdateWithWhereUniqueWithoutStockBatchInput | MaterialIssueUpdateWithWhereUniqueWithoutStockBatchInput[]
    updateMany?: MaterialIssueUpdateManyWithWhereWithoutStockBatchInput | MaterialIssueUpdateManyWithWhereWithoutStockBatchInput[]
    deleteMany?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
  }

  export type PackingMaterialCreateNestedOneWithoutRackLevelsInput = {
    create?: XOR<PackingMaterialCreateWithoutRackLevelsInput, PackingMaterialUncheckedCreateWithoutRackLevelsInput>
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutRackLevelsInput
    connect?: PackingMaterialWhereUniqueInput
  }

  export type RackCreateNestedOneWithoutMaterialLevelsInput = {
    create?: XOR<RackCreateWithoutMaterialLevelsInput, RackUncheckedCreateWithoutMaterialLevelsInput>
    connectOrCreate?: RackCreateOrConnectWithoutMaterialLevelsInput
    connect?: RackWhereUniqueInput
  }

  export type StockBatchCreateNestedOneWithoutRackAllocationsInput = {
    create?: XOR<StockBatchCreateWithoutRackAllocationsInput, StockBatchUncheckedCreateWithoutRackAllocationsInput>
    connectOrCreate?: StockBatchCreateOrConnectWithoutRackAllocationsInput
    connect?: StockBatchWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutRackLevelsInput = {
    create?: XOR<CompanyCreateWithoutRackLevelsInput, CompanyUncheckedCreateWithoutRackLevelsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutRackLevelsInput
    connect?: CompanyWhereUniqueInput
  }

  export type PackingMaterialUpdateOneRequiredWithoutRackLevelsNestedInput = {
    create?: XOR<PackingMaterialCreateWithoutRackLevelsInput, PackingMaterialUncheckedCreateWithoutRackLevelsInput>
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutRackLevelsInput
    upsert?: PackingMaterialUpsertWithoutRackLevelsInput
    connect?: PackingMaterialWhereUniqueInput
    update?: XOR<XOR<PackingMaterialUpdateToOneWithWhereWithoutRackLevelsInput, PackingMaterialUpdateWithoutRackLevelsInput>, PackingMaterialUncheckedUpdateWithoutRackLevelsInput>
  }

  export type RackUpdateOneRequiredWithoutMaterialLevelsNestedInput = {
    create?: XOR<RackCreateWithoutMaterialLevelsInput, RackUncheckedCreateWithoutMaterialLevelsInput>
    connectOrCreate?: RackCreateOrConnectWithoutMaterialLevelsInput
    upsert?: RackUpsertWithoutMaterialLevelsInput
    connect?: RackWhereUniqueInput
    update?: XOR<XOR<RackUpdateToOneWithWhereWithoutMaterialLevelsInput, RackUpdateWithoutMaterialLevelsInput>, RackUncheckedUpdateWithoutMaterialLevelsInput>
  }

  export type StockBatchUpdateOneWithoutRackAllocationsNestedInput = {
    create?: XOR<StockBatchCreateWithoutRackAllocationsInput, StockBatchUncheckedCreateWithoutRackAllocationsInput>
    connectOrCreate?: StockBatchCreateOrConnectWithoutRackAllocationsInput
    upsert?: StockBatchUpsertWithoutRackAllocationsInput
    disconnect?: StockBatchWhereInput | boolean
    delete?: StockBatchWhereInput | boolean
    connect?: StockBatchWhereUniqueInput
    update?: XOR<XOR<StockBatchUpdateToOneWithWhereWithoutRackAllocationsInput, StockBatchUpdateWithoutRackAllocationsInput>, StockBatchUncheckedUpdateWithoutRackAllocationsInput>
  }

  export type CompanyUpdateOneRequiredWithoutRackLevelsNestedInput = {
    create?: XOR<CompanyCreateWithoutRackLevelsInput, CompanyUncheckedCreateWithoutRackLevelsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutRackLevelsInput
    upsert?: CompanyUpsertWithoutRackLevelsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutRackLevelsInput, CompanyUpdateWithoutRackLevelsInput>, CompanyUncheckedUpdateWithoutRackLevelsInput>
  }

  export type MovingJobCreateNestedOneWithoutMaterialIssuesInput = {
    create?: XOR<MovingJobCreateWithoutMaterialIssuesInput, MovingJobUncheckedCreateWithoutMaterialIssuesInput>
    connectOrCreate?: MovingJobCreateOrConnectWithoutMaterialIssuesInput
    connect?: MovingJobWhereUniqueInput
  }

  export type PackingMaterialCreateNestedOneWithoutMaterialIssuesInput = {
    create?: XOR<PackingMaterialCreateWithoutMaterialIssuesInput, PackingMaterialUncheckedCreateWithoutMaterialIssuesInput>
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutMaterialIssuesInput
    connect?: PackingMaterialWhereUniqueInput
  }

  export type StockBatchCreateNestedOneWithoutIssuesInput = {
    create?: XOR<StockBatchCreateWithoutIssuesInput, StockBatchUncheckedCreateWithoutIssuesInput>
    connectOrCreate?: StockBatchCreateOrConnectWithoutIssuesInput
    connect?: StockBatchWhereUniqueInput
  }

  export type RackCreateNestedOneWithoutJobMaterialsInput = {
    create?: XOR<RackCreateWithoutJobMaterialsInput, RackUncheckedCreateWithoutJobMaterialsInput>
    connectOrCreate?: RackCreateOrConnectWithoutJobMaterialsInput
    connect?: RackWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMaterialIssuesCreatedInput = {
    create?: XOR<UserCreateWithoutMaterialIssuesCreatedInput, UserUncheckedCreateWithoutMaterialIssuesCreatedInput>
    connectOrCreate?: UserCreateOrConnectWithoutMaterialIssuesCreatedInput
    connect?: UserWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutMaterialIssuesInput = {
    create?: XOR<CompanyCreateWithoutMaterialIssuesInput, CompanyUncheckedCreateWithoutMaterialIssuesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMaterialIssuesInput
    connect?: CompanyWhereUniqueInput
  }

  export type MaterialReturnCreateNestedManyWithoutIssueInput = {
    create?: XOR<MaterialReturnCreateWithoutIssueInput, MaterialReturnUncheckedCreateWithoutIssueInput> | MaterialReturnCreateWithoutIssueInput[] | MaterialReturnUncheckedCreateWithoutIssueInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutIssueInput | MaterialReturnCreateOrConnectWithoutIssueInput[]
    createMany?: MaterialReturnCreateManyIssueInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type MaterialReturnUncheckedCreateNestedManyWithoutIssueInput = {
    create?: XOR<MaterialReturnCreateWithoutIssueInput, MaterialReturnUncheckedCreateWithoutIssueInput> | MaterialReturnCreateWithoutIssueInput[] | MaterialReturnUncheckedCreateWithoutIssueInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutIssueInput | MaterialReturnCreateOrConnectWithoutIssueInput[]
    createMany?: MaterialReturnCreateManyIssueInputEnvelope
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
  }

  export type MovingJobUpdateOneRequiredWithoutMaterialIssuesNestedInput = {
    create?: XOR<MovingJobCreateWithoutMaterialIssuesInput, MovingJobUncheckedCreateWithoutMaterialIssuesInput>
    connectOrCreate?: MovingJobCreateOrConnectWithoutMaterialIssuesInput
    upsert?: MovingJobUpsertWithoutMaterialIssuesInput
    connect?: MovingJobWhereUniqueInput
    update?: XOR<XOR<MovingJobUpdateToOneWithWhereWithoutMaterialIssuesInput, MovingJobUpdateWithoutMaterialIssuesInput>, MovingJobUncheckedUpdateWithoutMaterialIssuesInput>
  }

  export type PackingMaterialUpdateOneRequiredWithoutMaterialIssuesNestedInput = {
    create?: XOR<PackingMaterialCreateWithoutMaterialIssuesInput, PackingMaterialUncheckedCreateWithoutMaterialIssuesInput>
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutMaterialIssuesInput
    upsert?: PackingMaterialUpsertWithoutMaterialIssuesInput
    connect?: PackingMaterialWhereUniqueInput
    update?: XOR<XOR<PackingMaterialUpdateToOneWithWhereWithoutMaterialIssuesInput, PackingMaterialUpdateWithoutMaterialIssuesInput>, PackingMaterialUncheckedUpdateWithoutMaterialIssuesInput>
  }

  export type StockBatchUpdateOneWithoutIssuesNestedInput = {
    create?: XOR<StockBatchCreateWithoutIssuesInput, StockBatchUncheckedCreateWithoutIssuesInput>
    connectOrCreate?: StockBatchCreateOrConnectWithoutIssuesInput
    upsert?: StockBatchUpsertWithoutIssuesInput
    disconnect?: StockBatchWhereInput | boolean
    delete?: StockBatchWhereInput | boolean
    connect?: StockBatchWhereUniqueInput
    update?: XOR<XOR<StockBatchUpdateToOneWithWhereWithoutIssuesInput, StockBatchUpdateWithoutIssuesInput>, StockBatchUncheckedUpdateWithoutIssuesInput>
  }

  export type RackUpdateOneWithoutJobMaterialsNestedInput = {
    create?: XOR<RackCreateWithoutJobMaterialsInput, RackUncheckedCreateWithoutJobMaterialsInput>
    connectOrCreate?: RackCreateOrConnectWithoutJobMaterialsInput
    upsert?: RackUpsertWithoutJobMaterialsInput
    disconnect?: RackWhereInput | boolean
    delete?: RackWhereInput | boolean
    connect?: RackWhereUniqueInput
    update?: XOR<XOR<RackUpdateToOneWithWhereWithoutJobMaterialsInput, RackUpdateWithoutJobMaterialsInput>, RackUncheckedUpdateWithoutJobMaterialsInput>
  }

  export type UserUpdateOneWithoutMaterialIssuesCreatedNestedInput = {
    create?: XOR<UserCreateWithoutMaterialIssuesCreatedInput, UserUncheckedCreateWithoutMaterialIssuesCreatedInput>
    connectOrCreate?: UserCreateOrConnectWithoutMaterialIssuesCreatedInput
    upsert?: UserUpsertWithoutMaterialIssuesCreatedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMaterialIssuesCreatedInput, UserUpdateWithoutMaterialIssuesCreatedInput>, UserUncheckedUpdateWithoutMaterialIssuesCreatedInput>
  }

  export type CompanyUpdateOneRequiredWithoutMaterialIssuesNestedInput = {
    create?: XOR<CompanyCreateWithoutMaterialIssuesInput, CompanyUncheckedCreateWithoutMaterialIssuesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMaterialIssuesInput
    upsert?: CompanyUpsertWithoutMaterialIssuesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutMaterialIssuesInput, CompanyUpdateWithoutMaterialIssuesInput>, CompanyUncheckedUpdateWithoutMaterialIssuesInput>
  }

  export type MaterialReturnUpdateManyWithoutIssueNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutIssueInput, MaterialReturnUncheckedCreateWithoutIssueInput> | MaterialReturnCreateWithoutIssueInput[] | MaterialReturnUncheckedCreateWithoutIssueInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutIssueInput | MaterialReturnCreateOrConnectWithoutIssueInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutIssueInput | MaterialReturnUpsertWithWhereUniqueWithoutIssueInput[]
    createMany?: MaterialReturnCreateManyIssueInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutIssueInput | MaterialReturnUpdateWithWhereUniqueWithoutIssueInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutIssueInput | MaterialReturnUpdateManyWithWhereWithoutIssueInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type MaterialReturnUncheckedUpdateManyWithoutIssueNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutIssueInput, MaterialReturnUncheckedCreateWithoutIssueInput> | MaterialReturnCreateWithoutIssueInput[] | MaterialReturnUncheckedCreateWithoutIssueInput[]
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutIssueInput | MaterialReturnCreateOrConnectWithoutIssueInput[]
    upsert?: MaterialReturnUpsertWithWhereUniqueWithoutIssueInput | MaterialReturnUpsertWithWhereUniqueWithoutIssueInput[]
    createMany?: MaterialReturnCreateManyIssueInputEnvelope
    set?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    disconnect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    delete?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    connect?: MaterialReturnWhereUniqueInput | MaterialReturnWhereUniqueInput[]
    update?: MaterialReturnUpdateWithWhereUniqueWithoutIssueInput | MaterialReturnUpdateWithWhereUniqueWithoutIssueInput[]
    updateMany?: MaterialReturnUpdateManyWithWhereWithoutIssueInput | MaterialReturnUpdateManyWithWhereWithoutIssueInput[]
    deleteMany?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
  }

  export type MovingJobCreateNestedOneWithoutMaterialReturnsInput = {
    create?: XOR<MovingJobCreateWithoutMaterialReturnsInput, MovingJobUncheckedCreateWithoutMaterialReturnsInput>
    connectOrCreate?: MovingJobCreateOrConnectWithoutMaterialReturnsInput
    connect?: MovingJobWhereUniqueInput
  }

  export type PackingMaterialCreateNestedOneWithoutMaterialReturnsInput = {
    create?: XOR<PackingMaterialCreateWithoutMaterialReturnsInput, PackingMaterialUncheckedCreateWithoutMaterialReturnsInput>
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutMaterialReturnsInput
    connect?: PackingMaterialWhereUniqueInput
  }

  export type MaterialIssueCreateNestedOneWithoutReturnsInput = {
    create?: XOR<MaterialIssueCreateWithoutReturnsInput, MaterialIssueUncheckedCreateWithoutReturnsInput>
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutReturnsInput
    connect?: MaterialIssueWhereUniqueInput
  }

  export type RackCreateNestedOneWithoutMaterialReturnInput = {
    create?: XOR<RackCreateWithoutMaterialReturnInput, RackUncheckedCreateWithoutMaterialReturnInput>
    connectOrCreate?: RackCreateOrConnectWithoutMaterialReturnInput
    connect?: RackWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMaterialReturnsRecordedInput = {
    create?: XOR<UserCreateWithoutMaterialReturnsRecordedInput, UserUncheckedCreateWithoutMaterialReturnsRecordedInput>
    connectOrCreate?: UserCreateOrConnectWithoutMaterialReturnsRecordedInput
    connect?: UserWhereUniqueInput
  }

  export type MaterialDamageCreateNestedManyWithoutReturnInput = {
    create?: XOR<MaterialDamageCreateWithoutReturnInput, MaterialDamageUncheckedCreateWithoutReturnInput> | MaterialDamageCreateWithoutReturnInput[] | MaterialDamageUncheckedCreateWithoutReturnInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutReturnInput | MaterialDamageCreateOrConnectWithoutReturnInput[]
    createMany?: MaterialDamageCreateManyReturnInputEnvelope
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
  }

  export type MaterialApprovalCreateNestedOneWithoutSubjectReturnInput = {
    create?: XOR<MaterialApprovalCreateWithoutSubjectReturnInput, MaterialApprovalUncheckedCreateWithoutSubjectReturnInput>
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutSubjectReturnInput
    connect?: MaterialApprovalWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutMaterialReturnsInput = {
    create?: XOR<CompanyCreateWithoutMaterialReturnsInput, CompanyUncheckedCreateWithoutMaterialReturnsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMaterialReturnsInput
    connect?: CompanyWhereUniqueInput
  }

  export type MaterialDamageUncheckedCreateNestedManyWithoutReturnInput = {
    create?: XOR<MaterialDamageCreateWithoutReturnInput, MaterialDamageUncheckedCreateWithoutReturnInput> | MaterialDamageCreateWithoutReturnInput[] | MaterialDamageUncheckedCreateWithoutReturnInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutReturnInput | MaterialDamageCreateOrConnectWithoutReturnInput[]
    createMany?: MaterialDamageCreateManyReturnInputEnvelope
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
  }

  export type MaterialApprovalUncheckedCreateNestedOneWithoutSubjectReturnInput = {
    create?: XOR<MaterialApprovalCreateWithoutSubjectReturnInput, MaterialApprovalUncheckedCreateWithoutSubjectReturnInput>
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutSubjectReturnInput
    connect?: MaterialApprovalWhereUniqueInput
  }

  export type MovingJobUpdateOneRequiredWithoutMaterialReturnsNestedInput = {
    create?: XOR<MovingJobCreateWithoutMaterialReturnsInput, MovingJobUncheckedCreateWithoutMaterialReturnsInput>
    connectOrCreate?: MovingJobCreateOrConnectWithoutMaterialReturnsInput
    upsert?: MovingJobUpsertWithoutMaterialReturnsInput
    connect?: MovingJobWhereUniqueInput
    update?: XOR<XOR<MovingJobUpdateToOneWithWhereWithoutMaterialReturnsInput, MovingJobUpdateWithoutMaterialReturnsInput>, MovingJobUncheckedUpdateWithoutMaterialReturnsInput>
  }

  export type PackingMaterialUpdateOneRequiredWithoutMaterialReturnsNestedInput = {
    create?: XOR<PackingMaterialCreateWithoutMaterialReturnsInput, PackingMaterialUncheckedCreateWithoutMaterialReturnsInput>
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutMaterialReturnsInput
    upsert?: PackingMaterialUpsertWithoutMaterialReturnsInput
    connect?: PackingMaterialWhereUniqueInput
    update?: XOR<XOR<PackingMaterialUpdateToOneWithWhereWithoutMaterialReturnsInput, PackingMaterialUpdateWithoutMaterialReturnsInput>, PackingMaterialUncheckedUpdateWithoutMaterialReturnsInput>
  }

  export type MaterialIssueUpdateOneWithoutReturnsNestedInput = {
    create?: XOR<MaterialIssueCreateWithoutReturnsInput, MaterialIssueUncheckedCreateWithoutReturnsInput>
    connectOrCreate?: MaterialIssueCreateOrConnectWithoutReturnsInput
    upsert?: MaterialIssueUpsertWithoutReturnsInput
    disconnect?: MaterialIssueWhereInput | boolean
    delete?: MaterialIssueWhereInput | boolean
    connect?: MaterialIssueWhereUniqueInput
    update?: XOR<XOR<MaterialIssueUpdateToOneWithWhereWithoutReturnsInput, MaterialIssueUpdateWithoutReturnsInput>, MaterialIssueUncheckedUpdateWithoutReturnsInput>
  }

  export type RackUpdateOneWithoutMaterialReturnNestedInput = {
    create?: XOR<RackCreateWithoutMaterialReturnInput, RackUncheckedCreateWithoutMaterialReturnInput>
    connectOrCreate?: RackCreateOrConnectWithoutMaterialReturnInput
    upsert?: RackUpsertWithoutMaterialReturnInput
    disconnect?: RackWhereInput | boolean
    delete?: RackWhereInput | boolean
    connect?: RackWhereUniqueInput
    update?: XOR<XOR<RackUpdateToOneWithWhereWithoutMaterialReturnInput, RackUpdateWithoutMaterialReturnInput>, RackUncheckedUpdateWithoutMaterialReturnInput>
  }

  export type UserUpdateOneWithoutMaterialReturnsRecordedNestedInput = {
    create?: XOR<UserCreateWithoutMaterialReturnsRecordedInput, UserUncheckedCreateWithoutMaterialReturnsRecordedInput>
    connectOrCreate?: UserCreateOrConnectWithoutMaterialReturnsRecordedInput
    upsert?: UserUpsertWithoutMaterialReturnsRecordedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMaterialReturnsRecordedInput, UserUpdateWithoutMaterialReturnsRecordedInput>, UserUncheckedUpdateWithoutMaterialReturnsRecordedInput>
  }

  export type MaterialDamageUpdateManyWithoutReturnNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutReturnInput, MaterialDamageUncheckedCreateWithoutReturnInput> | MaterialDamageCreateWithoutReturnInput[] | MaterialDamageUncheckedCreateWithoutReturnInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutReturnInput | MaterialDamageCreateOrConnectWithoutReturnInput[]
    upsert?: MaterialDamageUpsertWithWhereUniqueWithoutReturnInput | MaterialDamageUpsertWithWhereUniqueWithoutReturnInput[]
    createMany?: MaterialDamageCreateManyReturnInputEnvelope
    set?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    disconnect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    delete?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    update?: MaterialDamageUpdateWithWhereUniqueWithoutReturnInput | MaterialDamageUpdateWithWhereUniqueWithoutReturnInput[]
    updateMany?: MaterialDamageUpdateManyWithWhereWithoutReturnInput | MaterialDamageUpdateManyWithWhereWithoutReturnInput[]
    deleteMany?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
  }

  export type MaterialApprovalUpdateOneWithoutSubjectReturnNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutSubjectReturnInput, MaterialApprovalUncheckedCreateWithoutSubjectReturnInput>
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutSubjectReturnInput
    upsert?: MaterialApprovalUpsertWithoutSubjectReturnInput
    disconnect?: MaterialApprovalWhereInput | boolean
    delete?: MaterialApprovalWhereInput | boolean
    connect?: MaterialApprovalWhereUniqueInput
    update?: XOR<XOR<MaterialApprovalUpdateToOneWithWhereWithoutSubjectReturnInput, MaterialApprovalUpdateWithoutSubjectReturnInput>, MaterialApprovalUncheckedUpdateWithoutSubjectReturnInput>
  }

  export type CompanyUpdateOneRequiredWithoutMaterialReturnsNestedInput = {
    create?: XOR<CompanyCreateWithoutMaterialReturnsInput, CompanyUncheckedCreateWithoutMaterialReturnsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMaterialReturnsInput
    upsert?: CompanyUpsertWithoutMaterialReturnsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutMaterialReturnsInput, CompanyUpdateWithoutMaterialReturnsInput>, CompanyUncheckedUpdateWithoutMaterialReturnsInput>
  }

  export type MaterialDamageUncheckedUpdateManyWithoutReturnNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutReturnInput, MaterialDamageUncheckedCreateWithoutReturnInput> | MaterialDamageCreateWithoutReturnInput[] | MaterialDamageUncheckedCreateWithoutReturnInput[]
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutReturnInput | MaterialDamageCreateOrConnectWithoutReturnInput[]
    upsert?: MaterialDamageUpsertWithWhereUniqueWithoutReturnInput | MaterialDamageUpsertWithWhereUniqueWithoutReturnInput[]
    createMany?: MaterialDamageCreateManyReturnInputEnvelope
    set?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    disconnect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    delete?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    connect?: MaterialDamageWhereUniqueInput | MaterialDamageWhereUniqueInput[]
    update?: MaterialDamageUpdateWithWhereUniqueWithoutReturnInput | MaterialDamageUpdateWithWhereUniqueWithoutReturnInput[]
    updateMany?: MaterialDamageUpdateManyWithWhereWithoutReturnInput | MaterialDamageUpdateManyWithWhereWithoutReturnInput[]
    deleteMany?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
  }

  export type MaterialApprovalUncheckedUpdateOneWithoutSubjectReturnNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutSubjectReturnInput, MaterialApprovalUncheckedCreateWithoutSubjectReturnInput>
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutSubjectReturnInput
    upsert?: MaterialApprovalUpsertWithoutSubjectReturnInput
    disconnect?: MaterialApprovalWhereInput | boolean
    delete?: MaterialApprovalWhereInput | boolean
    connect?: MaterialApprovalWhereUniqueInput
    update?: XOR<XOR<MaterialApprovalUpdateToOneWithWhereWithoutSubjectReturnInput, MaterialApprovalUpdateWithoutSubjectReturnInput>, MaterialApprovalUncheckedUpdateWithoutSubjectReturnInput>
  }

  export type PackingMaterialCreateNestedOneWithoutMaterialDamagesInput = {
    create?: XOR<PackingMaterialCreateWithoutMaterialDamagesInput, PackingMaterialUncheckedCreateWithoutMaterialDamagesInput>
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutMaterialDamagesInput
    connect?: PackingMaterialWhereUniqueInput
  }

  export type MaterialReturnCreateNestedOneWithoutDamagesInput = {
    create?: XOR<MaterialReturnCreateWithoutDamagesInput, MaterialReturnUncheckedCreateWithoutDamagesInput>
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutDamagesInput
    connect?: MaterialReturnWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDamagesRecordedInput = {
    create?: XOR<UserCreateWithoutDamagesRecordedInput, UserUncheckedCreateWithoutDamagesRecordedInput>
    connectOrCreate?: UserCreateOrConnectWithoutDamagesRecordedInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDamagesApprovedInput = {
    create?: XOR<UserCreateWithoutDamagesApprovedInput, UserUncheckedCreateWithoutDamagesApprovedInput>
    connectOrCreate?: UserCreateOrConnectWithoutDamagesApprovedInput
    connect?: UserWhereUniqueInput
  }

  export type MaterialApprovalCreateNestedOneWithoutSubjectDamageInput = {
    create?: XOR<MaterialApprovalCreateWithoutSubjectDamageInput, MaterialApprovalUncheckedCreateWithoutSubjectDamageInput>
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutSubjectDamageInput
    connect?: MaterialApprovalWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutMaterialDamagesInput = {
    create?: XOR<CompanyCreateWithoutMaterialDamagesInput, CompanyUncheckedCreateWithoutMaterialDamagesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMaterialDamagesInput
    connect?: CompanyWhereUniqueInput
  }

  export type MaterialApprovalUncheckedCreateNestedOneWithoutSubjectDamageInput = {
    create?: XOR<MaterialApprovalCreateWithoutSubjectDamageInput, MaterialApprovalUncheckedCreateWithoutSubjectDamageInput>
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutSubjectDamageInput
    connect?: MaterialApprovalWhereUniqueInput
  }

  export type PackingMaterialUpdateOneRequiredWithoutMaterialDamagesNestedInput = {
    create?: XOR<PackingMaterialCreateWithoutMaterialDamagesInput, PackingMaterialUncheckedCreateWithoutMaterialDamagesInput>
    connectOrCreate?: PackingMaterialCreateOrConnectWithoutMaterialDamagesInput
    upsert?: PackingMaterialUpsertWithoutMaterialDamagesInput
    connect?: PackingMaterialWhereUniqueInput
    update?: XOR<XOR<PackingMaterialUpdateToOneWithWhereWithoutMaterialDamagesInput, PackingMaterialUpdateWithoutMaterialDamagesInput>, PackingMaterialUncheckedUpdateWithoutMaterialDamagesInput>
  }

  export type MaterialReturnUpdateOneRequiredWithoutDamagesNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutDamagesInput, MaterialReturnUncheckedCreateWithoutDamagesInput>
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutDamagesInput
    upsert?: MaterialReturnUpsertWithoutDamagesInput
    connect?: MaterialReturnWhereUniqueInput
    update?: XOR<XOR<MaterialReturnUpdateToOneWithWhereWithoutDamagesInput, MaterialReturnUpdateWithoutDamagesInput>, MaterialReturnUncheckedUpdateWithoutDamagesInput>
  }

  export type UserUpdateOneWithoutDamagesRecordedNestedInput = {
    create?: XOR<UserCreateWithoutDamagesRecordedInput, UserUncheckedCreateWithoutDamagesRecordedInput>
    connectOrCreate?: UserCreateOrConnectWithoutDamagesRecordedInput
    upsert?: UserUpsertWithoutDamagesRecordedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDamagesRecordedInput, UserUpdateWithoutDamagesRecordedInput>, UserUncheckedUpdateWithoutDamagesRecordedInput>
  }

  export type UserUpdateOneWithoutDamagesApprovedNestedInput = {
    create?: XOR<UserCreateWithoutDamagesApprovedInput, UserUncheckedCreateWithoutDamagesApprovedInput>
    connectOrCreate?: UserCreateOrConnectWithoutDamagesApprovedInput
    upsert?: UserUpsertWithoutDamagesApprovedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDamagesApprovedInput, UserUpdateWithoutDamagesApprovedInput>, UserUncheckedUpdateWithoutDamagesApprovedInput>
  }

  export type MaterialApprovalUpdateOneWithoutSubjectDamageNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutSubjectDamageInput, MaterialApprovalUncheckedCreateWithoutSubjectDamageInput>
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutSubjectDamageInput
    upsert?: MaterialApprovalUpsertWithoutSubjectDamageInput
    disconnect?: MaterialApprovalWhereInput | boolean
    delete?: MaterialApprovalWhereInput | boolean
    connect?: MaterialApprovalWhereUniqueInput
    update?: XOR<XOR<MaterialApprovalUpdateToOneWithWhereWithoutSubjectDamageInput, MaterialApprovalUpdateWithoutSubjectDamageInput>, MaterialApprovalUncheckedUpdateWithoutSubjectDamageInput>
  }

  export type CompanyUpdateOneRequiredWithoutMaterialDamagesNestedInput = {
    create?: XOR<CompanyCreateWithoutMaterialDamagesInput, CompanyUncheckedCreateWithoutMaterialDamagesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMaterialDamagesInput
    upsert?: CompanyUpsertWithoutMaterialDamagesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutMaterialDamagesInput, CompanyUpdateWithoutMaterialDamagesInput>, CompanyUncheckedUpdateWithoutMaterialDamagesInput>
  }

  export type MaterialApprovalUncheckedUpdateOneWithoutSubjectDamageNestedInput = {
    create?: XOR<MaterialApprovalCreateWithoutSubjectDamageInput, MaterialApprovalUncheckedCreateWithoutSubjectDamageInput>
    connectOrCreate?: MaterialApprovalCreateOrConnectWithoutSubjectDamageInput
    upsert?: MaterialApprovalUpsertWithoutSubjectDamageInput
    disconnect?: MaterialApprovalWhereInput | boolean
    delete?: MaterialApprovalWhereInput | boolean
    connect?: MaterialApprovalWhereUniqueInput
    update?: XOR<XOR<MaterialApprovalUpdateToOneWithWhereWithoutSubjectDamageInput, MaterialApprovalUpdateWithoutSubjectDamageInput>, MaterialApprovalUncheckedUpdateWithoutSubjectDamageInput>
  }

  export type MovingJobCreateNestedOneWithoutApprovalsInput = {
    create?: XOR<MovingJobCreateWithoutApprovalsInput, MovingJobUncheckedCreateWithoutApprovalsInput>
    connectOrCreate?: MovingJobCreateOrConnectWithoutApprovalsInput
    connect?: MovingJobWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutApprovalsRequestedInput = {
    create?: XOR<UserCreateWithoutApprovalsRequestedInput, UserUncheckedCreateWithoutApprovalsRequestedInput>
    connectOrCreate?: UserCreateOrConnectWithoutApprovalsRequestedInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutApprovalsDecidedInput = {
    create?: XOR<UserCreateWithoutApprovalsDecidedInput, UserUncheckedCreateWithoutApprovalsDecidedInput>
    connectOrCreate?: UserCreateOrConnectWithoutApprovalsDecidedInput
    connect?: UserWhereUniqueInput
  }

  export type MaterialReturnCreateNestedOneWithoutApprovalInput = {
    create?: XOR<MaterialReturnCreateWithoutApprovalInput, MaterialReturnUncheckedCreateWithoutApprovalInput>
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutApprovalInput
    connect?: MaterialReturnWhereUniqueInput
  }

  export type MaterialDamageCreateNestedOneWithoutApprovalInput = {
    create?: XOR<MaterialDamageCreateWithoutApprovalInput, MaterialDamageUncheckedCreateWithoutApprovalInput>
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutApprovalInput
    connect?: MaterialDamageWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutMaterialApprovalsInput = {
    create?: XOR<CompanyCreateWithoutMaterialApprovalsInput, CompanyUncheckedCreateWithoutMaterialApprovalsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMaterialApprovalsInput
    connect?: CompanyWhereUniqueInput
  }

  export type MovingJobUpdateOneRequiredWithoutApprovalsNestedInput = {
    create?: XOR<MovingJobCreateWithoutApprovalsInput, MovingJobUncheckedCreateWithoutApprovalsInput>
    connectOrCreate?: MovingJobCreateOrConnectWithoutApprovalsInput
    upsert?: MovingJobUpsertWithoutApprovalsInput
    connect?: MovingJobWhereUniqueInput
    update?: XOR<XOR<MovingJobUpdateToOneWithWhereWithoutApprovalsInput, MovingJobUpdateWithoutApprovalsInput>, MovingJobUncheckedUpdateWithoutApprovalsInput>
  }

  export type UserUpdateOneWithoutApprovalsRequestedNestedInput = {
    create?: XOR<UserCreateWithoutApprovalsRequestedInput, UserUncheckedCreateWithoutApprovalsRequestedInput>
    connectOrCreate?: UserCreateOrConnectWithoutApprovalsRequestedInput
    upsert?: UserUpsertWithoutApprovalsRequestedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutApprovalsRequestedInput, UserUpdateWithoutApprovalsRequestedInput>, UserUncheckedUpdateWithoutApprovalsRequestedInput>
  }

  export type UserUpdateOneWithoutApprovalsDecidedNestedInput = {
    create?: XOR<UserCreateWithoutApprovalsDecidedInput, UserUncheckedCreateWithoutApprovalsDecidedInput>
    connectOrCreate?: UserCreateOrConnectWithoutApprovalsDecidedInput
    upsert?: UserUpsertWithoutApprovalsDecidedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutApprovalsDecidedInput, UserUpdateWithoutApprovalsDecidedInput>, UserUncheckedUpdateWithoutApprovalsDecidedInput>
  }

  export type MaterialReturnUpdateOneWithoutApprovalNestedInput = {
    create?: XOR<MaterialReturnCreateWithoutApprovalInput, MaterialReturnUncheckedCreateWithoutApprovalInput>
    connectOrCreate?: MaterialReturnCreateOrConnectWithoutApprovalInput
    upsert?: MaterialReturnUpsertWithoutApprovalInput
    disconnect?: MaterialReturnWhereInput | boolean
    delete?: MaterialReturnWhereInput | boolean
    connect?: MaterialReturnWhereUniqueInput
    update?: XOR<XOR<MaterialReturnUpdateToOneWithWhereWithoutApprovalInput, MaterialReturnUpdateWithoutApprovalInput>, MaterialReturnUncheckedUpdateWithoutApprovalInput>
  }

  export type MaterialDamageUpdateOneWithoutApprovalNestedInput = {
    create?: XOR<MaterialDamageCreateWithoutApprovalInput, MaterialDamageUncheckedCreateWithoutApprovalInput>
    connectOrCreate?: MaterialDamageCreateOrConnectWithoutApprovalInput
    upsert?: MaterialDamageUpsertWithoutApprovalInput
    disconnect?: MaterialDamageWhereInput | boolean
    delete?: MaterialDamageWhereInput | boolean
    connect?: MaterialDamageWhereUniqueInput
    update?: XOR<XOR<MaterialDamageUpdateToOneWithWhereWithoutApprovalInput, MaterialDamageUpdateWithoutApprovalInput>, MaterialDamageUncheckedUpdateWithoutApprovalInput>
  }

  export type CompanyUpdateOneRequiredWithoutMaterialApprovalsNestedInput = {
    create?: XOR<CompanyCreateWithoutMaterialApprovalsInput, CompanyUncheckedCreateWithoutMaterialApprovalsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMaterialApprovalsInput
    upsert?: CompanyUpsertWithoutMaterialApprovalsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutMaterialApprovalsInput, CompanyUpdateWithoutMaterialApprovalsInput>, CompanyUncheckedUpdateWithoutMaterialApprovalsInput>
  }

  export type MovingJobCreateNestedOneWithoutCostSnapshotsInput = {
    create?: XOR<MovingJobCreateWithoutCostSnapshotsInput, MovingJobUncheckedCreateWithoutCostSnapshotsInput>
    connectOrCreate?: MovingJobCreateOrConnectWithoutCostSnapshotsInput
    connect?: MovingJobWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutJobCostSnapshotsInput = {
    create?: XOR<CompanyCreateWithoutJobCostSnapshotsInput, CompanyUncheckedCreateWithoutJobCostSnapshotsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutJobCostSnapshotsInput
    connect?: CompanyWhereUniqueInput
  }

  export type MovingJobUpdateOneRequiredWithoutCostSnapshotsNestedInput = {
    create?: XOR<MovingJobCreateWithoutCostSnapshotsInput, MovingJobUncheckedCreateWithoutCostSnapshotsInput>
    connectOrCreate?: MovingJobCreateOrConnectWithoutCostSnapshotsInput
    upsert?: MovingJobUpsertWithoutCostSnapshotsInput
    connect?: MovingJobWhereUniqueInput
    update?: XOR<XOR<MovingJobUpdateToOneWithWhereWithoutCostSnapshotsInput, MovingJobUpdateWithoutCostSnapshotsInput>, MovingJobUncheckedUpdateWithoutCostSnapshotsInput>
  }

  export type CompanyUpdateOneRequiredWithoutJobCostSnapshotsNestedInput = {
    create?: XOR<CompanyCreateWithoutJobCostSnapshotsInput, CompanyUncheckedCreateWithoutJobCostSnapshotsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutJobCostSnapshotsInput
    upsert?: CompanyUpsertWithoutJobCostSnapshotsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutJobCostSnapshotsInput, CompanyUpdateWithoutJobCostSnapshotsInput>, CompanyUncheckedUpdateWithoutJobCostSnapshotsInput>
  }

  export type CompanyCreateNestedOneWithoutSystemPluginsInput = {
    create?: XOR<CompanyCreateWithoutSystemPluginsInput, CompanyUncheckedCreateWithoutSystemPluginsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSystemPluginsInput
    connect?: CompanyWhereUniqueInput
  }

  export type SystemPluginLogCreateNestedManyWithoutPluginInput = {
    create?: XOR<SystemPluginLogCreateWithoutPluginInput, SystemPluginLogUncheckedCreateWithoutPluginInput> | SystemPluginLogCreateWithoutPluginInput[] | SystemPluginLogUncheckedCreateWithoutPluginInput[]
    connectOrCreate?: SystemPluginLogCreateOrConnectWithoutPluginInput | SystemPluginLogCreateOrConnectWithoutPluginInput[]
    createMany?: SystemPluginLogCreateManyPluginInputEnvelope
    connect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
  }

  export type SystemPluginLogUncheckedCreateNestedManyWithoutPluginInput = {
    create?: XOR<SystemPluginLogCreateWithoutPluginInput, SystemPluginLogUncheckedCreateWithoutPluginInput> | SystemPluginLogCreateWithoutPluginInput[] | SystemPluginLogUncheckedCreateWithoutPluginInput[]
    connectOrCreate?: SystemPluginLogCreateOrConnectWithoutPluginInput | SystemPluginLogCreateOrConnectWithoutPluginInput[]
    createMany?: SystemPluginLogCreateManyPluginInputEnvelope
    connect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
  }

  export type CompanyUpdateOneRequiredWithoutSystemPluginsNestedInput = {
    create?: XOR<CompanyCreateWithoutSystemPluginsInput, CompanyUncheckedCreateWithoutSystemPluginsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSystemPluginsInput
    upsert?: CompanyUpsertWithoutSystemPluginsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutSystemPluginsInput, CompanyUpdateWithoutSystemPluginsInput>, CompanyUncheckedUpdateWithoutSystemPluginsInput>
  }

  export type SystemPluginLogUpdateManyWithoutPluginNestedInput = {
    create?: XOR<SystemPluginLogCreateWithoutPluginInput, SystemPluginLogUncheckedCreateWithoutPluginInput> | SystemPluginLogCreateWithoutPluginInput[] | SystemPluginLogUncheckedCreateWithoutPluginInput[]
    connectOrCreate?: SystemPluginLogCreateOrConnectWithoutPluginInput | SystemPluginLogCreateOrConnectWithoutPluginInput[]
    upsert?: SystemPluginLogUpsertWithWhereUniqueWithoutPluginInput | SystemPluginLogUpsertWithWhereUniqueWithoutPluginInput[]
    createMany?: SystemPluginLogCreateManyPluginInputEnvelope
    set?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    disconnect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    delete?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    connect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    update?: SystemPluginLogUpdateWithWhereUniqueWithoutPluginInput | SystemPluginLogUpdateWithWhereUniqueWithoutPluginInput[]
    updateMany?: SystemPluginLogUpdateManyWithWhereWithoutPluginInput | SystemPluginLogUpdateManyWithWhereWithoutPluginInput[]
    deleteMany?: SystemPluginLogScalarWhereInput | SystemPluginLogScalarWhereInput[]
  }

  export type SystemPluginLogUncheckedUpdateManyWithoutPluginNestedInput = {
    create?: XOR<SystemPluginLogCreateWithoutPluginInput, SystemPluginLogUncheckedCreateWithoutPluginInput> | SystemPluginLogCreateWithoutPluginInput[] | SystemPluginLogUncheckedCreateWithoutPluginInput[]
    connectOrCreate?: SystemPluginLogCreateOrConnectWithoutPluginInput | SystemPluginLogCreateOrConnectWithoutPluginInput[]
    upsert?: SystemPluginLogUpsertWithWhereUniqueWithoutPluginInput | SystemPluginLogUpsertWithWhereUniqueWithoutPluginInput[]
    createMany?: SystemPluginLogCreateManyPluginInputEnvelope
    set?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    disconnect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    delete?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    connect?: SystemPluginLogWhereUniqueInput | SystemPluginLogWhereUniqueInput[]
    update?: SystemPluginLogUpdateWithWhereUniqueWithoutPluginInput | SystemPluginLogUpdateWithWhereUniqueWithoutPluginInput[]
    updateMany?: SystemPluginLogUpdateManyWithWhereWithoutPluginInput | SystemPluginLogUpdateManyWithWhereWithoutPluginInput[]
    deleteMany?: SystemPluginLogScalarWhereInput | SystemPluginLogScalarWhereInput[]
  }

  export type SystemPluginCreateNestedOneWithoutAuditLogsInput = {
    create?: XOR<SystemPluginCreateWithoutAuditLogsInput, SystemPluginUncheckedCreateWithoutAuditLogsInput>
    connectOrCreate?: SystemPluginCreateOrConnectWithoutAuditLogsInput
    connect?: SystemPluginWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutSystemPluginLogInput = {
    create?: XOR<CompanyCreateWithoutSystemPluginLogInput, CompanyUncheckedCreateWithoutSystemPluginLogInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSystemPluginLogInput
    connect?: CompanyWhereUniqueInput
  }

  export type SystemPluginUpdateOneRequiredWithoutAuditLogsNestedInput = {
    create?: XOR<SystemPluginCreateWithoutAuditLogsInput, SystemPluginUncheckedCreateWithoutAuditLogsInput>
    connectOrCreate?: SystemPluginCreateOrConnectWithoutAuditLogsInput
    upsert?: SystemPluginUpsertWithoutAuditLogsInput
    connect?: SystemPluginWhereUniqueInput
    update?: XOR<XOR<SystemPluginUpdateToOneWithWhereWithoutAuditLogsInput, SystemPluginUpdateWithoutAuditLogsInput>, SystemPluginUncheckedUpdateWithoutAuditLogsInput>
  }

  export type CompanyUpdateOneRequiredWithoutSystemPluginLogNestedInput = {
    create?: XOR<CompanyCreateWithoutSystemPluginLogInput, CompanyUncheckedCreateWithoutSystemPluginLogInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSystemPluginLogInput
    upsert?: CompanyUpsertWithoutSystemPluginLogInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutSystemPluginLogInput, CompanyUpdateWithoutSystemPluginLogInput>, CompanyUncheckedUpdateWithoutSystemPluginLogInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type UserCreateWithoutCompanyInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutCompanyInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutCompanyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput>
  }

  export type UserCreateManyCompanyInputEnvelope = {
    data: UserCreateManyCompanyInput | UserCreateManyCompanyInput[]
  }

  export type RackCreateWithoutCompanyInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    shipments?: ShipmentCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxCreateNestedManyWithoutRackInput
    activities?: RackActivityCreateNestedManyWithoutRackInput
    inventory?: RackInventoryCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueCreateNestedManyWithoutRackInput
  }

  export type RackUncheckedCreateWithoutCompanyInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    shipments?: ShipmentUncheckedCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutRackInput
    activities?: RackActivityUncheckedCreateNestedManyWithoutRackInput
    inventory?: RackInventoryUncheckedCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelUncheckedCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnUncheckedCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueUncheckedCreateNestedManyWithoutRackInput
  }

  export type RackCreateOrConnectWithoutCompanyInput = {
    where: RackWhereUniqueInput
    create: XOR<RackCreateWithoutCompanyInput, RackUncheckedCreateWithoutCompanyInput>
  }

  export type RackCreateManyCompanyInputEnvelope = {
    data: RackCreateManyCompanyInput | RackCreateManyCompanyInput[]
  }

  export type ShipmentCreateWithoutCompanyInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    rack?: RackCreateNestedOneWithoutShipmentsInput
    boxes?: ShipmentBoxCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesCreateNestedOneWithoutShipmentInput
    createdBy?: UserCreateNestedOneWithoutShipmentsCreatedInput
    assignedBy?: UserCreateNestedOneWithoutShipmentsAssignedInput
    releasedBy?: UserCreateNestedOneWithoutShipmentsReleasedInput
  }

  export type ShipmentUncheckedCreateWithoutCompanyInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdById?: string | null
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalUncheckedCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesUncheckedCreateNestedOneWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutCompanyInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutCompanyInput, ShipmentUncheckedCreateWithoutCompanyInput>
  }

  export type ShipmentCreateManyCompanyInputEnvelope = {
    data: ShipmentCreateManyCompanyInput | ShipmentCreateManyCompanyInput[]
  }

  export type MovingJobCreateWithoutCompanyInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    teamLeader?: UserCreateNestedOneWithoutMovingJobsLeadInput
    assignments?: JobAssignmentCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalCreateNestedManyWithoutJobInput
  }

  export type MovingJobUncheckedCreateWithoutCompanyInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    teamLeaderId?: string | null
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assignments?: JobAssignmentUncheckedCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalUncheckedCreateNestedManyWithoutJobInput
  }

  export type MovingJobCreateOrConnectWithoutCompanyInput = {
    where: MovingJobWhereUniqueInput
    create: XOR<MovingJobCreateWithoutCompanyInput, MovingJobUncheckedCreateWithoutCompanyInput>
  }

  export type MovingJobCreateManyCompanyInputEnvelope = {
    data: MovingJobCreateManyCompanyInput | MovingJobCreateManyCompanyInput[]
  }

  export type ExpenseCreateWithoutCompanyInput = {
    id?: string
    title: string
    category: string
    amount: number
    currency?: string
    description?: string | null
    receipts?: string | null
    expenseDate: Date | string
    approvedBy?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ExpenseUncheckedCreateWithoutCompanyInput = {
    id?: string
    title: string
    category: string
    amount: number
    currency?: string
    description?: string | null
    receipts?: string | null
    expenseDate: Date | string
    approvedBy?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ExpenseCreateOrConnectWithoutCompanyInput = {
    where: ExpenseWhereUniqueInput
    create: XOR<ExpenseCreateWithoutCompanyInput, ExpenseUncheckedCreateWithoutCompanyInput>
  }

  export type ExpenseCreateManyCompanyInputEnvelope = {
    data: ExpenseCreateManyCompanyInput | ExpenseCreateManyCompanyInput[]
  }

  export type InvoiceSettingsCreateWithoutCompanyInput = {
    id?: string
    templateType?: string
    primaryColor?: string
    secondaryColor?: string
    showLogo?: boolean
    footerText?: string | null
    termsConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InvoiceSettingsUncheckedCreateWithoutCompanyInput = {
    id?: string
    templateType?: string
    primaryColor?: string
    secondaryColor?: string
    showLogo?: boolean
    footerText?: string | null
    termsConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InvoiceSettingsCreateOrConnectWithoutCompanyInput = {
    where: InvoiceSettingsWhereUniqueInput
    create: XOR<InvoiceSettingsCreateWithoutCompanyInput, InvoiceSettingsUncheckedCreateWithoutCompanyInput>
  }

  export type CustomFieldCreateWithoutCompanyInput = {
    id?: string
    fieldName: string
    fieldType: string
    fieldOptions?: string | null
    isRequired?: boolean
    isActive?: boolean
    section?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    values?: CustomFieldValueCreateNestedManyWithoutCustomFieldInput
  }

  export type CustomFieldUncheckedCreateWithoutCompanyInput = {
    id?: string
    fieldName: string
    fieldType: string
    fieldOptions?: string | null
    isRequired?: boolean
    isActive?: boolean
    section?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    values?: CustomFieldValueUncheckedCreateNestedManyWithoutCustomFieldInput
  }

  export type CustomFieldCreateOrConnectWithoutCompanyInput = {
    where: CustomFieldWhereUniqueInput
    create: XOR<CustomFieldCreateWithoutCompanyInput, CustomFieldUncheckedCreateWithoutCompanyInput>
  }

  export type CustomFieldCreateManyCompanyInputEnvelope = {
    data: CustomFieldCreateManyCompanyInput | CustomFieldCreateManyCompanyInput[]
  }

  export type BillingSettingsCreateWithoutCompanyInput = {
    id?: string
    storageRateType?: string
    storageRatePerBox?: number
    storageRatePerWeek?: number | null
    storageRatePerMonth?: number | null
    taxEnabled?: boolean
    taxRate?: number
    currency?: string
    invoicePrefix?: string
    invoiceDueDays?: number
    gracePeriodDays?: number
    minimumCharge?: number
    logoUrl?: string | null
    logoPosition?: string
    primaryColor?: string
    secondaryColor?: string
    showCompanyDetails?: boolean
    showBankDetails?: boolean
    showTermsConditions?: boolean
    bankName?: string | null
    accountNumber?: string | null
    accountName?: string | null
    iban?: string | null
    swiftCode?: string | null
    invoiceFooterText?: string | null
    termsAndConditions?: string | null
    paymentInstructions?: string | null
    taxRegistrationNo?: string | null
    companyRegistrationNo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    chargeTypes?: ChargeTypeCreateNestedManyWithoutBillingSettingsInput
  }

  export type BillingSettingsUncheckedCreateWithoutCompanyInput = {
    id?: string
    storageRateType?: string
    storageRatePerBox?: number
    storageRatePerWeek?: number | null
    storageRatePerMonth?: number | null
    taxEnabled?: boolean
    taxRate?: number
    currency?: string
    invoicePrefix?: string
    invoiceDueDays?: number
    gracePeriodDays?: number
    minimumCharge?: number
    logoUrl?: string | null
    logoPosition?: string
    primaryColor?: string
    secondaryColor?: string
    showCompanyDetails?: boolean
    showBankDetails?: boolean
    showTermsConditions?: boolean
    bankName?: string | null
    accountNumber?: string | null
    accountName?: string | null
    iban?: string | null
    swiftCode?: string | null
    invoiceFooterText?: string | null
    termsAndConditions?: string | null
    paymentInstructions?: string | null
    taxRegistrationNo?: string | null
    companyRegistrationNo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutBillingSettingsInput
  }

  export type BillingSettingsCreateOrConnectWithoutCompanyInput = {
    where: BillingSettingsWhereUniqueInput
    create: XOR<BillingSettingsCreateWithoutCompanyInput, BillingSettingsUncheckedCreateWithoutCompanyInput>
  }

  export type ChargeTypeCreateWithoutCompanyInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    category: string
    calculationType: string
    rate: number
    minCharge?: number | null
    maxCharge?: number | null
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    billingSettings: BillingSettingsCreateNestedOneWithoutChargeTypesInput
  }

  export type ChargeTypeUncheckedCreateWithoutCompanyInput = {
    id?: string
    billingSettingsId: string
    name: string
    code: string
    description?: string | null
    category: string
    calculationType: string
    rate: number
    minCharge?: number | null
    maxCharge?: number | null
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ChargeTypeCreateOrConnectWithoutCompanyInput = {
    where: ChargeTypeWhereUniqueInput
    create: XOR<ChargeTypeCreateWithoutCompanyInput, ChargeTypeUncheckedCreateWithoutCompanyInput>
  }

  export type ChargeTypeCreateManyCompanyInputEnvelope = {
    data: ChargeTypeCreateManyCompanyInput | ChargeTypeCreateManyCompanyInput[]
  }

  export type InvoiceCreateWithoutCompanyInput = {
    id?: string
    invoiceNumber: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    shipment: ShipmentCreateNestedOneWithoutInvoicesInput
    lineItems?: InvoiceLineItemCreateNestedManyWithoutInvoiceInput
    payments?: PaymentCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutCompanyInput = {
    id?: string
    invoiceNumber: string
    shipmentId: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutInvoiceInput
    payments?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutCompanyInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutCompanyInput, InvoiceUncheckedCreateWithoutCompanyInput>
  }

  export type InvoiceCreateManyCompanyInputEnvelope = {
    data: InvoiceCreateManyCompanyInput | InvoiceCreateManyCompanyInput[]
  }

  export type InvoiceLineItemCreateWithoutCompanyInput = {
    id?: string
    chargeTypeId?: string | null
    description: string
    category: string
    quantity?: number
    unitPrice: number
    amount: number
    isTaxable?: boolean
    taxRate?: number | null
    taxAmount?: number
    displayOrder?: number
    createdAt?: Date | string
    invoice: InvoiceCreateNestedOneWithoutLineItemsInput
  }

  export type InvoiceLineItemUncheckedCreateWithoutCompanyInput = {
    id?: string
    invoiceId: string
    chargeTypeId?: string | null
    description: string
    category: string
    quantity?: number
    unitPrice: number
    amount: number
    isTaxable?: boolean
    taxRate?: number | null
    taxAmount?: number
    displayOrder?: number
    createdAt?: Date | string
  }

  export type InvoiceLineItemCreateOrConnectWithoutCompanyInput = {
    where: InvoiceLineItemWhereUniqueInput
    create: XOR<InvoiceLineItemCreateWithoutCompanyInput, InvoiceLineItemUncheckedCreateWithoutCompanyInput>
  }

  export type InvoiceLineItemCreateManyCompanyInputEnvelope = {
    data: InvoiceLineItemCreateManyCompanyInput | InvoiceLineItemCreateManyCompanyInput[]
  }

  export type PaymentCreateWithoutCompanyInput = {
    id?: string
    amount: number
    paymentDate?: Date | string
    paymentMethod: string
    transactionRef?: string | null
    receiptNumber?: string | null
    notes?: string | null
    createdBy?: string | null
    createdAt?: Date | string
    invoice: InvoiceCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutCompanyInput = {
    id?: string
    invoiceId: string
    amount: number
    paymentDate?: Date | string
    paymentMethod: string
    transactionRef?: string | null
    receiptNumber?: string | null
    notes?: string | null
    createdBy?: string | null
    createdAt?: Date | string
  }

  export type PaymentCreateOrConnectWithoutCompanyInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutCompanyInput, PaymentUncheckedCreateWithoutCompanyInput>
  }

  export type PaymentCreateManyCompanyInputEnvelope = {
    data: PaymentCreateManyCompanyInput | PaymentCreateManyCompanyInput[]
  }

  export type ShipmentChargesCreateWithoutCompanyInput = {
    id?: string
    currentStorageCharge?: number
    daysStored?: number
    lastCalculatedDate?: Date | string
    totalBoxesReleased?: number
    totalInvoiced?: number
    totalPaid?: number
    outstandingBalance?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    shipment: ShipmentCreateNestedOneWithoutChargesInput
  }

  export type ShipmentChargesUncheckedCreateWithoutCompanyInput = {
    id?: string
    shipmentId: string
    currentStorageCharge?: number
    daysStored?: number
    lastCalculatedDate?: Date | string
    totalBoxesReleased?: number
    totalInvoiced?: number
    totalPaid?: number
    outstandingBalance?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentChargesCreateOrConnectWithoutCompanyInput = {
    where: ShipmentChargesWhereUniqueInput
    create: XOR<ShipmentChargesCreateWithoutCompanyInput, ShipmentChargesUncheckedCreateWithoutCompanyInput>
  }

  export type ShipmentChargesCreateManyCompanyInputEnvelope = {
    data: ShipmentChargesCreateManyCompanyInput | ShipmentChargesCreateManyCompanyInput[]
  }

  export type ShipmentSettingsCreateWithoutCompanyInput = {
    id?: string
    requireClientEmail?: boolean
    requireClientPhone?: boolean
    requireEstimatedValue?: boolean
    requirePhotos?: boolean
    autoGenerateQR?: boolean
    qrCodePrefix?: string
    showClientAddress?: boolean
    requireClientAddress?: boolean
    showDescription?: boolean
    requireDescription?: boolean
    showReferenceId?: boolean
    requireReferenceId?: boolean
    showNotes?: boolean
    requireNotes?: boolean
    showWarehouseMode?: boolean
    showShipperDetails?: boolean
    requireShipperDetails?: boolean
    showConsigneeDetails?: boolean
    requireConsigneeDetails?: boolean
    showWeight?: boolean
    requireWeight?: boolean
    showDimensions?: boolean
    requireDimensions?: boolean
    showStorageType?: boolean
    showSpecialInstructions?: boolean
    showEstimatedDays?: boolean
    requireEstimatedDays?: boolean
    defaultEstimatedDays?: number
    formSectionOrder?: string | null
    defaultStorageType?: string
    allowMultipleRacks?: boolean
    requireRackAssignment?: boolean
    autoAssignRack?: boolean
    notifyOnLowCapacity?: boolean
    lowCapacityThreshold?: number
    requireReleaseApproval?: boolean
    releaseApproverRole?: string
    requireReleasePhotos?: boolean
    requireIDVerification?: boolean
    generateReleaseInvoice?: boolean
    autoSendInvoiceEmail?: boolean
    storageRatePerDay?: number
    storageRatePerBox?: number
    chargePartialDay?: boolean
    minimumChargeDays?: number
    releaseHandlingFee?: number
    releasePerBoxFee?: number
    releaseTransportFee?: number
    notifyClientOnIntake?: boolean
    notifyClientOnRelease?: boolean
    notifyOnStorageAlert?: boolean
    storageAlertDays?: number
    enableCustomFields?: boolean
    requiredCustomFields?: string | null
    allowPartialRelease?: boolean
    partialReleaseMinBoxes?: number
    requirePartialApproval?: boolean
    requireReleaseSignature?: boolean
    requireCollectorID?: boolean
    allowProxyCollection?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentSettingsUncheckedCreateWithoutCompanyInput = {
    id?: string
    requireClientEmail?: boolean
    requireClientPhone?: boolean
    requireEstimatedValue?: boolean
    requirePhotos?: boolean
    autoGenerateQR?: boolean
    qrCodePrefix?: string
    showClientAddress?: boolean
    requireClientAddress?: boolean
    showDescription?: boolean
    requireDescription?: boolean
    showReferenceId?: boolean
    requireReferenceId?: boolean
    showNotes?: boolean
    requireNotes?: boolean
    showWarehouseMode?: boolean
    showShipperDetails?: boolean
    requireShipperDetails?: boolean
    showConsigneeDetails?: boolean
    requireConsigneeDetails?: boolean
    showWeight?: boolean
    requireWeight?: boolean
    showDimensions?: boolean
    requireDimensions?: boolean
    showStorageType?: boolean
    showSpecialInstructions?: boolean
    showEstimatedDays?: boolean
    requireEstimatedDays?: boolean
    defaultEstimatedDays?: number
    formSectionOrder?: string | null
    defaultStorageType?: string
    allowMultipleRacks?: boolean
    requireRackAssignment?: boolean
    autoAssignRack?: boolean
    notifyOnLowCapacity?: boolean
    lowCapacityThreshold?: number
    requireReleaseApproval?: boolean
    releaseApproverRole?: string
    requireReleasePhotos?: boolean
    requireIDVerification?: boolean
    generateReleaseInvoice?: boolean
    autoSendInvoiceEmail?: boolean
    storageRatePerDay?: number
    storageRatePerBox?: number
    chargePartialDay?: boolean
    minimumChargeDays?: number
    releaseHandlingFee?: number
    releasePerBoxFee?: number
    releaseTransportFee?: number
    notifyClientOnIntake?: boolean
    notifyClientOnRelease?: boolean
    notifyOnStorageAlert?: boolean
    storageAlertDays?: number
    enableCustomFields?: boolean
    requiredCustomFields?: string | null
    allowPartialRelease?: boolean
    partialReleaseMinBoxes?: number
    requirePartialApproval?: boolean
    requireReleaseSignature?: boolean
    requireCollectorID?: boolean
    allowProxyCollection?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentSettingsCreateOrConnectWithoutCompanyInput = {
    where: ShipmentSettingsWhereUniqueInput
    create: XOR<ShipmentSettingsCreateWithoutCompanyInput, ShipmentSettingsUncheckedCreateWithoutCompanyInput>
  }

  export type TemplateSettingsCreateWithoutCompanyInput = {
    id?: string
    companyName?: string | null
    companyLogo?: string | null
    companyAddress?: string | null
    companyPhone?: string | null
    companyEmail?: string | null
    companyWebsite?: string | null
    companyLicense?: string | null
    invoiceTemplateType?: string | null
    invoiceTitle?: string | null
    invoiceShowLogo?: boolean | null
    invoiceShowAddress?: boolean | null
    invoiceShowPhone?: boolean | null
    invoiceShowEmail?: boolean | null
    invoiceShowWebsite?: boolean | null
    invoiceShowLicense?: boolean | null
    invoiceShowFooter?: boolean | null
    invoiceHeaderBg?: string | null
    invoiceHeaderText?: string | null
    invoiceFooterText?: string | null
    invoiceTerms?: string | null
    invoiceShowBorders?: boolean | null
    invoiceShowGrid?: boolean | null
    invoiceTableStyle?: string | null
    invoiceFontSize?: string | null
    invoicePaperSize?: string | null
    invoicePrimaryColor?: string | null
    invoiceSecondaryColor?: string | null
    invoiceAccentColor?: string | null
    invoiceDangerColor?: string | null
    releaseNoteTemplate?: string | null
    releaseNoteTitle?: string | null
    releaseNoteHeaderBg?: string | null
    releaseNoteShowLogo?: boolean | null
    releaseShowShipment?: boolean | null
    releaseShowStorage?: boolean | null
    releaseShowItems?: boolean | null
    releaseShowCollector?: boolean | null
    releaseShowCharges?: boolean | null
    releaseShowPhotos?: boolean | null
    releaseShowTerms?: boolean | null
    releaseShowSignatures?: boolean | null
    releaseTerms?: string | null
    releaseFooterText?: string | null
    releasePrimaryColor?: string | null
    printMarginTop?: number | null
    printMarginBottom?: number | null
    printMarginLeft?: number | null
    printMarginRight?: number | null
    language?: string | null
    dateFormat?: string | null
    timeFormat?: string | null
    currencySymbol?: string | null
    currencyPosition?: string | null
    customField1Label?: string | null
    customField1Value?: string | null
    customField2Label?: string | null
    customField2Value?: string | null
    customField3Label?: string | null
    customField3Value?: string | null
    requireStaffSignature?: boolean | null
    requireClientSignature?: boolean | null
    signatureHeight?: number | null
    showQRCode?: boolean | null
    qrCodePosition?: string | null
    qrCodeSize?: number | null
    showWatermark?: boolean | null
    watermarkText?: string | null
    watermarkOpacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TemplateSettingsUncheckedCreateWithoutCompanyInput = {
    id?: string
    companyName?: string | null
    companyLogo?: string | null
    companyAddress?: string | null
    companyPhone?: string | null
    companyEmail?: string | null
    companyWebsite?: string | null
    companyLicense?: string | null
    invoiceTemplateType?: string | null
    invoiceTitle?: string | null
    invoiceShowLogo?: boolean | null
    invoiceShowAddress?: boolean | null
    invoiceShowPhone?: boolean | null
    invoiceShowEmail?: boolean | null
    invoiceShowWebsite?: boolean | null
    invoiceShowLicense?: boolean | null
    invoiceShowFooter?: boolean | null
    invoiceHeaderBg?: string | null
    invoiceHeaderText?: string | null
    invoiceFooterText?: string | null
    invoiceTerms?: string | null
    invoiceShowBorders?: boolean | null
    invoiceShowGrid?: boolean | null
    invoiceTableStyle?: string | null
    invoiceFontSize?: string | null
    invoicePaperSize?: string | null
    invoicePrimaryColor?: string | null
    invoiceSecondaryColor?: string | null
    invoiceAccentColor?: string | null
    invoiceDangerColor?: string | null
    releaseNoteTemplate?: string | null
    releaseNoteTitle?: string | null
    releaseNoteHeaderBg?: string | null
    releaseNoteShowLogo?: boolean | null
    releaseShowShipment?: boolean | null
    releaseShowStorage?: boolean | null
    releaseShowItems?: boolean | null
    releaseShowCollector?: boolean | null
    releaseShowCharges?: boolean | null
    releaseShowPhotos?: boolean | null
    releaseShowTerms?: boolean | null
    releaseShowSignatures?: boolean | null
    releaseTerms?: string | null
    releaseFooterText?: string | null
    releasePrimaryColor?: string | null
    printMarginTop?: number | null
    printMarginBottom?: number | null
    printMarginLeft?: number | null
    printMarginRight?: number | null
    language?: string | null
    dateFormat?: string | null
    timeFormat?: string | null
    currencySymbol?: string | null
    currencyPosition?: string | null
    customField1Label?: string | null
    customField1Value?: string | null
    customField2Label?: string | null
    customField2Value?: string | null
    customField3Label?: string | null
    customField3Value?: string | null
    requireStaffSignature?: boolean | null
    requireClientSignature?: boolean | null
    signatureHeight?: number | null
    showQRCode?: boolean | null
    qrCodePosition?: string | null
    qrCodeSize?: number | null
    showWatermark?: boolean | null
    watermarkText?: string | null
    watermarkOpacity?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TemplateSettingsCreateOrConnectWithoutCompanyInput = {
    where: TemplateSettingsWhereUniqueInput
    create: XOR<TemplateSettingsCreateWithoutCompanyInput, TemplateSettingsUncheckedCreateWithoutCompanyInput>
  }

  export type RolePermissionCreateWithoutCompanyInput = {
    id?: string
    role: string
    createdAt?: Date | string
    updatedAt?: Date | string
    permission: PermissionCreateNestedOneWithoutRolePermissionsInput
  }

  export type RolePermissionUncheckedCreateWithoutCompanyInput = {
    id?: string
    role: string
    permissionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RolePermissionCreateOrConnectWithoutCompanyInput = {
    where: RolePermissionWhereUniqueInput
    create: XOR<RolePermissionCreateWithoutCompanyInput, RolePermissionUncheckedCreateWithoutCompanyInput>
  }

  export type RolePermissionCreateManyCompanyInputEnvelope = {
    data: RolePermissionCreateManyCompanyInput | RolePermissionCreateManyCompanyInput[]
  }

  export type PackingMaterialCreateWithoutCompanyInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    stockBatches?: StockBatchCreateNestedManyWithoutMaterialInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialUncheckedCreateWithoutCompanyInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutMaterialInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialCreateOrConnectWithoutCompanyInput = {
    where: PackingMaterialWhereUniqueInput
    create: XOR<PackingMaterialCreateWithoutCompanyInput, PackingMaterialUncheckedCreateWithoutCompanyInput>
  }

  export type PackingMaterialCreateManyCompanyInputEnvelope = {
    data: PackingMaterialCreateManyCompanyInput | PackingMaterialCreateManyCompanyInput[]
  }

  export type VendorCreateWithoutCompanyInput = {
    id?: string
    name: string
    contact?: string | null
    phone?: string | null
    email?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    stockBatches?: StockBatchCreateNestedManyWithoutVendorInput
  }

  export type VendorUncheckedCreateWithoutCompanyInput = {
    id?: string
    name: string
    contact?: string | null
    phone?: string | null
    email?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutVendorInput
  }

  export type VendorCreateOrConnectWithoutCompanyInput = {
    where: VendorWhereUniqueInput
    create: XOR<VendorCreateWithoutCompanyInput, VendorUncheckedCreateWithoutCompanyInput>
  }

  export type VendorCreateManyCompanyInputEnvelope = {
    data: VendorCreateManyCompanyInput | VendorCreateManyCompanyInput[]
  }

  export type StockBatchCreateWithoutCompanyInput = {
    id?: string
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    material: PackingMaterialCreateNestedOneWithoutStockBatchesInput
    vendor?: VendorCreateNestedOneWithoutStockBatchesInput
    receivedBy?: UserCreateNestedOneWithoutStockBatchesReceivedInput
    rackAllocations?: RackStockLevelCreateNestedManyWithoutStockBatchInput
    issues?: MaterialIssueCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchUncheckedCreateWithoutCompanyInput = {
    id?: string
    materialId: string
    vendorId?: string | null
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    receivedById?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    rackAllocations?: RackStockLevelUncheckedCreateNestedManyWithoutStockBatchInput
    issues?: MaterialIssueUncheckedCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchCreateOrConnectWithoutCompanyInput = {
    where: StockBatchWhereUniqueInput
    create: XOR<StockBatchCreateWithoutCompanyInput, StockBatchUncheckedCreateWithoutCompanyInput>
  }

  export type StockBatchCreateManyCompanyInputEnvelope = {
    data: StockBatchCreateManyCompanyInput | StockBatchCreateManyCompanyInput[]
  }

  export type RackStockLevelCreateWithoutCompanyInput = {
    id?: string
    quantity: number
    lastUpdated?: Date | string
    material: PackingMaterialCreateNestedOneWithoutRackLevelsInput
    rack: RackCreateNestedOneWithoutMaterialLevelsInput
    stockBatch?: StockBatchCreateNestedOneWithoutRackAllocationsInput
  }

  export type RackStockLevelUncheckedCreateWithoutCompanyInput = {
    id?: string
    materialId: string
    rackId: string
    stockBatchId?: string | null
    quantity: number
    lastUpdated?: Date | string
  }

  export type RackStockLevelCreateOrConnectWithoutCompanyInput = {
    where: RackStockLevelWhereUniqueInput
    create: XOR<RackStockLevelCreateWithoutCompanyInput, RackStockLevelUncheckedCreateWithoutCompanyInput>
  }

  export type RackStockLevelCreateManyCompanyInputEnvelope = {
    data: RackStockLevelCreateManyCompanyInput | RackStockLevelCreateManyCompanyInput[]
  }

  export type MaterialIssueCreateWithoutCompanyInput = {
    id?: string
    quantity: number
    unitCost: number
    totalCost: number
    issuedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialIssuesInput
    material: PackingMaterialCreateNestedOneWithoutMaterialIssuesInput
    stockBatch?: StockBatchCreateNestedOneWithoutIssuesInput
    rack?: RackCreateNestedOneWithoutJobMaterialsInput
    issuedBy?: UserCreateNestedOneWithoutMaterialIssuesCreatedInput
    returns?: MaterialReturnCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueUncheckedCreateWithoutCompanyInput = {
    id?: string
    jobId: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    returns?: MaterialReturnUncheckedCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueCreateOrConnectWithoutCompanyInput = {
    where: MaterialIssueWhereUniqueInput
    create: XOR<MaterialIssueCreateWithoutCompanyInput, MaterialIssueUncheckedCreateWithoutCompanyInput>
  }

  export type MaterialIssueCreateManyCompanyInputEnvelope = {
    data: MaterialIssueCreateManyCompanyInput | MaterialIssueCreateManyCompanyInput[]
  }

  export type MaterialReturnCreateWithoutCompanyInput = {
    id?: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialReturnsInput
    material: PackingMaterialCreateNestedOneWithoutMaterialReturnsInput
    issue?: MaterialIssueCreateNestedOneWithoutReturnsInput
    rack?: RackCreateNestedOneWithoutMaterialReturnInput
    recordedBy?: UserCreateNestedOneWithoutMaterialReturnsRecordedInput
    damages?: MaterialDamageCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectReturnInput
  }

  export type MaterialReturnUncheckedCreateWithoutCompanyInput = {
    id?: string
    jobId: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    damages?: MaterialDamageUncheckedCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectReturnInput
  }

  export type MaterialReturnCreateOrConnectWithoutCompanyInput = {
    where: MaterialReturnWhereUniqueInput
    create: XOR<MaterialReturnCreateWithoutCompanyInput, MaterialReturnUncheckedCreateWithoutCompanyInput>
  }

  export type MaterialReturnCreateManyCompanyInputEnvelope = {
    data: MaterialReturnCreateManyCompanyInput | MaterialReturnCreateManyCompanyInput[]
  }

  export type MaterialDamageCreateWithoutCompanyInput = {
    id?: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedAt?: Date | string
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    material: PackingMaterialCreateNestedOneWithoutMaterialDamagesInput
    return: MaterialReturnCreateNestedOneWithoutDamagesInput
    recordedBy?: UserCreateNestedOneWithoutDamagesRecordedInput
    approvedBy?: UserCreateNestedOneWithoutDamagesApprovedInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectDamageInput
  }

  export type MaterialDamageUncheckedCreateWithoutCompanyInput = {
    id?: string
    returnId: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectDamageInput
  }

  export type MaterialDamageCreateOrConnectWithoutCompanyInput = {
    where: MaterialDamageWhereUniqueInput
    create: XOR<MaterialDamageCreateWithoutCompanyInput, MaterialDamageUncheckedCreateWithoutCompanyInput>
  }

  export type MaterialDamageCreateManyCompanyInputEnvelope = {
    data: MaterialDamageCreateManyCompanyInput | MaterialDamageCreateManyCompanyInput[]
  }

  export type MaterialApprovalCreateWithoutCompanyInput = {
    id?: string
    approvalType: string
    status?: string
    requestedAt?: Date | string
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    job: MovingJobCreateNestedOneWithoutApprovalsInput
    requestedBy?: UserCreateNestedOneWithoutApprovalsRequestedInput
    decisionBy?: UserCreateNestedOneWithoutApprovalsDecidedInput
    subjectReturn?: MaterialReturnCreateNestedOneWithoutApprovalInput
    subjectDamage?: MaterialDamageCreateNestedOneWithoutApprovalInput
  }

  export type MaterialApprovalUncheckedCreateWithoutCompanyInput = {
    id?: string
    jobId: string
    approvalType: string
    status?: string
    requestedById?: string | null
    requestedAt?: Date | string
    decisionById?: string | null
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    subjectDamageId?: string | null
  }

  export type MaterialApprovalCreateOrConnectWithoutCompanyInput = {
    where: MaterialApprovalWhereUniqueInput
    create: XOR<MaterialApprovalCreateWithoutCompanyInput, MaterialApprovalUncheckedCreateWithoutCompanyInput>
  }

  export type MaterialApprovalCreateManyCompanyInputEnvelope = {
    data: MaterialApprovalCreateManyCompanyInput | MaterialApprovalCreateManyCompanyInput[]
  }

  export type JobCostSnapshotCreateWithoutCompanyInput = {
    id?: string
    recordedAt?: Date | string
    materialsCost?: number
    laborCost?: number
    damageLoss?: number
    otherCost?: number
    revenue?: number
    profit?: number
    profitMargin?: number | null
    currency?: string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutCostSnapshotsInput
  }

  export type JobCostSnapshotUncheckedCreateWithoutCompanyInput = {
    id?: string
    jobId: string
    recordedAt?: Date | string
    materialsCost?: number
    laborCost?: number
    damageLoss?: number
    otherCost?: number
    revenue?: number
    profit?: number
    profitMargin?: number | null
    currency?: string
    notes?: string | null
  }

  export type JobCostSnapshotCreateOrConnectWithoutCompanyInput = {
    where: JobCostSnapshotWhereUniqueInput
    create: XOR<JobCostSnapshotCreateWithoutCompanyInput, JobCostSnapshotUncheckedCreateWithoutCompanyInput>
  }

  export type JobCostSnapshotCreateManyCompanyInputEnvelope = {
    data: JobCostSnapshotCreateManyCompanyInput | JobCostSnapshotCreateManyCompanyInput[]
  }

  export type SystemPluginCreateWithoutCompanyInput = {
    id?: string
    name: string
    description?: string | null
    version?: string
    status?: string
    entryPointUrl?: string | null
    checksum?: string | null
    installedAt?: Date | string
    activatedAt?: Date | string | null
    deactivatedAt?: Date | string | null
    auditLogs?: SystemPluginLogCreateNestedManyWithoutPluginInput
  }

  export type SystemPluginUncheckedCreateWithoutCompanyInput = {
    id?: string
    name: string
    description?: string | null
    version?: string
    status?: string
    entryPointUrl?: string | null
    checksum?: string | null
    installedAt?: Date | string
    activatedAt?: Date | string | null
    deactivatedAt?: Date | string | null
    auditLogs?: SystemPluginLogUncheckedCreateNestedManyWithoutPluginInput
  }

  export type SystemPluginCreateOrConnectWithoutCompanyInput = {
    where: SystemPluginWhereUniqueInput
    create: XOR<SystemPluginCreateWithoutCompanyInput, SystemPluginUncheckedCreateWithoutCompanyInput>
  }

  export type SystemPluginCreateManyCompanyInputEnvelope = {
    data: SystemPluginCreateManyCompanyInput | SystemPluginCreateManyCompanyInput[]
  }

  export type JobAssignmentCreateWithoutCompanyInput = {
    id?: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    job: MovingJobCreateNestedOneWithoutAssignmentsInput
    user: UserCreateNestedOneWithoutJobAssignmentsInput
  }

  export type JobAssignmentUncheckedCreateWithoutCompanyInput = {
    id?: string
    jobId: string
    userId: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type JobAssignmentCreateOrConnectWithoutCompanyInput = {
    where: JobAssignmentWhereUniqueInput
    create: XOR<JobAssignmentCreateWithoutCompanyInput, JobAssignmentUncheckedCreateWithoutCompanyInput>
  }

  export type JobAssignmentCreateManyCompanyInputEnvelope = {
    data: JobAssignmentCreateManyCompanyInput | JobAssignmentCreateManyCompanyInput[]
  }

  export type SystemPluginLogCreateWithoutCompanyInput = {
    id?: string
    action: string
    status: string
    message?: string | null
    performedBy?: string | null
    createdAt?: Date | string
    plugin: SystemPluginCreateNestedOneWithoutAuditLogsInput
  }

  export type SystemPluginLogUncheckedCreateWithoutCompanyInput = {
    id?: string
    pluginId: string
    action: string
    status: string
    message?: string | null
    performedBy?: string | null
    createdAt?: Date | string
  }

  export type SystemPluginLogCreateOrConnectWithoutCompanyInput = {
    where: SystemPluginLogWhereUniqueInput
    create: XOR<SystemPluginLogCreateWithoutCompanyInput, SystemPluginLogUncheckedCreateWithoutCompanyInput>
  }

  export type SystemPluginLogCreateManyCompanyInputEnvelope = {
    data: SystemPluginLogCreateManyCompanyInput | SystemPluginLogCreateManyCompanyInput[]
  }

  export type UserUpsertWithWhereUniqueWithoutCompanyInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCompanyInput, UserUncheckedUpdateWithoutCompanyInput>
    create: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCompanyInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCompanyInput, UserUncheckedUpdateWithoutCompanyInput>
  }

  export type UserUpdateManyWithWhereWithoutCompanyInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCompanyInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    role?: StringFilter<"User"> | string
    skills?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    companyId?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    avatar?: StringNullableFilter<"User"> | string | null
    position?: StringNullableFilter<"User"> | string | null
    department?: StringNullableFilter<"User"> | string | null
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    resetToken?: StringNullableFilter<"User"> | string | null
    resetTokenExpiry?: DateTimeNullableFilter<"User"> | Date | string | null
  }

  export type RackUpsertWithWhereUniqueWithoutCompanyInput = {
    where: RackWhereUniqueInput
    update: XOR<RackUpdateWithoutCompanyInput, RackUncheckedUpdateWithoutCompanyInput>
    create: XOR<RackCreateWithoutCompanyInput, RackUncheckedCreateWithoutCompanyInput>
  }

  export type RackUpdateWithWhereUniqueWithoutCompanyInput = {
    where: RackWhereUniqueInput
    data: XOR<RackUpdateWithoutCompanyInput, RackUncheckedUpdateWithoutCompanyInput>
  }

  export type RackUpdateManyWithWhereWithoutCompanyInput = {
    where: RackScalarWhereInput
    data: XOR<RackUpdateManyMutationInput, RackUncheckedUpdateManyWithoutCompanyInput>
  }

  export type RackScalarWhereInput = {
    AND?: RackScalarWhereInput | RackScalarWhereInput[]
    OR?: RackScalarWhereInput[]
    NOT?: RackScalarWhereInput | RackScalarWhereInput[]
    id?: StringFilter<"Rack"> | string
    code?: StringFilter<"Rack"> | string
    qrCode?: StringFilter<"Rack"> | string
    rackType?: StringFilter<"Rack"> | string
    location?: StringNullableFilter<"Rack"> | string | null
    capacityTotal?: FloatFilter<"Rack"> | number
    capacityUsed?: FloatFilter<"Rack"> | number
    minCapacity?: IntFilter<"Rack"> | number
    status?: StringFilter<"Rack"> | string
    lastActivity?: DateTimeNullableFilter<"Rack"> | Date | string | null
    companyId?: StringFilter<"Rack"> | string
    createdAt?: DateTimeFilter<"Rack"> | Date | string
    updatedAt?: DateTimeFilter<"Rack"> | Date | string
  }

  export type ShipmentUpsertWithWhereUniqueWithoutCompanyInput = {
    where: ShipmentWhereUniqueInput
    update: XOR<ShipmentUpdateWithoutCompanyInput, ShipmentUncheckedUpdateWithoutCompanyInput>
    create: XOR<ShipmentCreateWithoutCompanyInput, ShipmentUncheckedCreateWithoutCompanyInput>
  }

  export type ShipmentUpdateWithWhereUniqueWithoutCompanyInput = {
    where: ShipmentWhereUniqueInput
    data: XOR<ShipmentUpdateWithoutCompanyInput, ShipmentUncheckedUpdateWithoutCompanyInput>
  }

  export type ShipmentUpdateManyWithWhereWithoutCompanyInput = {
    where: ShipmentScalarWhereInput
    data: XOR<ShipmentUpdateManyMutationInput, ShipmentUncheckedUpdateManyWithoutCompanyInput>
  }

  export type ShipmentScalarWhereInput = {
    AND?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
    OR?: ShipmentScalarWhereInput[]
    NOT?: ShipmentScalarWhereInput | ShipmentScalarWhereInput[]
    id?: StringFilter<"Shipment"> | string
    name?: StringFilter<"Shipment"> | string
    referenceId?: StringFilter<"Shipment"> | string
    originalBoxCount?: IntFilter<"Shipment"> | number
    currentBoxCount?: IntFilter<"Shipment"> | number
    type?: StringFilter<"Shipment"> | string
    arrivalDate?: DateTimeFilter<"Shipment"> | Date | string
    clientName?: StringNullableFilter<"Shipment"> | string | null
    clientPhone?: StringNullableFilter<"Shipment"> | string | null
    clientEmail?: StringNullableFilter<"Shipment"> | string | null
    description?: StringNullableFilter<"Shipment"> | string | null
    estimatedValue?: FloatNullableFilter<"Shipment"> | number | null
    notes?: StringNullableFilter<"Shipment"> | string | null
    qrCode?: StringFilter<"Shipment"> | string
    status?: StringFilter<"Shipment"> | string
    rackId?: StringNullableFilter<"Shipment"> | string | null
    assignedAt?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    releasedAt?: DateTimeNullableFilter<"Shipment"> | Date | string | null
    storageCharge?: FloatNullableFilter<"Shipment"> | number | null
    companyId?: StringFilter<"Shipment"> | string
    createdById?: StringNullableFilter<"Shipment"> | string | null
    assignedById?: StringNullableFilter<"Shipment"> | string | null
    releasedById?: StringNullableFilter<"Shipment"> | string | null
    createdAt?: DateTimeFilter<"Shipment"> | Date | string
    updatedAt?: DateTimeFilter<"Shipment"> | Date | string
    isWarehouseShipment?: BoolFilter<"Shipment"> | boolean
    warehouseData?: StringNullableFilter<"Shipment"> | string | null
    shipper?: StringNullableFilter<"Shipment"> | string | null
    consignee?: StringNullableFilter<"Shipment"> | string | null
  }

  export type MovingJobUpsertWithWhereUniqueWithoutCompanyInput = {
    where: MovingJobWhereUniqueInput
    update: XOR<MovingJobUpdateWithoutCompanyInput, MovingJobUncheckedUpdateWithoutCompanyInput>
    create: XOR<MovingJobCreateWithoutCompanyInput, MovingJobUncheckedCreateWithoutCompanyInput>
  }

  export type MovingJobUpdateWithWhereUniqueWithoutCompanyInput = {
    where: MovingJobWhereUniqueInput
    data: XOR<MovingJobUpdateWithoutCompanyInput, MovingJobUncheckedUpdateWithoutCompanyInput>
  }

  export type MovingJobUpdateManyWithWhereWithoutCompanyInput = {
    where: MovingJobScalarWhereInput
    data: XOR<MovingJobUpdateManyMutationInput, MovingJobUncheckedUpdateManyWithoutCompanyInput>
  }

  export type MovingJobScalarWhereInput = {
    AND?: MovingJobScalarWhereInput | MovingJobScalarWhereInput[]
    OR?: MovingJobScalarWhereInput[]
    NOT?: MovingJobScalarWhereInput | MovingJobScalarWhereInput[]
    id?: StringFilter<"MovingJob"> | string
    jobCode?: StringFilter<"MovingJob"> | string
    jobTitle?: StringFilter<"MovingJob"> | string
    clientName?: StringFilter<"MovingJob"> | string
    clientPhone?: StringFilter<"MovingJob"> | string
    clientEmail?: StringNullableFilter<"MovingJob"> | string | null
    jobDate?: DateTimeFilter<"MovingJob"> | Date | string
    jobAddress?: StringFilter<"MovingJob"> | string
    dropoffAddress?: StringNullableFilter<"MovingJob"> | string | null
    status?: StringFilter<"MovingJob"> | string
    teamLeaderId?: StringNullableFilter<"MovingJob"> | string | null
    driverName?: StringNullableFilter<"MovingJob"> | string | null
    vehicleNumber?: StringNullableFilter<"MovingJob"> | string | null
    notes?: StringNullableFilter<"MovingJob"> | string | null
    createdAt?: DateTimeFilter<"MovingJob"> | Date | string
    updatedAt?: DateTimeFilter<"MovingJob"> | Date | string
    companyId?: StringFilter<"MovingJob"> | string
  }

  export type ExpenseUpsertWithWhereUniqueWithoutCompanyInput = {
    where: ExpenseWhereUniqueInput
    update: XOR<ExpenseUpdateWithoutCompanyInput, ExpenseUncheckedUpdateWithoutCompanyInput>
    create: XOR<ExpenseCreateWithoutCompanyInput, ExpenseUncheckedCreateWithoutCompanyInput>
  }

  export type ExpenseUpdateWithWhereUniqueWithoutCompanyInput = {
    where: ExpenseWhereUniqueInput
    data: XOR<ExpenseUpdateWithoutCompanyInput, ExpenseUncheckedUpdateWithoutCompanyInput>
  }

  export type ExpenseUpdateManyWithWhereWithoutCompanyInput = {
    where: ExpenseScalarWhereInput
    data: XOR<ExpenseUpdateManyMutationInput, ExpenseUncheckedUpdateManyWithoutCompanyInput>
  }

  export type ExpenseScalarWhereInput = {
    AND?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
    OR?: ExpenseScalarWhereInput[]
    NOT?: ExpenseScalarWhereInput | ExpenseScalarWhereInput[]
    id?: StringFilter<"Expense"> | string
    title?: StringFilter<"Expense"> | string
    category?: StringFilter<"Expense"> | string
    amount?: FloatFilter<"Expense"> | number
    currency?: StringFilter<"Expense"> | string
    description?: StringNullableFilter<"Expense"> | string | null
    receipts?: StringNullableFilter<"Expense"> | string | null
    expenseDate?: DateTimeFilter<"Expense"> | Date | string
    approvedBy?: StringNullableFilter<"Expense"> | string | null
    status?: StringFilter<"Expense"> | string
    companyId?: StringFilter<"Expense"> | string
    createdAt?: DateTimeFilter<"Expense"> | Date | string
    updatedAt?: DateTimeFilter<"Expense"> | Date | string
  }

  export type InvoiceSettingsUpsertWithoutCompanyInput = {
    update: XOR<InvoiceSettingsUpdateWithoutCompanyInput, InvoiceSettingsUncheckedUpdateWithoutCompanyInput>
    create: XOR<InvoiceSettingsCreateWithoutCompanyInput, InvoiceSettingsUncheckedCreateWithoutCompanyInput>
    where?: InvoiceSettingsWhereInput
  }

  export type InvoiceSettingsUpdateToOneWithWhereWithoutCompanyInput = {
    where?: InvoiceSettingsWhereInput
    data: XOR<InvoiceSettingsUpdateWithoutCompanyInput, InvoiceSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type InvoiceSettingsUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateType?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showLogo?: BoolFieldUpdateOperationsInput | boolean
    footerText?: NullableStringFieldUpdateOperationsInput | string | null
    termsConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceSettingsUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateType?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showLogo?: BoolFieldUpdateOperationsInput | boolean
    footerText?: NullableStringFieldUpdateOperationsInput | string | null
    termsConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldUpsertWithWhereUniqueWithoutCompanyInput = {
    where: CustomFieldWhereUniqueInput
    update: XOR<CustomFieldUpdateWithoutCompanyInput, CustomFieldUncheckedUpdateWithoutCompanyInput>
    create: XOR<CustomFieldCreateWithoutCompanyInput, CustomFieldUncheckedCreateWithoutCompanyInput>
  }

  export type CustomFieldUpdateWithWhereUniqueWithoutCompanyInput = {
    where: CustomFieldWhereUniqueInput
    data: XOR<CustomFieldUpdateWithoutCompanyInput, CustomFieldUncheckedUpdateWithoutCompanyInput>
  }

  export type CustomFieldUpdateManyWithWhereWithoutCompanyInput = {
    where: CustomFieldScalarWhereInput
    data: XOR<CustomFieldUpdateManyMutationInput, CustomFieldUncheckedUpdateManyWithoutCompanyInput>
  }

  export type CustomFieldScalarWhereInput = {
    AND?: CustomFieldScalarWhereInput | CustomFieldScalarWhereInput[]
    OR?: CustomFieldScalarWhereInput[]
    NOT?: CustomFieldScalarWhereInput | CustomFieldScalarWhereInput[]
    id?: StringFilter<"CustomField"> | string
    companyId?: StringFilter<"CustomField"> | string
    fieldName?: StringFilter<"CustomField"> | string
    fieldType?: StringFilter<"CustomField"> | string
    fieldOptions?: StringNullableFilter<"CustomField"> | string | null
    isRequired?: BoolFilter<"CustomField"> | boolean
    isActive?: BoolFilter<"CustomField"> | boolean
    section?: StringFilter<"CustomField"> | string
    createdAt?: DateTimeFilter<"CustomField"> | Date | string
    updatedAt?: DateTimeFilter<"CustomField"> | Date | string
  }

  export type BillingSettingsUpsertWithoutCompanyInput = {
    update: XOR<BillingSettingsUpdateWithoutCompanyInput, BillingSettingsUncheckedUpdateWithoutCompanyInput>
    create: XOR<BillingSettingsCreateWithoutCompanyInput, BillingSettingsUncheckedCreateWithoutCompanyInput>
    where?: BillingSettingsWhereInput
  }

  export type BillingSettingsUpdateToOneWithWhereWithoutCompanyInput = {
    where?: BillingSettingsWhereInput
    data: XOR<BillingSettingsUpdateWithoutCompanyInput, BillingSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type BillingSettingsUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    storageRateType?: StringFieldUpdateOperationsInput | string
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    storageRatePerWeek?: NullableFloatFieldUpdateOperationsInput | number | null
    storageRatePerMonth?: NullableFloatFieldUpdateOperationsInput | number | null
    taxEnabled?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    invoicePrefix?: StringFieldUpdateOperationsInput | string
    invoiceDueDays?: IntFieldUpdateOperationsInput | number
    gracePeriodDays?: IntFieldUpdateOperationsInput | number
    minimumCharge?: FloatFieldUpdateOperationsInput | number
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    logoPosition?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showCompanyDetails?: BoolFieldUpdateOperationsInput | boolean
    showBankDetails?: BoolFieldUpdateOperationsInput | boolean
    showTermsConditions?: BoolFieldUpdateOperationsInput | boolean
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountName?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    paymentInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    taxRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    chargeTypes?: ChargeTypeUpdateManyWithoutBillingSettingsNestedInput
  }

  export type BillingSettingsUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    storageRateType?: StringFieldUpdateOperationsInput | string
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    storageRatePerWeek?: NullableFloatFieldUpdateOperationsInput | number | null
    storageRatePerMonth?: NullableFloatFieldUpdateOperationsInput | number | null
    taxEnabled?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    invoicePrefix?: StringFieldUpdateOperationsInput | string
    invoiceDueDays?: IntFieldUpdateOperationsInput | number
    gracePeriodDays?: IntFieldUpdateOperationsInput | number
    minimumCharge?: FloatFieldUpdateOperationsInput | number
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    logoPosition?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showCompanyDetails?: BoolFieldUpdateOperationsInput | boolean
    showBankDetails?: BoolFieldUpdateOperationsInput | boolean
    showTermsConditions?: BoolFieldUpdateOperationsInput | boolean
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountName?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    paymentInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    taxRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutBillingSettingsNestedInput
  }

  export type ChargeTypeUpsertWithWhereUniqueWithoutCompanyInput = {
    where: ChargeTypeWhereUniqueInput
    update: XOR<ChargeTypeUpdateWithoutCompanyInput, ChargeTypeUncheckedUpdateWithoutCompanyInput>
    create: XOR<ChargeTypeCreateWithoutCompanyInput, ChargeTypeUncheckedCreateWithoutCompanyInput>
  }

  export type ChargeTypeUpdateWithWhereUniqueWithoutCompanyInput = {
    where: ChargeTypeWhereUniqueInput
    data: XOR<ChargeTypeUpdateWithoutCompanyInput, ChargeTypeUncheckedUpdateWithoutCompanyInput>
  }

  export type ChargeTypeUpdateManyWithWhereWithoutCompanyInput = {
    where: ChargeTypeScalarWhereInput
    data: XOR<ChargeTypeUpdateManyMutationInput, ChargeTypeUncheckedUpdateManyWithoutCompanyInput>
  }

  export type ChargeTypeScalarWhereInput = {
    AND?: ChargeTypeScalarWhereInput | ChargeTypeScalarWhereInput[]
    OR?: ChargeTypeScalarWhereInput[]
    NOT?: ChargeTypeScalarWhereInput | ChargeTypeScalarWhereInput[]
    id?: StringFilter<"ChargeType"> | string
    companyId?: StringFilter<"ChargeType"> | string
    billingSettingsId?: StringFilter<"ChargeType"> | string
    name?: StringFilter<"ChargeType"> | string
    code?: StringFilter<"ChargeType"> | string
    description?: StringNullableFilter<"ChargeType"> | string | null
    category?: StringFilter<"ChargeType"> | string
    calculationType?: StringFilter<"ChargeType"> | string
    rate?: FloatFilter<"ChargeType"> | number
    minCharge?: FloatNullableFilter<"ChargeType"> | number | null
    maxCharge?: FloatNullableFilter<"ChargeType"> | number | null
    applyOnRelease?: BoolFilter<"ChargeType"> | boolean
    applyOnStorage?: BoolFilter<"ChargeType"> | boolean
    isTaxable?: BoolFilter<"ChargeType"> | boolean
    isActive?: BoolFilter<"ChargeType"> | boolean
    isDefault?: BoolFilter<"ChargeType"> | boolean
    displayOrder?: IntFilter<"ChargeType"> | number
    createdAt?: DateTimeFilter<"ChargeType"> | Date | string
    updatedAt?: DateTimeFilter<"ChargeType"> | Date | string
  }

  export type InvoiceUpsertWithWhereUniqueWithoutCompanyInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutCompanyInput, InvoiceUncheckedUpdateWithoutCompanyInput>
    create: XOR<InvoiceCreateWithoutCompanyInput, InvoiceUncheckedCreateWithoutCompanyInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutCompanyInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutCompanyInput, InvoiceUncheckedUpdateWithoutCompanyInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutCompanyInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutCompanyInput>
  }

  export type InvoiceScalarWhereInput = {
    AND?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
    OR?: InvoiceScalarWhereInput[]
    NOT?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
    id?: StringFilter<"Invoice"> | string
    invoiceNumber?: StringFilter<"Invoice"> | string
    companyId?: StringFilter<"Invoice"> | string
    shipmentId?: StringFilter<"Invoice"> | string
    clientName?: StringFilter<"Invoice"> | string
    clientPhone?: StringNullableFilter<"Invoice"> | string | null
    clientAddress?: StringNullableFilter<"Invoice"> | string | null
    invoiceDate?: DateTimeFilter<"Invoice"> | Date | string
    dueDate?: DateTimeFilter<"Invoice"> | Date | string
    invoiceType?: StringFilter<"Invoice"> | string
    isWarehouseInvoice?: BoolFilter<"Invoice"> | boolean
    warehouseData?: StringNullableFilter<"Invoice"> | string | null
    subtotal?: FloatFilter<"Invoice"> | number
    taxAmount?: FloatFilter<"Invoice"> | number
    discountAmount?: FloatFilter<"Invoice"> | number
    totalAmount?: FloatFilter<"Invoice"> | number
    paymentStatus?: StringFilter<"Invoice"> | string
    paidAmount?: FloatFilter<"Invoice"> | number
    balanceDue?: FloatFilter<"Invoice"> | number
    paymentDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    paymentMethod?: StringNullableFilter<"Invoice"> | string | null
    transactionRef?: StringNullableFilter<"Invoice"> | string | null
    notes?: StringNullableFilter<"Invoice"> | string | null
    termsAndConditions?: StringNullableFilter<"Invoice"> | string | null
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeFilter<"Invoice"> | Date | string
  }

  export type InvoiceLineItemUpsertWithWhereUniqueWithoutCompanyInput = {
    where: InvoiceLineItemWhereUniqueInput
    update: XOR<InvoiceLineItemUpdateWithoutCompanyInput, InvoiceLineItemUncheckedUpdateWithoutCompanyInput>
    create: XOR<InvoiceLineItemCreateWithoutCompanyInput, InvoiceLineItemUncheckedCreateWithoutCompanyInput>
  }

  export type InvoiceLineItemUpdateWithWhereUniqueWithoutCompanyInput = {
    where: InvoiceLineItemWhereUniqueInput
    data: XOR<InvoiceLineItemUpdateWithoutCompanyInput, InvoiceLineItemUncheckedUpdateWithoutCompanyInput>
  }

  export type InvoiceLineItemUpdateManyWithWhereWithoutCompanyInput = {
    where: InvoiceLineItemScalarWhereInput
    data: XOR<InvoiceLineItemUpdateManyMutationInput, InvoiceLineItemUncheckedUpdateManyWithoutCompanyInput>
  }

  export type InvoiceLineItemScalarWhereInput = {
    AND?: InvoiceLineItemScalarWhereInput | InvoiceLineItemScalarWhereInput[]
    OR?: InvoiceLineItemScalarWhereInput[]
    NOT?: InvoiceLineItemScalarWhereInput | InvoiceLineItemScalarWhereInput[]
    id?: StringFilter<"InvoiceLineItem"> | string
    invoiceId?: StringFilter<"InvoiceLineItem"> | string
    companyId?: StringFilter<"InvoiceLineItem"> | string
    chargeTypeId?: StringNullableFilter<"InvoiceLineItem"> | string | null
    description?: StringFilter<"InvoiceLineItem"> | string
    category?: StringFilter<"InvoiceLineItem"> | string
    quantity?: FloatFilter<"InvoiceLineItem"> | number
    unitPrice?: FloatFilter<"InvoiceLineItem"> | number
    amount?: FloatFilter<"InvoiceLineItem"> | number
    isTaxable?: BoolFilter<"InvoiceLineItem"> | boolean
    taxRate?: FloatNullableFilter<"InvoiceLineItem"> | number | null
    taxAmount?: FloatFilter<"InvoiceLineItem"> | number
    displayOrder?: IntFilter<"InvoiceLineItem"> | number
    createdAt?: DateTimeFilter<"InvoiceLineItem"> | Date | string
  }

  export type PaymentUpsertWithWhereUniqueWithoutCompanyInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutCompanyInput, PaymentUncheckedUpdateWithoutCompanyInput>
    create: XOR<PaymentCreateWithoutCompanyInput, PaymentUncheckedCreateWithoutCompanyInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutCompanyInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutCompanyInput, PaymentUncheckedUpdateWithoutCompanyInput>
  }

  export type PaymentUpdateManyWithWhereWithoutCompanyInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutCompanyInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: StringFilter<"Payment"> | string
    invoiceId?: StringFilter<"Payment"> | string
    companyId?: StringFilter<"Payment"> | string
    amount?: FloatFilter<"Payment"> | number
    paymentDate?: DateTimeFilter<"Payment"> | Date | string
    paymentMethod?: StringFilter<"Payment"> | string
    transactionRef?: StringNullableFilter<"Payment"> | string | null
    receiptNumber?: StringNullableFilter<"Payment"> | string | null
    notes?: StringNullableFilter<"Payment"> | string | null
    createdBy?: StringNullableFilter<"Payment"> | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
  }

  export type ShipmentChargesUpsertWithWhereUniqueWithoutCompanyInput = {
    where: ShipmentChargesWhereUniqueInput
    update: XOR<ShipmentChargesUpdateWithoutCompanyInput, ShipmentChargesUncheckedUpdateWithoutCompanyInput>
    create: XOR<ShipmentChargesCreateWithoutCompanyInput, ShipmentChargesUncheckedCreateWithoutCompanyInput>
  }

  export type ShipmentChargesUpdateWithWhereUniqueWithoutCompanyInput = {
    where: ShipmentChargesWhereUniqueInput
    data: XOR<ShipmentChargesUpdateWithoutCompanyInput, ShipmentChargesUncheckedUpdateWithoutCompanyInput>
  }

  export type ShipmentChargesUpdateManyWithWhereWithoutCompanyInput = {
    where: ShipmentChargesScalarWhereInput
    data: XOR<ShipmentChargesUpdateManyMutationInput, ShipmentChargesUncheckedUpdateManyWithoutCompanyInput>
  }

  export type ShipmentChargesScalarWhereInput = {
    AND?: ShipmentChargesScalarWhereInput | ShipmentChargesScalarWhereInput[]
    OR?: ShipmentChargesScalarWhereInput[]
    NOT?: ShipmentChargesScalarWhereInput | ShipmentChargesScalarWhereInput[]
    id?: StringFilter<"ShipmentCharges"> | string
    shipmentId?: StringFilter<"ShipmentCharges"> | string
    companyId?: StringFilter<"ShipmentCharges"> | string
    currentStorageCharge?: FloatFilter<"ShipmentCharges"> | number
    daysStored?: IntFilter<"ShipmentCharges"> | number
    lastCalculatedDate?: DateTimeFilter<"ShipmentCharges"> | Date | string
    totalBoxesReleased?: IntFilter<"ShipmentCharges"> | number
    totalInvoiced?: FloatFilter<"ShipmentCharges"> | number
    totalPaid?: FloatFilter<"ShipmentCharges"> | number
    outstandingBalance?: FloatFilter<"ShipmentCharges"> | number
    createdAt?: DateTimeFilter<"ShipmentCharges"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentCharges"> | Date | string
  }

  export type ShipmentSettingsUpsertWithoutCompanyInput = {
    update: XOR<ShipmentSettingsUpdateWithoutCompanyInput, ShipmentSettingsUncheckedUpdateWithoutCompanyInput>
    create: XOR<ShipmentSettingsCreateWithoutCompanyInput, ShipmentSettingsUncheckedCreateWithoutCompanyInput>
    where?: ShipmentSettingsWhereInput
  }

  export type ShipmentSettingsUpdateToOneWithWhereWithoutCompanyInput = {
    where?: ShipmentSettingsWhereInput
    data: XOR<ShipmentSettingsUpdateWithoutCompanyInput, ShipmentSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type ShipmentSettingsUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    requireClientEmail?: BoolFieldUpdateOperationsInput | boolean
    requireClientPhone?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedValue?: BoolFieldUpdateOperationsInput | boolean
    requirePhotos?: BoolFieldUpdateOperationsInput | boolean
    autoGenerateQR?: BoolFieldUpdateOperationsInput | boolean
    qrCodePrefix?: StringFieldUpdateOperationsInput | string
    showClientAddress?: BoolFieldUpdateOperationsInput | boolean
    requireClientAddress?: BoolFieldUpdateOperationsInput | boolean
    showDescription?: BoolFieldUpdateOperationsInput | boolean
    requireDescription?: BoolFieldUpdateOperationsInput | boolean
    showReferenceId?: BoolFieldUpdateOperationsInput | boolean
    requireReferenceId?: BoolFieldUpdateOperationsInput | boolean
    showNotes?: BoolFieldUpdateOperationsInput | boolean
    requireNotes?: BoolFieldUpdateOperationsInput | boolean
    showWarehouseMode?: BoolFieldUpdateOperationsInput | boolean
    showShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    requireShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    showConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    requireConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    showWeight?: BoolFieldUpdateOperationsInput | boolean
    requireWeight?: BoolFieldUpdateOperationsInput | boolean
    showDimensions?: BoolFieldUpdateOperationsInput | boolean
    requireDimensions?: BoolFieldUpdateOperationsInput | boolean
    showStorageType?: BoolFieldUpdateOperationsInput | boolean
    showSpecialInstructions?: BoolFieldUpdateOperationsInput | boolean
    showEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    defaultEstimatedDays?: IntFieldUpdateOperationsInput | number
    formSectionOrder?: NullableStringFieldUpdateOperationsInput | string | null
    defaultStorageType?: StringFieldUpdateOperationsInput | string
    allowMultipleRacks?: BoolFieldUpdateOperationsInput | boolean
    requireRackAssignment?: BoolFieldUpdateOperationsInput | boolean
    autoAssignRack?: BoolFieldUpdateOperationsInput | boolean
    notifyOnLowCapacity?: BoolFieldUpdateOperationsInput | boolean
    lowCapacityThreshold?: IntFieldUpdateOperationsInput | number
    requireReleaseApproval?: BoolFieldUpdateOperationsInput | boolean
    releaseApproverRole?: StringFieldUpdateOperationsInput | string
    requireReleasePhotos?: BoolFieldUpdateOperationsInput | boolean
    requireIDVerification?: BoolFieldUpdateOperationsInput | boolean
    generateReleaseInvoice?: BoolFieldUpdateOperationsInput | boolean
    autoSendInvoiceEmail?: BoolFieldUpdateOperationsInput | boolean
    storageRatePerDay?: FloatFieldUpdateOperationsInput | number
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    chargePartialDay?: BoolFieldUpdateOperationsInput | boolean
    minimumChargeDays?: IntFieldUpdateOperationsInput | number
    releaseHandlingFee?: FloatFieldUpdateOperationsInput | number
    releasePerBoxFee?: FloatFieldUpdateOperationsInput | number
    releaseTransportFee?: FloatFieldUpdateOperationsInput | number
    notifyClientOnIntake?: BoolFieldUpdateOperationsInput | boolean
    notifyClientOnRelease?: BoolFieldUpdateOperationsInput | boolean
    notifyOnStorageAlert?: BoolFieldUpdateOperationsInput | boolean
    storageAlertDays?: IntFieldUpdateOperationsInput | number
    enableCustomFields?: BoolFieldUpdateOperationsInput | boolean
    requiredCustomFields?: NullableStringFieldUpdateOperationsInput | string | null
    allowPartialRelease?: BoolFieldUpdateOperationsInput | boolean
    partialReleaseMinBoxes?: IntFieldUpdateOperationsInput | number
    requirePartialApproval?: BoolFieldUpdateOperationsInput | boolean
    requireReleaseSignature?: BoolFieldUpdateOperationsInput | boolean
    requireCollectorID?: BoolFieldUpdateOperationsInput | boolean
    allowProxyCollection?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentSettingsUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    requireClientEmail?: BoolFieldUpdateOperationsInput | boolean
    requireClientPhone?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedValue?: BoolFieldUpdateOperationsInput | boolean
    requirePhotos?: BoolFieldUpdateOperationsInput | boolean
    autoGenerateQR?: BoolFieldUpdateOperationsInput | boolean
    qrCodePrefix?: StringFieldUpdateOperationsInput | string
    showClientAddress?: BoolFieldUpdateOperationsInput | boolean
    requireClientAddress?: BoolFieldUpdateOperationsInput | boolean
    showDescription?: BoolFieldUpdateOperationsInput | boolean
    requireDescription?: BoolFieldUpdateOperationsInput | boolean
    showReferenceId?: BoolFieldUpdateOperationsInput | boolean
    requireReferenceId?: BoolFieldUpdateOperationsInput | boolean
    showNotes?: BoolFieldUpdateOperationsInput | boolean
    requireNotes?: BoolFieldUpdateOperationsInput | boolean
    showWarehouseMode?: BoolFieldUpdateOperationsInput | boolean
    showShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    requireShipperDetails?: BoolFieldUpdateOperationsInput | boolean
    showConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    requireConsigneeDetails?: BoolFieldUpdateOperationsInput | boolean
    showWeight?: BoolFieldUpdateOperationsInput | boolean
    requireWeight?: BoolFieldUpdateOperationsInput | boolean
    showDimensions?: BoolFieldUpdateOperationsInput | boolean
    requireDimensions?: BoolFieldUpdateOperationsInput | boolean
    showStorageType?: BoolFieldUpdateOperationsInput | boolean
    showSpecialInstructions?: BoolFieldUpdateOperationsInput | boolean
    showEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    requireEstimatedDays?: BoolFieldUpdateOperationsInput | boolean
    defaultEstimatedDays?: IntFieldUpdateOperationsInput | number
    formSectionOrder?: NullableStringFieldUpdateOperationsInput | string | null
    defaultStorageType?: StringFieldUpdateOperationsInput | string
    allowMultipleRacks?: BoolFieldUpdateOperationsInput | boolean
    requireRackAssignment?: BoolFieldUpdateOperationsInput | boolean
    autoAssignRack?: BoolFieldUpdateOperationsInput | boolean
    notifyOnLowCapacity?: BoolFieldUpdateOperationsInput | boolean
    lowCapacityThreshold?: IntFieldUpdateOperationsInput | number
    requireReleaseApproval?: BoolFieldUpdateOperationsInput | boolean
    releaseApproverRole?: StringFieldUpdateOperationsInput | string
    requireReleasePhotos?: BoolFieldUpdateOperationsInput | boolean
    requireIDVerification?: BoolFieldUpdateOperationsInput | boolean
    generateReleaseInvoice?: BoolFieldUpdateOperationsInput | boolean
    autoSendInvoiceEmail?: BoolFieldUpdateOperationsInput | boolean
    storageRatePerDay?: FloatFieldUpdateOperationsInput | number
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    chargePartialDay?: BoolFieldUpdateOperationsInput | boolean
    minimumChargeDays?: IntFieldUpdateOperationsInput | number
    releaseHandlingFee?: FloatFieldUpdateOperationsInput | number
    releasePerBoxFee?: FloatFieldUpdateOperationsInput | number
    releaseTransportFee?: FloatFieldUpdateOperationsInput | number
    notifyClientOnIntake?: BoolFieldUpdateOperationsInput | boolean
    notifyClientOnRelease?: BoolFieldUpdateOperationsInput | boolean
    notifyOnStorageAlert?: BoolFieldUpdateOperationsInput | boolean
    storageAlertDays?: IntFieldUpdateOperationsInput | number
    enableCustomFields?: BoolFieldUpdateOperationsInput | boolean
    requiredCustomFields?: NullableStringFieldUpdateOperationsInput | string | null
    allowPartialRelease?: BoolFieldUpdateOperationsInput | boolean
    partialReleaseMinBoxes?: IntFieldUpdateOperationsInput | number
    requirePartialApproval?: BoolFieldUpdateOperationsInput | boolean
    requireReleaseSignature?: BoolFieldUpdateOperationsInput | boolean
    requireCollectorID?: BoolFieldUpdateOperationsInput | boolean
    allowProxyCollection?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TemplateSettingsUpsertWithoutCompanyInput = {
    update: XOR<TemplateSettingsUpdateWithoutCompanyInput, TemplateSettingsUncheckedUpdateWithoutCompanyInput>
    create: XOR<TemplateSettingsCreateWithoutCompanyInput, TemplateSettingsUncheckedCreateWithoutCompanyInput>
    where?: TemplateSettingsWhereInput
  }

  export type TemplateSettingsUpdateToOneWithWhereWithoutCompanyInput = {
    where?: TemplateSettingsWhereInput
    data: XOR<TemplateSettingsUpdateWithoutCompanyInput, TemplateSettingsUncheckedUpdateWithoutCompanyInput>
  }

  export type TemplateSettingsUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogo?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    companyEmail?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyLicense?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTemplateType?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTitle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowPhone?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowEmail?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowWebsite?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowFooter?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceHeaderText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTerms?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowBorders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowGrid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceTableStyle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFontSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePaperSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceSecondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceAccentColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDangerColor?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTitle?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowShipment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowStorage?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowItems?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCollector?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCharges?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowPhotos?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowTerms?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowSignatures?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseTerms?: NullableStringFieldUpdateOperationsInput | string | null
    releaseFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    releasePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    printMarginTop?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginBottom?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginLeft?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginRight?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    dateFormat?: NullableStringFieldUpdateOperationsInput | string | null
    timeFormat?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    currencyPosition?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Value?: NullableStringFieldUpdateOperationsInput | string | null
    requireStaffSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    requireClientSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    signatureHeight?: NullableIntFieldUpdateOperationsInput | number | null
    showQRCode?: NullableBoolFieldUpdateOperationsInput | boolean | null
    qrCodePosition?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeSize?: NullableIntFieldUpdateOperationsInput | number | null
    showWatermark?: NullableBoolFieldUpdateOperationsInput | boolean | null
    watermarkText?: NullableStringFieldUpdateOperationsInput | string | null
    watermarkOpacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TemplateSettingsUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    companyLogo?: NullableStringFieldUpdateOperationsInput | string | null
    companyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    companyPhone?: NullableStringFieldUpdateOperationsInput | string | null
    companyEmail?: NullableStringFieldUpdateOperationsInput | string | null
    companyWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    companyLicense?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTemplateType?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTitle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowAddress?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowPhone?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowEmail?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowWebsite?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowLicense?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowFooter?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceHeaderText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceTerms?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceShowBorders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceShowGrid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invoiceTableStyle?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFontSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePaperSize?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceSecondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceAccentColor?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDangerColor?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTemplate?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteTitle?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteHeaderBg?: NullableStringFieldUpdateOperationsInput | string | null
    releaseNoteShowLogo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowShipment?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowStorage?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowItems?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCollector?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowCharges?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowPhotos?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowTerms?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseShowSignatures?: NullableBoolFieldUpdateOperationsInput | boolean | null
    releaseTerms?: NullableStringFieldUpdateOperationsInput | string | null
    releaseFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    releasePrimaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    printMarginTop?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginBottom?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginLeft?: NullableIntFieldUpdateOperationsInput | number | null
    printMarginRight?: NullableIntFieldUpdateOperationsInput | number | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    dateFormat?: NullableStringFieldUpdateOperationsInput | string | null
    timeFormat?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    currencyPosition?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField1Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField2Value?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Label?: NullableStringFieldUpdateOperationsInput | string | null
    customField3Value?: NullableStringFieldUpdateOperationsInput | string | null
    requireStaffSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    requireClientSignature?: NullableBoolFieldUpdateOperationsInput | boolean | null
    signatureHeight?: NullableIntFieldUpdateOperationsInput | number | null
    showQRCode?: NullableBoolFieldUpdateOperationsInput | boolean | null
    qrCodePosition?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeSize?: NullableIntFieldUpdateOperationsInput | number | null
    showWatermark?: NullableBoolFieldUpdateOperationsInput | boolean | null
    watermarkText?: NullableStringFieldUpdateOperationsInput | string | null
    watermarkOpacity?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionUpsertWithWhereUniqueWithoutCompanyInput = {
    where: RolePermissionWhereUniqueInput
    update: XOR<RolePermissionUpdateWithoutCompanyInput, RolePermissionUncheckedUpdateWithoutCompanyInput>
    create: XOR<RolePermissionCreateWithoutCompanyInput, RolePermissionUncheckedCreateWithoutCompanyInput>
  }

  export type RolePermissionUpdateWithWhereUniqueWithoutCompanyInput = {
    where: RolePermissionWhereUniqueInput
    data: XOR<RolePermissionUpdateWithoutCompanyInput, RolePermissionUncheckedUpdateWithoutCompanyInput>
  }

  export type RolePermissionUpdateManyWithWhereWithoutCompanyInput = {
    where: RolePermissionScalarWhereInput
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyWithoutCompanyInput>
  }

  export type RolePermissionScalarWhereInput = {
    AND?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
    OR?: RolePermissionScalarWhereInput[]
    NOT?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
    id?: StringFilter<"RolePermission"> | string
    role?: StringFilter<"RolePermission"> | string
    permissionId?: StringFilter<"RolePermission"> | string
    companyId?: StringFilter<"RolePermission"> | string
    createdAt?: DateTimeFilter<"RolePermission"> | Date | string
    updatedAt?: DateTimeFilter<"RolePermission"> | Date | string
  }

  export type PackingMaterialUpsertWithWhereUniqueWithoutCompanyInput = {
    where: PackingMaterialWhereUniqueInput
    update: XOR<PackingMaterialUpdateWithoutCompanyInput, PackingMaterialUncheckedUpdateWithoutCompanyInput>
    create: XOR<PackingMaterialCreateWithoutCompanyInput, PackingMaterialUncheckedCreateWithoutCompanyInput>
  }

  export type PackingMaterialUpdateWithWhereUniqueWithoutCompanyInput = {
    where: PackingMaterialWhereUniqueInput
    data: XOR<PackingMaterialUpdateWithoutCompanyInput, PackingMaterialUncheckedUpdateWithoutCompanyInput>
  }

  export type PackingMaterialUpdateManyWithWhereWithoutCompanyInput = {
    where: PackingMaterialScalarWhereInput
    data: XOR<PackingMaterialUpdateManyMutationInput, PackingMaterialUncheckedUpdateManyWithoutCompanyInput>
  }

  export type PackingMaterialScalarWhereInput = {
    AND?: PackingMaterialScalarWhereInput | PackingMaterialScalarWhereInput[]
    OR?: PackingMaterialScalarWhereInput[]
    NOT?: PackingMaterialScalarWhereInput | PackingMaterialScalarWhereInput[]
    id?: StringFilter<"PackingMaterial"> | string
    sku?: StringFilter<"PackingMaterial"> | string
    name?: StringFilter<"PackingMaterial"> | string
    description?: StringNullableFilter<"PackingMaterial"> | string | null
    unit?: StringFilter<"PackingMaterial"> | string
    category?: StringFilter<"PackingMaterial"> | string
    minStockLevel?: IntFilter<"PackingMaterial"> | number
    totalQuantity?: IntFilter<"PackingMaterial"> | number
    unitCost?: FloatNullableFilter<"PackingMaterial"> | number | null
    sellingPrice?: FloatNullableFilter<"PackingMaterial"> | number | null
    isActive?: BoolFilter<"PackingMaterial"> | boolean
    companyId?: StringFilter<"PackingMaterial"> | string
    createdAt?: DateTimeFilter<"PackingMaterial"> | Date | string
    updatedAt?: DateTimeFilter<"PackingMaterial"> | Date | string
  }

  export type VendorUpsertWithWhereUniqueWithoutCompanyInput = {
    where: VendorWhereUniqueInput
    update: XOR<VendorUpdateWithoutCompanyInput, VendorUncheckedUpdateWithoutCompanyInput>
    create: XOR<VendorCreateWithoutCompanyInput, VendorUncheckedCreateWithoutCompanyInput>
  }

  export type VendorUpdateWithWhereUniqueWithoutCompanyInput = {
    where: VendorWhereUniqueInput
    data: XOR<VendorUpdateWithoutCompanyInput, VendorUncheckedUpdateWithoutCompanyInput>
  }

  export type VendorUpdateManyWithWhereWithoutCompanyInput = {
    where: VendorScalarWhereInput
    data: XOR<VendorUpdateManyMutationInput, VendorUncheckedUpdateManyWithoutCompanyInput>
  }

  export type VendorScalarWhereInput = {
    AND?: VendorScalarWhereInput | VendorScalarWhereInput[]
    OR?: VendorScalarWhereInput[]
    NOT?: VendorScalarWhereInput | VendorScalarWhereInput[]
    id?: StringFilter<"Vendor"> | string
    name?: StringFilter<"Vendor"> | string
    contact?: StringNullableFilter<"Vendor"> | string | null
    phone?: StringNullableFilter<"Vendor"> | string | null
    email?: StringNullableFilter<"Vendor"> | string | null
    notes?: StringNullableFilter<"Vendor"> | string | null
    companyId?: StringFilter<"Vendor"> | string
    createdAt?: DateTimeFilter<"Vendor"> | Date | string
    updatedAt?: DateTimeFilter<"Vendor"> | Date | string
  }

  export type StockBatchUpsertWithWhereUniqueWithoutCompanyInput = {
    where: StockBatchWhereUniqueInput
    update: XOR<StockBatchUpdateWithoutCompanyInput, StockBatchUncheckedUpdateWithoutCompanyInput>
    create: XOR<StockBatchCreateWithoutCompanyInput, StockBatchUncheckedCreateWithoutCompanyInput>
  }

  export type StockBatchUpdateWithWhereUniqueWithoutCompanyInput = {
    where: StockBatchWhereUniqueInput
    data: XOR<StockBatchUpdateWithoutCompanyInput, StockBatchUncheckedUpdateWithoutCompanyInput>
  }

  export type StockBatchUpdateManyWithWhereWithoutCompanyInput = {
    where: StockBatchScalarWhereInput
    data: XOR<StockBatchUpdateManyMutationInput, StockBatchUncheckedUpdateManyWithoutCompanyInput>
  }

  export type StockBatchScalarWhereInput = {
    AND?: StockBatchScalarWhereInput | StockBatchScalarWhereInput[]
    OR?: StockBatchScalarWhereInput[]
    NOT?: StockBatchScalarWhereInput | StockBatchScalarWhereInput[]
    id?: StringFilter<"StockBatch"> | string
    materialId?: StringFilter<"StockBatch"> | string
    vendorId?: StringNullableFilter<"StockBatch"> | string | null
    vendorName?: StringNullableFilter<"StockBatch"> | string | null
    purchaseOrder?: StringNullableFilter<"StockBatch"> | string | null
    purchaseDate?: DateTimeFilter<"StockBatch"> | Date | string
    quantityPurchased?: IntFilter<"StockBatch"> | number
    quantityRemaining?: IntFilter<"StockBatch"> | number
    unitCost?: FloatFilter<"StockBatch"> | number
    sellingPrice?: FloatNullableFilter<"StockBatch"> | number | null
    receivedById?: StringNullableFilter<"StockBatch"> | string | null
    notes?: StringNullableFilter<"StockBatch"> | string | null
    companyId?: StringFilter<"StockBatch"> | string
    createdAt?: DateTimeFilter<"StockBatch"> | Date | string
    updatedAt?: DateTimeFilter<"StockBatch"> | Date | string
  }

  export type RackStockLevelUpsertWithWhereUniqueWithoutCompanyInput = {
    where: RackStockLevelWhereUniqueInput
    update: XOR<RackStockLevelUpdateWithoutCompanyInput, RackStockLevelUncheckedUpdateWithoutCompanyInput>
    create: XOR<RackStockLevelCreateWithoutCompanyInput, RackStockLevelUncheckedCreateWithoutCompanyInput>
  }

  export type RackStockLevelUpdateWithWhereUniqueWithoutCompanyInput = {
    where: RackStockLevelWhereUniqueInput
    data: XOR<RackStockLevelUpdateWithoutCompanyInput, RackStockLevelUncheckedUpdateWithoutCompanyInput>
  }

  export type RackStockLevelUpdateManyWithWhereWithoutCompanyInput = {
    where: RackStockLevelScalarWhereInput
    data: XOR<RackStockLevelUpdateManyMutationInput, RackStockLevelUncheckedUpdateManyWithoutCompanyInput>
  }

  export type RackStockLevelScalarWhereInput = {
    AND?: RackStockLevelScalarWhereInput | RackStockLevelScalarWhereInput[]
    OR?: RackStockLevelScalarWhereInput[]
    NOT?: RackStockLevelScalarWhereInput | RackStockLevelScalarWhereInput[]
    id?: StringFilter<"RackStockLevel"> | string
    materialId?: StringFilter<"RackStockLevel"> | string
    rackId?: StringFilter<"RackStockLevel"> | string
    stockBatchId?: StringNullableFilter<"RackStockLevel"> | string | null
    quantity?: IntFilter<"RackStockLevel"> | number
    lastUpdated?: DateTimeFilter<"RackStockLevel"> | Date | string
    companyId?: StringFilter<"RackStockLevel"> | string
  }

  export type MaterialIssueUpsertWithWhereUniqueWithoutCompanyInput = {
    where: MaterialIssueWhereUniqueInput
    update: XOR<MaterialIssueUpdateWithoutCompanyInput, MaterialIssueUncheckedUpdateWithoutCompanyInput>
    create: XOR<MaterialIssueCreateWithoutCompanyInput, MaterialIssueUncheckedCreateWithoutCompanyInput>
  }

  export type MaterialIssueUpdateWithWhereUniqueWithoutCompanyInput = {
    where: MaterialIssueWhereUniqueInput
    data: XOR<MaterialIssueUpdateWithoutCompanyInput, MaterialIssueUncheckedUpdateWithoutCompanyInput>
  }

  export type MaterialIssueUpdateManyWithWhereWithoutCompanyInput = {
    where: MaterialIssueScalarWhereInput
    data: XOR<MaterialIssueUpdateManyMutationInput, MaterialIssueUncheckedUpdateManyWithoutCompanyInput>
  }

  export type MaterialIssueScalarWhereInput = {
    AND?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
    OR?: MaterialIssueScalarWhereInput[]
    NOT?: MaterialIssueScalarWhereInput | MaterialIssueScalarWhereInput[]
    id?: StringFilter<"MaterialIssue"> | string
    jobId?: StringFilter<"MaterialIssue"> | string
    materialId?: StringFilter<"MaterialIssue"> | string
    stockBatchId?: StringNullableFilter<"MaterialIssue"> | string | null
    quantity?: IntFilter<"MaterialIssue"> | number
    unitCost?: FloatFilter<"MaterialIssue"> | number
    totalCost?: FloatFilter<"MaterialIssue"> | number
    rackId?: StringNullableFilter<"MaterialIssue"> | string | null
    issuedById?: StringNullableFilter<"MaterialIssue"> | string | null
    issuedAt?: DateTimeFilter<"MaterialIssue"> | Date | string
    notes?: StringNullableFilter<"MaterialIssue"> | string | null
    companyId?: StringFilter<"MaterialIssue"> | string
  }

  export type MaterialReturnUpsertWithWhereUniqueWithoutCompanyInput = {
    where: MaterialReturnWhereUniqueInput
    update: XOR<MaterialReturnUpdateWithoutCompanyInput, MaterialReturnUncheckedUpdateWithoutCompanyInput>
    create: XOR<MaterialReturnCreateWithoutCompanyInput, MaterialReturnUncheckedCreateWithoutCompanyInput>
  }

  export type MaterialReturnUpdateWithWhereUniqueWithoutCompanyInput = {
    where: MaterialReturnWhereUniqueInput
    data: XOR<MaterialReturnUpdateWithoutCompanyInput, MaterialReturnUncheckedUpdateWithoutCompanyInput>
  }

  export type MaterialReturnUpdateManyWithWhereWithoutCompanyInput = {
    where: MaterialReturnScalarWhereInput
    data: XOR<MaterialReturnUpdateManyMutationInput, MaterialReturnUncheckedUpdateManyWithoutCompanyInput>
  }

  export type MaterialReturnScalarWhereInput = {
    AND?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
    OR?: MaterialReturnScalarWhereInput[]
    NOT?: MaterialReturnScalarWhereInput | MaterialReturnScalarWhereInput[]
    id?: StringFilter<"MaterialReturn"> | string
    jobId?: StringFilter<"MaterialReturn"> | string
    materialId?: StringFilter<"MaterialReturn"> | string
    issueId?: StringNullableFilter<"MaterialReturn"> | string | null
    quantityIssued?: IntNullableFilter<"MaterialReturn"> | number | null
    quantityUsed?: IntNullableFilter<"MaterialReturn"> | number | null
    quantityGood?: IntFilter<"MaterialReturn"> | number
    quantityDamaged?: IntFilter<"MaterialReturn"> | number
    restocked?: BoolFilter<"MaterialReturn"> | boolean
    restockedAt?: DateTimeNullableFilter<"MaterialReturn"> | Date | string | null
    rackId?: StringNullableFilter<"MaterialReturn"> | string | null
    recordedById?: StringNullableFilter<"MaterialReturn"> | string | null
    recordedAt?: DateTimeFilter<"MaterialReturn"> | Date | string
    notes?: StringNullableFilter<"MaterialReturn"> | string | null
    companyId?: StringFilter<"MaterialReturn"> | string
  }

  export type MaterialDamageUpsertWithWhereUniqueWithoutCompanyInput = {
    where: MaterialDamageWhereUniqueInput
    update: XOR<MaterialDamageUpdateWithoutCompanyInput, MaterialDamageUncheckedUpdateWithoutCompanyInput>
    create: XOR<MaterialDamageCreateWithoutCompanyInput, MaterialDamageUncheckedCreateWithoutCompanyInput>
  }

  export type MaterialDamageUpdateWithWhereUniqueWithoutCompanyInput = {
    where: MaterialDamageWhereUniqueInput
    data: XOR<MaterialDamageUpdateWithoutCompanyInput, MaterialDamageUncheckedUpdateWithoutCompanyInput>
  }

  export type MaterialDamageUpdateManyWithWhereWithoutCompanyInput = {
    where: MaterialDamageScalarWhereInput
    data: XOR<MaterialDamageUpdateManyMutationInput, MaterialDamageUncheckedUpdateManyWithoutCompanyInput>
  }

  export type MaterialDamageScalarWhereInput = {
    AND?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
    OR?: MaterialDamageScalarWhereInput[]
    NOT?: MaterialDamageScalarWhereInput | MaterialDamageScalarWhereInput[]
    id?: StringFilter<"MaterialDamage"> | string
    returnId?: StringFilter<"MaterialDamage"> | string
    materialId?: StringFilter<"MaterialDamage"> | string
    quantity?: IntFilter<"MaterialDamage"> | number
    reason?: StringNullableFilter<"MaterialDamage"> | string | null
    photoUrls?: StringNullableFilter<"MaterialDamage"> | string | null
    status?: StringFilter<"MaterialDamage"> | string
    recordedById?: StringNullableFilter<"MaterialDamage"> | string | null
    recordedAt?: DateTimeFilter<"MaterialDamage"> | Date | string
    approvedById?: StringNullableFilter<"MaterialDamage"> | string | null
    approvedAt?: DateTimeNullableFilter<"MaterialDamage"> | Date | string | null
    approvalNotes?: StringNullableFilter<"MaterialDamage"> | string | null
    rejectionReason?: StringNullableFilter<"MaterialDamage"> | string | null
    companyId?: StringFilter<"MaterialDamage"> | string
  }

  export type MaterialApprovalUpsertWithWhereUniqueWithoutCompanyInput = {
    where: MaterialApprovalWhereUniqueInput
    update: XOR<MaterialApprovalUpdateWithoutCompanyInput, MaterialApprovalUncheckedUpdateWithoutCompanyInput>
    create: XOR<MaterialApprovalCreateWithoutCompanyInput, MaterialApprovalUncheckedCreateWithoutCompanyInput>
  }

  export type MaterialApprovalUpdateWithWhereUniqueWithoutCompanyInput = {
    where: MaterialApprovalWhereUniqueInput
    data: XOR<MaterialApprovalUpdateWithoutCompanyInput, MaterialApprovalUncheckedUpdateWithoutCompanyInput>
  }

  export type MaterialApprovalUpdateManyWithWhereWithoutCompanyInput = {
    where: MaterialApprovalScalarWhereInput
    data: XOR<MaterialApprovalUpdateManyMutationInput, MaterialApprovalUncheckedUpdateManyWithoutCompanyInput>
  }

  export type MaterialApprovalScalarWhereInput = {
    AND?: MaterialApprovalScalarWhereInput | MaterialApprovalScalarWhereInput[]
    OR?: MaterialApprovalScalarWhereInput[]
    NOT?: MaterialApprovalScalarWhereInput | MaterialApprovalScalarWhereInput[]
    id?: StringFilter<"MaterialApproval"> | string
    jobId?: StringFilter<"MaterialApproval"> | string
    approvalType?: StringFilter<"MaterialApproval"> | string
    status?: StringFilter<"MaterialApproval"> | string
    requestedById?: StringNullableFilter<"MaterialApproval"> | string | null
    requestedAt?: DateTimeFilter<"MaterialApproval"> | Date | string
    decisionById?: StringNullableFilter<"MaterialApproval"> | string | null
    decidedAt?: DateTimeNullableFilter<"MaterialApproval"> | Date | string | null
    decisionNotes?: StringNullableFilter<"MaterialApproval"> | string | null
    subjectReturnId?: StringNullableFilter<"MaterialApproval"> | string | null
    subjectDamageId?: StringNullableFilter<"MaterialApproval"> | string | null
    companyId?: StringFilter<"MaterialApproval"> | string
  }

  export type JobCostSnapshotUpsertWithWhereUniqueWithoutCompanyInput = {
    where: JobCostSnapshotWhereUniqueInput
    update: XOR<JobCostSnapshotUpdateWithoutCompanyInput, JobCostSnapshotUncheckedUpdateWithoutCompanyInput>
    create: XOR<JobCostSnapshotCreateWithoutCompanyInput, JobCostSnapshotUncheckedCreateWithoutCompanyInput>
  }

  export type JobCostSnapshotUpdateWithWhereUniqueWithoutCompanyInput = {
    where: JobCostSnapshotWhereUniqueInput
    data: XOR<JobCostSnapshotUpdateWithoutCompanyInput, JobCostSnapshotUncheckedUpdateWithoutCompanyInput>
  }

  export type JobCostSnapshotUpdateManyWithWhereWithoutCompanyInput = {
    where: JobCostSnapshotScalarWhereInput
    data: XOR<JobCostSnapshotUpdateManyMutationInput, JobCostSnapshotUncheckedUpdateManyWithoutCompanyInput>
  }

  export type JobCostSnapshotScalarWhereInput = {
    AND?: JobCostSnapshotScalarWhereInput | JobCostSnapshotScalarWhereInput[]
    OR?: JobCostSnapshotScalarWhereInput[]
    NOT?: JobCostSnapshotScalarWhereInput | JobCostSnapshotScalarWhereInput[]
    id?: StringFilter<"JobCostSnapshot"> | string
    jobId?: StringFilter<"JobCostSnapshot"> | string
    recordedAt?: DateTimeFilter<"JobCostSnapshot"> | Date | string
    materialsCost?: FloatFilter<"JobCostSnapshot"> | number
    laborCost?: FloatFilter<"JobCostSnapshot"> | number
    damageLoss?: FloatFilter<"JobCostSnapshot"> | number
    otherCost?: FloatFilter<"JobCostSnapshot"> | number
    revenue?: FloatFilter<"JobCostSnapshot"> | number
    profit?: FloatFilter<"JobCostSnapshot"> | number
    profitMargin?: FloatNullableFilter<"JobCostSnapshot"> | number | null
    currency?: StringFilter<"JobCostSnapshot"> | string
    notes?: StringNullableFilter<"JobCostSnapshot"> | string | null
    companyId?: StringFilter<"JobCostSnapshot"> | string
  }

  export type SystemPluginUpsertWithWhereUniqueWithoutCompanyInput = {
    where: SystemPluginWhereUniqueInput
    update: XOR<SystemPluginUpdateWithoutCompanyInput, SystemPluginUncheckedUpdateWithoutCompanyInput>
    create: XOR<SystemPluginCreateWithoutCompanyInput, SystemPluginUncheckedCreateWithoutCompanyInput>
  }

  export type SystemPluginUpdateWithWhereUniqueWithoutCompanyInput = {
    where: SystemPluginWhereUniqueInput
    data: XOR<SystemPluginUpdateWithoutCompanyInput, SystemPluginUncheckedUpdateWithoutCompanyInput>
  }

  export type SystemPluginUpdateManyWithWhereWithoutCompanyInput = {
    where: SystemPluginScalarWhereInput
    data: XOR<SystemPluginUpdateManyMutationInput, SystemPluginUncheckedUpdateManyWithoutCompanyInput>
  }

  export type SystemPluginScalarWhereInput = {
    AND?: SystemPluginScalarWhereInput | SystemPluginScalarWhereInput[]
    OR?: SystemPluginScalarWhereInput[]
    NOT?: SystemPluginScalarWhereInput | SystemPluginScalarWhereInput[]
    id?: StringFilter<"SystemPlugin"> | string
    name?: StringFilter<"SystemPlugin"> | string
    description?: StringNullableFilter<"SystemPlugin"> | string | null
    version?: StringFilter<"SystemPlugin"> | string
    status?: StringFilter<"SystemPlugin"> | string
    entryPointUrl?: StringNullableFilter<"SystemPlugin"> | string | null
    checksum?: StringNullableFilter<"SystemPlugin"> | string | null
    installedAt?: DateTimeFilter<"SystemPlugin"> | Date | string
    activatedAt?: DateTimeNullableFilter<"SystemPlugin"> | Date | string | null
    deactivatedAt?: DateTimeNullableFilter<"SystemPlugin"> | Date | string | null
    companyId?: StringFilter<"SystemPlugin"> | string
  }

  export type JobAssignmentUpsertWithWhereUniqueWithoutCompanyInput = {
    where: JobAssignmentWhereUniqueInput
    update: XOR<JobAssignmentUpdateWithoutCompanyInput, JobAssignmentUncheckedUpdateWithoutCompanyInput>
    create: XOR<JobAssignmentCreateWithoutCompanyInput, JobAssignmentUncheckedCreateWithoutCompanyInput>
  }

  export type JobAssignmentUpdateWithWhereUniqueWithoutCompanyInput = {
    where: JobAssignmentWhereUniqueInput
    data: XOR<JobAssignmentUpdateWithoutCompanyInput, JobAssignmentUncheckedUpdateWithoutCompanyInput>
  }

  export type JobAssignmentUpdateManyWithWhereWithoutCompanyInput = {
    where: JobAssignmentScalarWhereInput
    data: XOR<JobAssignmentUpdateManyMutationInput, JobAssignmentUncheckedUpdateManyWithoutCompanyInput>
  }

  export type JobAssignmentScalarWhereInput = {
    AND?: JobAssignmentScalarWhereInput | JobAssignmentScalarWhereInput[]
    OR?: JobAssignmentScalarWhereInput[]
    NOT?: JobAssignmentScalarWhereInput | JobAssignmentScalarWhereInput[]
    id?: StringFilter<"JobAssignment"> | string
    jobId?: StringFilter<"JobAssignment"> | string
    userId?: StringFilter<"JobAssignment"> | string
    role?: StringFilter<"JobAssignment"> | string
    checkInAt?: DateTimeNullableFilter<"JobAssignment"> | Date | string | null
    checkOutAt?: DateTimeNullableFilter<"JobAssignment"> | Date | string | null
    hourlyRate?: FloatNullableFilter<"JobAssignment"> | number | null
    hoursWorked?: FloatNullableFilter<"JobAssignment"> | number | null
    createdAt?: DateTimeFilter<"JobAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"JobAssignment"> | Date | string
    companyId?: StringFilter<"JobAssignment"> | string
  }

  export type SystemPluginLogUpsertWithWhereUniqueWithoutCompanyInput = {
    where: SystemPluginLogWhereUniqueInput
    update: XOR<SystemPluginLogUpdateWithoutCompanyInput, SystemPluginLogUncheckedUpdateWithoutCompanyInput>
    create: XOR<SystemPluginLogCreateWithoutCompanyInput, SystemPluginLogUncheckedCreateWithoutCompanyInput>
  }

  export type SystemPluginLogUpdateWithWhereUniqueWithoutCompanyInput = {
    where: SystemPluginLogWhereUniqueInput
    data: XOR<SystemPluginLogUpdateWithoutCompanyInput, SystemPluginLogUncheckedUpdateWithoutCompanyInput>
  }

  export type SystemPluginLogUpdateManyWithWhereWithoutCompanyInput = {
    where: SystemPluginLogScalarWhereInput
    data: XOR<SystemPluginLogUpdateManyMutationInput, SystemPluginLogUncheckedUpdateManyWithoutCompanyInput>
  }

  export type SystemPluginLogScalarWhereInput = {
    AND?: SystemPluginLogScalarWhereInput | SystemPluginLogScalarWhereInput[]
    OR?: SystemPluginLogScalarWhereInput[]
    NOT?: SystemPluginLogScalarWhereInput | SystemPluginLogScalarWhereInput[]
    id?: StringFilter<"SystemPluginLog"> | string
    pluginId?: StringFilter<"SystemPluginLog"> | string
    action?: StringFilter<"SystemPluginLog"> | string
    status?: StringFilter<"SystemPluginLog"> | string
    message?: StringNullableFilter<"SystemPluginLog"> | string | null
    performedBy?: StringNullableFilter<"SystemPluginLog"> | string | null
    createdAt?: DateTimeFilter<"SystemPluginLog"> | Date | string
    companyId?: StringFilter<"SystemPluginLog"> | string
  }

  export type CompanyCreateWithoutUsersInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutUsersInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutUsersInput, CompanyUncheckedCreateWithoutUsersInput>
  }

  export type RackActivityCreateWithoutUserInput = {
    id?: string
    activityType: string
    itemDetails: string
    quantityBefore?: number | null
    quantityAfter?: number | null
    photos?: string | null
    notes?: string | null
    gpsLocation?: string | null
    timestamp?: Date | string
    companyId: string
    rack: RackCreateNestedOneWithoutActivitiesInput
  }

  export type RackActivityUncheckedCreateWithoutUserInput = {
    id?: string
    rackId: string
    activityType: string
    itemDetails: string
    quantityBefore?: number | null
    quantityAfter?: number | null
    photos?: string | null
    notes?: string | null
    gpsLocation?: string | null
    timestamp?: Date | string
    companyId: string
  }

  export type RackActivityCreateOrConnectWithoutUserInput = {
    where: RackActivityWhereUniqueInput
    create: XOR<RackActivityCreateWithoutUserInput, RackActivityUncheckedCreateWithoutUserInput>
  }

  export type RackActivityCreateManyUserInputEnvelope = {
    data: RackActivityCreateManyUserInput | RackActivityCreateManyUserInput[]
  }

  export type JobAssignmentCreateWithoutUserInput = {
    id?: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    job: MovingJobCreateNestedOneWithoutAssignmentsInput
    company: CompanyCreateNestedOneWithoutJobAssignmentInput
  }

  export type JobAssignmentUncheckedCreateWithoutUserInput = {
    id?: string
    jobId: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
  }

  export type JobAssignmentCreateOrConnectWithoutUserInput = {
    where: JobAssignmentWhereUniqueInput
    create: XOR<JobAssignmentCreateWithoutUserInput, JobAssignmentUncheckedCreateWithoutUserInput>
  }

  export type JobAssignmentCreateManyUserInputEnvelope = {
    data: JobAssignmentCreateManyUserInput | JobAssignmentCreateManyUserInput[]
  }

  export type MovingJobCreateWithoutTeamLeaderInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutMovingJobsInput
    assignments?: JobAssignmentCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalCreateNestedManyWithoutJobInput
  }

  export type MovingJobUncheckedCreateWithoutTeamLeaderInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
    assignments?: JobAssignmentUncheckedCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalUncheckedCreateNestedManyWithoutJobInput
  }

  export type MovingJobCreateOrConnectWithoutTeamLeaderInput = {
    where: MovingJobWhereUniqueInput
    create: XOR<MovingJobCreateWithoutTeamLeaderInput, MovingJobUncheckedCreateWithoutTeamLeaderInput>
  }

  export type MovingJobCreateManyTeamLeaderInputEnvelope = {
    data: MovingJobCreateManyTeamLeaderInput | MovingJobCreateManyTeamLeaderInput[]
  }

  export type StockBatchCreateWithoutReceivedByInput = {
    id?: string
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    material: PackingMaterialCreateNestedOneWithoutStockBatchesInput
    vendor?: VendorCreateNestedOneWithoutStockBatchesInput
    company: CompanyCreateNestedOneWithoutStockBatchesInput
    rackAllocations?: RackStockLevelCreateNestedManyWithoutStockBatchInput
    issues?: MaterialIssueCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchUncheckedCreateWithoutReceivedByInput = {
    id?: string
    materialId: string
    vendorId?: string | null
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    rackAllocations?: RackStockLevelUncheckedCreateNestedManyWithoutStockBatchInput
    issues?: MaterialIssueUncheckedCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchCreateOrConnectWithoutReceivedByInput = {
    where: StockBatchWhereUniqueInput
    create: XOR<StockBatchCreateWithoutReceivedByInput, StockBatchUncheckedCreateWithoutReceivedByInput>
  }

  export type StockBatchCreateManyReceivedByInputEnvelope = {
    data: StockBatchCreateManyReceivedByInput | StockBatchCreateManyReceivedByInput[]
  }

  export type MaterialIssueCreateWithoutIssuedByInput = {
    id?: string
    quantity: number
    unitCost: number
    totalCost: number
    issuedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialIssuesInput
    material: PackingMaterialCreateNestedOneWithoutMaterialIssuesInput
    stockBatch?: StockBatchCreateNestedOneWithoutIssuesInput
    rack?: RackCreateNestedOneWithoutJobMaterialsInput
    company: CompanyCreateNestedOneWithoutMaterialIssuesInput
    returns?: MaterialReturnCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueUncheckedCreateWithoutIssuedByInput = {
    id?: string
    jobId: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
    returns?: MaterialReturnUncheckedCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueCreateOrConnectWithoutIssuedByInput = {
    where: MaterialIssueWhereUniqueInput
    create: XOR<MaterialIssueCreateWithoutIssuedByInput, MaterialIssueUncheckedCreateWithoutIssuedByInput>
  }

  export type MaterialIssueCreateManyIssuedByInputEnvelope = {
    data: MaterialIssueCreateManyIssuedByInput | MaterialIssueCreateManyIssuedByInput[]
  }

  export type MaterialReturnCreateWithoutRecordedByInput = {
    id?: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialReturnsInput
    material: PackingMaterialCreateNestedOneWithoutMaterialReturnsInput
    issue?: MaterialIssueCreateNestedOneWithoutReturnsInput
    rack?: RackCreateNestedOneWithoutMaterialReturnInput
    damages?: MaterialDamageCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectReturnInput
    company: CompanyCreateNestedOneWithoutMaterialReturnsInput
  }

  export type MaterialReturnUncheckedCreateWithoutRecordedByInput = {
    id?: string
    jobId: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
    damages?: MaterialDamageUncheckedCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectReturnInput
  }

  export type MaterialReturnCreateOrConnectWithoutRecordedByInput = {
    where: MaterialReturnWhereUniqueInput
    create: XOR<MaterialReturnCreateWithoutRecordedByInput, MaterialReturnUncheckedCreateWithoutRecordedByInput>
  }

  export type MaterialReturnCreateManyRecordedByInputEnvelope = {
    data: MaterialReturnCreateManyRecordedByInput | MaterialReturnCreateManyRecordedByInput[]
  }

  export type MaterialDamageCreateWithoutRecordedByInput = {
    id?: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedAt?: Date | string
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    material: PackingMaterialCreateNestedOneWithoutMaterialDamagesInput
    return: MaterialReturnCreateNestedOneWithoutDamagesInput
    approvedBy?: UserCreateNestedOneWithoutDamagesApprovedInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectDamageInput
    company: CompanyCreateNestedOneWithoutMaterialDamagesInput
  }

  export type MaterialDamageUncheckedCreateWithoutRecordedByInput = {
    id?: string
    returnId: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectDamageInput
  }

  export type MaterialDamageCreateOrConnectWithoutRecordedByInput = {
    where: MaterialDamageWhereUniqueInput
    create: XOR<MaterialDamageCreateWithoutRecordedByInput, MaterialDamageUncheckedCreateWithoutRecordedByInput>
  }

  export type MaterialDamageCreateManyRecordedByInputEnvelope = {
    data: MaterialDamageCreateManyRecordedByInput | MaterialDamageCreateManyRecordedByInput[]
  }

  export type MaterialDamageCreateWithoutApprovedByInput = {
    id?: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedAt?: Date | string
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    material: PackingMaterialCreateNestedOneWithoutMaterialDamagesInput
    return: MaterialReturnCreateNestedOneWithoutDamagesInput
    recordedBy?: UserCreateNestedOneWithoutDamagesRecordedInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectDamageInput
    company: CompanyCreateNestedOneWithoutMaterialDamagesInput
  }

  export type MaterialDamageUncheckedCreateWithoutApprovedByInput = {
    id?: string
    returnId: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectDamageInput
  }

  export type MaterialDamageCreateOrConnectWithoutApprovedByInput = {
    where: MaterialDamageWhereUniqueInput
    create: XOR<MaterialDamageCreateWithoutApprovedByInput, MaterialDamageUncheckedCreateWithoutApprovedByInput>
  }

  export type MaterialDamageCreateManyApprovedByInputEnvelope = {
    data: MaterialDamageCreateManyApprovedByInput | MaterialDamageCreateManyApprovedByInput[]
  }

  export type MaterialApprovalCreateWithoutRequestedByInput = {
    id?: string
    approvalType: string
    status?: string
    requestedAt?: Date | string
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    job: MovingJobCreateNestedOneWithoutApprovalsInput
    decisionBy?: UserCreateNestedOneWithoutApprovalsDecidedInput
    subjectReturn?: MaterialReturnCreateNestedOneWithoutApprovalInput
    subjectDamage?: MaterialDamageCreateNestedOneWithoutApprovalInput
    company: CompanyCreateNestedOneWithoutMaterialApprovalsInput
  }

  export type MaterialApprovalUncheckedCreateWithoutRequestedByInput = {
    id?: string
    jobId: string
    approvalType: string
    status?: string
    requestedAt?: Date | string
    decisionById?: string | null
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    subjectDamageId?: string | null
    companyId: string
  }

  export type MaterialApprovalCreateOrConnectWithoutRequestedByInput = {
    where: MaterialApprovalWhereUniqueInput
    create: XOR<MaterialApprovalCreateWithoutRequestedByInput, MaterialApprovalUncheckedCreateWithoutRequestedByInput>
  }

  export type MaterialApprovalCreateManyRequestedByInputEnvelope = {
    data: MaterialApprovalCreateManyRequestedByInput | MaterialApprovalCreateManyRequestedByInput[]
  }

  export type MaterialApprovalCreateWithoutDecisionByInput = {
    id?: string
    approvalType: string
    status?: string
    requestedAt?: Date | string
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    job: MovingJobCreateNestedOneWithoutApprovalsInput
    requestedBy?: UserCreateNestedOneWithoutApprovalsRequestedInput
    subjectReturn?: MaterialReturnCreateNestedOneWithoutApprovalInput
    subjectDamage?: MaterialDamageCreateNestedOneWithoutApprovalInput
    company: CompanyCreateNestedOneWithoutMaterialApprovalsInput
  }

  export type MaterialApprovalUncheckedCreateWithoutDecisionByInput = {
    id?: string
    jobId: string
    approvalType: string
    status?: string
    requestedById?: string | null
    requestedAt?: Date | string
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    subjectDamageId?: string | null
    companyId: string
  }

  export type MaterialApprovalCreateOrConnectWithoutDecisionByInput = {
    where: MaterialApprovalWhereUniqueInput
    create: XOR<MaterialApprovalCreateWithoutDecisionByInput, MaterialApprovalUncheckedCreateWithoutDecisionByInput>
  }

  export type MaterialApprovalCreateManyDecisionByInputEnvelope = {
    data: MaterialApprovalCreateManyDecisionByInput | MaterialApprovalCreateManyDecisionByInput[]
  }

  export type ShipmentCreateWithoutCreatedByInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    company: CompanyCreateNestedOneWithoutShipmentsInput
    rack?: RackCreateNestedOneWithoutShipmentsInput
    boxes?: ShipmentBoxCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesCreateNestedOneWithoutShipmentInput
    assignedBy?: UserCreateNestedOneWithoutShipmentsAssignedInput
    releasedBy?: UserCreateNestedOneWithoutShipmentsReleasedInput
  }

  export type ShipmentUncheckedCreateWithoutCreatedByInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalUncheckedCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesUncheckedCreateNestedOneWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutCreatedByInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutCreatedByInput, ShipmentUncheckedCreateWithoutCreatedByInput>
  }

  export type ShipmentCreateManyCreatedByInputEnvelope = {
    data: ShipmentCreateManyCreatedByInput | ShipmentCreateManyCreatedByInput[]
  }

  export type ShipmentCreateWithoutAssignedByInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    company: CompanyCreateNestedOneWithoutShipmentsInput
    rack?: RackCreateNestedOneWithoutShipmentsInput
    boxes?: ShipmentBoxCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesCreateNestedOneWithoutShipmentInput
    createdBy?: UserCreateNestedOneWithoutShipmentsCreatedInput
    releasedBy?: UserCreateNestedOneWithoutShipmentsReleasedInput
  }

  export type ShipmentUncheckedCreateWithoutAssignedByInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalUncheckedCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesUncheckedCreateNestedOneWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutAssignedByInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutAssignedByInput, ShipmentUncheckedCreateWithoutAssignedByInput>
  }

  export type ShipmentCreateManyAssignedByInputEnvelope = {
    data: ShipmentCreateManyAssignedByInput | ShipmentCreateManyAssignedByInput[]
  }

  export type ShipmentCreateWithoutReleasedByInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    company: CompanyCreateNestedOneWithoutShipmentsInput
    rack?: RackCreateNestedOneWithoutShipmentsInput
    boxes?: ShipmentBoxCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesCreateNestedOneWithoutShipmentInput
    createdBy?: UserCreateNestedOneWithoutShipmentsCreatedInput
    assignedBy?: UserCreateNestedOneWithoutShipmentsAssignedInput
  }

  export type ShipmentUncheckedCreateWithoutReleasedByInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    assignedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalUncheckedCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesUncheckedCreateNestedOneWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutReleasedByInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutReleasedByInput, ShipmentUncheckedCreateWithoutReleasedByInput>
  }

  export type ShipmentCreateManyReleasedByInputEnvelope = {
    data: ShipmentCreateManyReleasedByInput | ShipmentCreateManyReleasedByInput[]
  }

  export type CompanyUpsertWithoutUsersInput = {
    update: XOR<CompanyUpdateWithoutUsersInput, CompanyUncheckedUpdateWithoutUsersInput>
    create: XOR<CompanyCreateWithoutUsersInput, CompanyUncheckedCreateWithoutUsersInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutUsersInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutUsersInput, CompanyUncheckedUpdateWithoutUsersInput>
  }

  export type CompanyUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type RackActivityUpsertWithWhereUniqueWithoutUserInput = {
    where: RackActivityWhereUniqueInput
    update: XOR<RackActivityUpdateWithoutUserInput, RackActivityUncheckedUpdateWithoutUserInput>
    create: XOR<RackActivityCreateWithoutUserInput, RackActivityUncheckedCreateWithoutUserInput>
  }

  export type RackActivityUpdateWithWhereUniqueWithoutUserInput = {
    where: RackActivityWhereUniqueInput
    data: XOR<RackActivityUpdateWithoutUserInput, RackActivityUncheckedUpdateWithoutUserInput>
  }

  export type RackActivityUpdateManyWithWhereWithoutUserInput = {
    where: RackActivityScalarWhereInput
    data: XOR<RackActivityUpdateManyMutationInput, RackActivityUncheckedUpdateManyWithoutUserInput>
  }

  export type RackActivityScalarWhereInput = {
    AND?: RackActivityScalarWhereInput | RackActivityScalarWhereInput[]
    OR?: RackActivityScalarWhereInput[]
    NOT?: RackActivityScalarWhereInput | RackActivityScalarWhereInput[]
    id?: StringFilter<"RackActivity"> | string
    rackId?: StringFilter<"RackActivity"> | string
    userId?: StringFilter<"RackActivity"> | string
    activityType?: StringFilter<"RackActivity"> | string
    itemDetails?: StringFilter<"RackActivity"> | string
    quantityBefore?: IntNullableFilter<"RackActivity"> | number | null
    quantityAfter?: IntNullableFilter<"RackActivity"> | number | null
    photos?: StringNullableFilter<"RackActivity"> | string | null
    notes?: StringNullableFilter<"RackActivity"> | string | null
    gpsLocation?: StringNullableFilter<"RackActivity"> | string | null
    timestamp?: DateTimeFilter<"RackActivity"> | Date | string
    companyId?: StringFilter<"RackActivity"> | string
  }

  export type JobAssignmentUpsertWithWhereUniqueWithoutUserInput = {
    where: JobAssignmentWhereUniqueInput
    update: XOR<JobAssignmentUpdateWithoutUserInput, JobAssignmentUncheckedUpdateWithoutUserInput>
    create: XOR<JobAssignmentCreateWithoutUserInput, JobAssignmentUncheckedCreateWithoutUserInput>
  }

  export type JobAssignmentUpdateWithWhereUniqueWithoutUserInput = {
    where: JobAssignmentWhereUniqueInput
    data: XOR<JobAssignmentUpdateWithoutUserInput, JobAssignmentUncheckedUpdateWithoutUserInput>
  }

  export type JobAssignmentUpdateManyWithWhereWithoutUserInput = {
    where: JobAssignmentScalarWhereInput
    data: XOR<JobAssignmentUpdateManyMutationInput, JobAssignmentUncheckedUpdateManyWithoutUserInput>
  }

  export type MovingJobUpsertWithWhereUniqueWithoutTeamLeaderInput = {
    where: MovingJobWhereUniqueInput
    update: XOR<MovingJobUpdateWithoutTeamLeaderInput, MovingJobUncheckedUpdateWithoutTeamLeaderInput>
    create: XOR<MovingJobCreateWithoutTeamLeaderInput, MovingJobUncheckedCreateWithoutTeamLeaderInput>
  }

  export type MovingJobUpdateWithWhereUniqueWithoutTeamLeaderInput = {
    where: MovingJobWhereUniqueInput
    data: XOR<MovingJobUpdateWithoutTeamLeaderInput, MovingJobUncheckedUpdateWithoutTeamLeaderInput>
  }

  export type MovingJobUpdateManyWithWhereWithoutTeamLeaderInput = {
    where: MovingJobScalarWhereInput
    data: XOR<MovingJobUpdateManyMutationInput, MovingJobUncheckedUpdateManyWithoutTeamLeaderInput>
  }

  export type StockBatchUpsertWithWhereUniqueWithoutReceivedByInput = {
    where: StockBatchWhereUniqueInput
    update: XOR<StockBatchUpdateWithoutReceivedByInput, StockBatchUncheckedUpdateWithoutReceivedByInput>
    create: XOR<StockBatchCreateWithoutReceivedByInput, StockBatchUncheckedCreateWithoutReceivedByInput>
  }

  export type StockBatchUpdateWithWhereUniqueWithoutReceivedByInput = {
    where: StockBatchWhereUniqueInput
    data: XOR<StockBatchUpdateWithoutReceivedByInput, StockBatchUncheckedUpdateWithoutReceivedByInput>
  }

  export type StockBatchUpdateManyWithWhereWithoutReceivedByInput = {
    where: StockBatchScalarWhereInput
    data: XOR<StockBatchUpdateManyMutationInput, StockBatchUncheckedUpdateManyWithoutReceivedByInput>
  }

  export type MaterialIssueUpsertWithWhereUniqueWithoutIssuedByInput = {
    where: MaterialIssueWhereUniqueInput
    update: XOR<MaterialIssueUpdateWithoutIssuedByInput, MaterialIssueUncheckedUpdateWithoutIssuedByInput>
    create: XOR<MaterialIssueCreateWithoutIssuedByInput, MaterialIssueUncheckedCreateWithoutIssuedByInput>
  }

  export type MaterialIssueUpdateWithWhereUniqueWithoutIssuedByInput = {
    where: MaterialIssueWhereUniqueInput
    data: XOR<MaterialIssueUpdateWithoutIssuedByInput, MaterialIssueUncheckedUpdateWithoutIssuedByInput>
  }

  export type MaterialIssueUpdateManyWithWhereWithoutIssuedByInput = {
    where: MaterialIssueScalarWhereInput
    data: XOR<MaterialIssueUpdateManyMutationInput, MaterialIssueUncheckedUpdateManyWithoutIssuedByInput>
  }

  export type MaterialReturnUpsertWithWhereUniqueWithoutRecordedByInput = {
    where: MaterialReturnWhereUniqueInput
    update: XOR<MaterialReturnUpdateWithoutRecordedByInput, MaterialReturnUncheckedUpdateWithoutRecordedByInput>
    create: XOR<MaterialReturnCreateWithoutRecordedByInput, MaterialReturnUncheckedCreateWithoutRecordedByInput>
  }

  export type MaterialReturnUpdateWithWhereUniqueWithoutRecordedByInput = {
    where: MaterialReturnWhereUniqueInput
    data: XOR<MaterialReturnUpdateWithoutRecordedByInput, MaterialReturnUncheckedUpdateWithoutRecordedByInput>
  }

  export type MaterialReturnUpdateManyWithWhereWithoutRecordedByInput = {
    where: MaterialReturnScalarWhereInput
    data: XOR<MaterialReturnUpdateManyMutationInput, MaterialReturnUncheckedUpdateManyWithoutRecordedByInput>
  }

  export type MaterialDamageUpsertWithWhereUniqueWithoutRecordedByInput = {
    where: MaterialDamageWhereUniqueInput
    update: XOR<MaterialDamageUpdateWithoutRecordedByInput, MaterialDamageUncheckedUpdateWithoutRecordedByInput>
    create: XOR<MaterialDamageCreateWithoutRecordedByInput, MaterialDamageUncheckedCreateWithoutRecordedByInput>
  }

  export type MaterialDamageUpdateWithWhereUniqueWithoutRecordedByInput = {
    where: MaterialDamageWhereUniqueInput
    data: XOR<MaterialDamageUpdateWithoutRecordedByInput, MaterialDamageUncheckedUpdateWithoutRecordedByInput>
  }

  export type MaterialDamageUpdateManyWithWhereWithoutRecordedByInput = {
    where: MaterialDamageScalarWhereInput
    data: XOR<MaterialDamageUpdateManyMutationInput, MaterialDamageUncheckedUpdateManyWithoutRecordedByInput>
  }

  export type MaterialDamageUpsertWithWhereUniqueWithoutApprovedByInput = {
    where: MaterialDamageWhereUniqueInput
    update: XOR<MaterialDamageUpdateWithoutApprovedByInput, MaterialDamageUncheckedUpdateWithoutApprovedByInput>
    create: XOR<MaterialDamageCreateWithoutApprovedByInput, MaterialDamageUncheckedCreateWithoutApprovedByInput>
  }

  export type MaterialDamageUpdateWithWhereUniqueWithoutApprovedByInput = {
    where: MaterialDamageWhereUniqueInput
    data: XOR<MaterialDamageUpdateWithoutApprovedByInput, MaterialDamageUncheckedUpdateWithoutApprovedByInput>
  }

  export type MaterialDamageUpdateManyWithWhereWithoutApprovedByInput = {
    where: MaterialDamageScalarWhereInput
    data: XOR<MaterialDamageUpdateManyMutationInput, MaterialDamageUncheckedUpdateManyWithoutApprovedByInput>
  }

  export type MaterialApprovalUpsertWithWhereUniqueWithoutRequestedByInput = {
    where: MaterialApprovalWhereUniqueInput
    update: XOR<MaterialApprovalUpdateWithoutRequestedByInput, MaterialApprovalUncheckedUpdateWithoutRequestedByInput>
    create: XOR<MaterialApprovalCreateWithoutRequestedByInput, MaterialApprovalUncheckedCreateWithoutRequestedByInput>
  }

  export type MaterialApprovalUpdateWithWhereUniqueWithoutRequestedByInput = {
    where: MaterialApprovalWhereUniqueInput
    data: XOR<MaterialApprovalUpdateWithoutRequestedByInput, MaterialApprovalUncheckedUpdateWithoutRequestedByInput>
  }

  export type MaterialApprovalUpdateManyWithWhereWithoutRequestedByInput = {
    where: MaterialApprovalScalarWhereInput
    data: XOR<MaterialApprovalUpdateManyMutationInput, MaterialApprovalUncheckedUpdateManyWithoutRequestedByInput>
  }

  export type MaterialApprovalUpsertWithWhereUniqueWithoutDecisionByInput = {
    where: MaterialApprovalWhereUniqueInput
    update: XOR<MaterialApprovalUpdateWithoutDecisionByInput, MaterialApprovalUncheckedUpdateWithoutDecisionByInput>
    create: XOR<MaterialApprovalCreateWithoutDecisionByInput, MaterialApprovalUncheckedCreateWithoutDecisionByInput>
  }

  export type MaterialApprovalUpdateWithWhereUniqueWithoutDecisionByInput = {
    where: MaterialApprovalWhereUniqueInput
    data: XOR<MaterialApprovalUpdateWithoutDecisionByInput, MaterialApprovalUncheckedUpdateWithoutDecisionByInput>
  }

  export type MaterialApprovalUpdateManyWithWhereWithoutDecisionByInput = {
    where: MaterialApprovalScalarWhereInput
    data: XOR<MaterialApprovalUpdateManyMutationInput, MaterialApprovalUncheckedUpdateManyWithoutDecisionByInput>
  }

  export type ShipmentUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: ShipmentWhereUniqueInput
    update: XOR<ShipmentUpdateWithoutCreatedByInput, ShipmentUncheckedUpdateWithoutCreatedByInput>
    create: XOR<ShipmentCreateWithoutCreatedByInput, ShipmentUncheckedCreateWithoutCreatedByInput>
  }

  export type ShipmentUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: ShipmentWhereUniqueInput
    data: XOR<ShipmentUpdateWithoutCreatedByInput, ShipmentUncheckedUpdateWithoutCreatedByInput>
  }

  export type ShipmentUpdateManyWithWhereWithoutCreatedByInput = {
    where: ShipmentScalarWhereInput
    data: XOR<ShipmentUpdateManyMutationInput, ShipmentUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type ShipmentUpsertWithWhereUniqueWithoutAssignedByInput = {
    where: ShipmentWhereUniqueInput
    update: XOR<ShipmentUpdateWithoutAssignedByInput, ShipmentUncheckedUpdateWithoutAssignedByInput>
    create: XOR<ShipmentCreateWithoutAssignedByInput, ShipmentUncheckedCreateWithoutAssignedByInput>
  }

  export type ShipmentUpdateWithWhereUniqueWithoutAssignedByInput = {
    where: ShipmentWhereUniqueInput
    data: XOR<ShipmentUpdateWithoutAssignedByInput, ShipmentUncheckedUpdateWithoutAssignedByInput>
  }

  export type ShipmentUpdateManyWithWhereWithoutAssignedByInput = {
    where: ShipmentScalarWhereInput
    data: XOR<ShipmentUpdateManyMutationInput, ShipmentUncheckedUpdateManyWithoutAssignedByInput>
  }

  export type ShipmentUpsertWithWhereUniqueWithoutReleasedByInput = {
    where: ShipmentWhereUniqueInput
    update: XOR<ShipmentUpdateWithoutReleasedByInput, ShipmentUncheckedUpdateWithoutReleasedByInput>
    create: XOR<ShipmentCreateWithoutReleasedByInput, ShipmentUncheckedCreateWithoutReleasedByInput>
  }

  export type ShipmentUpdateWithWhereUniqueWithoutReleasedByInput = {
    where: ShipmentWhereUniqueInput
    data: XOR<ShipmentUpdateWithoutReleasedByInput, ShipmentUncheckedUpdateWithoutReleasedByInput>
  }

  export type ShipmentUpdateManyWithWhereWithoutReleasedByInput = {
    where: ShipmentScalarWhereInput
    data: XOR<ShipmentUpdateManyMutationInput, ShipmentUncheckedUpdateManyWithoutReleasedByInput>
  }

  export type CompanyCreateWithoutRacksInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutRacksInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutRacksInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutRacksInput, CompanyUncheckedCreateWithoutRacksInput>
  }

  export type ShipmentCreateWithoutRackInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    company: CompanyCreateNestedOneWithoutShipmentsInput
    boxes?: ShipmentBoxCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesCreateNestedOneWithoutShipmentInput
    createdBy?: UserCreateNestedOneWithoutShipmentsCreatedInput
    assignedBy?: UserCreateNestedOneWithoutShipmentsAssignedInput
    releasedBy?: UserCreateNestedOneWithoutShipmentsReleasedInput
  }

  export type ShipmentUncheckedCreateWithoutRackInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalUncheckedCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesUncheckedCreateNestedOneWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutRackInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutRackInput, ShipmentUncheckedCreateWithoutRackInput>
  }

  export type ShipmentCreateManyRackInputEnvelope = {
    data: ShipmentCreateManyRackInput | ShipmentCreateManyRackInput[]
  }

  export type ShipmentBoxCreateWithoutRackInput = {
    id?: string
    boxNumber: number
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    pieceWeight?: number | null
    pieceQR?: string | null
    shipment: ShipmentCreateNestedOneWithoutBoxesInput
  }

  export type ShipmentBoxUncheckedCreateWithoutRackInput = {
    id?: string
    shipmentId: string
    boxNumber: number
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    pieceWeight?: number | null
    pieceQR?: string | null
  }

  export type ShipmentBoxCreateOrConnectWithoutRackInput = {
    where: ShipmentBoxWhereUniqueInput
    create: XOR<ShipmentBoxCreateWithoutRackInput, ShipmentBoxUncheckedCreateWithoutRackInput>
  }

  export type ShipmentBoxCreateManyRackInputEnvelope = {
    data: ShipmentBoxCreateManyRackInput | ShipmentBoxCreateManyRackInput[]
  }

  export type RackActivityCreateWithoutRackInput = {
    id?: string
    activityType: string
    itemDetails: string
    quantityBefore?: number | null
    quantityAfter?: number | null
    photos?: string | null
    notes?: string | null
    gpsLocation?: string | null
    timestamp?: Date | string
    companyId: string
    user: UserCreateNestedOneWithoutActivitiesInput
  }

  export type RackActivityUncheckedCreateWithoutRackInput = {
    id?: string
    userId: string
    activityType: string
    itemDetails: string
    quantityBefore?: number | null
    quantityAfter?: number | null
    photos?: string | null
    notes?: string | null
    gpsLocation?: string | null
    timestamp?: Date | string
    companyId: string
  }

  export type RackActivityCreateOrConnectWithoutRackInput = {
    where: RackActivityWhereUniqueInput
    create: XOR<RackActivityCreateWithoutRackInput, RackActivityUncheckedCreateWithoutRackInput>
  }

  export type RackActivityCreateManyRackInputEnvelope = {
    data: RackActivityCreateManyRackInput | RackActivityCreateManyRackInput[]
  }

  export type RackInventoryCreateWithoutRackInput = {
    id?: string
    itemType: string
    itemId: string
    quantityCurrent?: number
    quantityReserved?: number
    lastMovement?: Date | string
    updatedBy?: string | null
    companyId: string
  }

  export type RackInventoryUncheckedCreateWithoutRackInput = {
    id?: string
    itemType: string
    itemId: string
    quantityCurrent?: number
    quantityReserved?: number
    lastMovement?: Date | string
    updatedBy?: string | null
    companyId: string
  }

  export type RackInventoryCreateOrConnectWithoutRackInput = {
    where: RackInventoryWhereUniqueInput
    create: XOR<RackInventoryCreateWithoutRackInput, RackInventoryUncheckedCreateWithoutRackInput>
  }

  export type RackInventoryCreateManyRackInputEnvelope = {
    data: RackInventoryCreateManyRackInput | RackInventoryCreateManyRackInput[]
  }

  export type RackStockLevelCreateWithoutRackInput = {
    id?: string
    quantity: number
    lastUpdated?: Date | string
    material: PackingMaterialCreateNestedOneWithoutRackLevelsInput
    stockBatch?: StockBatchCreateNestedOneWithoutRackAllocationsInput
    company: CompanyCreateNestedOneWithoutRackLevelsInput
  }

  export type RackStockLevelUncheckedCreateWithoutRackInput = {
    id?: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    lastUpdated?: Date | string
    companyId: string
  }

  export type RackStockLevelCreateOrConnectWithoutRackInput = {
    where: RackStockLevelWhereUniqueInput
    create: XOR<RackStockLevelCreateWithoutRackInput, RackStockLevelUncheckedCreateWithoutRackInput>
  }

  export type RackStockLevelCreateManyRackInputEnvelope = {
    data: RackStockLevelCreateManyRackInput | RackStockLevelCreateManyRackInput[]
  }

  export type MaterialReturnCreateWithoutRackInput = {
    id?: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialReturnsInput
    material: PackingMaterialCreateNestedOneWithoutMaterialReturnsInput
    issue?: MaterialIssueCreateNestedOneWithoutReturnsInput
    recordedBy?: UserCreateNestedOneWithoutMaterialReturnsRecordedInput
    damages?: MaterialDamageCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectReturnInput
    company: CompanyCreateNestedOneWithoutMaterialReturnsInput
  }

  export type MaterialReturnUncheckedCreateWithoutRackInput = {
    id?: string
    jobId: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
    damages?: MaterialDamageUncheckedCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectReturnInput
  }

  export type MaterialReturnCreateOrConnectWithoutRackInput = {
    where: MaterialReturnWhereUniqueInput
    create: XOR<MaterialReturnCreateWithoutRackInput, MaterialReturnUncheckedCreateWithoutRackInput>
  }

  export type MaterialReturnCreateManyRackInputEnvelope = {
    data: MaterialReturnCreateManyRackInput | MaterialReturnCreateManyRackInput[]
  }

  export type MaterialIssueCreateWithoutRackInput = {
    id?: string
    quantity: number
    unitCost: number
    totalCost: number
    issuedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialIssuesInput
    material: PackingMaterialCreateNestedOneWithoutMaterialIssuesInput
    stockBatch?: StockBatchCreateNestedOneWithoutIssuesInput
    issuedBy?: UserCreateNestedOneWithoutMaterialIssuesCreatedInput
    company: CompanyCreateNestedOneWithoutMaterialIssuesInput
    returns?: MaterialReturnCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueUncheckedCreateWithoutRackInput = {
    id?: string
    jobId: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
    returns?: MaterialReturnUncheckedCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueCreateOrConnectWithoutRackInput = {
    where: MaterialIssueWhereUniqueInput
    create: XOR<MaterialIssueCreateWithoutRackInput, MaterialIssueUncheckedCreateWithoutRackInput>
  }

  export type MaterialIssueCreateManyRackInputEnvelope = {
    data: MaterialIssueCreateManyRackInput | MaterialIssueCreateManyRackInput[]
  }

  export type CompanyUpsertWithoutRacksInput = {
    update: XOR<CompanyUpdateWithoutRacksInput, CompanyUncheckedUpdateWithoutRacksInput>
    create: XOR<CompanyCreateWithoutRacksInput, CompanyUncheckedCreateWithoutRacksInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutRacksInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutRacksInput, CompanyUncheckedUpdateWithoutRacksInput>
  }

  export type CompanyUpdateWithoutRacksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutRacksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type ShipmentUpsertWithWhereUniqueWithoutRackInput = {
    where: ShipmentWhereUniqueInput
    update: XOR<ShipmentUpdateWithoutRackInput, ShipmentUncheckedUpdateWithoutRackInput>
    create: XOR<ShipmentCreateWithoutRackInput, ShipmentUncheckedCreateWithoutRackInput>
  }

  export type ShipmentUpdateWithWhereUniqueWithoutRackInput = {
    where: ShipmentWhereUniqueInput
    data: XOR<ShipmentUpdateWithoutRackInput, ShipmentUncheckedUpdateWithoutRackInput>
  }

  export type ShipmentUpdateManyWithWhereWithoutRackInput = {
    where: ShipmentScalarWhereInput
    data: XOR<ShipmentUpdateManyMutationInput, ShipmentUncheckedUpdateManyWithoutRackInput>
  }

  export type ShipmentBoxUpsertWithWhereUniqueWithoutRackInput = {
    where: ShipmentBoxWhereUniqueInput
    update: XOR<ShipmentBoxUpdateWithoutRackInput, ShipmentBoxUncheckedUpdateWithoutRackInput>
    create: XOR<ShipmentBoxCreateWithoutRackInput, ShipmentBoxUncheckedCreateWithoutRackInput>
  }

  export type ShipmentBoxUpdateWithWhereUniqueWithoutRackInput = {
    where: ShipmentBoxWhereUniqueInput
    data: XOR<ShipmentBoxUpdateWithoutRackInput, ShipmentBoxUncheckedUpdateWithoutRackInput>
  }

  export type ShipmentBoxUpdateManyWithWhereWithoutRackInput = {
    where: ShipmentBoxScalarWhereInput
    data: XOR<ShipmentBoxUpdateManyMutationInput, ShipmentBoxUncheckedUpdateManyWithoutRackInput>
  }

  export type ShipmentBoxScalarWhereInput = {
    AND?: ShipmentBoxScalarWhereInput | ShipmentBoxScalarWhereInput[]
    OR?: ShipmentBoxScalarWhereInput[]
    NOT?: ShipmentBoxScalarWhereInput | ShipmentBoxScalarWhereInput[]
    id?: StringFilter<"ShipmentBox"> | string
    shipmentId?: StringFilter<"ShipmentBox"> | string
    boxNumber?: IntFilter<"ShipmentBox"> | number
    qrCode?: StringFilter<"ShipmentBox"> | string
    rackId?: StringNullableFilter<"ShipmentBox"> | string | null
    status?: StringFilter<"ShipmentBox"> | string
    assignedAt?: DateTimeNullableFilter<"ShipmentBox"> | Date | string | null
    releasedAt?: DateTimeNullableFilter<"ShipmentBox"> | Date | string | null
    companyId?: StringFilter<"ShipmentBox"> | string
    createdAt?: DateTimeFilter<"ShipmentBox"> | Date | string
    updatedAt?: DateTimeFilter<"ShipmentBox"> | Date | string
    pieceWeight?: FloatNullableFilter<"ShipmentBox"> | number | null
    pieceQR?: StringNullableFilter<"ShipmentBox"> | string | null
  }

  export type RackActivityUpsertWithWhereUniqueWithoutRackInput = {
    where: RackActivityWhereUniqueInput
    update: XOR<RackActivityUpdateWithoutRackInput, RackActivityUncheckedUpdateWithoutRackInput>
    create: XOR<RackActivityCreateWithoutRackInput, RackActivityUncheckedCreateWithoutRackInput>
  }

  export type RackActivityUpdateWithWhereUniqueWithoutRackInput = {
    where: RackActivityWhereUniqueInput
    data: XOR<RackActivityUpdateWithoutRackInput, RackActivityUncheckedUpdateWithoutRackInput>
  }

  export type RackActivityUpdateManyWithWhereWithoutRackInput = {
    where: RackActivityScalarWhereInput
    data: XOR<RackActivityUpdateManyMutationInput, RackActivityUncheckedUpdateManyWithoutRackInput>
  }

  export type RackInventoryUpsertWithWhereUniqueWithoutRackInput = {
    where: RackInventoryWhereUniqueInput
    update: XOR<RackInventoryUpdateWithoutRackInput, RackInventoryUncheckedUpdateWithoutRackInput>
    create: XOR<RackInventoryCreateWithoutRackInput, RackInventoryUncheckedCreateWithoutRackInput>
  }

  export type RackInventoryUpdateWithWhereUniqueWithoutRackInput = {
    where: RackInventoryWhereUniqueInput
    data: XOR<RackInventoryUpdateWithoutRackInput, RackInventoryUncheckedUpdateWithoutRackInput>
  }

  export type RackInventoryUpdateManyWithWhereWithoutRackInput = {
    where: RackInventoryScalarWhereInput
    data: XOR<RackInventoryUpdateManyMutationInput, RackInventoryUncheckedUpdateManyWithoutRackInput>
  }

  export type RackInventoryScalarWhereInput = {
    AND?: RackInventoryScalarWhereInput | RackInventoryScalarWhereInput[]
    OR?: RackInventoryScalarWhereInput[]
    NOT?: RackInventoryScalarWhereInput | RackInventoryScalarWhereInput[]
    id?: StringFilter<"RackInventory"> | string
    rackId?: StringFilter<"RackInventory"> | string
    itemType?: StringFilter<"RackInventory"> | string
    itemId?: StringFilter<"RackInventory"> | string
    quantityCurrent?: IntFilter<"RackInventory"> | number
    quantityReserved?: IntFilter<"RackInventory"> | number
    lastMovement?: DateTimeFilter<"RackInventory"> | Date | string
    updatedBy?: StringNullableFilter<"RackInventory"> | string | null
    companyId?: StringFilter<"RackInventory"> | string
  }

  export type RackStockLevelUpsertWithWhereUniqueWithoutRackInput = {
    where: RackStockLevelWhereUniqueInput
    update: XOR<RackStockLevelUpdateWithoutRackInput, RackStockLevelUncheckedUpdateWithoutRackInput>
    create: XOR<RackStockLevelCreateWithoutRackInput, RackStockLevelUncheckedCreateWithoutRackInput>
  }

  export type RackStockLevelUpdateWithWhereUniqueWithoutRackInput = {
    where: RackStockLevelWhereUniqueInput
    data: XOR<RackStockLevelUpdateWithoutRackInput, RackStockLevelUncheckedUpdateWithoutRackInput>
  }

  export type RackStockLevelUpdateManyWithWhereWithoutRackInput = {
    where: RackStockLevelScalarWhereInput
    data: XOR<RackStockLevelUpdateManyMutationInput, RackStockLevelUncheckedUpdateManyWithoutRackInput>
  }

  export type MaterialReturnUpsertWithWhereUniqueWithoutRackInput = {
    where: MaterialReturnWhereUniqueInput
    update: XOR<MaterialReturnUpdateWithoutRackInput, MaterialReturnUncheckedUpdateWithoutRackInput>
    create: XOR<MaterialReturnCreateWithoutRackInput, MaterialReturnUncheckedCreateWithoutRackInput>
  }

  export type MaterialReturnUpdateWithWhereUniqueWithoutRackInput = {
    where: MaterialReturnWhereUniqueInput
    data: XOR<MaterialReturnUpdateWithoutRackInput, MaterialReturnUncheckedUpdateWithoutRackInput>
  }

  export type MaterialReturnUpdateManyWithWhereWithoutRackInput = {
    where: MaterialReturnScalarWhereInput
    data: XOR<MaterialReturnUpdateManyMutationInput, MaterialReturnUncheckedUpdateManyWithoutRackInput>
  }

  export type MaterialIssueUpsertWithWhereUniqueWithoutRackInput = {
    where: MaterialIssueWhereUniqueInput
    update: XOR<MaterialIssueUpdateWithoutRackInput, MaterialIssueUncheckedUpdateWithoutRackInput>
    create: XOR<MaterialIssueCreateWithoutRackInput, MaterialIssueUncheckedCreateWithoutRackInput>
  }

  export type MaterialIssueUpdateWithWhereUniqueWithoutRackInput = {
    where: MaterialIssueWhereUniqueInput
    data: XOR<MaterialIssueUpdateWithoutRackInput, MaterialIssueUncheckedUpdateWithoutRackInput>
  }

  export type MaterialIssueUpdateManyWithWhereWithoutRackInput = {
    where: MaterialIssueScalarWhereInput
    data: XOR<MaterialIssueUpdateManyMutationInput, MaterialIssueUncheckedUpdateManyWithoutRackInput>
  }

  export type RackCreateWithoutInventoryInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutRacksInput
    shipments?: ShipmentCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxCreateNestedManyWithoutRackInput
    activities?: RackActivityCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueCreateNestedManyWithoutRackInput
  }

  export type RackUncheckedCreateWithoutInventoryInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shipments?: ShipmentUncheckedCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutRackInput
    activities?: RackActivityUncheckedCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelUncheckedCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnUncheckedCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueUncheckedCreateNestedManyWithoutRackInput
  }

  export type RackCreateOrConnectWithoutInventoryInput = {
    where: RackWhereUniqueInput
    create: XOR<RackCreateWithoutInventoryInput, RackUncheckedCreateWithoutInventoryInput>
  }

  export type RackUpsertWithoutInventoryInput = {
    update: XOR<RackUpdateWithoutInventoryInput, RackUncheckedUpdateWithoutInventoryInput>
    create: XOR<RackCreateWithoutInventoryInput, RackUncheckedCreateWithoutInventoryInput>
    where?: RackWhereInput
  }

  export type RackUpdateToOneWithWhereWithoutInventoryInput = {
    where?: RackWhereInput
    data: XOR<RackUpdateWithoutInventoryInput, RackUncheckedUpdateWithoutInventoryInput>
  }

  export type RackUpdateWithoutInventoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutRacksNestedInput
    shipments?: ShipmentUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutRackNestedInput
    activities?: RackActivityUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUpdateManyWithoutRackNestedInput
  }

  export type RackUncheckedUpdateWithoutInventoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipments?: ShipmentUncheckedUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutRackNestedInput
    activities?: RackActivityUncheckedUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUncheckedUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUncheckedUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUncheckedUpdateManyWithoutRackNestedInput
  }

  export type RackCreateWithoutActivitiesInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutRacksInput
    shipments?: ShipmentCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxCreateNestedManyWithoutRackInput
    inventory?: RackInventoryCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueCreateNestedManyWithoutRackInput
  }

  export type RackUncheckedCreateWithoutActivitiesInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shipments?: ShipmentUncheckedCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutRackInput
    inventory?: RackInventoryUncheckedCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelUncheckedCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnUncheckedCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueUncheckedCreateNestedManyWithoutRackInput
  }

  export type RackCreateOrConnectWithoutActivitiesInput = {
    where: RackWhereUniqueInput
    create: XOR<RackCreateWithoutActivitiesInput, RackUncheckedCreateWithoutActivitiesInput>
  }

  export type UserCreateWithoutActivitiesInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutActivitiesInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutActivitiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutActivitiesInput, UserUncheckedCreateWithoutActivitiesInput>
  }

  export type RackUpsertWithoutActivitiesInput = {
    update: XOR<RackUpdateWithoutActivitiesInput, RackUncheckedUpdateWithoutActivitiesInput>
    create: XOR<RackCreateWithoutActivitiesInput, RackUncheckedCreateWithoutActivitiesInput>
    where?: RackWhereInput
  }

  export type RackUpdateToOneWithWhereWithoutActivitiesInput = {
    where?: RackWhereInput
    data: XOR<RackUpdateWithoutActivitiesInput, RackUncheckedUpdateWithoutActivitiesInput>
  }

  export type RackUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutRacksNestedInput
    shipments?: ShipmentUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUpdateManyWithoutRackNestedInput
  }

  export type RackUncheckedUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipments?: ShipmentUncheckedUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUncheckedUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUncheckedUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUncheckedUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUncheckedUpdateManyWithoutRackNestedInput
  }

  export type UserUpsertWithoutActivitiesInput = {
    update: XOR<UserUpdateWithoutActivitiesInput, UserUncheckedUpdateWithoutActivitiesInput>
    create: XOR<UserCreateWithoutActivitiesInput, UserUncheckedCreateWithoutActivitiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutActivitiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutActivitiesInput, UserUncheckedUpdateWithoutActivitiesInput>
  }

  export type UserUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type CompanyCreateWithoutShipmentsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutShipmentsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutShipmentsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutShipmentsInput, CompanyUncheckedCreateWithoutShipmentsInput>
  }

  export type RackCreateWithoutShipmentsInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutRacksInput
    boxes?: ShipmentBoxCreateNestedManyWithoutRackInput
    activities?: RackActivityCreateNestedManyWithoutRackInput
    inventory?: RackInventoryCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueCreateNestedManyWithoutRackInput
  }

  export type RackUncheckedCreateWithoutShipmentsInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutRackInput
    activities?: RackActivityUncheckedCreateNestedManyWithoutRackInput
    inventory?: RackInventoryUncheckedCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelUncheckedCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnUncheckedCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueUncheckedCreateNestedManyWithoutRackInput
  }

  export type RackCreateOrConnectWithoutShipmentsInput = {
    where: RackWhereUniqueInput
    create: XOR<RackCreateWithoutShipmentsInput, RackUncheckedCreateWithoutShipmentsInput>
  }

  export type ShipmentBoxCreateWithoutShipmentInput = {
    id?: string
    boxNumber: number
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    pieceWeight?: number | null
    pieceQR?: string | null
    rack?: RackCreateNestedOneWithoutBoxesInput
  }

  export type ShipmentBoxUncheckedCreateWithoutShipmentInput = {
    id?: string
    boxNumber: number
    qrCode: string
    rackId?: string | null
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    pieceWeight?: number | null
    pieceQR?: string | null
  }

  export type ShipmentBoxCreateOrConnectWithoutShipmentInput = {
    where: ShipmentBoxWhereUniqueInput
    create: XOR<ShipmentBoxCreateWithoutShipmentInput, ShipmentBoxUncheckedCreateWithoutShipmentInput>
  }

  export type ShipmentBoxCreateManyShipmentInputEnvelope = {
    data: ShipmentBoxCreateManyShipmentInput | ShipmentBoxCreateManyShipmentInput[]
  }

  export type WithdrawalCreateWithoutShipmentInput = {
    id?: string
    withdrawnBoxCount: number
    remainingBoxCount: number
    withdrawalDate?: Date | string
    status?: string
    reason?: string | null
    notes?: string | null
    photos?: string | null
    receiptNumber?: string | null
    withdrawnBy: string
    authorizedBy?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WithdrawalUncheckedCreateWithoutShipmentInput = {
    id?: string
    withdrawnBoxCount: number
    remainingBoxCount: number
    withdrawalDate?: Date | string
    status?: string
    reason?: string | null
    notes?: string | null
    photos?: string | null
    receiptNumber?: string | null
    withdrawnBy: string
    authorizedBy?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WithdrawalCreateOrConnectWithoutShipmentInput = {
    where: WithdrawalWhereUniqueInput
    create: XOR<WithdrawalCreateWithoutShipmentInput, WithdrawalUncheckedCreateWithoutShipmentInput>
  }

  export type WithdrawalCreateManyShipmentInputEnvelope = {
    data: WithdrawalCreateManyShipmentInput | WithdrawalCreateManyShipmentInput[]
  }

  export type InvoiceCreateWithoutShipmentInput = {
    id?: string
    invoiceNumber: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutInvoicesInput
    lineItems?: InvoiceLineItemCreateNestedManyWithoutInvoiceInput
    payments?: PaymentCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutShipmentInput = {
    id?: string
    invoiceNumber: string
    companyId: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutInvoiceInput
    payments?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutShipmentInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutShipmentInput, InvoiceUncheckedCreateWithoutShipmentInput>
  }

  export type InvoiceCreateManyShipmentInputEnvelope = {
    data: InvoiceCreateManyShipmentInput | InvoiceCreateManyShipmentInput[]
  }

  export type ShipmentChargesCreateWithoutShipmentInput = {
    id?: string
    currentStorageCharge?: number
    daysStored?: number
    lastCalculatedDate?: Date | string
    totalBoxesReleased?: number
    totalInvoiced?: number
    totalPaid?: number
    outstandingBalance?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutShipmentChargesInput
  }

  export type ShipmentChargesUncheckedCreateWithoutShipmentInput = {
    id?: string
    companyId: string
    currentStorageCharge?: number
    daysStored?: number
    lastCalculatedDate?: Date | string
    totalBoxesReleased?: number
    totalInvoiced?: number
    totalPaid?: number
    outstandingBalance?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentChargesCreateOrConnectWithoutShipmentInput = {
    where: ShipmentChargesWhereUniqueInput
    create: XOR<ShipmentChargesCreateWithoutShipmentInput, ShipmentChargesUncheckedCreateWithoutShipmentInput>
  }

  export type UserCreateWithoutShipmentsCreatedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutShipmentsCreatedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutShipmentsCreatedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutShipmentsCreatedInput, UserUncheckedCreateWithoutShipmentsCreatedInput>
  }

  export type UserCreateWithoutShipmentsAssignedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutShipmentsAssignedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutShipmentsAssignedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutShipmentsAssignedInput, UserUncheckedCreateWithoutShipmentsAssignedInput>
  }

  export type UserCreateWithoutShipmentsReleasedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
  }

  export type UserUncheckedCreateWithoutShipmentsReleasedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
  }

  export type UserCreateOrConnectWithoutShipmentsReleasedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutShipmentsReleasedInput, UserUncheckedCreateWithoutShipmentsReleasedInput>
  }

  export type CompanyUpsertWithoutShipmentsInput = {
    update: XOR<CompanyUpdateWithoutShipmentsInput, CompanyUncheckedUpdateWithoutShipmentsInput>
    create: XOR<CompanyCreateWithoutShipmentsInput, CompanyUncheckedCreateWithoutShipmentsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutShipmentsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutShipmentsInput, CompanyUncheckedUpdateWithoutShipmentsInput>
  }

  export type CompanyUpdateWithoutShipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutShipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type RackUpsertWithoutShipmentsInput = {
    update: XOR<RackUpdateWithoutShipmentsInput, RackUncheckedUpdateWithoutShipmentsInput>
    create: XOR<RackCreateWithoutShipmentsInput, RackUncheckedCreateWithoutShipmentsInput>
    where?: RackWhereInput
  }

  export type RackUpdateToOneWithWhereWithoutShipmentsInput = {
    where?: RackWhereInput
    data: XOR<RackUpdateWithoutShipmentsInput, RackUncheckedUpdateWithoutShipmentsInput>
  }

  export type RackUpdateWithoutShipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutRacksNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutRackNestedInput
    activities?: RackActivityUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUpdateManyWithoutRackNestedInput
  }

  export type RackUncheckedUpdateWithoutShipmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutRackNestedInput
    activities?: RackActivityUncheckedUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUncheckedUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUncheckedUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUncheckedUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUncheckedUpdateManyWithoutRackNestedInput
  }

  export type ShipmentBoxUpsertWithWhereUniqueWithoutShipmentInput = {
    where: ShipmentBoxWhereUniqueInput
    update: XOR<ShipmentBoxUpdateWithoutShipmentInput, ShipmentBoxUncheckedUpdateWithoutShipmentInput>
    create: XOR<ShipmentBoxCreateWithoutShipmentInput, ShipmentBoxUncheckedCreateWithoutShipmentInput>
  }

  export type ShipmentBoxUpdateWithWhereUniqueWithoutShipmentInput = {
    where: ShipmentBoxWhereUniqueInput
    data: XOR<ShipmentBoxUpdateWithoutShipmentInput, ShipmentBoxUncheckedUpdateWithoutShipmentInput>
  }

  export type ShipmentBoxUpdateManyWithWhereWithoutShipmentInput = {
    where: ShipmentBoxScalarWhereInput
    data: XOR<ShipmentBoxUpdateManyMutationInput, ShipmentBoxUncheckedUpdateManyWithoutShipmentInput>
  }

  export type WithdrawalUpsertWithWhereUniqueWithoutShipmentInput = {
    where: WithdrawalWhereUniqueInput
    update: XOR<WithdrawalUpdateWithoutShipmentInput, WithdrawalUncheckedUpdateWithoutShipmentInput>
    create: XOR<WithdrawalCreateWithoutShipmentInput, WithdrawalUncheckedCreateWithoutShipmentInput>
  }

  export type WithdrawalUpdateWithWhereUniqueWithoutShipmentInput = {
    where: WithdrawalWhereUniqueInput
    data: XOR<WithdrawalUpdateWithoutShipmentInput, WithdrawalUncheckedUpdateWithoutShipmentInput>
  }

  export type WithdrawalUpdateManyWithWhereWithoutShipmentInput = {
    where: WithdrawalScalarWhereInput
    data: XOR<WithdrawalUpdateManyMutationInput, WithdrawalUncheckedUpdateManyWithoutShipmentInput>
  }

  export type WithdrawalScalarWhereInput = {
    AND?: WithdrawalScalarWhereInput | WithdrawalScalarWhereInput[]
    OR?: WithdrawalScalarWhereInput[]
    NOT?: WithdrawalScalarWhereInput | WithdrawalScalarWhereInput[]
    id?: StringFilter<"Withdrawal"> | string
    shipmentId?: StringFilter<"Withdrawal"> | string
    withdrawnBoxCount?: IntFilter<"Withdrawal"> | number
    remainingBoxCount?: IntFilter<"Withdrawal"> | number
    withdrawalDate?: DateTimeFilter<"Withdrawal"> | Date | string
    status?: StringFilter<"Withdrawal"> | string
    reason?: StringNullableFilter<"Withdrawal"> | string | null
    notes?: StringNullableFilter<"Withdrawal"> | string | null
    photos?: StringNullableFilter<"Withdrawal"> | string | null
    receiptNumber?: StringNullableFilter<"Withdrawal"> | string | null
    withdrawnBy?: StringFilter<"Withdrawal"> | string
    authorizedBy?: StringNullableFilter<"Withdrawal"> | string | null
    companyId?: StringFilter<"Withdrawal"> | string
    createdAt?: DateTimeFilter<"Withdrawal"> | Date | string
    updatedAt?: DateTimeFilter<"Withdrawal"> | Date | string
  }

  export type InvoiceUpsertWithWhereUniqueWithoutShipmentInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutShipmentInput, InvoiceUncheckedUpdateWithoutShipmentInput>
    create: XOR<InvoiceCreateWithoutShipmentInput, InvoiceUncheckedCreateWithoutShipmentInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutShipmentInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutShipmentInput, InvoiceUncheckedUpdateWithoutShipmentInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutShipmentInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutShipmentInput>
  }

  export type ShipmentChargesUpsertWithoutShipmentInput = {
    update: XOR<ShipmentChargesUpdateWithoutShipmentInput, ShipmentChargesUncheckedUpdateWithoutShipmentInput>
    create: XOR<ShipmentChargesCreateWithoutShipmentInput, ShipmentChargesUncheckedCreateWithoutShipmentInput>
    where?: ShipmentChargesWhereInput
  }

  export type ShipmentChargesUpdateToOneWithWhereWithoutShipmentInput = {
    where?: ShipmentChargesWhereInput
    data: XOR<ShipmentChargesUpdateWithoutShipmentInput, ShipmentChargesUncheckedUpdateWithoutShipmentInput>
  }

  export type ShipmentChargesUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    currentStorageCharge?: FloatFieldUpdateOperationsInput | number
    daysStored?: IntFieldUpdateOperationsInput | number
    lastCalculatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalBoxesReleased?: IntFieldUpdateOperationsInput | number
    totalInvoiced?: FloatFieldUpdateOperationsInput | number
    totalPaid?: FloatFieldUpdateOperationsInput | number
    outstandingBalance?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutShipmentChargesNestedInput
  }

  export type ShipmentChargesUncheckedUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    currentStorageCharge?: FloatFieldUpdateOperationsInput | number
    daysStored?: IntFieldUpdateOperationsInput | number
    lastCalculatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalBoxesReleased?: IntFieldUpdateOperationsInput | number
    totalInvoiced?: FloatFieldUpdateOperationsInput | number
    totalPaid?: FloatFieldUpdateOperationsInput | number
    outstandingBalance?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutShipmentsCreatedInput = {
    update: XOR<UserUpdateWithoutShipmentsCreatedInput, UserUncheckedUpdateWithoutShipmentsCreatedInput>
    create: XOR<UserCreateWithoutShipmentsCreatedInput, UserUncheckedCreateWithoutShipmentsCreatedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutShipmentsCreatedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutShipmentsCreatedInput, UserUncheckedUpdateWithoutShipmentsCreatedInput>
  }

  export type UserUpdateWithoutShipmentsCreatedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutShipmentsCreatedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUpsertWithoutShipmentsAssignedInput = {
    update: XOR<UserUpdateWithoutShipmentsAssignedInput, UserUncheckedUpdateWithoutShipmentsAssignedInput>
    create: XOR<UserCreateWithoutShipmentsAssignedInput, UserUncheckedCreateWithoutShipmentsAssignedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutShipmentsAssignedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutShipmentsAssignedInput, UserUncheckedUpdateWithoutShipmentsAssignedInput>
  }

  export type UserUpdateWithoutShipmentsAssignedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutShipmentsAssignedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUpsertWithoutShipmentsReleasedInput = {
    update: XOR<UserUpdateWithoutShipmentsReleasedInput, UserUncheckedUpdateWithoutShipmentsReleasedInput>
    create: XOR<UserCreateWithoutShipmentsReleasedInput, UserUncheckedCreateWithoutShipmentsReleasedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutShipmentsReleasedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutShipmentsReleasedInput, UserUncheckedUpdateWithoutShipmentsReleasedInput>
  }

  export type UserUpdateWithoutShipmentsReleasedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
  }

  export type UserUncheckedUpdateWithoutShipmentsReleasedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
  }

  export type ShipmentCreateWithoutBoxesInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    company: CompanyCreateNestedOneWithoutShipmentsInput
    rack?: RackCreateNestedOneWithoutShipmentsInput
    withdrawals?: WithdrawalCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesCreateNestedOneWithoutShipmentInput
    createdBy?: UserCreateNestedOneWithoutShipmentsCreatedInput
    assignedBy?: UserCreateNestedOneWithoutShipmentsAssignedInput
    releasedBy?: UserCreateNestedOneWithoutShipmentsReleasedInput
  }

  export type ShipmentUncheckedCreateWithoutBoxesInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    withdrawals?: WithdrawalUncheckedCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesUncheckedCreateNestedOneWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutBoxesInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutBoxesInput, ShipmentUncheckedCreateWithoutBoxesInput>
  }

  export type RackCreateWithoutBoxesInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutRacksInput
    shipments?: ShipmentCreateNestedManyWithoutRackInput
    activities?: RackActivityCreateNestedManyWithoutRackInput
    inventory?: RackInventoryCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueCreateNestedManyWithoutRackInput
  }

  export type RackUncheckedCreateWithoutBoxesInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shipments?: ShipmentUncheckedCreateNestedManyWithoutRackInput
    activities?: RackActivityUncheckedCreateNestedManyWithoutRackInput
    inventory?: RackInventoryUncheckedCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelUncheckedCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnUncheckedCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueUncheckedCreateNestedManyWithoutRackInput
  }

  export type RackCreateOrConnectWithoutBoxesInput = {
    where: RackWhereUniqueInput
    create: XOR<RackCreateWithoutBoxesInput, RackUncheckedCreateWithoutBoxesInput>
  }

  export type ShipmentUpsertWithoutBoxesInput = {
    update: XOR<ShipmentUpdateWithoutBoxesInput, ShipmentUncheckedUpdateWithoutBoxesInput>
    create: XOR<ShipmentCreateWithoutBoxesInput, ShipmentUncheckedCreateWithoutBoxesInput>
    where?: ShipmentWhereInput
  }

  export type ShipmentUpdateToOneWithWhereWithoutBoxesInput = {
    where?: ShipmentWhereInput
    data: XOR<ShipmentUpdateWithoutBoxesInput, ShipmentUncheckedUpdateWithoutBoxesInput>
  }

  export type ShipmentUpdateWithoutBoxesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutShipmentsNestedInput
    rack?: RackUpdateOneWithoutShipmentsNestedInput
    withdrawals?: WithdrawalUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUpdateOneWithoutShipmentNestedInput
    createdBy?: UserUpdateOneWithoutShipmentsCreatedNestedInput
    assignedBy?: UserUpdateOneWithoutShipmentsAssignedNestedInput
    releasedBy?: UserUpdateOneWithoutShipmentsReleasedNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutBoxesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    withdrawals?: WithdrawalUncheckedUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUncheckedUpdateOneWithoutShipmentNestedInput
  }

  export type RackUpsertWithoutBoxesInput = {
    update: XOR<RackUpdateWithoutBoxesInput, RackUncheckedUpdateWithoutBoxesInput>
    create: XOR<RackCreateWithoutBoxesInput, RackUncheckedCreateWithoutBoxesInput>
    where?: RackWhereInput
  }

  export type RackUpdateToOneWithWhereWithoutBoxesInput = {
    where?: RackWhereInput
    data: XOR<RackUpdateWithoutBoxesInput, RackUncheckedUpdateWithoutBoxesInput>
  }

  export type RackUpdateWithoutBoxesInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutRacksNestedInput
    shipments?: ShipmentUpdateManyWithoutRackNestedInput
    activities?: RackActivityUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUpdateManyWithoutRackNestedInput
  }

  export type RackUncheckedUpdateWithoutBoxesInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipments?: ShipmentUncheckedUpdateManyWithoutRackNestedInput
    activities?: RackActivityUncheckedUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUncheckedUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUncheckedUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUncheckedUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUncheckedUpdateManyWithoutRackNestedInput
  }

  export type ShipmentCreateWithoutWithdrawalsInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    company: CompanyCreateNestedOneWithoutShipmentsInput
    rack?: RackCreateNestedOneWithoutShipmentsInput
    boxes?: ShipmentBoxCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesCreateNestedOneWithoutShipmentInput
    createdBy?: UserCreateNestedOneWithoutShipmentsCreatedInput
    assignedBy?: UserCreateNestedOneWithoutShipmentsAssignedInput
    releasedBy?: UserCreateNestedOneWithoutShipmentsReleasedInput
  }

  export type ShipmentUncheckedCreateWithoutWithdrawalsInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesUncheckedCreateNestedOneWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutWithdrawalsInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutWithdrawalsInput, ShipmentUncheckedCreateWithoutWithdrawalsInput>
  }

  export type ShipmentUpsertWithoutWithdrawalsInput = {
    update: XOR<ShipmentUpdateWithoutWithdrawalsInput, ShipmentUncheckedUpdateWithoutWithdrawalsInput>
    create: XOR<ShipmentCreateWithoutWithdrawalsInput, ShipmentUncheckedCreateWithoutWithdrawalsInput>
    where?: ShipmentWhereInput
  }

  export type ShipmentUpdateToOneWithWhereWithoutWithdrawalsInput = {
    where?: ShipmentWhereInput
    data: XOR<ShipmentUpdateWithoutWithdrawalsInput, ShipmentUncheckedUpdateWithoutWithdrawalsInput>
  }

  export type ShipmentUpdateWithoutWithdrawalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutShipmentsNestedInput
    rack?: RackUpdateOneWithoutShipmentsNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUpdateOneWithoutShipmentNestedInput
    createdBy?: UserUpdateOneWithoutShipmentsCreatedNestedInput
    assignedBy?: UserUpdateOneWithoutShipmentsAssignedNestedInput
    releasedBy?: UserUpdateOneWithoutShipmentsReleasedNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutWithdrawalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUncheckedUpdateOneWithoutShipmentNestedInput
  }

  export type CompanyCreateWithoutExpensesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutExpensesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutExpensesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutExpensesInput, CompanyUncheckedCreateWithoutExpensesInput>
  }

  export type CompanyUpsertWithoutExpensesInput = {
    update: XOR<CompanyUpdateWithoutExpensesInput, CompanyUncheckedUpdateWithoutExpensesInput>
    create: XOR<CompanyCreateWithoutExpensesInput, CompanyUncheckedCreateWithoutExpensesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutExpensesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutExpensesInput, CompanyUncheckedUpdateWithoutExpensesInput>
  }

  export type CompanyUpdateWithoutExpensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutExpensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutInvoiceSettingsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutInvoiceSettingsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutInvoiceSettingsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutInvoiceSettingsInput, CompanyUncheckedCreateWithoutInvoiceSettingsInput>
  }

  export type CompanyUpsertWithoutInvoiceSettingsInput = {
    update: XOR<CompanyUpdateWithoutInvoiceSettingsInput, CompanyUncheckedUpdateWithoutInvoiceSettingsInput>
    create: XOR<CompanyCreateWithoutInvoiceSettingsInput, CompanyUncheckedCreateWithoutInvoiceSettingsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutInvoiceSettingsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutInvoiceSettingsInput, CompanyUncheckedUpdateWithoutInvoiceSettingsInput>
  }

  export type CompanyUpdateWithoutInvoiceSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutInvoiceSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutBillingSettingsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutBillingSettingsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutBillingSettingsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutBillingSettingsInput, CompanyUncheckedCreateWithoutBillingSettingsInput>
  }

  export type ChargeTypeCreateWithoutBillingSettingsInput = {
    id?: string
    name: string
    code: string
    description?: string | null
    category: string
    calculationType: string
    rate: number
    minCharge?: number | null
    maxCharge?: number | null
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutChargeTypesInput
  }

  export type ChargeTypeUncheckedCreateWithoutBillingSettingsInput = {
    id?: string
    companyId: string
    name: string
    code: string
    description?: string | null
    category: string
    calculationType: string
    rate: number
    minCharge?: number | null
    maxCharge?: number | null
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ChargeTypeCreateOrConnectWithoutBillingSettingsInput = {
    where: ChargeTypeWhereUniqueInput
    create: XOR<ChargeTypeCreateWithoutBillingSettingsInput, ChargeTypeUncheckedCreateWithoutBillingSettingsInput>
  }

  export type ChargeTypeCreateManyBillingSettingsInputEnvelope = {
    data: ChargeTypeCreateManyBillingSettingsInput | ChargeTypeCreateManyBillingSettingsInput[]
  }

  export type CompanyUpsertWithoutBillingSettingsInput = {
    update: XOR<CompanyUpdateWithoutBillingSettingsInput, CompanyUncheckedUpdateWithoutBillingSettingsInput>
    create: XOR<CompanyCreateWithoutBillingSettingsInput, CompanyUncheckedCreateWithoutBillingSettingsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutBillingSettingsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutBillingSettingsInput, CompanyUncheckedUpdateWithoutBillingSettingsInput>
  }

  export type CompanyUpdateWithoutBillingSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutBillingSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type ChargeTypeUpsertWithWhereUniqueWithoutBillingSettingsInput = {
    where: ChargeTypeWhereUniqueInput
    update: XOR<ChargeTypeUpdateWithoutBillingSettingsInput, ChargeTypeUncheckedUpdateWithoutBillingSettingsInput>
    create: XOR<ChargeTypeCreateWithoutBillingSettingsInput, ChargeTypeUncheckedCreateWithoutBillingSettingsInput>
  }

  export type ChargeTypeUpdateWithWhereUniqueWithoutBillingSettingsInput = {
    where: ChargeTypeWhereUniqueInput
    data: XOR<ChargeTypeUpdateWithoutBillingSettingsInput, ChargeTypeUncheckedUpdateWithoutBillingSettingsInput>
  }

  export type ChargeTypeUpdateManyWithWhereWithoutBillingSettingsInput = {
    where: ChargeTypeScalarWhereInput
    data: XOR<ChargeTypeUpdateManyMutationInput, ChargeTypeUncheckedUpdateManyWithoutBillingSettingsInput>
  }

  export type CompanyCreateWithoutChargeTypesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutChargeTypesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutChargeTypesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutChargeTypesInput, CompanyUncheckedCreateWithoutChargeTypesInput>
  }

  export type BillingSettingsCreateWithoutChargeTypesInput = {
    id?: string
    storageRateType?: string
    storageRatePerBox?: number
    storageRatePerWeek?: number | null
    storageRatePerMonth?: number | null
    taxEnabled?: boolean
    taxRate?: number
    currency?: string
    invoicePrefix?: string
    invoiceDueDays?: number
    gracePeriodDays?: number
    minimumCharge?: number
    logoUrl?: string | null
    logoPosition?: string
    primaryColor?: string
    secondaryColor?: string
    showCompanyDetails?: boolean
    showBankDetails?: boolean
    showTermsConditions?: boolean
    bankName?: string | null
    accountNumber?: string | null
    accountName?: string | null
    iban?: string | null
    swiftCode?: string | null
    invoiceFooterText?: string | null
    termsAndConditions?: string | null
    paymentInstructions?: string | null
    taxRegistrationNo?: string | null
    companyRegistrationNo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutBillingSettingsInput
  }

  export type BillingSettingsUncheckedCreateWithoutChargeTypesInput = {
    id?: string
    companyId: string
    storageRateType?: string
    storageRatePerBox?: number
    storageRatePerWeek?: number | null
    storageRatePerMonth?: number | null
    taxEnabled?: boolean
    taxRate?: number
    currency?: string
    invoicePrefix?: string
    invoiceDueDays?: number
    gracePeriodDays?: number
    minimumCharge?: number
    logoUrl?: string | null
    logoPosition?: string
    primaryColor?: string
    secondaryColor?: string
    showCompanyDetails?: boolean
    showBankDetails?: boolean
    showTermsConditions?: boolean
    bankName?: string | null
    accountNumber?: string | null
    accountName?: string | null
    iban?: string | null
    swiftCode?: string | null
    invoiceFooterText?: string | null
    termsAndConditions?: string | null
    paymentInstructions?: string | null
    taxRegistrationNo?: string | null
    companyRegistrationNo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BillingSettingsCreateOrConnectWithoutChargeTypesInput = {
    where: BillingSettingsWhereUniqueInput
    create: XOR<BillingSettingsCreateWithoutChargeTypesInput, BillingSettingsUncheckedCreateWithoutChargeTypesInput>
  }

  export type CompanyUpsertWithoutChargeTypesInput = {
    update: XOR<CompanyUpdateWithoutChargeTypesInput, CompanyUncheckedUpdateWithoutChargeTypesInput>
    create: XOR<CompanyCreateWithoutChargeTypesInput, CompanyUncheckedCreateWithoutChargeTypesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutChargeTypesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutChargeTypesInput, CompanyUncheckedUpdateWithoutChargeTypesInput>
  }

  export type CompanyUpdateWithoutChargeTypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutChargeTypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type BillingSettingsUpsertWithoutChargeTypesInput = {
    update: XOR<BillingSettingsUpdateWithoutChargeTypesInput, BillingSettingsUncheckedUpdateWithoutChargeTypesInput>
    create: XOR<BillingSettingsCreateWithoutChargeTypesInput, BillingSettingsUncheckedCreateWithoutChargeTypesInput>
    where?: BillingSettingsWhereInput
  }

  export type BillingSettingsUpdateToOneWithWhereWithoutChargeTypesInput = {
    where?: BillingSettingsWhereInput
    data: XOR<BillingSettingsUpdateWithoutChargeTypesInput, BillingSettingsUncheckedUpdateWithoutChargeTypesInput>
  }

  export type BillingSettingsUpdateWithoutChargeTypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    storageRateType?: StringFieldUpdateOperationsInput | string
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    storageRatePerWeek?: NullableFloatFieldUpdateOperationsInput | number | null
    storageRatePerMonth?: NullableFloatFieldUpdateOperationsInput | number | null
    taxEnabled?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    invoicePrefix?: StringFieldUpdateOperationsInput | string
    invoiceDueDays?: IntFieldUpdateOperationsInput | number
    gracePeriodDays?: IntFieldUpdateOperationsInput | number
    minimumCharge?: FloatFieldUpdateOperationsInput | number
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    logoPosition?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showCompanyDetails?: BoolFieldUpdateOperationsInput | boolean
    showBankDetails?: BoolFieldUpdateOperationsInput | boolean
    showTermsConditions?: BoolFieldUpdateOperationsInput | boolean
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountName?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    paymentInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    taxRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutBillingSettingsNestedInput
  }

  export type BillingSettingsUncheckedUpdateWithoutChargeTypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    storageRateType?: StringFieldUpdateOperationsInput | string
    storageRatePerBox?: FloatFieldUpdateOperationsInput | number
    storageRatePerWeek?: NullableFloatFieldUpdateOperationsInput | number | null
    storageRatePerMonth?: NullableFloatFieldUpdateOperationsInput | number | null
    taxEnabled?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    invoicePrefix?: StringFieldUpdateOperationsInput | string
    invoiceDueDays?: IntFieldUpdateOperationsInput | number
    gracePeriodDays?: IntFieldUpdateOperationsInput | number
    minimumCharge?: FloatFieldUpdateOperationsInput | number
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    logoPosition?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    secondaryColor?: StringFieldUpdateOperationsInput | string
    showCompanyDetails?: BoolFieldUpdateOperationsInput | boolean
    showBankDetails?: BoolFieldUpdateOperationsInput | boolean
    showTermsConditions?: BoolFieldUpdateOperationsInput | boolean
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    accountName?: NullableStringFieldUpdateOperationsInput | string | null
    iban?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceFooterText?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    paymentInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    taxRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegistrationNo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyCreateWithoutInvoicesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutInvoicesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutInvoicesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutInvoicesInput, CompanyUncheckedCreateWithoutInvoicesInput>
  }

  export type ShipmentCreateWithoutInvoicesInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    company: CompanyCreateNestedOneWithoutShipmentsInput
    rack?: RackCreateNestedOneWithoutShipmentsInput
    boxes?: ShipmentBoxCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesCreateNestedOneWithoutShipmentInput
    createdBy?: UserCreateNestedOneWithoutShipmentsCreatedInput
    assignedBy?: UserCreateNestedOneWithoutShipmentsAssignedInput
    releasedBy?: UserCreateNestedOneWithoutShipmentsReleasedInput
  }

  export type ShipmentUncheckedCreateWithoutInvoicesInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalUncheckedCreateNestedManyWithoutShipmentInput
    charges?: ShipmentChargesUncheckedCreateNestedOneWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutInvoicesInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutInvoicesInput, ShipmentUncheckedCreateWithoutInvoicesInput>
  }

  export type InvoiceLineItemCreateWithoutInvoiceInput = {
    id?: string
    chargeTypeId?: string | null
    description: string
    category: string
    quantity?: number
    unitPrice: number
    amount: number
    isTaxable?: boolean
    taxRate?: number | null
    taxAmount?: number
    displayOrder?: number
    createdAt?: Date | string
    company: CompanyCreateNestedOneWithoutInvoiceLineItemsInput
  }

  export type InvoiceLineItemUncheckedCreateWithoutInvoiceInput = {
    id?: string
    companyId: string
    chargeTypeId?: string | null
    description: string
    category: string
    quantity?: number
    unitPrice: number
    amount: number
    isTaxable?: boolean
    taxRate?: number | null
    taxAmount?: number
    displayOrder?: number
    createdAt?: Date | string
  }

  export type InvoiceLineItemCreateOrConnectWithoutInvoiceInput = {
    where: InvoiceLineItemWhereUniqueInput
    create: XOR<InvoiceLineItemCreateWithoutInvoiceInput, InvoiceLineItemUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceLineItemCreateManyInvoiceInputEnvelope = {
    data: InvoiceLineItemCreateManyInvoiceInput | InvoiceLineItemCreateManyInvoiceInput[]
  }

  export type PaymentCreateWithoutInvoiceInput = {
    id?: string
    amount: number
    paymentDate?: Date | string
    paymentMethod: string
    transactionRef?: string | null
    receiptNumber?: string | null
    notes?: string | null
    createdBy?: string | null
    createdAt?: Date | string
    company: CompanyCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutInvoiceInput = {
    id?: string
    companyId: string
    amount: number
    paymentDate?: Date | string
    paymentMethod: string
    transactionRef?: string | null
    receiptNumber?: string | null
    notes?: string | null
    createdBy?: string | null
    createdAt?: Date | string
  }

  export type PaymentCreateOrConnectWithoutInvoiceInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput>
  }

  export type PaymentCreateManyInvoiceInputEnvelope = {
    data: PaymentCreateManyInvoiceInput | PaymentCreateManyInvoiceInput[]
  }

  export type CompanyUpsertWithoutInvoicesInput = {
    update: XOR<CompanyUpdateWithoutInvoicesInput, CompanyUncheckedUpdateWithoutInvoicesInput>
    create: XOR<CompanyCreateWithoutInvoicesInput, CompanyUncheckedCreateWithoutInvoicesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutInvoicesInput, CompanyUncheckedUpdateWithoutInvoicesInput>
  }

  export type CompanyUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type ShipmentUpsertWithoutInvoicesInput = {
    update: XOR<ShipmentUpdateWithoutInvoicesInput, ShipmentUncheckedUpdateWithoutInvoicesInput>
    create: XOR<ShipmentCreateWithoutInvoicesInput, ShipmentUncheckedCreateWithoutInvoicesInput>
    where?: ShipmentWhereInput
  }

  export type ShipmentUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: ShipmentWhereInput
    data: XOR<ShipmentUpdateWithoutInvoicesInput, ShipmentUncheckedUpdateWithoutInvoicesInput>
  }

  export type ShipmentUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutShipmentsNestedInput
    rack?: RackUpdateOneWithoutShipmentsNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUpdateOneWithoutShipmentNestedInput
    createdBy?: UserUpdateOneWithoutShipmentsCreatedNestedInput
    assignedBy?: UserUpdateOneWithoutShipmentsAssignedNestedInput
    releasedBy?: UserUpdateOneWithoutShipmentsReleasedNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUncheckedUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUncheckedUpdateOneWithoutShipmentNestedInput
  }

  export type InvoiceLineItemUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: InvoiceLineItemWhereUniqueInput
    update: XOR<InvoiceLineItemUpdateWithoutInvoiceInput, InvoiceLineItemUncheckedUpdateWithoutInvoiceInput>
    create: XOR<InvoiceLineItemCreateWithoutInvoiceInput, InvoiceLineItemUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceLineItemUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: InvoiceLineItemWhereUniqueInput
    data: XOR<InvoiceLineItemUpdateWithoutInvoiceInput, InvoiceLineItemUncheckedUpdateWithoutInvoiceInput>
  }

  export type InvoiceLineItemUpdateManyWithWhereWithoutInvoiceInput = {
    where: InvoiceLineItemScalarWhereInput
    data: XOR<InvoiceLineItemUpdateManyMutationInput, InvoiceLineItemUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type PaymentUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutInvoiceInput, PaymentUncheckedUpdateWithoutInvoiceInput>
    create: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutInvoiceInput, PaymentUncheckedUpdateWithoutInvoiceInput>
  }

  export type PaymentUpdateManyWithWhereWithoutInvoiceInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type InvoiceCreateWithoutLineItemsInput = {
    id?: string
    invoiceNumber: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutInvoicesInput
    shipment: ShipmentCreateNestedOneWithoutInvoicesInput
    payments?: PaymentCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutLineItemsInput = {
    id?: string
    invoiceNumber: string
    companyId: string
    shipmentId: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    payments?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutLineItemsInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutLineItemsInput, InvoiceUncheckedCreateWithoutLineItemsInput>
  }

  export type CompanyCreateWithoutInvoiceLineItemsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutInvoiceLineItemsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutInvoiceLineItemsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutInvoiceLineItemsInput, CompanyUncheckedCreateWithoutInvoiceLineItemsInput>
  }

  export type InvoiceUpsertWithoutLineItemsInput = {
    update: XOR<InvoiceUpdateWithoutLineItemsInput, InvoiceUncheckedUpdateWithoutLineItemsInput>
    create: XOR<InvoiceCreateWithoutLineItemsInput, InvoiceUncheckedCreateWithoutLineItemsInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutLineItemsInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutLineItemsInput, InvoiceUncheckedUpdateWithoutLineItemsInput>
  }

  export type InvoiceUpdateWithoutLineItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutInvoicesNestedInput
    shipment?: ShipmentUpdateOneRequiredWithoutInvoicesNestedInput
    payments?: PaymentUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutLineItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payments?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type CompanyUpsertWithoutInvoiceLineItemsInput = {
    update: XOR<CompanyUpdateWithoutInvoiceLineItemsInput, CompanyUncheckedUpdateWithoutInvoiceLineItemsInput>
    create: XOR<CompanyCreateWithoutInvoiceLineItemsInput, CompanyUncheckedCreateWithoutInvoiceLineItemsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutInvoiceLineItemsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutInvoiceLineItemsInput, CompanyUncheckedUpdateWithoutInvoiceLineItemsInput>
  }

  export type CompanyUpdateWithoutInvoiceLineItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutInvoiceLineItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type InvoiceCreateWithoutPaymentsInput = {
    id?: string
    invoiceNumber: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutInvoicesInput
    shipment: ShipmentCreateNestedOneWithoutInvoicesInput
    lineItems?: InvoiceLineItemCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutPaymentsInput = {
    id?: string
    invoiceNumber: string
    companyId: string
    shipmentId: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutPaymentsInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutPaymentsInput, InvoiceUncheckedCreateWithoutPaymentsInput>
  }

  export type CompanyCreateWithoutPaymentsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutPaymentsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutPaymentsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutPaymentsInput, CompanyUncheckedCreateWithoutPaymentsInput>
  }

  export type InvoiceUpsertWithoutPaymentsInput = {
    update: XOR<InvoiceUpdateWithoutPaymentsInput, InvoiceUncheckedUpdateWithoutPaymentsInput>
    create: XOR<InvoiceCreateWithoutPaymentsInput, InvoiceUncheckedCreateWithoutPaymentsInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutPaymentsInput, InvoiceUncheckedUpdateWithoutPaymentsInput>
  }

  export type InvoiceUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutInvoicesNestedInput
    shipment?: ShipmentUpdateOneRequiredWithoutInvoicesNestedInput
    lineItems?: InvoiceLineItemUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineItems?: InvoiceLineItemUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type CompanyUpsertWithoutPaymentsInput = {
    update: XOR<CompanyUpdateWithoutPaymentsInput, CompanyUncheckedUpdateWithoutPaymentsInput>
    create: XOR<CompanyCreateWithoutPaymentsInput, CompanyUncheckedCreateWithoutPaymentsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutPaymentsInput, CompanyUncheckedUpdateWithoutPaymentsInput>
  }

  export type CompanyUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type ShipmentCreateWithoutChargesInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    company: CompanyCreateNestedOneWithoutShipmentsInput
    rack?: RackCreateNestedOneWithoutShipmentsInput
    boxes?: ShipmentBoxCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceCreateNestedManyWithoutShipmentInput
    createdBy?: UserCreateNestedOneWithoutShipmentsCreatedInput
    assignedBy?: UserCreateNestedOneWithoutShipmentsAssignedInput
    releasedBy?: UserCreateNestedOneWithoutShipmentsReleasedInput
  }

  export type ShipmentUncheckedCreateWithoutChargesInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutShipmentInput
    withdrawals?: WithdrawalUncheckedCreateNestedManyWithoutShipmentInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutShipmentInput
  }

  export type ShipmentCreateOrConnectWithoutChargesInput = {
    where: ShipmentWhereUniqueInput
    create: XOR<ShipmentCreateWithoutChargesInput, ShipmentUncheckedCreateWithoutChargesInput>
  }

  export type CompanyCreateWithoutShipmentChargesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutShipmentChargesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutShipmentChargesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutShipmentChargesInput, CompanyUncheckedCreateWithoutShipmentChargesInput>
  }

  export type ShipmentUpsertWithoutChargesInput = {
    update: XOR<ShipmentUpdateWithoutChargesInput, ShipmentUncheckedUpdateWithoutChargesInput>
    create: XOR<ShipmentCreateWithoutChargesInput, ShipmentUncheckedCreateWithoutChargesInput>
    where?: ShipmentWhereInput
  }

  export type ShipmentUpdateToOneWithWhereWithoutChargesInput = {
    where?: ShipmentWhereInput
    data: XOR<ShipmentUpdateWithoutChargesInput, ShipmentUncheckedUpdateWithoutChargesInput>
  }

  export type ShipmentUpdateWithoutChargesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutShipmentsNestedInput
    rack?: RackUpdateOneWithoutShipmentsNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUpdateManyWithoutShipmentNestedInput
    createdBy?: UserUpdateOneWithoutShipmentsCreatedNestedInput
    assignedBy?: UserUpdateOneWithoutShipmentsAssignedNestedInput
    releasedBy?: UserUpdateOneWithoutShipmentsReleasedNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutChargesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUncheckedUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutShipmentNestedInput
  }

  export type CompanyUpsertWithoutShipmentChargesInput = {
    update: XOR<CompanyUpdateWithoutShipmentChargesInput, CompanyUncheckedUpdateWithoutShipmentChargesInput>
    create: XOR<CompanyCreateWithoutShipmentChargesInput, CompanyUncheckedCreateWithoutShipmentChargesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutShipmentChargesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutShipmentChargesInput, CompanyUncheckedUpdateWithoutShipmentChargesInput>
  }

  export type CompanyUpdateWithoutShipmentChargesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutShipmentChargesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutCustomFieldsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutCustomFieldsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutCustomFieldsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutCustomFieldsInput, CompanyUncheckedCreateWithoutCustomFieldsInput>
  }

  export type CustomFieldValueCreateWithoutCustomFieldInput = {
    id?: string
    entityType: string
    entityId: string
    fieldValue: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldValueUncheckedCreateWithoutCustomFieldInput = {
    id?: string
    entityType: string
    entityId: string
    fieldValue: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldValueCreateOrConnectWithoutCustomFieldInput = {
    where: CustomFieldValueWhereUniqueInput
    create: XOR<CustomFieldValueCreateWithoutCustomFieldInput, CustomFieldValueUncheckedCreateWithoutCustomFieldInput>
  }

  export type CustomFieldValueCreateManyCustomFieldInputEnvelope = {
    data: CustomFieldValueCreateManyCustomFieldInput | CustomFieldValueCreateManyCustomFieldInput[]
  }

  export type CompanyUpsertWithoutCustomFieldsInput = {
    update: XOR<CompanyUpdateWithoutCustomFieldsInput, CompanyUncheckedUpdateWithoutCustomFieldsInput>
    create: XOR<CompanyCreateWithoutCustomFieldsInput, CompanyUncheckedCreateWithoutCustomFieldsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutCustomFieldsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutCustomFieldsInput, CompanyUncheckedUpdateWithoutCustomFieldsInput>
  }

  export type CompanyUpdateWithoutCustomFieldsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutCustomFieldsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CustomFieldValueUpsertWithWhereUniqueWithoutCustomFieldInput = {
    where: CustomFieldValueWhereUniqueInput
    update: XOR<CustomFieldValueUpdateWithoutCustomFieldInput, CustomFieldValueUncheckedUpdateWithoutCustomFieldInput>
    create: XOR<CustomFieldValueCreateWithoutCustomFieldInput, CustomFieldValueUncheckedCreateWithoutCustomFieldInput>
  }

  export type CustomFieldValueUpdateWithWhereUniqueWithoutCustomFieldInput = {
    where: CustomFieldValueWhereUniqueInput
    data: XOR<CustomFieldValueUpdateWithoutCustomFieldInput, CustomFieldValueUncheckedUpdateWithoutCustomFieldInput>
  }

  export type CustomFieldValueUpdateManyWithWhereWithoutCustomFieldInput = {
    where: CustomFieldValueScalarWhereInput
    data: XOR<CustomFieldValueUpdateManyMutationInput, CustomFieldValueUncheckedUpdateManyWithoutCustomFieldInput>
  }

  export type CustomFieldValueScalarWhereInput = {
    AND?: CustomFieldValueScalarWhereInput | CustomFieldValueScalarWhereInput[]
    OR?: CustomFieldValueScalarWhereInput[]
    NOT?: CustomFieldValueScalarWhereInput | CustomFieldValueScalarWhereInput[]
    id?: StringFilter<"CustomFieldValue"> | string
    customFieldId?: StringFilter<"CustomFieldValue"> | string
    entityType?: StringFilter<"CustomFieldValue"> | string
    entityId?: StringFilter<"CustomFieldValue"> | string
    fieldValue?: StringFilter<"CustomFieldValue"> | string
    companyId?: StringFilter<"CustomFieldValue"> | string
    createdAt?: DateTimeFilter<"CustomFieldValue"> | Date | string
    updatedAt?: DateTimeFilter<"CustomFieldValue"> | Date | string
  }

  export type CustomFieldCreateWithoutValuesInput = {
    id?: string
    fieldName: string
    fieldType: string
    fieldOptions?: string | null
    isRequired?: boolean
    isActive?: boolean
    section?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutCustomFieldsInput
  }

  export type CustomFieldUncheckedCreateWithoutValuesInput = {
    id?: string
    companyId: string
    fieldName: string
    fieldType: string
    fieldOptions?: string | null
    isRequired?: boolean
    isActive?: boolean
    section?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldCreateOrConnectWithoutValuesInput = {
    where: CustomFieldWhereUniqueInput
    create: XOR<CustomFieldCreateWithoutValuesInput, CustomFieldUncheckedCreateWithoutValuesInput>
  }

  export type CustomFieldUpsertWithoutValuesInput = {
    update: XOR<CustomFieldUpdateWithoutValuesInput, CustomFieldUncheckedUpdateWithoutValuesInput>
    create: XOR<CustomFieldCreateWithoutValuesInput, CustomFieldUncheckedCreateWithoutValuesInput>
    where?: CustomFieldWhereInput
  }

  export type CustomFieldUpdateToOneWithWhereWithoutValuesInput = {
    where?: CustomFieldWhereInput
    data: XOR<CustomFieldUpdateWithoutValuesInput, CustomFieldUncheckedUpdateWithoutValuesInput>
  }

  export type CustomFieldUpdateWithoutValuesInput = {
    id?: StringFieldUpdateOperationsInput | string
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldType?: StringFieldUpdateOperationsInput | string
    fieldOptions?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    section?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutCustomFieldsNestedInput
  }

  export type CustomFieldUncheckedUpdateWithoutValuesInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldType?: StringFieldUpdateOperationsInput | string
    fieldOptions?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    section?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyCreateWithoutShipmentSettingsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutShipmentSettingsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutShipmentSettingsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutShipmentSettingsInput, CompanyUncheckedCreateWithoutShipmentSettingsInput>
  }

  export type CompanyUpsertWithoutShipmentSettingsInput = {
    update: XOR<CompanyUpdateWithoutShipmentSettingsInput, CompanyUncheckedUpdateWithoutShipmentSettingsInput>
    create: XOR<CompanyCreateWithoutShipmentSettingsInput, CompanyUncheckedCreateWithoutShipmentSettingsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutShipmentSettingsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutShipmentSettingsInput, CompanyUncheckedUpdateWithoutShipmentSettingsInput>
  }

  export type CompanyUpdateWithoutShipmentSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutShipmentSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutTemplateSettingsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutTemplateSettingsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutTemplateSettingsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutTemplateSettingsInput, CompanyUncheckedCreateWithoutTemplateSettingsInput>
  }

  export type CompanyUpsertWithoutTemplateSettingsInput = {
    update: XOR<CompanyUpdateWithoutTemplateSettingsInput, CompanyUncheckedUpdateWithoutTemplateSettingsInput>
    create: XOR<CompanyCreateWithoutTemplateSettingsInput, CompanyUncheckedCreateWithoutTemplateSettingsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutTemplateSettingsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutTemplateSettingsInput, CompanyUncheckedUpdateWithoutTemplateSettingsInput>
  }

  export type CompanyUpdateWithoutTemplateSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutTemplateSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type RolePermissionCreateWithoutPermissionInput = {
    id?: string
    role: string
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutRolePermissionsInput
  }

  export type RolePermissionUncheckedCreateWithoutPermissionInput = {
    id?: string
    role: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RolePermissionCreateOrConnectWithoutPermissionInput = {
    where: RolePermissionWhereUniqueInput
    create: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput>
  }

  export type RolePermissionCreateManyPermissionInputEnvelope = {
    data: RolePermissionCreateManyPermissionInput | RolePermissionCreateManyPermissionInput[]
  }

  export type RolePermissionUpsertWithWhereUniqueWithoutPermissionInput = {
    where: RolePermissionWhereUniqueInput
    update: XOR<RolePermissionUpdateWithoutPermissionInput, RolePermissionUncheckedUpdateWithoutPermissionInput>
    create: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput>
  }

  export type RolePermissionUpdateWithWhereUniqueWithoutPermissionInput = {
    where: RolePermissionWhereUniqueInput
    data: XOR<RolePermissionUpdateWithoutPermissionInput, RolePermissionUncheckedUpdateWithoutPermissionInput>
  }

  export type RolePermissionUpdateManyWithWhereWithoutPermissionInput = {
    where: RolePermissionScalarWhereInput
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyWithoutPermissionInput>
  }

  export type PermissionCreateWithoutRolePermissionsInput = {
    id?: string
    resource: string
    action: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PermissionUncheckedCreateWithoutRolePermissionsInput = {
    id?: string
    resource: string
    action: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PermissionCreateOrConnectWithoutRolePermissionsInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutRolePermissionsInput, PermissionUncheckedCreateWithoutRolePermissionsInput>
  }

  export type CompanyCreateWithoutRolePermissionsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutRolePermissionsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutRolePermissionsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutRolePermissionsInput, CompanyUncheckedCreateWithoutRolePermissionsInput>
  }

  export type PermissionUpsertWithoutRolePermissionsInput = {
    update: XOR<PermissionUpdateWithoutRolePermissionsInput, PermissionUncheckedUpdateWithoutRolePermissionsInput>
    create: XOR<PermissionCreateWithoutRolePermissionsInput, PermissionUncheckedCreateWithoutRolePermissionsInput>
    where?: PermissionWhereInput
  }

  export type PermissionUpdateToOneWithWhereWithoutRolePermissionsInput = {
    where?: PermissionWhereInput
    data: XOR<PermissionUpdateWithoutRolePermissionsInput, PermissionUncheckedUpdateWithoutRolePermissionsInput>
  }

  export type PermissionUpdateWithoutRolePermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUncheckedUpdateWithoutRolePermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyUpsertWithoutRolePermissionsInput = {
    update: XOR<CompanyUpdateWithoutRolePermissionsInput, CompanyUncheckedUpdateWithoutRolePermissionsInput>
    create: XOR<CompanyCreateWithoutRolePermissionsInput, CompanyUncheckedCreateWithoutRolePermissionsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutRolePermissionsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutRolePermissionsInput, CompanyUncheckedUpdateWithoutRolePermissionsInput>
  }

  export type CompanyUpdateWithoutRolePermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutRolePermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutMovingJobsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutMovingJobsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutMovingJobsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutMovingJobsInput, CompanyUncheckedCreateWithoutMovingJobsInput>
  }

  export type UserCreateWithoutMovingJobsLeadInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutMovingJobsLeadInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutMovingJobsLeadInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMovingJobsLeadInput, UserUncheckedCreateWithoutMovingJobsLeadInput>
  }

  export type JobAssignmentCreateWithoutJobInput = {
    id?: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutJobAssignmentsInput
    company: CompanyCreateNestedOneWithoutJobAssignmentInput
  }

  export type JobAssignmentUncheckedCreateWithoutJobInput = {
    id?: string
    userId: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
  }

  export type JobAssignmentCreateOrConnectWithoutJobInput = {
    where: JobAssignmentWhereUniqueInput
    create: XOR<JobAssignmentCreateWithoutJobInput, JobAssignmentUncheckedCreateWithoutJobInput>
  }

  export type JobAssignmentCreateManyJobInputEnvelope = {
    data: JobAssignmentCreateManyJobInput | JobAssignmentCreateManyJobInput[]
  }

  export type MaterialIssueCreateWithoutJobInput = {
    id?: string
    quantity: number
    unitCost: number
    totalCost: number
    issuedAt?: Date | string
    notes?: string | null
    material: PackingMaterialCreateNestedOneWithoutMaterialIssuesInput
    stockBatch?: StockBatchCreateNestedOneWithoutIssuesInput
    rack?: RackCreateNestedOneWithoutJobMaterialsInput
    issuedBy?: UserCreateNestedOneWithoutMaterialIssuesCreatedInput
    company: CompanyCreateNestedOneWithoutMaterialIssuesInput
    returns?: MaterialReturnCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueUncheckedCreateWithoutJobInput = {
    id?: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
    returns?: MaterialReturnUncheckedCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueCreateOrConnectWithoutJobInput = {
    where: MaterialIssueWhereUniqueInput
    create: XOR<MaterialIssueCreateWithoutJobInput, MaterialIssueUncheckedCreateWithoutJobInput>
  }

  export type MaterialIssueCreateManyJobInputEnvelope = {
    data: MaterialIssueCreateManyJobInput | MaterialIssueCreateManyJobInput[]
  }

  export type MaterialReturnCreateWithoutJobInput = {
    id?: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedAt?: Date | string
    notes?: string | null
    material: PackingMaterialCreateNestedOneWithoutMaterialReturnsInput
    issue?: MaterialIssueCreateNestedOneWithoutReturnsInput
    rack?: RackCreateNestedOneWithoutMaterialReturnInput
    recordedBy?: UserCreateNestedOneWithoutMaterialReturnsRecordedInput
    damages?: MaterialDamageCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectReturnInput
    company: CompanyCreateNestedOneWithoutMaterialReturnsInput
  }

  export type MaterialReturnUncheckedCreateWithoutJobInput = {
    id?: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
    damages?: MaterialDamageUncheckedCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectReturnInput
  }

  export type MaterialReturnCreateOrConnectWithoutJobInput = {
    where: MaterialReturnWhereUniqueInput
    create: XOR<MaterialReturnCreateWithoutJobInput, MaterialReturnUncheckedCreateWithoutJobInput>
  }

  export type MaterialReturnCreateManyJobInputEnvelope = {
    data: MaterialReturnCreateManyJobInput | MaterialReturnCreateManyJobInput[]
  }

  export type JobCostSnapshotCreateWithoutJobInput = {
    id?: string
    recordedAt?: Date | string
    materialsCost?: number
    laborCost?: number
    damageLoss?: number
    otherCost?: number
    revenue?: number
    profit?: number
    profitMargin?: number | null
    currency?: string
    notes?: string | null
    company: CompanyCreateNestedOneWithoutJobCostSnapshotsInput
  }

  export type JobCostSnapshotUncheckedCreateWithoutJobInput = {
    id?: string
    recordedAt?: Date | string
    materialsCost?: number
    laborCost?: number
    damageLoss?: number
    otherCost?: number
    revenue?: number
    profit?: number
    profitMargin?: number | null
    currency?: string
    notes?: string | null
    companyId: string
  }

  export type JobCostSnapshotCreateOrConnectWithoutJobInput = {
    where: JobCostSnapshotWhereUniqueInput
    create: XOR<JobCostSnapshotCreateWithoutJobInput, JobCostSnapshotUncheckedCreateWithoutJobInput>
  }

  export type JobCostSnapshotCreateManyJobInputEnvelope = {
    data: JobCostSnapshotCreateManyJobInput | JobCostSnapshotCreateManyJobInput[]
  }

  export type MaterialApprovalCreateWithoutJobInput = {
    id?: string
    approvalType: string
    status?: string
    requestedAt?: Date | string
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    requestedBy?: UserCreateNestedOneWithoutApprovalsRequestedInput
    decisionBy?: UserCreateNestedOneWithoutApprovalsDecidedInput
    subjectReturn?: MaterialReturnCreateNestedOneWithoutApprovalInput
    subjectDamage?: MaterialDamageCreateNestedOneWithoutApprovalInput
    company: CompanyCreateNestedOneWithoutMaterialApprovalsInput
  }

  export type MaterialApprovalUncheckedCreateWithoutJobInput = {
    id?: string
    approvalType: string
    status?: string
    requestedById?: string | null
    requestedAt?: Date | string
    decisionById?: string | null
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    subjectDamageId?: string | null
    companyId: string
  }

  export type MaterialApprovalCreateOrConnectWithoutJobInput = {
    where: MaterialApprovalWhereUniqueInput
    create: XOR<MaterialApprovalCreateWithoutJobInput, MaterialApprovalUncheckedCreateWithoutJobInput>
  }

  export type MaterialApprovalCreateManyJobInputEnvelope = {
    data: MaterialApprovalCreateManyJobInput | MaterialApprovalCreateManyJobInput[]
  }

  export type CompanyUpsertWithoutMovingJobsInput = {
    update: XOR<CompanyUpdateWithoutMovingJobsInput, CompanyUncheckedUpdateWithoutMovingJobsInput>
    create: XOR<CompanyCreateWithoutMovingJobsInput, CompanyUncheckedCreateWithoutMovingJobsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutMovingJobsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutMovingJobsInput, CompanyUncheckedUpdateWithoutMovingJobsInput>
  }

  export type CompanyUpdateWithoutMovingJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutMovingJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type UserUpsertWithoutMovingJobsLeadInput = {
    update: XOR<UserUpdateWithoutMovingJobsLeadInput, UserUncheckedUpdateWithoutMovingJobsLeadInput>
    create: XOR<UserCreateWithoutMovingJobsLeadInput, UserUncheckedCreateWithoutMovingJobsLeadInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMovingJobsLeadInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMovingJobsLeadInput, UserUncheckedUpdateWithoutMovingJobsLeadInput>
  }

  export type UserUpdateWithoutMovingJobsLeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutMovingJobsLeadInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type JobAssignmentUpsertWithWhereUniqueWithoutJobInput = {
    where: JobAssignmentWhereUniqueInput
    update: XOR<JobAssignmentUpdateWithoutJobInput, JobAssignmentUncheckedUpdateWithoutJobInput>
    create: XOR<JobAssignmentCreateWithoutJobInput, JobAssignmentUncheckedCreateWithoutJobInput>
  }

  export type JobAssignmentUpdateWithWhereUniqueWithoutJobInput = {
    where: JobAssignmentWhereUniqueInput
    data: XOR<JobAssignmentUpdateWithoutJobInput, JobAssignmentUncheckedUpdateWithoutJobInput>
  }

  export type JobAssignmentUpdateManyWithWhereWithoutJobInput = {
    where: JobAssignmentScalarWhereInput
    data: XOR<JobAssignmentUpdateManyMutationInput, JobAssignmentUncheckedUpdateManyWithoutJobInput>
  }

  export type MaterialIssueUpsertWithWhereUniqueWithoutJobInput = {
    where: MaterialIssueWhereUniqueInput
    update: XOR<MaterialIssueUpdateWithoutJobInput, MaterialIssueUncheckedUpdateWithoutJobInput>
    create: XOR<MaterialIssueCreateWithoutJobInput, MaterialIssueUncheckedCreateWithoutJobInput>
  }

  export type MaterialIssueUpdateWithWhereUniqueWithoutJobInput = {
    where: MaterialIssueWhereUniqueInput
    data: XOR<MaterialIssueUpdateWithoutJobInput, MaterialIssueUncheckedUpdateWithoutJobInput>
  }

  export type MaterialIssueUpdateManyWithWhereWithoutJobInput = {
    where: MaterialIssueScalarWhereInput
    data: XOR<MaterialIssueUpdateManyMutationInput, MaterialIssueUncheckedUpdateManyWithoutJobInput>
  }

  export type MaterialReturnUpsertWithWhereUniqueWithoutJobInput = {
    where: MaterialReturnWhereUniqueInput
    update: XOR<MaterialReturnUpdateWithoutJobInput, MaterialReturnUncheckedUpdateWithoutJobInput>
    create: XOR<MaterialReturnCreateWithoutJobInput, MaterialReturnUncheckedCreateWithoutJobInput>
  }

  export type MaterialReturnUpdateWithWhereUniqueWithoutJobInput = {
    where: MaterialReturnWhereUniqueInput
    data: XOR<MaterialReturnUpdateWithoutJobInput, MaterialReturnUncheckedUpdateWithoutJobInput>
  }

  export type MaterialReturnUpdateManyWithWhereWithoutJobInput = {
    where: MaterialReturnScalarWhereInput
    data: XOR<MaterialReturnUpdateManyMutationInput, MaterialReturnUncheckedUpdateManyWithoutJobInput>
  }

  export type JobCostSnapshotUpsertWithWhereUniqueWithoutJobInput = {
    where: JobCostSnapshotWhereUniqueInput
    update: XOR<JobCostSnapshotUpdateWithoutJobInput, JobCostSnapshotUncheckedUpdateWithoutJobInput>
    create: XOR<JobCostSnapshotCreateWithoutJobInput, JobCostSnapshotUncheckedCreateWithoutJobInput>
  }

  export type JobCostSnapshotUpdateWithWhereUniqueWithoutJobInput = {
    where: JobCostSnapshotWhereUniqueInput
    data: XOR<JobCostSnapshotUpdateWithoutJobInput, JobCostSnapshotUncheckedUpdateWithoutJobInput>
  }

  export type JobCostSnapshotUpdateManyWithWhereWithoutJobInput = {
    where: JobCostSnapshotScalarWhereInput
    data: XOR<JobCostSnapshotUpdateManyMutationInput, JobCostSnapshotUncheckedUpdateManyWithoutJobInput>
  }

  export type MaterialApprovalUpsertWithWhereUniqueWithoutJobInput = {
    where: MaterialApprovalWhereUniqueInput
    update: XOR<MaterialApprovalUpdateWithoutJobInput, MaterialApprovalUncheckedUpdateWithoutJobInput>
    create: XOR<MaterialApprovalCreateWithoutJobInput, MaterialApprovalUncheckedCreateWithoutJobInput>
  }

  export type MaterialApprovalUpdateWithWhereUniqueWithoutJobInput = {
    where: MaterialApprovalWhereUniqueInput
    data: XOR<MaterialApprovalUpdateWithoutJobInput, MaterialApprovalUncheckedUpdateWithoutJobInput>
  }

  export type MaterialApprovalUpdateManyWithWhereWithoutJobInput = {
    where: MaterialApprovalScalarWhereInput
    data: XOR<MaterialApprovalUpdateManyMutationInput, MaterialApprovalUncheckedUpdateManyWithoutJobInput>
  }

  export type MovingJobCreateWithoutAssignmentsInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutMovingJobsInput
    teamLeader?: UserCreateNestedOneWithoutMovingJobsLeadInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalCreateNestedManyWithoutJobInput
  }

  export type MovingJobUncheckedCreateWithoutAssignmentsInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    teamLeaderId?: string | null
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalUncheckedCreateNestedManyWithoutJobInput
  }

  export type MovingJobCreateOrConnectWithoutAssignmentsInput = {
    where: MovingJobWhereUniqueInput
    create: XOR<MovingJobCreateWithoutAssignmentsInput, MovingJobUncheckedCreateWithoutAssignmentsInput>
  }

  export type UserCreateWithoutJobAssignmentsInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutJobAssignmentsInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutJobAssignmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutJobAssignmentsInput, UserUncheckedCreateWithoutJobAssignmentsInput>
  }

  export type CompanyCreateWithoutJobAssignmentInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutJobAssignmentInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutJobAssignmentInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutJobAssignmentInput, CompanyUncheckedCreateWithoutJobAssignmentInput>
  }

  export type MovingJobUpsertWithoutAssignmentsInput = {
    update: XOR<MovingJobUpdateWithoutAssignmentsInput, MovingJobUncheckedUpdateWithoutAssignmentsInput>
    create: XOR<MovingJobCreateWithoutAssignmentsInput, MovingJobUncheckedCreateWithoutAssignmentsInput>
    where?: MovingJobWhereInput
  }

  export type MovingJobUpdateToOneWithWhereWithoutAssignmentsInput = {
    where?: MovingJobWhereInput
    data: XOR<MovingJobUpdateWithoutAssignmentsInput, MovingJobUncheckedUpdateWithoutAssignmentsInput>
  }

  export type MovingJobUpdateWithoutAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutMovingJobsNestedInput
    teamLeader?: UserUpdateOneWithoutMovingJobsLeadNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUpdateManyWithoutJobNestedInput
  }

  export type MovingJobUncheckedUpdateWithoutAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    teamLeaderId?: NullableStringFieldUpdateOperationsInput | string | null
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUncheckedUpdateManyWithoutJobNestedInput
  }

  export type UserUpsertWithoutJobAssignmentsInput = {
    update: XOR<UserUpdateWithoutJobAssignmentsInput, UserUncheckedUpdateWithoutJobAssignmentsInput>
    create: XOR<UserCreateWithoutJobAssignmentsInput, UserUncheckedCreateWithoutJobAssignmentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutJobAssignmentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutJobAssignmentsInput, UserUncheckedUpdateWithoutJobAssignmentsInput>
  }

  export type UserUpdateWithoutJobAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutJobAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type CompanyUpsertWithoutJobAssignmentInput = {
    update: XOR<CompanyUpdateWithoutJobAssignmentInput, CompanyUncheckedUpdateWithoutJobAssignmentInput>
    create: XOR<CompanyCreateWithoutJobAssignmentInput, CompanyUncheckedCreateWithoutJobAssignmentInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutJobAssignmentInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutJobAssignmentInput, CompanyUncheckedUpdateWithoutJobAssignmentInput>
  }

  export type CompanyUpdateWithoutJobAssignmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutJobAssignmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutPackingMaterialsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutPackingMaterialsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutPackingMaterialsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutPackingMaterialsInput, CompanyUncheckedCreateWithoutPackingMaterialsInput>
  }

  export type StockBatchCreateWithoutMaterialInput = {
    id?: string
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    vendor?: VendorCreateNestedOneWithoutStockBatchesInput
    receivedBy?: UserCreateNestedOneWithoutStockBatchesReceivedInput
    company: CompanyCreateNestedOneWithoutStockBatchesInput
    rackAllocations?: RackStockLevelCreateNestedManyWithoutStockBatchInput
    issues?: MaterialIssueCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchUncheckedCreateWithoutMaterialInput = {
    id?: string
    vendorId?: string | null
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    receivedById?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    rackAllocations?: RackStockLevelUncheckedCreateNestedManyWithoutStockBatchInput
    issues?: MaterialIssueUncheckedCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchCreateOrConnectWithoutMaterialInput = {
    where: StockBatchWhereUniqueInput
    create: XOR<StockBatchCreateWithoutMaterialInput, StockBatchUncheckedCreateWithoutMaterialInput>
  }

  export type StockBatchCreateManyMaterialInputEnvelope = {
    data: StockBatchCreateManyMaterialInput | StockBatchCreateManyMaterialInput[]
  }

  export type RackStockLevelCreateWithoutMaterialInput = {
    id?: string
    quantity: number
    lastUpdated?: Date | string
    rack: RackCreateNestedOneWithoutMaterialLevelsInput
    stockBatch?: StockBatchCreateNestedOneWithoutRackAllocationsInput
    company: CompanyCreateNestedOneWithoutRackLevelsInput
  }

  export type RackStockLevelUncheckedCreateWithoutMaterialInput = {
    id?: string
    rackId: string
    stockBatchId?: string | null
    quantity: number
    lastUpdated?: Date | string
    companyId: string
  }

  export type RackStockLevelCreateOrConnectWithoutMaterialInput = {
    where: RackStockLevelWhereUniqueInput
    create: XOR<RackStockLevelCreateWithoutMaterialInput, RackStockLevelUncheckedCreateWithoutMaterialInput>
  }

  export type RackStockLevelCreateManyMaterialInputEnvelope = {
    data: RackStockLevelCreateManyMaterialInput | RackStockLevelCreateManyMaterialInput[]
  }

  export type MaterialIssueCreateWithoutMaterialInput = {
    id?: string
    quantity: number
    unitCost: number
    totalCost: number
    issuedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialIssuesInput
    stockBatch?: StockBatchCreateNestedOneWithoutIssuesInput
    rack?: RackCreateNestedOneWithoutJobMaterialsInput
    issuedBy?: UserCreateNestedOneWithoutMaterialIssuesCreatedInput
    company: CompanyCreateNestedOneWithoutMaterialIssuesInput
    returns?: MaterialReturnCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueUncheckedCreateWithoutMaterialInput = {
    id?: string
    jobId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
    returns?: MaterialReturnUncheckedCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueCreateOrConnectWithoutMaterialInput = {
    where: MaterialIssueWhereUniqueInput
    create: XOR<MaterialIssueCreateWithoutMaterialInput, MaterialIssueUncheckedCreateWithoutMaterialInput>
  }

  export type MaterialIssueCreateManyMaterialInputEnvelope = {
    data: MaterialIssueCreateManyMaterialInput | MaterialIssueCreateManyMaterialInput[]
  }

  export type MaterialReturnCreateWithoutMaterialInput = {
    id?: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialReturnsInput
    issue?: MaterialIssueCreateNestedOneWithoutReturnsInput
    rack?: RackCreateNestedOneWithoutMaterialReturnInput
    recordedBy?: UserCreateNestedOneWithoutMaterialReturnsRecordedInput
    damages?: MaterialDamageCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectReturnInput
    company: CompanyCreateNestedOneWithoutMaterialReturnsInput
  }

  export type MaterialReturnUncheckedCreateWithoutMaterialInput = {
    id?: string
    jobId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
    damages?: MaterialDamageUncheckedCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectReturnInput
  }

  export type MaterialReturnCreateOrConnectWithoutMaterialInput = {
    where: MaterialReturnWhereUniqueInput
    create: XOR<MaterialReturnCreateWithoutMaterialInput, MaterialReturnUncheckedCreateWithoutMaterialInput>
  }

  export type MaterialReturnCreateManyMaterialInputEnvelope = {
    data: MaterialReturnCreateManyMaterialInput | MaterialReturnCreateManyMaterialInput[]
  }

  export type MaterialDamageCreateWithoutMaterialInput = {
    id?: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedAt?: Date | string
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    return: MaterialReturnCreateNestedOneWithoutDamagesInput
    recordedBy?: UserCreateNestedOneWithoutDamagesRecordedInput
    approvedBy?: UserCreateNestedOneWithoutDamagesApprovedInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectDamageInput
    company: CompanyCreateNestedOneWithoutMaterialDamagesInput
  }

  export type MaterialDamageUncheckedCreateWithoutMaterialInput = {
    id?: string
    returnId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectDamageInput
  }

  export type MaterialDamageCreateOrConnectWithoutMaterialInput = {
    where: MaterialDamageWhereUniqueInput
    create: XOR<MaterialDamageCreateWithoutMaterialInput, MaterialDamageUncheckedCreateWithoutMaterialInput>
  }

  export type MaterialDamageCreateManyMaterialInputEnvelope = {
    data: MaterialDamageCreateManyMaterialInput | MaterialDamageCreateManyMaterialInput[]
  }

  export type CompanyUpsertWithoutPackingMaterialsInput = {
    update: XOR<CompanyUpdateWithoutPackingMaterialsInput, CompanyUncheckedUpdateWithoutPackingMaterialsInput>
    create: XOR<CompanyCreateWithoutPackingMaterialsInput, CompanyUncheckedCreateWithoutPackingMaterialsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutPackingMaterialsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutPackingMaterialsInput, CompanyUncheckedUpdateWithoutPackingMaterialsInput>
  }

  export type CompanyUpdateWithoutPackingMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutPackingMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type StockBatchUpsertWithWhereUniqueWithoutMaterialInput = {
    where: StockBatchWhereUniqueInput
    update: XOR<StockBatchUpdateWithoutMaterialInput, StockBatchUncheckedUpdateWithoutMaterialInput>
    create: XOR<StockBatchCreateWithoutMaterialInput, StockBatchUncheckedCreateWithoutMaterialInput>
  }

  export type StockBatchUpdateWithWhereUniqueWithoutMaterialInput = {
    where: StockBatchWhereUniqueInput
    data: XOR<StockBatchUpdateWithoutMaterialInput, StockBatchUncheckedUpdateWithoutMaterialInput>
  }

  export type StockBatchUpdateManyWithWhereWithoutMaterialInput = {
    where: StockBatchScalarWhereInput
    data: XOR<StockBatchUpdateManyMutationInput, StockBatchUncheckedUpdateManyWithoutMaterialInput>
  }

  export type RackStockLevelUpsertWithWhereUniqueWithoutMaterialInput = {
    where: RackStockLevelWhereUniqueInput
    update: XOR<RackStockLevelUpdateWithoutMaterialInput, RackStockLevelUncheckedUpdateWithoutMaterialInput>
    create: XOR<RackStockLevelCreateWithoutMaterialInput, RackStockLevelUncheckedCreateWithoutMaterialInput>
  }

  export type RackStockLevelUpdateWithWhereUniqueWithoutMaterialInput = {
    where: RackStockLevelWhereUniqueInput
    data: XOR<RackStockLevelUpdateWithoutMaterialInput, RackStockLevelUncheckedUpdateWithoutMaterialInput>
  }

  export type RackStockLevelUpdateManyWithWhereWithoutMaterialInput = {
    where: RackStockLevelScalarWhereInput
    data: XOR<RackStockLevelUpdateManyMutationInput, RackStockLevelUncheckedUpdateManyWithoutMaterialInput>
  }

  export type MaterialIssueUpsertWithWhereUniqueWithoutMaterialInput = {
    where: MaterialIssueWhereUniqueInput
    update: XOR<MaterialIssueUpdateWithoutMaterialInput, MaterialIssueUncheckedUpdateWithoutMaterialInput>
    create: XOR<MaterialIssueCreateWithoutMaterialInput, MaterialIssueUncheckedCreateWithoutMaterialInput>
  }

  export type MaterialIssueUpdateWithWhereUniqueWithoutMaterialInput = {
    where: MaterialIssueWhereUniqueInput
    data: XOR<MaterialIssueUpdateWithoutMaterialInput, MaterialIssueUncheckedUpdateWithoutMaterialInput>
  }

  export type MaterialIssueUpdateManyWithWhereWithoutMaterialInput = {
    where: MaterialIssueScalarWhereInput
    data: XOR<MaterialIssueUpdateManyMutationInput, MaterialIssueUncheckedUpdateManyWithoutMaterialInput>
  }

  export type MaterialReturnUpsertWithWhereUniqueWithoutMaterialInput = {
    where: MaterialReturnWhereUniqueInput
    update: XOR<MaterialReturnUpdateWithoutMaterialInput, MaterialReturnUncheckedUpdateWithoutMaterialInput>
    create: XOR<MaterialReturnCreateWithoutMaterialInput, MaterialReturnUncheckedCreateWithoutMaterialInput>
  }

  export type MaterialReturnUpdateWithWhereUniqueWithoutMaterialInput = {
    where: MaterialReturnWhereUniqueInput
    data: XOR<MaterialReturnUpdateWithoutMaterialInput, MaterialReturnUncheckedUpdateWithoutMaterialInput>
  }

  export type MaterialReturnUpdateManyWithWhereWithoutMaterialInput = {
    where: MaterialReturnScalarWhereInput
    data: XOR<MaterialReturnUpdateManyMutationInput, MaterialReturnUncheckedUpdateManyWithoutMaterialInput>
  }

  export type MaterialDamageUpsertWithWhereUniqueWithoutMaterialInput = {
    where: MaterialDamageWhereUniqueInput
    update: XOR<MaterialDamageUpdateWithoutMaterialInput, MaterialDamageUncheckedUpdateWithoutMaterialInput>
    create: XOR<MaterialDamageCreateWithoutMaterialInput, MaterialDamageUncheckedCreateWithoutMaterialInput>
  }

  export type MaterialDamageUpdateWithWhereUniqueWithoutMaterialInput = {
    where: MaterialDamageWhereUniqueInput
    data: XOR<MaterialDamageUpdateWithoutMaterialInput, MaterialDamageUncheckedUpdateWithoutMaterialInput>
  }

  export type MaterialDamageUpdateManyWithWhereWithoutMaterialInput = {
    where: MaterialDamageScalarWhereInput
    data: XOR<MaterialDamageUpdateManyMutationInput, MaterialDamageUncheckedUpdateManyWithoutMaterialInput>
  }

  export type CompanyCreateWithoutVendorsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutVendorsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutVendorsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutVendorsInput, CompanyUncheckedCreateWithoutVendorsInput>
  }

  export type StockBatchCreateWithoutVendorInput = {
    id?: string
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    material: PackingMaterialCreateNestedOneWithoutStockBatchesInput
    receivedBy?: UserCreateNestedOneWithoutStockBatchesReceivedInput
    company: CompanyCreateNestedOneWithoutStockBatchesInput
    rackAllocations?: RackStockLevelCreateNestedManyWithoutStockBatchInput
    issues?: MaterialIssueCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchUncheckedCreateWithoutVendorInput = {
    id?: string
    materialId: string
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    receivedById?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    rackAllocations?: RackStockLevelUncheckedCreateNestedManyWithoutStockBatchInput
    issues?: MaterialIssueUncheckedCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchCreateOrConnectWithoutVendorInput = {
    where: StockBatchWhereUniqueInput
    create: XOR<StockBatchCreateWithoutVendorInput, StockBatchUncheckedCreateWithoutVendorInput>
  }

  export type StockBatchCreateManyVendorInputEnvelope = {
    data: StockBatchCreateManyVendorInput | StockBatchCreateManyVendorInput[]
  }

  export type CompanyUpsertWithoutVendorsInput = {
    update: XOR<CompanyUpdateWithoutVendorsInput, CompanyUncheckedUpdateWithoutVendorsInput>
    create: XOR<CompanyCreateWithoutVendorsInput, CompanyUncheckedCreateWithoutVendorsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutVendorsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutVendorsInput, CompanyUncheckedUpdateWithoutVendorsInput>
  }

  export type CompanyUpdateWithoutVendorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutVendorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type StockBatchUpsertWithWhereUniqueWithoutVendorInput = {
    where: StockBatchWhereUniqueInput
    update: XOR<StockBatchUpdateWithoutVendorInput, StockBatchUncheckedUpdateWithoutVendorInput>
    create: XOR<StockBatchCreateWithoutVendorInput, StockBatchUncheckedCreateWithoutVendorInput>
  }

  export type StockBatchUpdateWithWhereUniqueWithoutVendorInput = {
    where: StockBatchWhereUniqueInput
    data: XOR<StockBatchUpdateWithoutVendorInput, StockBatchUncheckedUpdateWithoutVendorInput>
  }

  export type StockBatchUpdateManyWithWhereWithoutVendorInput = {
    where: StockBatchScalarWhereInput
    data: XOR<StockBatchUpdateManyMutationInput, StockBatchUncheckedUpdateManyWithoutVendorInput>
  }

  export type PackingMaterialCreateWithoutStockBatchesInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutPackingMaterialsInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialUncheckedCreateWithoutStockBatchesInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialCreateOrConnectWithoutStockBatchesInput = {
    where: PackingMaterialWhereUniqueInput
    create: XOR<PackingMaterialCreateWithoutStockBatchesInput, PackingMaterialUncheckedCreateWithoutStockBatchesInput>
  }

  export type VendorCreateWithoutStockBatchesInput = {
    id?: string
    name: string
    contact?: string | null
    phone?: string | null
    email?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutVendorsInput
  }

  export type VendorUncheckedCreateWithoutStockBatchesInput = {
    id?: string
    name: string
    contact?: string | null
    phone?: string | null
    email?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VendorCreateOrConnectWithoutStockBatchesInput = {
    where: VendorWhereUniqueInput
    create: XOR<VendorCreateWithoutStockBatchesInput, VendorUncheckedCreateWithoutStockBatchesInput>
  }

  export type UserCreateWithoutStockBatchesReceivedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutStockBatchesReceivedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutStockBatchesReceivedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStockBatchesReceivedInput, UserUncheckedCreateWithoutStockBatchesReceivedInput>
  }

  export type CompanyCreateWithoutStockBatchesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutStockBatchesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutStockBatchesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutStockBatchesInput, CompanyUncheckedCreateWithoutStockBatchesInput>
  }

  export type RackStockLevelCreateWithoutStockBatchInput = {
    id?: string
    quantity: number
    lastUpdated?: Date | string
    material: PackingMaterialCreateNestedOneWithoutRackLevelsInput
    rack: RackCreateNestedOneWithoutMaterialLevelsInput
    company: CompanyCreateNestedOneWithoutRackLevelsInput
  }

  export type RackStockLevelUncheckedCreateWithoutStockBatchInput = {
    id?: string
    materialId: string
    rackId: string
    quantity: number
    lastUpdated?: Date | string
    companyId: string
  }

  export type RackStockLevelCreateOrConnectWithoutStockBatchInput = {
    where: RackStockLevelWhereUniqueInput
    create: XOR<RackStockLevelCreateWithoutStockBatchInput, RackStockLevelUncheckedCreateWithoutStockBatchInput>
  }

  export type RackStockLevelCreateManyStockBatchInputEnvelope = {
    data: RackStockLevelCreateManyStockBatchInput | RackStockLevelCreateManyStockBatchInput[]
  }

  export type MaterialIssueCreateWithoutStockBatchInput = {
    id?: string
    quantity: number
    unitCost: number
    totalCost: number
    issuedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialIssuesInput
    material: PackingMaterialCreateNestedOneWithoutMaterialIssuesInput
    rack?: RackCreateNestedOneWithoutJobMaterialsInput
    issuedBy?: UserCreateNestedOneWithoutMaterialIssuesCreatedInput
    company: CompanyCreateNestedOneWithoutMaterialIssuesInput
    returns?: MaterialReturnCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueUncheckedCreateWithoutStockBatchInput = {
    id?: string
    jobId: string
    materialId: string
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
    returns?: MaterialReturnUncheckedCreateNestedManyWithoutIssueInput
  }

  export type MaterialIssueCreateOrConnectWithoutStockBatchInput = {
    where: MaterialIssueWhereUniqueInput
    create: XOR<MaterialIssueCreateWithoutStockBatchInput, MaterialIssueUncheckedCreateWithoutStockBatchInput>
  }

  export type MaterialIssueCreateManyStockBatchInputEnvelope = {
    data: MaterialIssueCreateManyStockBatchInput | MaterialIssueCreateManyStockBatchInput[]
  }

  export type PackingMaterialUpsertWithoutStockBatchesInput = {
    update: XOR<PackingMaterialUpdateWithoutStockBatchesInput, PackingMaterialUncheckedUpdateWithoutStockBatchesInput>
    create: XOR<PackingMaterialCreateWithoutStockBatchesInput, PackingMaterialUncheckedCreateWithoutStockBatchesInput>
    where?: PackingMaterialWhereInput
  }

  export type PackingMaterialUpdateToOneWithWhereWithoutStockBatchesInput = {
    where?: PackingMaterialWhereInput
    data: XOR<PackingMaterialUpdateWithoutStockBatchesInput, PackingMaterialUncheckedUpdateWithoutStockBatchesInput>
  }

  export type PackingMaterialUpdateWithoutStockBatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutPackingMaterialsNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutMaterialNestedInput
  }

  export type PackingMaterialUncheckedUpdateWithoutStockBatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type VendorUpsertWithoutStockBatchesInput = {
    update: XOR<VendorUpdateWithoutStockBatchesInput, VendorUncheckedUpdateWithoutStockBatchesInput>
    create: XOR<VendorCreateWithoutStockBatchesInput, VendorUncheckedCreateWithoutStockBatchesInput>
    where?: VendorWhereInput
  }

  export type VendorUpdateToOneWithWhereWithoutStockBatchesInput = {
    where?: VendorWhereInput
    data: XOR<VendorUpdateWithoutStockBatchesInput, VendorUncheckedUpdateWithoutStockBatchesInput>
  }

  export type VendorUpdateWithoutStockBatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutVendorsNestedInput
  }

  export type VendorUncheckedUpdateWithoutStockBatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutStockBatchesReceivedInput = {
    update: XOR<UserUpdateWithoutStockBatchesReceivedInput, UserUncheckedUpdateWithoutStockBatchesReceivedInput>
    create: XOR<UserCreateWithoutStockBatchesReceivedInput, UserUncheckedCreateWithoutStockBatchesReceivedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStockBatchesReceivedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStockBatchesReceivedInput, UserUncheckedUpdateWithoutStockBatchesReceivedInput>
  }

  export type UserUpdateWithoutStockBatchesReceivedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutStockBatchesReceivedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type CompanyUpsertWithoutStockBatchesInput = {
    update: XOR<CompanyUpdateWithoutStockBatchesInput, CompanyUncheckedUpdateWithoutStockBatchesInput>
    create: XOR<CompanyCreateWithoutStockBatchesInput, CompanyUncheckedCreateWithoutStockBatchesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutStockBatchesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutStockBatchesInput, CompanyUncheckedUpdateWithoutStockBatchesInput>
  }

  export type CompanyUpdateWithoutStockBatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutStockBatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type RackStockLevelUpsertWithWhereUniqueWithoutStockBatchInput = {
    where: RackStockLevelWhereUniqueInput
    update: XOR<RackStockLevelUpdateWithoutStockBatchInput, RackStockLevelUncheckedUpdateWithoutStockBatchInput>
    create: XOR<RackStockLevelCreateWithoutStockBatchInput, RackStockLevelUncheckedCreateWithoutStockBatchInput>
  }

  export type RackStockLevelUpdateWithWhereUniqueWithoutStockBatchInput = {
    where: RackStockLevelWhereUniqueInput
    data: XOR<RackStockLevelUpdateWithoutStockBatchInput, RackStockLevelUncheckedUpdateWithoutStockBatchInput>
  }

  export type RackStockLevelUpdateManyWithWhereWithoutStockBatchInput = {
    where: RackStockLevelScalarWhereInput
    data: XOR<RackStockLevelUpdateManyMutationInput, RackStockLevelUncheckedUpdateManyWithoutStockBatchInput>
  }

  export type MaterialIssueUpsertWithWhereUniqueWithoutStockBatchInput = {
    where: MaterialIssueWhereUniqueInput
    update: XOR<MaterialIssueUpdateWithoutStockBatchInput, MaterialIssueUncheckedUpdateWithoutStockBatchInput>
    create: XOR<MaterialIssueCreateWithoutStockBatchInput, MaterialIssueUncheckedCreateWithoutStockBatchInput>
  }

  export type MaterialIssueUpdateWithWhereUniqueWithoutStockBatchInput = {
    where: MaterialIssueWhereUniqueInput
    data: XOR<MaterialIssueUpdateWithoutStockBatchInput, MaterialIssueUncheckedUpdateWithoutStockBatchInput>
  }

  export type MaterialIssueUpdateManyWithWhereWithoutStockBatchInput = {
    where: MaterialIssueScalarWhereInput
    data: XOR<MaterialIssueUpdateManyMutationInput, MaterialIssueUncheckedUpdateManyWithoutStockBatchInput>
  }

  export type PackingMaterialCreateWithoutRackLevelsInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutPackingMaterialsInput
    stockBatches?: StockBatchCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialUncheckedCreateWithoutRackLevelsInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialCreateOrConnectWithoutRackLevelsInput = {
    where: PackingMaterialWhereUniqueInput
    create: XOR<PackingMaterialCreateWithoutRackLevelsInput, PackingMaterialUncheckedCreateWithoutRackLevelsInput>
  }

  export type RackCreateWithoutMaterialLevelsInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutRacksInput
    shipments?: ShipmentCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxCreateNestedManyWithoutRackInput
    activities?: RackActivityCreateNestedManyWithoutRackInput
    inventory?: RackInventoryCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueCreateNestedManyWithoutRackInput
  }

  export type RackUncheckedCreateWithoutMaterialLevelsInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shipments?: ShipmentUncheckedCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutRackInput
    activities?: RackActivityUncheckedCreateNestedManyWithoutRackInput
    inventory?: RackInventoryUncheckedCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnUncheckedCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueUncheckedCreateNestedManyWithoutRackInput
  }

  export type RackCreateOrConnectWithoutMaterialLevelsInput = {
    where: RackWhereUniqueInput
    create: XOR<RackCreateWithoutMaterialLevelsInput, RackUncheckedCreateWithoutMaterialLevelsInput>
  }

  export type StockBatchCreateWithoutRackAllocationsInput = {
    id?: string
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    material: PackingMaterialCreateNestedOneWithoutStockBatchesInput
    vendor?: VendorCreateNestedOneWithoutStockBatchesInput
    receivedBy?: UserCreateNestedOneWithoutStockBatchesReceivedInput
    company: CompanyCreateNestedOneWithoutStockBatchesInput
    issues?: MaterialIssueCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchUncheckedCreateWithoutRackAllocationsInput = {
    id?: string
    materialId: string
    vendorId?: string | null
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    receivedById?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    issues?: MaterialIssueUncheckedCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchCreateOrConnectWithoutRackAllocationsInput = {
    where: StockBatchWhereUniqueInput
    create: XOR<StockBatchCreateWithoutRackAllocationsInput, StockBatchUncheckedCreateWithoutRackAllocationsInput>
  }

  export type CompanyCreateWithoutRackLevelsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutRackLevelsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutRackLevelsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutRackLevelsInput, CompanyUncheckedCreateWithoutRackLevelsInput>
  }

  export type PackingMaterialUpsertWithoutRackLevelsInput = {
    update: XOR<PackingMaterialUpdateWithoutRackLevelsInput, PackingMaterialUncheckedUpdateWithoutRackLevelsInput>
    create: XOR<PackingMaterialCreateWithoutRackLevelsInput, PackingMaterialUncheckedCreateWithoutRackLevelsInput>
    where?: PackingMaterialWhereInput
  }

  export type PackingMaterialUpdateToOneWithWhereWithoutRackLevelsInput = {
    where?: PackingMaterialWhereInput
    data: XOR<PackingMaterialUpdateWithoutRackLevelsInput, PackingMaterialUncheckedUpdateWithoutRackLevelsInput>
  }

  export type PackingMaterialUpdateWithoutRackLevelsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutPackingMaterialsNestedInput
    stockBatches?: StockBatchUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutMaterialNestedInput
  }

  export type PackingMaterialUncheckedUpdateWithoutRackLevelsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stockBatches?: StockBatchUncheckedUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type RackUpsertWithoutMaterialLevelsInput = {
    update: XOR<RackUpdateWithoutMaterialLevelsInput, RackUncheckedUpdateWithoutMaterialLevelsInput>
    create: XOR<RackCreateWithoutMaterialLevelsInput, RackUncheckedCreateWithoutMaterialLevelsInput>
    where?: RackWhereInput
  }

  export type RackUpdateToOneWithWhereWithoutMaterialLevelsInput = {
    where?: RackWhereInput
    data: XOR<RackUpdateWithoutMaterialLevelsInput, RackUncheckedUpdateWithoutMaterialLevelsInput>
  }

  export type RackUpdateWithoutMaterialLevelsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutRacksNestedInput
    shipments?: ShipmentUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutRackNestedInput
    activities?: RackActivityUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUpdateManyWithoutRackNestedInput
  }

  export type RackUncheckedUpdateWithoutMaterialLevelsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipments?: ShipmentUncheckedUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutRackNestedInput
    activities?: RackActivityUncheckedUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUncheckedUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUncheckedUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUncheckedUpdateManyWithoutRackNestedInput
  }

  export type StockBatchUpsertWithoutRackAllocationsInput = {
    update: XOR<StockBatchUpdateWithoutRackAllocationsInput, StockBatchUncheckedUpdateWithoutRackAllocationsInput>
    create: XOR<StockBatchCreateWithoutRackAllocationsInput, StockBatchUncheckedCreateWithoutRackAllocationsInput>
    where?: StockBatchWhereInput
  }

  export type StockBatchUpdateToOneWithWhereWithoutRackAllocationsInput = {
    where?: StockBatchWhereInput
    data: XOR<StockBatchUpdateWithoutRackAllocationsInput, StockBatchUncheckedUpdateWithoutRackAllocationsInput>
  }

  export type StockBatchUpdateWithoutRackAllocationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: PackingMaterialUpdateOneRequiredWithoutStockBatchesNestedInput
    vendor?: VendorUpdateOneWithoutStockBatchesNestedInput
    receivedBy?: UserUpdateOneWithoutStockBatchesReceivedNestedInput
    company?: CompanyUpdateOneRequiredWithoutStockBatchesNestedInput
    issues?: MaterialIssueUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateWithoutRackAllocationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    receivedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    issues?: MaterialIssueUncheckedUpdateManyWithoutStockBatchNestedInput
  }

  export type CompanyUpsertWithoutRackLevelsInput = {
    update: XOR<CompanyUpdateWithoutRackLevelsInput, CompanyUncheckedUpdateWithoutRackLevelsInput>
    create: XOR<CompanyCreateWithoutRackLevelsInput, CompanyUncheckedCreateWithoutRackLevelsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutRackLevelsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutRackLevelsInput, CompanyUncheckedUpdateWithoutRackLevelsInput>
  }

  export type CompanyUpdateWithoutRackLevelsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutRackLevelsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type MovingJobCreateWithoutMaterialIssuesInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutMovingJobsInput
    teamLeader?: UserCreateNestedOneWithoutMovingJobsLeadInput
    assignments?: JobAssignmentCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalCreateNestedManyWithoutJobInput
  }

  export type MovingJobUncheckedCreateWithoutMaterialIssuesInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    teamLeaderId?: string | null
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
    assignments?: JobAssignmentUncheckedCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalUncheckedCreateNestedManyWithoutJobInput
  }

  export type MovingJobCreateOrConnectWithoutMaterialIssuesInput = {
    where: MovingJobWhereUniqueInput
    create: XOR<MovingJobCreateWithoutMaterialIssuesInput, MovingJobUncheckedCreateWithoutMaterialIssuesInput>
  }

  export type PackingMaterialCreateWithoutMaterialIssuesInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutPackingMaterialsInput
    stockBatches?: StockBatchCreateNestedManyWithoutMaterialInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialUncheckedCreateWithoutMaterialIssuesInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutMaterialInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialCreateOrConnectWithoutMaterialIssuesInput = {
    where: PackingMaterialWhereUniqueInput
    create: XOR<PackingMaterialCreateWithoutMaterialIssuesInput, PackingMaterialUncheckedCreateWithoutMaterialIssuesInput>
  }

  export type StockBatchCreateWithoutIssuesInput = {
    id?: string
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    material: PackingMaterialCreateNestedOneWithoutStockBatchesInput
    vendor?: VendorCreateNestedOneWithoutStockBatchesInput
    receivedBy?: UserCreateNestedOneWithoutStockBatchesReceivedInput
    company: CompanyCreateNestedOneWithoutStockBatchesInput
    rackAllocations?: RackStockLevelCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchUncheckedCreateWithoutIssuesInput = {
    id?: string
    materialId: string
    vendorId?: string | null
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    receivedById?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    rackAllocations?: RackStockLevelUncheckedCreateNestedManyWithoutStockBatchInput
  }

  export type StockBatchCreateOrConnectWithoutIssuesInput = {
    where: StockBatchWhereUniqueInput
    create: XOR<StockBatchCreateWithoutIssuesInput, StockBatchUncheckedCreateWithoutIssuesInput>
  }

  export type RackCreateWithoutJobMaterialsInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutRacksInput
    shipments?: ShipmentCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxCreateNestedManyWithoutRackInput
    activities?: RackActivityCreateNestedManyWithoutRackInput
    inventory?: RackInventoryCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnCreateNestedManyWithoutRackInput
  }

  export type RackUncheckedCreateWithoutJobMaterialsInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shipments?: ShipmentUncheckedCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutRackInput
    activities?: RackActivityUncheckedCreateNestedManyWithoutRackInput
    inventory?: RackInventoryUncheckedCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelUncheckedCreateNestedManyWithoutRackInput
    MaterialReturn?: MaterialReturnUncheckedCreateNestedManyWithoutRackInput
  }

  export type RackCreateOrConnectWithoutJobMaterialsInput = {
    where: RackWhereUniqueInput
    create: XOR<RackCreateWithoutJobMaterialsInput, RackUncheckedCreateWithoutJobMaterialsInput>
  }

  export type UserCreateWithoutMaterialIssuesCreatedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutMaterialIssuesCreatedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutMaterialIssuesCreatedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMaterialIssuesCreatedInput, UserUncheckedCreateWithoutMaterialIssuesCreatedInput>
  }

  export type CompanyCreateWithoutMaterialIssuesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutMaterialIssuesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutMaterialIssuesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutMaterialIssuesInput, CompanyUncheckedCreateWithoutMaterialIssuesInput>
  }

  export type MaterialReturnCreateWithoutIssueInput = {
    id?: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialReturnsInput
    material: PackingMaterialCreateNestedOneWithoutMaterialReturnsInput
    rack?: RackCreateNestedOneWithoutMaterialReturnInput
    recordedBy?: UserCreateNestedOneWithoutMaterialReturnsRecordedInput
    damages?: MaterialDamageCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectReturnInput
    company: CompanyCreateNestedOneWithoutMaterialReturnsInput
  }

  export type MaterialReturnUncheckedCreateWithoutIssueInput = {
    id?: string
    jobId: string
    materialId: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
    damages?: MaterialDamageUncheckedCreateNestedManyWithoutReturnInput
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectReturnInput
  }

  export type MaterialReturnCreateOrConnectWithoutIssueInput = {
    where: MaterialReturnWhereUniqueInput
    create: XOR<MaterialReturnCreateWithoutIssueInput, MaterialReturnUncheckedCreateWithoutIssueInput>
  }

  export type MaterialReturnCreateManyIssueInputEnvelope = {
    data: MaterialReturnCreateManyIssueInput | MaterialReturnCreateManyIssueInput[]
  }

  export type MovingJobUpsertWithoutMaterialIssuesInput = {
    update: XOR<MovingJobUpdateWithoutMaterialIssuesInput, MovingJobUncheckedUpdateWithoutMaterialIssuesInput>
    create: XOR<MovingJobCreateWithoutMaterialIssuesInput, MovingJobUncheckedCreateWithoutMaterialIssuesInput>
    where?: MovingJobWhereInput
  }

  export type MovingJobUpdateToOneWithWhereWithoutMaterialIssuesInput = {
    where?: MovingJobWhereInput
    data: XOR<MovingJobUpdateWithoutMaterialIssuesInput, MovingJobUncheckedUpdateWithoutMaterialIssuesInput>
  }

  export type MovingJobUpdateWithoutMaterialIssuesInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutMovingJobsNestedInput
    teamLeader?: UserUpdateOneWithoutMovingJobsLeadNestedInput
    assignments?: JobAssignmentUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUpdateManyWithoutJobNestedInput
  }

  export type MovingJobUncheckedUpdateWithoutMaterialIssuesInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    teamLeaderId?: NullableStringFieldUpdateOperationsInput | string | null
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    assignments?: JobAssignmentUncheckedUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUncheckedUpdateManyWithoutJobNestedInput
  }

  export type PackingMaterialUpsertWithoutMaterialIssuesInput = {
    update: XOR<PackingMaterialUpdateWithoutMaterialIssuesInput, PackingMaterialUncheckedUpdateWithoutMaterialIssuesInput>
    create: XOR<PackingMaterialCreateWithoutMaterialIssuesInput, PackingMaterialUncheckedCreateWithoutMaterialIssuesInput>
    where?: PackingMaterialWhereInput
  }

  export type PackingMaterialUpdateToOneWithWhereWithoutMaterialIssuesInput = {
    where?: PackingMaterialWhereInput
    data: XOR<PackingMaterialUpdateWithoutMaterialIssuesInput, PackingMaterialUncheckedUpdateWithoutMaterialIssuesInput>
  }

  export type PackingMaterialUpdateWithoutMaterialIssuesInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutPackingMaterialsNestedInput
    stockBatches?: StockBatchUpdateManyWithoutMaterialNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutMaterialNestedInput
  }

  export type PackingMaterialUncheckedUpdateWithoutMaterialIssuesInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stockBatches?: StockBatchUncheckedUpdateManyWithoutMaterialNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type StockBatchUpsertWithoutIssuesInput = {
    update: XOR<StockBatchUpdateWithoutIssuesInput, StockBatchUncheckedUpdateWithoutIssuesInput>
    create: XOR<StockBatchCreateWithoutIssuesInput, StockBatchUncheckedCreateWithoutIssuesInput>
    where?: StockBatchWhereInput
  }

  export type StockBatchUpdateToOneWithWhereWithoutIssuesInput = {
    where?: StockBatchWhereInput
    data: XOR<StockBatchUpdateWithoutIssuesInput, StockBatchUncheckedUpdateWithoutIssuesInput>
  }

  export type StockBatchUpdateWithoutIssuesInput = {
    id?: StringFieldUpdateOperationsInput | string
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: PackingMaterialUpdateOneRequiredWithoutStockBatchesNestedInput
    vendor?: VendorUpdateOneWithoutStockBatchesNestedInput
    receivedBy?: UserUpdateOneWithoutStockBatchesReceivedNestedInput
    company?: CompanyUpdateOneRequiredWithoutStockBatchesNestedInput
    rackAllocations?: RackStockLevelUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateWithoutIssuesInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    receivedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rackAllocations?: RackStockLevelUncheckedUpdateManyWithoutStockBatchNestedInput
  }

  export type RackUpsertWithoutJobMaterialsInput = {
    update: XOR<RackUpdateWithoutJobMaterialsInput, RackUncheckedUpdateWithoutJobMaterialsInput>
    create: XOR<RackCreateWithoutJobMaterialsInput, RackUncheckedCreateWithoutJobMaterialsInput>
    where?: RackWhereInput
  }

  export type RackUpdateToOneWithWhereWithoutJobMaterialsInput = {
    where?: RackWhereInput
    data: XOR<RackUpdateWithoutJobMaterialsInput, RackUncheckedUpdateWithoutJobMaterialsInput>
  }

  export type RackUpdateWithoutJobMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutRacksNestedInput
    shipments?: ShipmentUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutRackNestedInput
    activities?: RackActivityUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUpdateManyWithoutRackNestedInput
  }

  export type RackUncheckedUpdateWithoutJobMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipments?: ShipmentUncheckedUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutRackNestedInput
    activities?: RackActivityUncheckedUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUncheckedUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUncheckedUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUncheckedUpdateManyWithoutRackNestedInput
  }

  export type UserUpsertWithoutMaterialIssuesCreatedInput = {
    update: XOR<UserUpdateWithoutMaterialIssuesCreatedInput, UserUncheckedUpdateWithoutMaterialIssuesCreatedInput>
    create: XOR<UserCreateWithoutMaterialIssuesCreatedInput, UserUncheckedCreateWithoutMaterialIssuesCreatedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMaterialIssuesCreatedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMaterialIssuesCreatedInput, UserUncheckedUpdateWithoutMaterialIssuesCreatedInput>
  }

  export type UserUpdateWithoutMaterialIssuesCreatedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutMaterialIssuesCreatedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type CompanyUpsertWithoutMaterialIssuesInput = {
    update: XOR<CompanyUpdateWithoutMaterialIssuesInput, CompanyUncheckedUpdateWithoutMaterialIssuesInput>
    create: XOR<CompanyCreateWithoutMaterialIssuesInput, CompanyUncheckedCreateWithoutMaterialIssuesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutMaterialIssuesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutMaterialIssuesInput, CompanyUncheckedUpdateWithoutMaterialIssuesInput>
  }

  export type CompanyUpdateWithoutMaterialIssuesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutMaterialIssuesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type MaterialReturnUpsertWithWhereUniqueWithoutIssueInput = {
    where: MaterialReturnWhereUniqueInput
    update: XOR<MaterialReturnUpdateWithoutIssueInput, MaterialReturnUncheckedUpdateWithoutIssueInput>
    create: XOR<MaterialReturnCreateWithoutIssueInput, MaterialReturnUncheckedCreateWithoutIssueInput>
  }

  export type MaterialReturnUpdateWithWhereUniqueWithoutIssueInput = {
    where: MaterialReturnWhereUniqueInput
    data: XOR<MaterialReturnUpdateWithoutIssueInput, MaterialReturnUncheckedUpdateWithoutIssueInput>
  }

  export type MaterialReturnUpdateManyWithWhereWithoutIssueInput = {
    where: MaterialReturnScalarWhereInput
    data: XOR<MaterialReturnUpdateManyMutationInput, MaterialReturnUncheckedUpdateManyWithoutIssueInput>
  }

  export type MovingJobCreateWithoutMaterialReturnsInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutMovingJobsInput
    teamLeader?: UserCreateNestedOneWithoutMovingJobsLeadInput
    assignments?: JobAssignmentCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalCreateNestedManyWithoutJobInput
  }

  export type MovingJobUncheckedCreateWithoutMaterialReturnsInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    teamLeaderId?: string | null
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
    assignments?: JobAssignmentUncheckedCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalUncheckedCreateNestedManyWithoutJobInput
  }

  export type MovingJobCreateOrConnectWithoutMaterialReturnsInput = {
    where: MovingJobWhereUniqueInput
    create: XOR<MovingJobCreateWithoutMaterialReturnsInput, MovingJobUncheckedCreateWithoutMaterialReturnsInput>
  }

  export type PackingMaterialCreateWithoutMaterialReturnsInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutPackingMaterialsInput
    stockBatches?: StockBatchCreateNestedManyWithoutMaterialInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialUncheckedCreateWithoutMaterialReturnsInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutMaterialInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutMaterialInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialCreateOrConnectWithoutMaterialReturnsInput = {
    where: PackingMaterialWhereUniqueInput
    create: XOR<PackingMaterialCreateWithoutMaterialReturnsInput, PackingMaterialUncheckedCreateWithoutMaterialReturnsInput>
  }

  export type MaterialIssueCreateWithoutReturnsInput = {
    id?: string
    quantity: number
    unitCost: number
    totalCost: number
    issuedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialIssuesInput
    material: PackingMaterialCreateNestedOneWithoutMaterialIssuesInput
    stockBatch?: StockBatchCreateNestedOneWithoutIssuesInput
    rack?: RackCreateNestedOneWithoutJobMaterialsInput
    issuedBy?: UserCreateNestedOneWithoutMaterialIssuesCreatedInput
    company: CompanyCreateNestedOneWithoutMaterialIssuesInput
  }

  export type MaterialIssueUncheckedCreateWithoutReturnsInput = {
    id?: string
    jobId: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type MaterialIssueCreateOrConnectWithoutReturnsInput = {
    where: MaterialIssueWhereUniqueInput
    create: XOR<MaterialIssueCreateWithoutReturnsInput, MaterialIssueUncheckedCreateWithoutReturnsInput>
  }

  export type RackCreateWithoutMaterialReturnInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutRacksInput
    shipments?: ShipmentCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxCreateNestedManyWithoutRackInput
    activities?: RackActivityCreateNestedManyWithoutRackInput
    inventory?: RackInventoryCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueCreateNestedManyWithoutRackInput
  }

  export type RackUncheckedCreateWithoutMaterialReturnInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shipments?: ShipmentUncheckedCreateNestedManyWithoutRackInput
    boxes?: ShipmentBoxUncheckedCreateNestedManyWithoutRackInput
    activities?: RackActivityUncheckedCreateNestedManyWithoutRackInput
    inventory?: RackInventoryUncheckedCreateNestedManyWithoutRackInput
    materialLevels?: RackStockLevelUncheckedCreateNestedManyWithoutRackInput
    jobMaterials?: MaterialIssueUncheckedCreateNestedManyWithoutRackInput
  }

  export type RackCreateOrConnectWithoutMaterialReturnInput = {
    where: RackWhereUniqueInput
    create: XOR<RackCreateWithoutMaterialReturnInput, RackUncheckedCreateWithoutMaterialReturnInput>
  }

  export type UserCreateWithoutMaterialReturnsRecordedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutMaterialReturnsRecordedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutMaterialReturnsRecordedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMaterialReturnsRecordedInput, UserUncheckedCreateWithoutMaterialReturnsRecordedInput>
  }

  export type MaterialDamageCreateWithoutReturnInput = {
    id?: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedAt?: Date | string
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    material: PackingMaterialCreateNestedOneWithoutMaterialDamagesInput
    recordedBy?: UserCreateNestedOneWithoutDamagesRecordedInput
    approvedBy?: UserCreateNestedOneWithoutDamagesApprovedInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectDamageInput
    company: CompanyCreateNestedOneWithoutMaterialDamagesInput
  }

  export type MaterialDamageUncheckedCreateWithoutReturnInput = {
    id?: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectDamageInput
  }

  export type MaterialDamageCreateOrConnectWithoutReturnInput = {
    where: MaterialDamageWhereUniqueInput
    create: XOR<MaterialDamageCreateWithoutReturnInput, MaterialDamageUncheckedCreateWithoutReturnInput>
  }

  export type MaterialDamageCreateManyReturnInputEnvelope = {
    data: MaterialDamageCreateManyReturnInput | MaterialDamageCreateManyReturnInput[]
  }

  export type MaterialApprovalCreateWithoutSubjectReturnInput = {
    id?: string
    approvalType: string
    status?: string
    requestedAt?: Date | string
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    job: MovingJobCreateNestedOneWithoutApprovalsInput
    requestedBy?: UserCreateNestedOneWithoutApprovalsRequestedInput
    decisionBy?: UserCreateNestedOneWithoutApprovalsDecidedInput
    subjectDamage?: MaterialDamageCreateNestedOneWithoutApprovalInput
    company: CompanyCreateNestedOneWithoutMaterialApprovalsInput
  }

  export type MaterialApprovalUncheckedCreateWithoutSubjectReturnInput = {
    id?: string
    jobId: string
    approvalType: string
    status?: string
    requestedById?: string | null
    requestedAt?: Date | string
    decisionById?: string | null
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectDamageId?: string | null
    companyId: string
  }

  export type MaterialApprovalCreateOrConnectWithoutSubjectReturnInput = {
    where: MaterialApprovalWhereUniqueInput
    create: XOR<MaterialApprovalCreateWithoutSubjectReturnInput, MaterialApprovalUncheckedCreateWithoutSubjectReturnInput>
  }

  export type CompanyCreateWithoutMaterialReturnsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutMaterialReturnsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutMaterialReturnsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutMaterialReturnsInput, CompanyUncheckedCreateWithoutMaterialReturnsInput>
  }

  export type MovingJobUpsertWithoutMaterialReturnsInput = {
    update: XOR<MovingJobUpdateWithoutMaterialReturnsInput, MovingJobUncheckedUpdateWithoutMaterialReturnsInput>
    create: XOR<MovingJobCreateWithoutMaterialReturnsInput, MovingJobUncheckedCreateWithoutMaterialReturnsInput>
    where?: MovingJobWhereInput
  }

  export type MovingJobUpdateToOneWithWhereWithoutMaterialReturnsInput = {
    where?: MovingJobWhereInput
    data: XOR<MovingJobUpdateWithoutMaterialReturnsInput, MovingJobUncheckedUpdateWithoutMaterialReturnsInput>
  }

  export type MovingJobUpdateWithoutMaterialReturnsInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutMovingJobsNestedInput
    teamLeader?: UserUpdateOneWithoutMovingJobsLeadNestedInput
    assignments?: JobAssignmentUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUpdateManyWithoutJobNestedInput
  }

  export type MovingJobUncheckedUpdateWithoutMaterialReturnsInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    teamLeaderId?: NullableStringFieldUpdateOperationsInput | string | null
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    assignments?: JobAssignmentUncheckedUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUncheckedUpdateManyWithoutJobNestedInput
  }

  export type PackingMaterialUpsertWithoutMaterialReturnsInput = {
    update: XOR<PackingMaterialUpdateWithoutMaterialReturnsInput, PackingMaterialUncheckedUpdateWithoutMaterialReturnsInput>
    create: XOR<PackingMaterialCreateWithoutMaterialReturnsInput, PackingMaterialUncheckedCreateWithoutMaterialReturnsInput>
    where?: PackingMaterialWhereInput
  }

  export type PackingMaterialUpdateToOneWithWhereWithoutMaterialReturnsInput = {
    where?: PackingMaterialWhereInput
    data: XOR<PackingMaterialUpdateWithoutMaterialReturnsInput, PackingMaterialUncheckedUpdateWithoutMaterialReturnsInput>
  }

  export type PackingMaterialUpdateWithoutMaterialReturnsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutPackingMaterialsNestedInput
    stockBatches?: StockBatchUpdateManyWithoutMaterialNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutMaterialNestedInput
  }

  export type PackingMaterialUncheckedUpdateWithoutMaterialReturnsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stockBatches?: StockBatchUncheckedUpdateManyWithoutMaterialNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialIssueUpsertWithoutReturnsInput = {
    update: XOR<MaterialIssueUpdateWithoutReturnsInput, MaterialIssueUncheckedUpdateWithoutReturnsInput>
    create: XOR<MaterialIssueCreateWithoutReturnsInput, MaterialIssueUncheckedCreateWithoutReturnsInput>
    where?: MaterialIssueWhereInput
  }

  export type MaterialIssueUpdateToOneWithWhereWithoutReturnsInput = {
    where?: MaterialIssueWhereInput
    data: XOR<MaterialIssueUpdateWithoutReturnsInput, MaterialIssueUncheckedUpdateWithoutReturnsInput>
  }

  export type MaterialIssueUpdateWithoutReturnsInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialIssuesNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialIssuesNestedInput
    stockBatch?: StockBatchUpdateOneWithoutIssuesNestedInput
    rack?: RackUpdateOneWithoutJobMaterialsNestedInput
    issuedBy?: UserUpdateOneWithoutMaterialIssuesCreatedNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialIssuesNestedInput
  }

  export type MaterialIssueUncheckedUpdateWithoutReturnsInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackUpsertWithoutMaterialReturnInput = {
    update: XOR<RackUpdateWithoutMaterialReturnInput, RackUncheckedUpdateWithoutMaterialReturnInput>
    create: XOR<RackCreateWithoutMaterialReturnInput, RackUncheckedCreateWithoutMaterialReturnInput>
    where?: RackWhereInput
  }

  export type RackUpdateToOneWithWhereWithoutMaterialReturnInput = {
    where?: RackWhereInput
    data: XOR<RackUpdateWithoutMaterialReturnInput, RackUncheckedUpdateWithoutMaterialReturnInput>
  }

  export type RackUpdateWithoutMaterialReturnInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutRacksNestedInput
    shipments?: ShipmentUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutRackNestedInput
    activities?: RackActivityUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUpdateManyWithoutRackNestedInput
  }

  export type RackUncheckedUpdateWithoutMaterialReturnInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipments?: ShipmentUncheckedUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutRackNestedInput
    activities?: RackActivityUncheckedUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUncheckedUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUncheckedUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUncheckedUpdateManyWithoutRackNestedInput
  }

  export type UserUpsertWithoutMaterialReturnsRecordedInput = {
    update: XOR<UserUpdateWithoutMaterialReturnsRecordedInput, UserUncheckedUpdateWithoutMaterialReturnsRecordedInput>
    create: XOR<UserCreateWithoutMaterialReturnsRecordedInput, UserUncheckedCreateWithoutMaterialReturnsRecordedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMaterialReturnsRecordedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMaterialReturnsRecordedInput, UserUncheckedUpdateWithoutMaterialReturnsRecordedInput>
  }

  export type UserUpdateWithoutMaterialReturnsRecordedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutMaterialReturnsRecordedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type MaterialDamageUpsertWithWhereUniqueWithoutReturnInput = {
    where: MaterialDamageWhereUniqueInput
    update: XOR<MaterialDamageUpdateWithoutReturnInput, MaterialDamageUncheckedUpdateWithoutReturnInput>
    create: XOR<MaterialDamageCreateWithoutReturnInput, MaterialDamageUncheckedCreateWithoutReturnInput>
  }

  export type MaterialDamageUpdateWithWhereUniqueWithoutReturnInput = {
    where: MaterialDamageWhereUniqueInput
    data: XOR<MaterialDamageUpdateWithoutReturnInput, MaterialDamageUncheckedUpdateWithoutReturnInput>
  }

  export type MaterialDamageUpdateManyWithWhereWithoutReturnInput = {
    where: MaterialDamageScalarWhereInput
    data: XOR<MaterialDamageUpdateManyMutationInput, MaterialDamageUncheckedUpdateManyWithoutReturnInput>
  }

  export type MaterialApprovalUpsertWithoutSubjectReturnInput = {
    update: XOR<MaterialApprovalUpdateWithoutSubjectReturnInput, MaterialApprovalUncheckedUpdateWithoutSubjectReturnInput>
    create: XOR<MaterialApprovalCreateWithoutSubjectReturnInput, MaterialApprovalUncheckedCreateWithoutSubjectReturnInput>
    where?: MaterialApprovalWhereInput
  }

  export type MaterialApprovalUpdateToOneWithWhereWithoutSubjectReturnInput = {
    where?: MaterialApprovalWhereInput
    data: XOR<MaterialApprovalUpdateWithoutSubjectReturnInput, MaterialApprovalUncheckedUpdateWithoutSubjectReturnInput>
  }

  export type MaterialApprovalUpdateWithoutSubjectReturnInput = {
    id?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutApprovalsNestedInput
    requestedBy?: UserUpdateOneWithoutApprovalsRequestedNestedInput
    decisionBy?: UserUpdateOneWithoutApprovalsDecidedNestedInput
    subjectDamage?: MaterialDamageUpdateOneWithoutApprovalNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialApprovalsNestedInput
  }

  export type MaterialApprovalUncheckedUpdateWithoutSubjectReturnInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedById?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisionById?: NullableStringFieldUpdateOperationsInput | string | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type CompanyUpsertWithoutMaterialReturnsInput = {
    update: XOR<CompanyUpdateWithoutMaterialReturnsInput, CompanyUncheckedUpdateWithoutMaterialReturnsInput>
    create: XOR<CompanyCreateWithoutMaterialReturnsInput, CompanyUncheckedCreateWithoutMaterialReturnsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutMaterialReturnsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutMaterialReturnsInput, CompanyUncheckedUpdateWithoutMaterialReturnsInput>
  }

  export type CompanyUpdateWithoutMaterialReturnsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutMaterialReturnsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type PackingMaterialCreateWithoutMaterialDamagesInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutPackingMaterialsInput
    stockBatches?: StockBatchCreateNestedManyWithoutMaterialInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialUncheckedCreateWithoutMaterialDamagesInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutMaterialInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutMaterialInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutMaterialInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type PackingMaterialCreateOrConnectWithoutMaterialDamagesInput = {
    where: PackingMaterialWhereUniqueInput
    create: XOR<PackingMaterialCreateWithoutMaterialDamagesInput, PackingMaterialUncheckedCreateWithoutMaterialDamagesInput>
  }

  export type MaterialReturnCreateWithoutDamagesInput = {
    id?: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialReturnsInput
    material: PackingMaterialCreateNestedOneWithoutMaterialReturnsInput
    issue?: MaterialIssueCreateNestedOneWithoutReturnsInput
    rack?: RackCreateNestedOneWithoutMaterialReturnInput
    recordedBy?: UserCreateNestedOneWithoutMaterialReturnsRecordedInput
    approval?: MaterialApprovalCreateNestedOneWithoutSubjectReturnInput
    company: CompanyCreateNestedOneWithoutMaterialReturnsInput
  }

  export type MaterialReturnUncheckedCreateWithoutDamagesInput = {
    id?: string
    jobId: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
    approval?: MaterialApprovalUncheckedCreateNestedOneWithoutSubjectReturnInput
  }

  export type MaterialReturnCreateOrConnectWithoutDamagesInput = {
    where: MaterialReturnWhereUniqueInput
    create: XOR<MaterialReturnCreateWithoutDamagesInput, MaterialReturnUncheckedCreateWithoutDamagesInput>
  }

  export type UserCreateWithoutDamagesRecordedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutDamagesRecordedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutDamagesRecordedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDamagesRecordedInput, UserUncheckedCreateWithoutDamagesRecordedInput>
  }

  export type UserCreateWithoutDamagesApprovedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutDamagesApprovedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutDamagesApprovedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDamagesApprovedInput, UserUncheckedCreateWithoutDamagesApprovedInput>
  }

  export type MaterialApprovalCreateWithoutSubjectDamageInput = {
    id?: string
    approvalType: string
    status?: string
    requestedAt?: Date | string
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    job: MovingJobCreateNestedOneWithoutApprovalsInput
    requestedBy?: UserCreateNestedOneWithoutApprovalsRequestedInput
    decisionBy?: UserCreateNestedOneWithoutApprovalsDecidedInput
    subjectReturn?: MaterialReturnCreateNestedOneWithoutApprovalInput
    company: CompanyCreateNestedOneWithoutMaterialApprovalsInput
  }

  export type MaterialApprovalUncheckedCreateWithoutSubjectDamageInput = {
    id?: string
    jobId: string
    approvalType: string
    status?: string
    requestedById?: string | null
    requestedAt?: Date | string
    decisionById?: string | null
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    companyId: string
  }

  export type MaterialApprovalCreateOrConnectWithoutSubjectDamageInput = {
    where: MaterialApprovalWhereUniqueInput
    create: XOR<MaterialApprovalCreateWithoutSubjectDamageInput, MaterialApprovalUncheckedCreateWithoutSubjectDamageInput>
  }

  export type CompanyCreateWithoutMaterialDamagesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutMaterialDamagesInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutMaterialDamagesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutMaterialDamagesInput, CompanyUncheckedCreateWithoutMaterialDamagesInput>
  }

  export type PackingMaterialUpsertWithoutMaterialDamagesInput = {
    update: XOR<PackingMaterialUpdateWithoutMaterialDamagesInput, PackingMaterialUncheckedUpdateWithoutMaterialDamagesInput>
    create: XOR<PackingMaterialCreateWithoutMaterialDamagesInput, PackingMaterialUncheckedCreateWithoutMaterialDamagesInput>
    where?: PackingMaterialWhereInput
  }

  export type PackingMaterialUpdateToOneWithWhereWithoutMaterialDamagesInput = {
    where?: PackingMaterialWhereInput
    data: XOR<PackingMaterialUpdateWithoutMaterialDamagesInput, PackingMaterialUncheckedUpdateWithoutMaterialDamagesInput>
  }

  export type PackingMaterialUpdateWithoutMaterialDamagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutPackingMaterialsNestedInput
    stockBatches?: StockBatchUpdateManyWithoutMaterialNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutMaterialNestedInput
  }

  export type PackingMaterialUncheckedUpdateWithoutMaterialDamagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stockBatches?: StockBatchUncheckedUpdateManyWithoutMaterialNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialReturnUpsertWithoutDamagesInput = {
    update: XOR<MaterialReturnUpdateWithoutDamagesInput, MaterialReturnUncheckedUpdateWithoutDamagesInput>
    create: XOR<MaterialReturnCreateWithoutDamagesInput, MaterialReturnUncheckedCreateWithoutDamagesInput>
    where?: MaterialReturnWhereInput
  }

  export type MaterialReturnUpdateToOneWithWhereWithoutDamagesInput = {
    where?: MaterialReturnWhereInput
    data: XOR<MaterialReturnUpdateWithoutDamagesInput, MaterialReturnUncheckedUpdateWithoutDamagesInput>
  }

  export type MaterialReturnUpdateWithoutDamagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialReturnsNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialReturnsNestedInput
    issue?: MaterialIssueUpdateOneWithoutReturnsNestedInput
    rack?: RackUpdateOneWithoutMaterialReturnNestedInput
    recordedBy?: UserUpdateOneWithoutMaterialReturnsRecordedNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectReturnNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialReturnsNestedInput
  }

  export type MaterialReturnUncheckedUpdateWithoutDamagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectReturnNestedInput
  }

  export type UserUpsertWithoutDamagesRecordedInput = {
    update: XOR<UserUpdateWithoutDamagesRecordedInput, UserUncheckedUpdateWithoutDamagesRecordedInput>
    create: XOR<UserCreateWithoutDamagesRecordedInput, UserUncheckedCreateWithoutDamagesRecordedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDamagesRecordedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDamagesRecordedInput, UserUncheckedUpdateWithoutDamagesRecordedInput>
  }

  export type UserUpdateWithoutDamagesRecordedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDamagesRecordedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUpsertWithoutDamagesApprovedInput = {
    update: XOR<UserUpdateWithoutDamagesApprovedInput, UserUncheckedUpdateWithoutDamagesApprovedInput>
    create: XOR<UserCreateWithoutDamagesApprovedInput, UserUncheckedCreateWithoutDamagesApprovedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDamagesApprovedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDamagesApprovedInput, UserUncheckedUpdateWithoutDamagesApprovedInput>
  }

  export type UserUpdateWithoutDamagesApprovedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDamagesApprovedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type MaterialApprovalUpsertWithoutSubjectDamageInput = {
    update: XOR<MaterialApprovalUpdateWithoutSubjectDamageInput, MaterialApprovalUncheckedUpdateWithoutSubjectDamageInput>
    create: XOR<MaterialApprovalCreateWithoutSubjectDamageInput, MaterialApprovalUncheckedCreateWithoutSubjectDamageInput>
    where?: MaterialApprovalWhereInput
  }

  export type MaterialApprovalUpdateToOneWithWhereWithoutSubjectDamageInput = {
    where?: MaterialApprovalWhereInput
    data: XOR<MaterialApprovalUpdateWithoutSubjectDamageInput, MaterialApprovalUncheckedUpdateWithoutSubjectDamageInput>
  }

  export type MaterialApprovalUpdateWithoutSubjectDamageInput = {
    id?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutApprovalsNestedInput
    requestedBy?: UserUpdateOneWithoutApprovalsRequestedNestedInput
    decisionBy?: UserUpdateOneWithoutApprovalsDecidedNestedInput
    subjectReturn?: MaterialReturnUpdateOneWithoutApprovalNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialApprovalsNestedInput
  }

  export type MaterialApprovalUncheckedUpdateWithoutSubjectDamageInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedById?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisionById?: NullableStringFieldUpdateOperationsInput | string | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type CompanyUpsertWithoutMaterialDamagesInput = {
    update: XOR<CompanyUpdateWithoutMaterialDamagesInput, CompanyUncheckedUpdateWithoutMaterialDamagesInput>
    create: XOR<CompanyCreateWithoutMaterialDamagesInput, CompanyUncheckedCreateWithoutMaterialDamagesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutMaterialDamagesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutMaterialDamagesInput, CompanyUncheckedUpdateWithoutMaterialDamagesInput>
  }

  export type CompanyUpdateWithoutMaterialDamagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutMaterialDamagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type MovingJobCreateWithoutApprovalsInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutMovingJobsInput
    teamLeader?: UserCreateNestedOneWithoutMovingJobsLeadInput
    assignments?: JobAssignmentCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotCreateNestedManyWithoutJobInput
  }

  export type MovingJobUncheckedCreateWithoutApprovalsInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    teamLeaderId?: string | null
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
    assignments?: JobAssignmentUncheckedCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutJobInput
    costSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutJobInput
  }

  export type MovingJobCreateOrConnectWithoutApprovalsInput = {
    where: MovingJobWhereUniqueInput
    create: XOR<MovingJobCreateWithoutApprovalsInput, MovingJobUncheckedCreateWithoutApprovalsInput>
  }

  export type UserCreateWithoutApprovalsRequestedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsDecided?: MaterialApprovalCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutApprovalsRequestedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsDecided?: MaterialApprovalUncheckedCreateNestedManyWithoutDecisionByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutApprovalsRequestedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApprovalsRequestedInput, UserUncheckedCreateWithoutApprovalsRequestedInput>
  }

  export type UserCreateWithoutApprovalsDecidedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    company: CompanyCreateNestedOneWithoutUsersInput
    activities?: RackActivityCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalCreateNestedManyWithoutRequestedByInput
    shipmentsCreated?: ShipmentCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentCreateNestedManyWithoutReleasedByInput
  }

  export type UserUncheckedCreateWithoutApprovalsDecidedInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
    activities?: RackActivityUncheckedCreateNestedManyWithoutUserInput
    jobAssignments?: JobAssignmentUncheckedCreateNestedManyWithoutUserInput
    movingJobsLead?: MovingJobUncheckedCreateNestedManyWithoutTeamLeaderInput
    stockBatchesReceived?: StockBatchUncheckedCreateNestedManyWithoutReceivedByInput
    materialIssuesCreated?: MaterialIssueUncheckedCreateNestedManyWithoutIssuedByInput
    materialReturnsRecorded?: MaterialReturnUncheckedCreateNestedManyWithoutRecordedByInput
    damagesRecorded?: MaterialDamageUncheckedCreateNestedManyWithoutRecordedByInput
    damagesApproved?: MaterialDamageUncheckedCreateNestedManyWithoutApprovedByInput
    approvalsRequested?: MaterialApprovalUncheckedCreateNestedManyWithoutRequestedByInput
    shipmentsCreated?: ShipmentUncheckedCreateNestedManyWithoutCreatedByInput
    shipmentsAssigned?: ShipmentUncheckedCreateNestedManyWithoutAssignedByInput
    shipmentsReleased?: ShipmentUncheckedCreateNestedManyWithoutReleasedByInput
  }

  export type UserCreateOrConnectWithoutApprovalsDecidedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApprovalsDecidedInput, UserUncheckedCreateWithoutApprovalsDecidedInput>
  }

  export type MaterialReturnCreateWithoutApprovalInput = {
    id?: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedAt?: Date | string
    notes?: string | null
    job: MovingJobCreateNestedOneWithoutMaterialReturnsInput
    material: PackingMaterialCreateNestedOneWithoutMaterialReturnsInput
    issue?: MaterialIssueCreateNestedOneWithoutReturnsInput
    rack?: RackCreateNestedOneWithoutMaterialReturnInput
    recordedBy?: UserCreateNestedOneWithoutMaterialReturnsRecordedInput
    damages?: MaterialDamageCreateNestedManyWithoutReturnInput
    company: CompanyCreateNestedOneWithoutMaterialReturnsInput
  }

  export type MaterialReturnUncheckedCreateWithoutApprovalInput = {
    id?: string
    jobId: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
    damages?: MaterialDamageUncheckedCreateNestedManyWithoutReturnInput
  }

  export type MaterialReturnCreateOrConnectWithoutApprovalInput = {
    where: MaterialReturnWhereUniqueInput
    create: XOR<MaterialReturnCreateWithoutApprovalInput, MaterialReturnUncheckedCreateWithoutApprovalInput>
  }

  export type MaterialDamageCreateWithoutApprovalInput = {
    id?: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedAt?: Date | string
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    material: PackingMaterialCreateNestedOneWithoutMaterialDamagesInput
    return: MaterialReturnCreateNestedOneWithoutDamagesInput
    recordedBy?: UserCreateNestedOneWithoutDamagesRecordedInput
    approvedBy?: UserCreateNestedOneWithoutDamagesApprovedInput
    company: CompanyCreateNestedOneWithoutMaterialDamagesInput
  }

  export type MaterialDamageUncheckedCreateWithoutApprovalInput = {
    id?: string
    returnId: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
  }

  export type MaterialDamageCreateOrConnectWithoutApprovalInput = {
    where: MaterialDamageWhereUniqueInput
    create: XOR<MaterialDamageCreateWithoutApprovalInput, MaterialDamageUncheckedCreateWithoutApprovalInput>
  }

  export type CompanyCreateWithoutMaterialApprovalsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutMaterialApprovalsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutMaterialApprovalsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutMaterialApprovalsInput, CompanyUncheckedCreateWithoutMaterialApprovalsInput>
  }

  export type MovingJobUpsertWithoutApprovalsInput = {
    update: XOR<MovingJobUpdateWithoutApprovalsInput, MovingJobUncheckedUpdateWithoutApprovalsInput>
    create: XOR<MovingJobCreateWithoutApprovalsInput, MovingJobUncheckedCreateWithoutApprovalsInput>
    where?: MovingJobWhereInput
  }

  export type MovingJobUpdateToOneWithWhereWithoutApprovalsInput = {
    where?: MovingJobWhereInput
    data: XOR<MovingJobUpdateWithoutApprovalsInput, MovingJobUncheckedUpdateWithoutApprovalsInput>
  }

  export type MovingJobUpdateWithoutApprovalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutMovingJobsNestedInput
    teamLeader?: UserUpdateOneWithoutMovingJobsLeadNestedInput
    assignments?: JobAssignmentUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUpdateManyWithoutJobNestedInput
  }

  export type MovingJobUncheckedUpdateWithoutApprovalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    teamLeaderId?: NullableStringFieldUpdateOperationsInput | string | null
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    assignments?: JobAssignmentUncheckedUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutJobNestedInput
  }

  export type UserUpsertWithoutApprovalsRequestedInput = {
    update: XOR<UserUpdateWithoutApprovalsRequestedInput, UserUncheckedUpdateWithoutApprovalsRequestedInput>
    create: XOR<UserCreateWithoutApprovalsRequestedInput, UserUncheckedCreateWithoutApprovalsRequestedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutApprovalsRequestedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutApprovalsRequestedInput, UserUncheckedUpdateWithoutApprovalsRequestedInput>
  }

  export type UserUpdateWithoutApprovalsRequestedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutApprovalsRequestedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUpsertWithoutApprovalsDecidedInput = {
    update: XOR<UserUpdateWithoutApprovalsDecidedInput, UserUncheckedUpdateWithoutApprovalsDecidedInput>
    create: XOR<UserCreateWithoutApprovalsDecidedInput, UserUncheckedCreateWithoutApprovalsDecidedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutApprovalsDecidedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutApprovalsDecidedInput, UserUncheckedUpdateWithoutApprovalsDecidedInput>
  }

  export type UserUpdateWithoutApprovalsDecidedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutApprovalsDecidedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type MaterialReturnUpsertWithoutApprovalInput = {
    update: XOR<MaterialReturnUpdateWithoutApprovalInput, MaterialReturnUncheckedUpdateWithoutApprovalInput>
    create: XOR<MaterialReturnCreateWithoutApprovalInput, MaterialReturnUncheckedCreateWithoutApprovalInput>
    where?: MaterialReturnWhereInput
  }

  export type MaterialReturnUpdateToOneWithWhereWithoutApprovalInput = {
    where?: MaterialReturnWhereInput
    data: XOR<MaterialReturnUpdateWithoutApprovalInput, MaterialReturnUncheckedUpdateWithoutApprovalInput>
  }

  export type MaterialReturnUpdateWithoutApprovalInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialReturnsNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialReturnsNestedInput
    issue?: MaterialIssueUpdateOneWithoutReturnsNestedInput
    rack?: RackUpdateOneWithoutMaterialReturnNestedInput
    recordedBy?: UserUpdateOneWithoutMaterialReturnsRecordedNestedInput
    damages?: MaterialDamageUpdateManyWithoutReturnNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialReturnsNestedInput
  }

  export type MaterialReturnUncheckedUpdateWithoutApprovalInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    damages?: MaterialDamageUncheckedUpdateManyWithoutReturnNestedInput
  }

  export type MaterialDamageUpsertWithoutApprovalInput = {
    update: XOR<MaterialDamageUpdateWithoutApprovalInput, MaterialDamageUncheckedUpdateWithoutApprovalInput>
    create: XOR<MaterialDamageCreateWithoutApprovalInput, MaterialDamageUncheckedCreateWithoutApprovalInput>
    where?: MaterialDamageWhereInput
  }

  export type MaterialDamageUpdateToOneWithWhereWithoutApprovalInput = {
    where?: MaterialDamageWhereInput
    data: XOR<MaterialDamageUpdateWithoutApprovalInput, MaterialDamageUncheckedUpdateWithoutApprovalInput>
  }

  export type MaterialDamageUpdateWithoutApprovalInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialDamagesNestedInput
    return?: MaterialReturnUpdateOneRequiredWithoutDamagesNestedInput
    recordedBy?: UserUpdateOneWithoutDamagesRecordedNestedInput
    approvedBy?: UserUpdateOneWithoutDamagesApprovedNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialDamagesNestedInput
  }

  export type MaterialDamageUncheckedUpdateWithoutApprovalInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type CompanyUpsertWithoutMaterialApprovalsInput = {
    update: XOR<CompanyUpdateWithoutMaterialApprovalsInput, CompanyUncheckedUpdateWithoutMaterialApprovalsInput>
    create: XOR<CompanyCreateWithoutMaterialApprovalsInput, CompanyUncheckedCreateWithoutMaterialApprovalsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutMaterialApprovalsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutMaterialApprovalsInput, CompanyUncheckedUpdateWithoutMaterialApprovalsInput>
  }

  export type CompanyUpdateWithoutMaterialApprovalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutMaterialApprovalsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type MovingJobCreateWithoutCostSnapshotsInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    company: CompanyCreateNestedOneWithoutMovingJobsInput
    teamLeader?: UserCreateNestedOneWithoutMovingJobsLeadInput
    assignments?: JobAssignmentCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalCreateNestedManyWithoutJobInput
  }

  export type MovingJobUncheckedCreateWithoutCostSnapshotsInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    teamLeaderId?: string | null
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
    assignments?: JobAssignmentUncheckedCreateNestedManyWithoutJobInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutJobInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutJobInput
    approvals?: MaterialApprovalUncheckedCreateNestedManyWithoutJobInput
  }

  export type MovingJobCreateOrConnectWithoutCostSnapshotsInput = {
    where: MovingJobWhereUniqueInput
    create: XOR<MovingJobCreateWithoutCostSnapshotsInput, MovingJobUncheckedCreateWithoutCostSnapshotsInput>
  }

  export type CompanyCreateWithoutJobCostSnapshotsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutJobCostSnapshotsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutJobCostSnapshotsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutJobCostSnapshotsInput, CompanyUncheckedCreateWithoutJobCostSnapshotsInput>
  }

  export type MovingJobUpsertWithoutCostSnapshotsInput = {
    update: XOR<MovingJobUpdateWithoutCostSnapshotsInput, MovingJobUncheckedUpdateWithoutCostSnapshotsInput>
    create: XOR<MovingJobCreateWithoutCostSnapshotsInput, MovingJobUncheckedCreateWithoutCostSnapshotsInput>
    where?: MovingJobWhereInput
  }

  export type MovingJobUpdateToOneWithWhereWithoutCostSnapshotsInput = {
    where?: MovingJobWhereInput
    data: XOR<MovingJobUpdateWithoutCostSnapshotsInput, MovingJobUncheckedUpdateWithoutCostSnapshotsInput>
  }

  export type MovingJobUpdateWithoutCostSnapshotsInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutMovingJobsNestedInput
    teamLeader?: UserUpdateOneWithoutMovingJobsLeadNestedInput
    assignments?: JobAssignmentUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUpdateManyWithoutJobNestedInput
  }

  export type MovingJobUncheckedUpdateWithoutCostSnapshotsInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    teamLeaderId?: NullableStringFieldUpdateOperationsInput | string | null
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    assignments?: JobAssignmentUncheckedUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUncheckedUpdateManyWithoutJobNestedInput
  }

  export type CompanyUpsertWithoutJobCostSnapshotsInput = {
    update: XOR<CompanyUpdateWithoutJobCostSnapshotsInput, CompanyUncheckedUpdateWithoutJobCostSnapshotsInput>
    create: XOR<CompanyCreateWithoutJobCostSnapshotsInput, CompanyUncheckedCreateWithoutJobCostSnapshotsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutJobCostSnapshotsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutJobCostSnapshotsInput, CompanyUncheckedUpdateWithoutJobCostSnapshotsInput>
  }

  export type CompanyUpdateWithoutJobCostSnapshotsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutJobCostSnapshotsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutSystemPluginsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutSystemPluginsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
    SystemPluginLog?: SystemPluginLogUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutSystemPluginsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutSystemPluginsInput, CompanyUncheckedCreateWithoutSystemPluginsInput>
  }

  export type SystemPluginLogCreateWithoutPluginInput = {
    id?: string
    action: string
    status: string
    message?: string | null
    performedBy?: string | null
    createdAt?: Date | string
    company: CompanyCreateNestedOneWithoutSystemPluginLogInput
  }

  export type SystemPluginLogUncheckedCreateWithoutPluginInput = {
    id?: string
    action: string
    status: string
    message?: string | null
    performedBy?: string | null
    createdAt?: Date | string
    companyId: string
  }

  export type SystemPluginLogCreateOrConnectWithoutPluginInput = {
    where: SystemPluginLogWhereUniqueInput
    create: XOR<SystemPluginLogCreateWithoutPluginInput, SystemPluginLogUncheckedCreateWithoutPluginInput>
  }

  export type SystemPluginLogCreateManyPluginInputEnvelope = {
    data: SystemPluginLogCreateManyPluginInput | SystemPluginLogCreateManyPluginInput[]
  }

  export type CompanyUpsertWithoutSystemPluginsInput = {
    update: XOR<CompanyUpdateWithoutSystemPluginsInput, CompanyUncheckedUpdateWithoutSystemPluginsInput>
    create: XOR<CompanyCreateWithoutSystemPluginsInput, CompanyUncheckedCreateWithoutSystemPluginsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutSystemPluginsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutSystemPluginsInput, CompanyUncheckedUpdateWithoutSystemPluginsInput>
  }

  export type CompanyUpdateWithoutSystemPluginsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutSystemPluginsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
    SystemPluginLog?: SystemPluginLogUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type SystemPluginLogUpsertWithWhereUniqueWithoutPluginInput = {
    where: SystemPluginLogWhereUniqueInput
    update: XOR<SystemPluginLogUpdateWithoutPluginInput, SystemPluginLogUncheckedUpdateWithoutPluginInput>
    create: XOR<SystemPluginLogCreateWithoutPluginInput, SystemPluginLogUncheckedCreateWithoutPluginInput>
  }

  export type SystemPluginLogUpdateWithWhereUniqueWithoutPluginInput = {
    where: SystemPluginLogWhereUniqueInput
    data: XOR<SystemPluginLogUpdateWithoutPluginInput, SystemPluginLogUncheckedUpdateWithoutPluginInput>
  }

  export type SystemPluginLogUpdateManyWithWhereWithoutPluginInput = {
    where: SystemPluginLogScalarWhereInput
    data: XOR<SystemPluginLogUpdateManyMutationInput, SystemPluginLogUncheckedUpdateManyWithoutPluginInput>
  }

  export type SystemPluginCreateWithoutAuditLogsInput = {
    id?: string
    name: string
    description?: string | null
    version?: string
    status?: string
    entryPointUrl?: string | null
    checksum?: string | null
    installedAt?: Date | string
    activatedAt?: Date | string | null
    deactivatedAt?: Date | string | null
    company: CompanyCreateNestedOneWithoutSystemPluginsInput
  }

  export type SystemPluginUncheckedCreateWithoutAuditLogsInput = {
    id?: string
    name: string
    description?: string | null
    version?: string
    status?: string
    entryPointUrl?: string | null
    checksum?: string | null
    installedAt?: Date | string
    activatedAt?: Date | string | null
    deactivatedAt?: Date | string | null
    companyId: string
  }

  export type SystemPluginCreateOrConnectWithoutAuditLogsInput = {
    where: SystemPluginWhereUniqueInput
    create: XOR<SystemPluginCreateWithoutAuditLogsInput, SystemPluginUncheckedCreateWithoutAuditLogsInput>
  }

  export type CompanyCreateWithoutSystemPluginLogInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutCompanyInput
    racks?: RackCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemCreateNestedManyWithoutCompanyInput
    payments?: PaymentCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialCreateNestedManyWithoutCompanyInput
    vendors?: VendorCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutSystemPluginLogInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    address?: string | null
    website?: string | null
    logo?: string | null
    plan?: string
    ratePerDay?: number
    currency?: string
    isActive?: boolean
    primaryColor?: string | null
    secondaryColor?: string | null
    accentColor?: string | null
    showCompanyName?: boolean
    logoSize?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
    racks?: RackUncheckedCreateNestedManyWithoutCompanyInput
    shipments?: ShipmentUncheckedCreateNestedManyWithoutCompanyInput
    movingJobs?: MovingJobUncheckedCreateNestedManyWithoutCompanyInput
    expenses?: ExpenseUncheckedCreateNestedManyWithoutCompanyInput
    invoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutCompanyInput
    customFields?: CustomFieldUncheckedCreateNestedManyWithoutCompanyInput
    billingSettings?: BillingSettingsUncheckedCreateNestedOneWithoutCompanyInput
    chargeTypes?: ChargeTypeUncheckedCreateNestedManyWithoutCompanyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutCompanyInput
    invoiceLineItems?: InvoiceLineItemUncheckedCreateNestedManyWithoutCompanyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutCompanyInput
    shipmentCharges?: ShipmentChargesUncheckedCreateNestedManyWithoutCompanyInput
    shipmentSettings?: ShipmentSettingsUncheckedCreateNestedOneWithoutCompanyInput
    templateSettings?: TemplateSettingsUncheckedCreateNestedOneWithoutCompanyInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutCompanyInput
    packingMaterials?: PackingMaterialUncheckedCreateNestedManyWithoutCompanyInput
    vendors?: VendorUncheckedCreateNestedManyWithoutCompanyInput
    stockBatches?: StockBatchUncheckedCreateNestedManyWithoutCompanyInput
    rackLevels?: RackStockLevelUncheckedCreateNestedManyWithoutCompanyInput
    materialIssues?: MaterialIssueUncheckedCreateNestedManyWithoutCompanyInput
    materialReturns?: MaterialReturnUncheckedCreateNestedManyWithoutCompanyInput
    materialDamages?: MaterialDamageUncheckedCreateNestedManyWithoutCompanyInput
    materialApprovals?: MaterialApprovalUncheckedCreateNestedManyWithoutCompanyInput
    jobCostSnapshots?: JobCostSnapshotUncheckedCreateNestedManyWithoutCompanyInput
    systemPlugins?: SystemPluginUncheckedCreateNestedManyWithoutCompanyInput
    JobAssignment?: JobAssignmentUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutSystemPluginLogInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutSystemPluginLogInput, CompanyUncheckedCreateWithoutSystemPluginLogInput>
  }

  export type SystemPluginUpsertWithoutAuditLogsInput = {
    update: XOR<SystemPluginUpdateWithoutAuditLogsInput, SystemPluginUncheckedUpdateWithoutAuditLogsInput>
    create: XOR<SystemPluginCreateWithoutAuditLogsInput, SystemPluginUncheckedCreateWithoutAuditLogsInput>
    where?: SystemPluginWhereInput
  }

  export type SystemPluginUpdateToOneWithWhereWithoutAuditLogsInput = {
    where?: SystemPluginWhereInput
    data: XOR<SystemPluginUpdateWithoutAuditLogsInput, SystemPluginUncheckedUpdateWithoutAuditLogsInput>
  }

  export type SystemPluginUpdateWithoutAuditLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    entryPointUrl?: NullableStringFieldUpdateOperationsInput | string | null
    checksum?: NullableStringFieldUpdateOperationsInput | string | null
    installedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutSystemPluginsNestedInput
  }

  export type SystemPluginUncheckedUpdateWithoutAuditLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    entryPointUrl?: NullableStringFieldUpdateOperationsInput | string | null
    checksum?: NullableStringFieldUpdateOperationsInput | string | null
    installedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type CompanyUpsertWithoutSystemPluginLogInput = {
    update: XOR<CompanyUpdateWithoutSystemPluginLogInput, CompanyUncheckedUpdateWithoutSystemPluginLogInput>
    create: XOR<CompanyCreateWithoutSystemPluginLogInput, CompanyUncheckedCreateWithoutSystemPluginLogInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutSystemPluginLogInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutSystemPluginLogInput, CompanyUncheckedUpdateWithoutSystemPluginLogInput>
  }

  export type CompanyUpdateWithoutSystemPluginLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCompanyNestedInput
    racks?: RackUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutSystemPluginLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    ratePerDay?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    primaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryColor?: NullableStringFieldUpdateOperationsInput | string | null
    accentColor?: NullableStringFieldUpdateOperationsInput | string | null
    showCompanyName?: BoolFieldUpdateOperationsInput | boolean
    logoSize?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
    racks?: RackUncheckedUpdateManyWithoutCompanyNestedInput
    shipments?: ShipmentUncheckedUpdateManyWithoutCompanyNestedInput
    movingJobs?: MovingJobUncheckedUpdateManyWithoutCompanyNestedInput
    expenses?: ExpenseUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    customFields?: CustomFieldUncheckedUpdateManyWithoutCompanyNestedInput
    billingSettings?: BillingSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    chargeTypes?: ChargeTypeUncheckedUpdateManyWithoutCompanyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutCompanyNestedInput
    invoiceLineItems?: InvoiceLineItemUncheckedUpdateManyWithoutCompanyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentCharges?: ShipmentChargesUncheckedUpdateManyWithoutCompanyNestedInput
    shipmentSettings?: ShipmentSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    templateSettings?: TemplateSettingsUncheckedUpdateOneWithoutCompanyNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutCompanyNestedInput
    packingMaterials?: PackingMaterialUncheckedUpdateManyWithoutCompanyNestedInput
    vendors?: VendorUncheckedUpdateManyWithoutCompanyNestedInput
    stockBatches?: StockBatchUncheckedUpdateManyWithoutCompanyNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutCompanyNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutCompanyNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutCompanyNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutCompanyNestedInput
    materialApprovals?: MaterialApprovalUncheckedUpdateManyWithoutCompanyNestedInput
    jobCostSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutCompanyNestedInput
    systemPlugins?: SystemPluginUncheckedUpdateManyWithoutCompanyNestedInput
    JobAssignment?: JobAssignmentUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type UserCreateManyCompanyInput = {
    id?: string
    email: string
    password: string
    name: string
    phone?: string | null
    role?: string
    skills?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    avatar?: string | null
    position?: string | null
    department?: string | null
    lastLoginAt?: Date | string | null
    resetToken?: string | null
    resetTokenExpiry?: Date | string | null
  }

  export type RackCreateManyCompanyInput = {
    id?: string
    code: string
    qrCode: string
    rackType?: string
    location?: string | null
    capacityTotal?: number
    capacityUsed?: number
    minCapacity?: number
    status?: string
    lastActivity?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentCreateManyCompanyInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    createdById?: string | null
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
  }

  export type MovingJobCreateManyCompanyInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    teamLeaderId?: string | null
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ExpenseCreateManyCompanyInput = {
    id?: string
    title: string
    category: string
    amount: number
    currency?: string
    description?: string | null
    receipts?: string | null
    expenseDate: Date | string
    approvedBy?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldCreateManyCompanyInput = {
    id?: string
    fieldName: string
    fieldType: string
    fieldOptions?: string | null
    isRequired?: boolean
    isActive?: boolean
    section?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ChargeTypeCreateManyCompanyInput = {
    id?: string
    billingSettingsId: string
    name: string
    code: string
    description?: string | null
    category: string
    calculationType: string
    rate: number
    minCharge?: number | null
    maxCharge?: number | null
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InvoiceCreateManyCompanyInput = {
    id?: string
    invoiceNumber: string
    shipmentId: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InvoiceLineItemCreateManyCompanyInput = {
    id?: string
    invoiceId: string
    chargeTypeId?: string | null
    description: string
    category: string
    quantity?: number
    unitPrice: number
    amount: number
    isTaxable?: boolean
    taxRate?: number | null
    taxAmount?: number
    displayOrder?: number
    createdAt?: Date | string
  }

  export type PaymentCreateManyCompanyInput = {
    id?: string
    invoiceId: string
    amount: number
    paymentDate?: Date | string
    paymentMethod: string
    transactionRef?: string | null
    receiptNumber?: string | null
    notes?: string | null
    createdBy?: string | null
    createdAt?: Date | string
  }

  export type ShipmentChargesCreateManyCompanyInput = {
    id?: string
    shipmentId: string
    currentStorageCharge?: number
    daysStored?: number
    lastCalculatedDate?: Date | string
    totalBoxesReleased?: number
    totalInvoiced?: number
    totalPaid?: number
    outstandingBalance?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RolePermissionCreateManyCompanyInput = {
    id?: string
    role: string
    permissionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PackingMaterialCreateManyCompanyInput = {
    id?: string
    sku: string
    name: string
    description?: string | null
    unit?: string
    category: string
    minStockLevel?: number
    totalQuantity?: number
    unitCost?: number | null
    sellingPrice?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VendorCreateManyCompanyInput = {
    id?: string
    name: string
    contact?: string | null
    phone?: string | null
    email?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockBatchCreateManyCompanyInput = {
    id?: string
    materialId: string
    vendorId?: string | null
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    receivedById?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RackStockLevelCreateManyCompanyInput = {
    id?: string
    materialId: string
    rackId: string
    stockBatchId?: string | null
    quantity: number
    lastUpdated?: Date | string
  }

  export type MaterialIssueCreateManyCompanyInput = {
    id?: string
    jobId: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
  }

  export type MaterialReturnCreateManyCompanyInput = {
    id?: string
    jobId: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
  }

  export type MaterialDamageCreateManyCompanyInput = {
    id?: string
    returnId: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
  }

  export type MaterialApprovalCreateManyCompanyInput = {
    id?: string
    jobId: string
    approvalType: string
    status?: string
    requestedById?: string | null
    requestedAt?: Date | string
    decisionById?: string | null
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    subjectDamageId?: string | null
  }

  export type JobCostSnapshotCreateManyCompanyInput = {
    id?: string
    jobId: string
    recordedAt?: Date | string
    materialsCost?: number
    laborCost?: number
    damageLoss?: number
    otherCost?: number
    revenue?: number
    profit?: number
    profitMargin?: number | null
    currency?: string
    notes?: string | null
  }

  export type SystemPluginCreateManyCompanyInput = {
    id?: string
    name: string
    description?: string | null
    version?: string
    status?: string
    entryPointUrl?: string | null
    checksum?: string | null
    installedAt?: Date | string
    activatedAt?: Date | string | null
    deactivatedAt?: Date | string | null
  }

  export type JobAssignmentCreateManyCompanyInput = {
    id?: string
    jobId: string
    userId: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemPluginLogCreateManyCompanyInput = {
    id?: string
    pluginId: string
    action: string
    status: string
    message?: string | null
    performedBy?: string | null
    createdAt?: Date | string
  }

  export type UserUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activities?: RackActivityUncheckedUpdateManyWithoutUserNestedInput
    jobAssignments?: JobAssignmentUncheckedUpdateManyWithoutUserNestedInput
    movingJobsLead?: MovingJobUncheckedUpdateManyWithoutTeamLeaderNestedInput
    stockBatchesReceived?: StockBatchUncheckedUpdateManyWithoutReceivedByNestedInput
    materialIssuesCreated?: MaterialIssueUncheckedUpdateManyWithoutIssuedByNestedInput
    materialReturnsRecorded?: MaterialReturnUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesRecorded?: MaterialDamageUncheckedUpdateManyWithoutRecordedByNestedInput
    damagesApproved?: MaterialDamageUncheckedUpdateManyWithoutApprovedByNestedInput
    approvalsRequested?: MaterialApprovalUncheckedUpdateManyWithoutRequestedByNestedInput
    approvalsDecided?: MaterialApprovalUncheckedUpdateManyWithoutDecisionByNestedInput
    shipmentsCreated?: ShipmentUncheckedUpdateManyWithoutCreatedByNestedInput
    shipmentsAssigned?: ShipmentUncheckedUpdateManyWithoutAssignedByNestedInput
    shipmentsReleased?: ShipmentUncheckedUpdateManyWithoutReleasedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RackUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipments?: ShipmentUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutRackNestedInput
    activities?: RackActivityUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUpdateManyWithoutRackNestedInput
  }

  export type RackUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipments?: ShipmentUncheckedUpdateManyWithoutRackNestedInput
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutRackNestedInput
    activities?: RackActivityUncheckedUpdateManyWithoutRackNestedInput
    inventory?: RackInventoryUncheckedUpdateManyWithoutRackNestedInput
    materialLevels?: RackStockLevelUncheckedUpdateManyWithoutRackNestedInput
    MaterialReturn?: MaterialReturnUncheckedUpdateManyWithoutRackNestedInput
    jobMaterials?: MaterialIssueUncheckedUpdateManyWithoutRackNestedInput
  }

  export type RackUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    qrCode?: StringFieldUpdateOperationsInput | string
    rackType?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    capacityTotal?: FloatFieldUpdateOperationsInput | number
    capacityUsed?: FloatFieldUpdateOperationsInput | number
    minCapacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    lastActivity?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: RackUpdateOneWithoutShipmentsNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUpdateOneWithoutShipmentNestedInput
    createdBy?: UserUpdateOneWithoutShipmentsCreatedNestedInput
    assignedBy?: UserUpdateOneWithoutShipmentsAssignedNestedInput
    releasedBy?: UserUpdateOneWithoutShipmentsReleasedNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUncheckedUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUncheckedUpdateOneWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MovingJobUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teamLeader?: UserUpdateOneWithoutMovingJobsLeadNestedInput
    assignments?: JobAssignmentUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUpdateManyWithoutJobNestedInput
  }

  export type MovingJobUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    teamLeaderId?: NullableStringFieldUpdateOperationsInput | string | null
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignments?: JobAssignmentUncheckedUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUncheckedUpdateManyWithoutJobNestedInput
  }

  export type MovingJobUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    teamLeaderId?: NullableStringFieldUpdateOperationsInput | string | null
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExpenseUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    receipts?: NullableStringFieldUpdateOperationsInput | string | null
    expenseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExpenseUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    receipts?: NullableStringFieldUpdateOperationsInput | string | null
    expenseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExpenseUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    receipts?: NullableStringFieldUpdateOperationsInput | string | null
    expenseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldType?: StringFieldUpdateOperationsInput | string
    fieldOptions?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    section?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    values?: CustomFieldValueUpdateManyWithoutCustomFieldNestedInput
  }

  export type CustomFieldUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldType?: StringFieldUpdateOperationsInput | string
    fieldOptions?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    section?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    values?: CustomFieldValueUncheckedUpdateManyWithoutCustomFieldNestedInput
  }

  export type CustomFieldUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldType?: StringFieldUpdateOperationsInput | string
    fieldOptions?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    section?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChargeTypeUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    calculationType?: StringFieldUpdateOperationsInput | string
    rate?: FloatFieldUpdateOperationsInput | number
    minCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    maxCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    applyOnRelease?: BoolFieldUpdateOperationsInput | boolean
    applyOnStorage?: BoolFieldUpdateOperationsInput | boolean
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    billingSettings?: BillingSettingsUpdateOneRequiredWithoutChargeTypesNestedInput
  }

  export type ChargeTypeUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    billingSettingsId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    calculationType?: StringFieldUpdateOperationsInput | string
    rate?: FloatFieldUpdateOperationsInput | number
    minCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    maxCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    applyOnRelease?: BoolFieldUpdateOperationsInput | boolean
    applyOnStorage?: BoolFieldUpdateOperationsInput | boolean
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChargeTypeUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    billingSettingsId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    calculationType?: StringFieldUpdateOperationsInput | string
    rate?: FloatFieldUpdateOperationsInput | number
    minCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    maxCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    applyOnRelease?: BoolFieldUpdateOperationsInput | boolean
    applyOnStorage?: BoolFieldUpdateOperationsInput | boolean
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipment?: ShipmentUpdateOneRequiredWithoutInvoicesNestedInput
    lineItems?: InvoiceLineItemUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineItems?: InvoiceLineItemUncheckedUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceLineItemUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    chargeTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    quantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: FloatFieldUpdateOperationsInput | number
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoice?: InvoiceUpdateOneRequiredWithoutLineItemsNestedInput
  }

  export type InvoiceLineItemUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceId?: StringFieldUpdateOperationsInput | string
    chargeTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    quantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: FloatFieldUpdateOperationsInput | number
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceLineItemUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceId?: StringFieldUpdateOperationsInput | string
    chargeTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    quantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: FloatFieldUpdateOperationsInput | number
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    paymentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoice?: InvoiceUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    paymentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    paymentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentChargesUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    currentStorageCharge?: FloatFieldUpdateOperationsInput | number
    daysStored?: IntFieldUpdateOperationsInput | number
    lastCalculatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalBoxesReleased?: IntFieldUpdateOperationsInput | number
    totalInvoiced?: FloatFieldUpdateOperationsInput | number
    totalPaid?: FloatFieldUpdateOperationsInput | number
    outstandingBalance?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shipment?: ShipmentUpdateOneRequiredWithoutChargesNestedInput
  }

  export type ShipmentChargesUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    currentStorageCharge?: FloatFieldUpdateOperationsInput | number
    daysStored?: IntFieldUpdateOperationsInput | number
    lastCalculatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalBoxesReleased?: IntFieldUpdateOperationsInput | number
    totalInvoiced?: FloatFieldUpdateOperationsInput | number
    totalPaid?: FloatFieldUpdateOperationsInput | number
    outstandingBalance?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShipmentChargesUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    currentStorageCharge?: FloatFieldUpdateOperationsInput | number
    daysStored?: IntFieldUpdateOperationsInput | number
    lastCalculatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalBoxesReleased?: IntFieldUpdateOperationsInput | number
    totalInvoiced?: FloatFieldUpdateOperationsInput | number
    totalPaid?: FloatFieldUpdateOperationsInput | number
    outstandingBalance?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permission?: PermissionUpdateOneRequiredWithoutRolePermissionsNestedInput
  }

  export type RolePermissionUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PackingMaterialUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stockBatches?: StockBatchUpdateManyWithoutMaterialNestedInput
    rackLevels?: RackStockLevelUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUpdateManyWithoutMaterialNestedInput
  }

  export type PackingMaterialUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stockBatches?: StockBatchUncheckedUpdateManyWithoutMaterialNestedInput
    rackLevels?: RackStockLevelUncheckedUpdateManyWithoutMaterialNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutMaterialNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutMaterialNestedInput
    materialDamages?: MaterialDamageUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type PackingMaterialUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    minStockLevel?: IntFieldUpdateOperationsInput | number
    totalQuantity?: IntFieldUpdateOperationsInput | number
    unitCost?: NullableFloatFieldUpdateOperationsInput | number | null
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VendorUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stockBatches?: StockBatchUpdateManyWithoutVendorNestedInput
  }

  export type VendorUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    stockBatches?: StockBatchUncheckedUpdateManyWithoutVendorNestedInput
  }

  export type VendorUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockBatchUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: PackingMaterialUpdateOneRequiredWithoutStockBatchesNestedInput
    vendor?: VendorUpdateOneWithoutStockBatchesNestedInput
    receivedBy?: UserUpdateOneWithoutStockBatchesReceivedNestedInput
    rackAllocations?: RackStockLevelUpdateManyWithoutStockBatchNestedInput
    issues?: MaterialIssueUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    receivedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rackAllocations?: RackStockLevelUncheckedUpdateManyWithoutStockBatchNestedInput
    issues?: MaterialIssueUncheckedUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    receivedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RackStockLevelUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: PackingMaterialUpdateOneRequiredWithoutRackLevelsNestedInput
    rack?: RackUpdateOneRequiredWithoutMaterialLevelsNestedInput
    stockBatch?: StockBatchUpdateOneWithoutRackAllocationsNestedInput
  }

  export type RackStockLevelUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RackStockLevelUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaterialIssueUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialIssuesNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialIssuesNestedInput
    stockBatch?: StockBatchUpdateOneWithoutIssuesNestedInput
    rack?: RackUpdateOneWithoutJobMaterialsNestedInput
    issuedBy?: UserUpdateOneWithoutMaterialIssuesCreatedNestedInput
    returns?: MaterialReturnUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    returns?: MaterialReturnUncheckedUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaterialReturnUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialReturnsNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialReturnsNestedInput
    issue?: MaterialIssueUpdateOneWithoutReturnsNestedInput
    rack?: RackUpdateOneWithoutMaterialReturnNestedInput
    recordedBy?: UserUpdateOneWithoutMaterialReturnsRecordedNestedInput
    damages?: MaterialDamageUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectReturnNestedInput
  }

  export type MaterialReturnUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    damages?: MaterialDamageUncheckedUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectReturnNestedInput
  }

  export type MaterialReturnUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaterialDamageUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialDamagesNestedInput
    return?: MaterialReturnUpdateOneRequiredWithoutDamagesNestedInput
    recordedBy?: UserUpdateOneWithoutDamagesRecordedNestedInput
    approvedBy?: UserUpdateOneWithoutDamagesApprovedNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectDamageNestedInput
  }

  export type MaterialDamageUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectDamageNestedInput
  }

  export type MaterialDamageUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaterialApprovalUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutApprovalsNestedInput
    requestedBy?: UserUpdateOneWithoutApprovalsRequestedNestedInput
    decisionBy?: UserUpdateOneWithoutApprovalsDecidedNestedInput
    subjectReturn?: MaterialReturnUpdateOneWithoutApprovalNestedInput
    subjectDamage?: MaterialDamageUpdateOneWithoutApprovalNestedInput
  }

  export type MaterialApprovalUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedById?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisionById?: NullableStringFieldUpdateOperationsInput | string | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaterialApprovalUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedById?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisionById?: NullableStringFieldUpdateOperationsInput | string | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JobCostSnapshotUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materialsCost?: FloatFieldUpdateOperationsInput | number
    laborCost?: FloatFieldUpdateOperationsInput | number
    damageLoss?: FloatFieldUpdateOperationsInput | number
    otherCost?: FloatFieldUpdateOperationsInput | number
    revenue?: FloatFieldUpdateOperationsInput | number
    profit?: FloatFieldUpdateOperationsInput | number
    profitMargin?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutCostSnapshotsNestedInput
  }

  export type JobCostSnapshotUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materialsCost?: FloatFieldUpdateOperationsInput | number
    laborCost?: FloatFieldUpdateOperationsInput | number
    damageLoss?: FloatFieldUpdateOperationsInput | number
    otherCost?: FloatFieldUpdateOperationsInput | number
    revenue?: FloatFieldUpdateOperationsInput | number
    profit?: FloatFieldUpdateOperationsInput | number
    profitMargin?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JobCostSnapshotUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materialsCost?: FloatFieldUpdateOperationsInput | number
    laborCost?: FloatFieldUpdateOperationsInput | number
    damageLoss?: FloatFieldUpdateOperationsInput | number
    otherCost?: FloatFieldUpdateOperationsInput | number
    revenue?: FloatFieldUpdateOperationsInput | number
    profit?: FloatFieldUpdateOperationsInput | number
    profitMargin?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SystemPluginUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    entryPointUrl?: NullableStringFieldUpdateOperationsInput | string | null
    checksum?: NullableStringFieldUpdateOperationsInput | string | null
    installedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditLogs?: SystemPluginLogUpdateManyWithoutPluginNestedInput
  }

  export type SystemPluginUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    entryPointUrl?: NullableStringFieldUpdateOperationsInput | string | null
    checksum?: NullableStringFieldUpdateOperationsInput | string | null
    installedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auditLogs?: SystemPluginLogUncheckedUpdateManyWithoutPluginNestedInput
  }

  export type SystemPluginUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    version?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    entryPointUrl?: NullableStringFieldUpdateOperationsInput | string | null
    checksum?: NullableStringFieldUpdateOperationsInput | string | null
    installedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deactivatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JobAssignmentUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    job?: MovingJobUpdateOneRequiredWithoutAssignmentsNestedInput
    user?: UserUpdateOneRequiredWithoutJobAssignmentsNestedInput
  }

  export type JobAssignmentUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobAssignmentUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemPluginLogUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    plugin?: SystemPluginUpdateOneRequiredWithoutAuditLogsNestedInput
  }

  export type SystemPluginLogUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    pluginId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemPluginLogUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    pluginId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RackActivityCreateManyUserInput = {
    id?: string
    rackId: string
    activityType: string
    itemDetails: string
    quantityBefore?: number | null
    quantityAfter?: number | null
    photos?: string | null
    notes?: string | null
    gpsLocation?: string | null
    timestamp?: Date | string
    companyId: string
  }

  export type JobAssignmentCreateManyUserInput = {
    id?: string
    jobId: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
  }

  export type MovingJobCreateManyTeamLeaderInput = {
    id?: string
    jobCode: string
    jobTitle: string
    clientName: string
    clientPhone: string
    clientEmail?: string | null
    jobDate: Date | string
    jobAddress: string
    dropoffAddress?: string | null
    status?: string
    driverName?: string | null
    vehicleNumber?: string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
  }

  export type StockBatchCreateManyReceivedByInput = {
    id?: string
    materialId: string
    vendorId?: string | null
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MaterialIssueCreateManyIssuedByInput = {
    id?: string
    jobId: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type MaterialReturnCreateManyRecordedByInput = {
    id?: string
    jobId: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type MaterialDamageCreateManyRecordedByInput = {
    id?: string
    returnId: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
  }

  export type MaterialDamageCreateManyApprovedByInput = {
    id?: string
    returnId: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
  }

  export type MaterialApprovalCreateManyRequestedByInput = {
    id?: string
    jobId: string
    approvalType: string
    status?: string
    requestedAt?: Date | string
    decisionById?: string | null
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    subjectDamageId?: string | null
    companyId: string
  }

  export type MaterialApprovalCreateManyDecisionByInput = {
    id?: string
    jobId: string
    approvalType: string
    status?: string
    requestedById?: string | null
    requestedAt?: Date | string
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    subjectDamageId?: string | null
    companyId: string
  }

  export type ShipmentCreateManyCreatedByInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
  }

  export type ShipmentCreateManyAssignedByInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
  }

  export type ShipmentCreateManyReleasedByInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    rackId?: string | null
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    assignedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
  }

  export type RackActivityUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    activityType?: StringFieldUpdateOperationsInput | string
    itemDetails?: StringFieldUpdateOperationsInput | string
    quantityBefore?: NullableIntFieldUpdateOperationsInput | number | null
    quantityAfter?: NullableIntFieldUpdateOperationsInput | number | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLocation?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    rack?: RackUpdateOneRequiredWithoutActivitiesNestedInput
  }

  export type RackActivityUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    activityType?: StringFieldUpdateOperationsInput | string
    itemDetails?: StringFieldUpdateOperationsInput | string
    quantityBefore?: NullableIntFieldUpdateOperationsInput | number | null
    quantityAfter?: NullableIntFieldUpdateOperationsInput | number | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLocation?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackActivityUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    activityType?: StringFieldUpdateOperationsInput | string
    itemDetails?: StringFieldUpdateOperationsInput | string
    quantityBefore?: NullableIntFieldUpdateOperationsInput | number | null
    quantityAfter?: NullableIntFieldUpdateOperationsInput | number | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLocation?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type JobAssignmentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    job?: MovingJobUpdateOneRequiredWithoutAssignmentsNestedInput
    company?: CompanyUpdateOneRequiredWithoutJobAssignmentNestedInput
  }

  export type JobAssignmentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type JobAssignmentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MovingJobUpdateWithoutTeamLeaderInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutMovingJobsNestedInput
    assignments?: JobAssignmentUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUpdateManyWithoutJobNestedInput
  }

  export type MovingJobUncheckedUpdateWithoutTeamLeaderInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    assignments?: JobAssignmentUncheckedUpdateManyWithoutJobNestedInput
    materialIssues?: MaterialIssueUncheckedUpdateManyWithoutJobNestedInput
    materialReturns?: MaterialReturnUncheckedUpdateManyWithoutJobNestedInput
    costSnapshots?: JobCostSnapshotUncheckedUpdateManyWithoutJobNestedInput
    approvals?: MaterialApprovalUncheckedUpdateManyWithoutJobNestedInput
  }

  export type MovingJobUncheckedUpdateManyWithoutTeamLeaderInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobCode?: StringFieldUpdateOperationsInput | string
    jobTitle?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: StringFieldUpdateOperationsInput | string
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    jobDate?: DateTimeFieldUpdateOperationsInput | Date | string
    jobAddress?: StringFieldUpdateOperationsInput | string
    dropoffAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    driverName?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type StockBatchUpdateWithoutReceivedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: PackingMaterialUpdateOneRequiredWithoutStockBatchesNestedInput
    vendor?: VendorUpdateOneWithoutStockBatchesNestedInput
    company?: CompanyUpdateOneRequiredWithoutStockBatchesNestedInput
    rackAllocations?: RackStockLevelUpdateManyWithoutStockBatchNestedInput
    issues?: MaterialIssueUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateWithoutReceivedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rackAllocations?: RackStockLevelUncheckedUpdateManyWithoutStockBatchNestedInput
    issues?: MaterialIssueUncheckedUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateManyWithoutReceivedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaterialIssueUpdateWithoutIssuedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialIssuesNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialIssuesNestedInput
    stockBatch?: StockBatchUpdateOneWithoutIssuesNestedInput
    rack?: RackUpdateOneWithoutJobMaterialsNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialIssuesNestedInput
    returns?: MaterialReturnUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateWithoutIssuedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    returns?: MaterialReturnUncheckedUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateManyWithoutIssuedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialReturnUpdateWithoutRecordedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialReturnsNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialReturnsNestedInput
    issue?: MaterialIssueUpdateOneWithoutReturnsNestedInput
    rack?: RackUpdateOneWithoutMaterialReturnNestedInput
    damages?: MaterialDamageUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectReturnNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialReturnsNestedInput
  }

  export type MaterialReturnUncheckedUpdateWithoutRecordedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    damages?: MaterialDamageUncheckedUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectReturnNestedInput
  }

  export type MaterialReturnUncheckedUpdateManyWithoutRecordedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialDamageUpdateWithoutRecordedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialDamagesNestedInput
    return?: MaterialReturnUpdateOneRequiredWithoutDamagesNestedInput
    approvedBy?: UserUpdateOneWithoutDamagesApprovedNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectDamageNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialDamagesNestedInput
  }

  export type MaterialDamageUncheckedUpdateWithoutRecordedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectDamageNestedInput
  }

  export type MaterialDamageUncheckedUpdateManyWithoutRecordedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialDamageUpdateWithoutApprovedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialDamagesNestedInput
    return?: MaterialReturnUpdateOneRequiredWithoutDamagesNestedInput
    recordedBy?: UserUpdateOneWithoutDamagesRecordedNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectDamageNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialDamagesNestedInput
  }

  export type MaterialDamageUncheckedUpdateWithoutApprovedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectDamageNestedInput
  }

  export type MaterialDamageUncheckedUpdateManyWithoutApprovedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialApprovalUpdateWithoutRequestedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutApprovalsNestedInput
    decisionBy?: UserUpdateOneWithoutApprovalsDecidedNestedInput
    subjectReturn?: MaterialReturnUpdateOneWithoutApprovalNestedInput
    subjectDamage?: MaterialDamageUpdateOneWithoutApprovalNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialApprovalsNestedInput
  }

  export type MaterialApprovalUncheckedUpdateWithoutRequestedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisionById?: NullableStringFieldUpdateOperationsInput | string | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialApprovalUncheckedUpdateManyWithoutRequestedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisionById?: NullableStringFieldUpdateOperationsInput | string | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialApprovalUpdateWithoutDecisionByInput = {
    id?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutApprovalsNestedInput
    requestedBy?: UserUpdateOneWithoutApprovalsRequestedNestedInput
    subjectReturn?: MaterialReturnUpdateOneWithoutApprovalNestedInput
    subjectDamage?: MaterialDamageUpdateOneWithoutApprovalNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialApprovalsNestedInput
  }

  export type MaterialApprovalUncheckedUpdateWithoutDecisionByInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedById?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialApprovalUncheckedUpdateManyWithoutDecisionByInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedById?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type ShipmentUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutShipmentsNestedInput
    rack?: RackUpdateOneWithoutShipmentsNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUpdateOneWithoutShipmentNestedInput
    assignedBy?: UserUpdateOneWithoutShipmentsAssignedNestedInput
    releasedBy?: UserUpdateOneWithoutShipmentsReleasedNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUncheckedUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUncheckedUpdateOneWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShipmentUpdateWithoutAssignedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutShipmentsNestedInput
    rack?: RackUpdateOneWithoutShipmentsNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUpdateOneWithoutShipmentNestedInput
    createdBy?: UserUpdateOneWithoutShipmentsCreatedNestedInput
    releasedBy?: UserUpdateOneWithoutShipmentsReleasedNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutAssignedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUncheckedUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUncheckedUpdateOneWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateManyWithoutAssignedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShipmentUpdateWithoutReleasedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutShipmentsNestedInput
    rack?: RackUpdateOneWithoutShipmentsNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUpdateOneWithoutShipmentNestedInput
    createdBy?: UserUpdateOneWithoutShipmentsCreatedNestedInput
    assignedBy?: UserUpdateOneWithoutShipmentsAssignedNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutReleasedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUncheckedUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUncheckedUpdateOneWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateManyWithoutReleasedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShipmentCreateManyRackInput = {
    id?: string
    name: string
    referenceId: string
    originalBoxCount: number
    currentBoxCount: number
    type: string
    arrivalDate: Date | string
    clientName?: string | null
    clientPhone?: string | null
    clientEmail?: string | null
    description?: string | null
    estimatedValue?: number | null
    notes?: string | null
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    storageCharge?: number | null
    companyId: string
    createdById?: string | null
    assignedById?: string | null
    releasedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isWarehouseShipment?: boolean
    warehouseData?: string | null
    shipper?: string | null
    consignee?: string | null
  }

  export type ShipmentBoxCreateManyRackInput = {
    id?: string
    shipmentId: string
    boxNumber: number
    qrCode: string
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    pieceWeight?: number | null
    pieceQR?: string | null
  }

  export type RackActivityCreateManyRackInput = {
    id?: string
    userId: string
    activityType: string
    itemDetails: string
    quantityBefore?: number | null
    quantityAfter?: number | null
    photos?: string | null
    notes?: string | null
    gpsLocation?: string | null
    timestamp?: Date | string
    companyId: string
  }

  export type RackInventoryCreateManyRackInput = {
    id?: string
    itemType: string
    itemId: string
    quantityCurrent?: number
    quantityReserved?: number
    lastMovement?: Date | string
    updatedBy?: string | null
    companyId: string
  }

  export type RackStockLevelCreateManyRackInput = {
    id?: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    lastUpdated?: Date | string
    companyId: string
  }

  export type MaterialReturnCreateManyRackInput = {
    id?: string
    jobId: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type MaterialIssueCreateManyRackInput = {
    id?: string
    jobId: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type ShipmentUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutShipmentsNestedInput
    boxes?: ShipmentBoxUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUpdateOneWithoutShipmentNestedInput
    createdBy?: UserUpdateOneWithoutShipmentsCreatedNestedInput
    assignedBy?: UserUpdateOneWithoutShipmentsAssignedNestedInput
    releasedBy?: UserUpdateOneWithoutShipmentsReleasedNestedInput
  }

  export type ShipmentUncheckedUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
    boxes?: ShipmentBoxUncheckedUpdateManyWithoutShipmentNestedInput
    withdrawals?: WithdrawalUncheckedUpdateManyWithoutShipmentNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutShipmentNestedInput
    charges?: ShipmentChargesUncheckedUpdateOneWithoutShipmentNestedInput
  }

  export type ShipmentUncheckedUpdateManyWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    originalBoxCount?: IntFieldUpdateOperationsInput | number
    currentBoxCount?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    arrivalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    clientName?: NullableStringFieldUpdateOperationsInput | string | null
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientEmail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedValue?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    storageCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdById?: NullableStringFieldUpdateOperationsInput | string | null
    assignedById?: NullableStringFieldUpdateOperationsInput | string | null
    releasedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isWarehouseShipment?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    shipper?: NullableStringFieldUpdateOperationsInput | string | null
    consignee?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShipmentBoxUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    boxNumber?: IntFieldUpdateOperationsInput | number
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pieceWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    pieceQR?: NullableStringFieldUpdateOperationsInput | string | null
    shipment?: ShipmentUpdateOneRequiredWithoutBoxesNestedInput
  }

  export type ShipmentBoxUncheckedUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    boxNumber?: IntFieldUpdateOperationsInput | number
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pieceWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    pieceQR?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShipmentBoxUncheckedUpdateManyWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    shipmentId?: StringFieldUpdateOperationsInput | string
    boxNumber?: IntFieldUpdateOperationsInput | number
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pieceWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    pieceQR?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RackActivityUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    activityType?: StringFieldUpdateOperationsInput | string
    itemDetails?: StringFieldUpdateOperationsInput | string
    quantityBefore?: NullableIntFieldUpdateOperationsInput | number | null
    quantityAfter?: NullableIntFieldUpdateOperationsInput | number | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLocation?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutActivitiesNestedInput
  }

  export type RackActivityUncheckedUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    activityType?: StringFieldUpdateOperationsInput | string
    itemDetails?: StringFieldUpdateOperationsInput | string
    quantityBefore?: NullableIntFieldUpdateOperationsInput | number | null
    quantityAfter?: NullableIntFieldUpdateOperationsInput | number | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLocation?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackActivityUncheckedUpdateManyWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    activityType?: StringFieldUpdateOperationsInput | string
    itemDetails?: StringFieldUpdateOperationsInput | string
    quantityBefore?: NullableIntFieldUpdateOperationsInput | number | null
    quantityAfter?: NullableIntFieldUpdateOperationsInput | number | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    gpsLocation?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackInventoryUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemId?: StringFieldUpdateOperationsInput | string
    quantityCurrent?: IntFieldUpdateOperationsInput | number
    quantityReserved?: IntFieldUpdateOperationsInput | number
    lastMovement?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackInventoryUncheckedUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemId?: StringFieldUpdateOperationsInput | string
    quantityCurrent?: IntFieldUpdateOperationsInput | number
    quantityReserved?: IntFieldUpdateOperationsInput | number
    lastMovement?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackInventoryUncheckedUpdateManyWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemId?: StringFieldUpdateOperationsInput | string
    quantityCurrent?: IntFieldUpdateOperationsInput | number
    quantityReserved?: IntFieldUpdateOperationsInput | number
    lastMovement?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackStockLevelUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: PackingMaterialUpdateOneRequiredWithoutRackLevelsNestedInput
    stockBatch?: StockBatchUpdateOneWithoutRackAllocationsNestedInput
    company?: CompanyUpdateOneRequiredWithoutRackLevelsNestedInput
  }

  export type RackStockLevelUncheckedUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackStockLevelUncheckedUpdateManyWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialReturnUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialReturnsNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialReturnsNestedInput
    issue?: MaterialIssueUpdateOneWithoutReturnsNestedInput
    recordedBy?: UserUpdateOneWithoutMaterialReturnsRecordedNestedInput
    damages?: MaterialDamageUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectReturnNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialReturnsNestedInput
  }

  export type MaterialReturnUncheckedUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    damages?: MaterialDamageUncheckedUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectReturnNestedInput
  }

  export type MaterialReturnUncheckedUpdateManyWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialIssueUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialIssuesNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialIssuesNestedInput
    stockBatch?: StockBatchUpdateOneWithoutIssuesNestedInput
    issuedBy?: UserUpdateOneWithoutMaterialIssuesCreatedNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialIssuesNestedInput
    returns?: MaterialReturnUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    returns?: MaterialReturnUncheckedUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateManyWithoutRackInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type ShipmentBoxCreateManyShipmentInput = {
    id?: string
    boxNumber: number
    qrCode: string
    rackId?: string | null
    status?: string
    assignedAt?: Date | string | null
    releasedAt?: Date | string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    pieceWeight?: number | null
    pieceQR?: string | null
  }

  export type WithdrawalCreateManyShipmentInput = {
    id?: string
    withdrawnBoxCount: number
    remainingBoxCount: number
    withdrawalDate?: Date | string
    status?: string
    reason?: string | null
    notes?: string | null
    photos?: string | null
    receiptNumber?: string | null
    withdrawnBy: string
    authorizedBy?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InvoiceCreateManyShipmentInput = {
    id?: string
    invoiceNumber: string
    companyId: string
    clientName: string
    clientPhone?: string | null
    clientAddress?: string | null
    invoiceDate?: Date | string
    dueDate: Date | string
    invoiceType?: string
    isWarehouseInvoice?: boolean
    warehouseData?: string | null
    subtotal: number
    taxAmount: number
    discountAmount?: number
    totalAmount: number
    paymentStatus?: string
    paidAmount?: number
    balanceDue: number
    paymentDate?: Date | string | null
    paymentMethod?: string | null
    transactionRef?: string | null
    notes?: string | null
    termsAndConditions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShipmentBoxUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    boxNumber?: IntFieldUpdateOperationsInput | number
    qrCode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pieceWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    pieceQR?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: RackUpdateOneWithoutBoxesNestedInput
  }

  export type ShipmentBoxUncheckedUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    boxNumber?: IntFieldUpdateOperationsInput | number
    qrCode?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pieceWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    pieceQR?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShipmentBoxUncheckedUpdateManyWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    boxNumber?: IntFieldUpdateOperationsInput | number
    qrCode?: StringFieldUpdateOperationsInput | string
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assignedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    releasedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    pieceWeight?: NullableFloatFieldUpdateOperationsInput | number | null
    pieceQR?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WithdrawalUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    withdrawnBoxCount?: IntFieldUpdateOperationsInput | number
    remainingBoxCount?: IntFieldUpdateOperationsInput | number
    withdrawalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    withdrawnBy?: StringFieldUpdateOperationsInput | string
    authorizedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WithdrawalUncheckedUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    withdrawnBoxCount?: IntFieldUpdateOperationsInput | number
    remainingBoxCount?: IntFieldUpdateOperationsInput | number
    withdrawalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    withdrawnBy?: StringFieldUpdateOperationsInput | string
    authorizedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WithdrawalUncheckedUpdateManyWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    withdrawnBoxCount?: IntFieldUpdateOperationsInput | number
    remainingBoxCount?: IntFieldUpdateOperationsInput | number
    withdrawalDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    withdrawnBy?: StringFieldUpdateOperationsInput | string
    authorizedBy?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutInvoicesNestedInput
    lineItems?: InvoiceLineItemUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lineItems?: InvoiceLineItemUncheckedUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutShipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    clientName?: StringFieldUpdateOperationsInput | string
    clientPhone?: NullableStringFieldUpdateOperationsInput | string | null
    clientAddress?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceDate?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceType?: StringFieldUpdateOperationsInput | string
    isWarehouseInvoice?: BoolFieldUpdateOperationsInput | boolean
    warehouseData?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paidAmount?: FloatFieldUpdateOperationsInput | number
    balanceDue?: FloatFieldUpdateOperationsInput | number
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    termsAndConditions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChargeTypeCreateManyBillingSettingsInput = {
    id?: string
    companyId: string
    name: string
    code: string
    description?: string | null
    category: string
    calculationType: string
    rate: number
    minCharge?: number | null
    maxCharge?: number | null
    applyOnRelease?: boolean
    applyOnStorage?: boolean
    isTaxable?: boolean
    isActive?: boolean
    isDefault?: boolean
    displayOrder?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ChargeTypeUpdateWithoutBillingSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    calculationType?: StringFieldUpdateOperationsInput | string
    rate?: FloatFieldUpdateOperationsInput | number
    minCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    maxCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    applyOnRelease?: BoolFieldUpdateOperationsInput | boolean
    applyOnStorage?: BoolFieldUpdateOperationsInput | boolean
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutChargeTypesNestedInput
  }

  export type ChargeTypeUncheckedUpdateWithoutBillingSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    calculationType?: StringFieldUpdateOperationsInput | string
    rate?: FloatFieldUpdateOperationsInput | number
    minCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    maxCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    applyOnRelease?: BoolFieldUpdateOperationsInput | boolean
    applyOnStorage?: BoolFieldUpdateOperationsInput | boolean
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChargeTypeUncheckedUpdateManyWithoutBillingSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    calculationType?: StringFieldUpdateOperationsInput | string
    rate?: FloatFieldUpdateOperationsInput | number
    minCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    maxCharge?: NullableFloatFieldUpdateOperationsInput | number | null
    applyOnRelease?: BoolFieldUpdateOperationsInput | boolean
    applyOnStorage?: BoolFieldUpdateOperationsInput | boolean
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceLineItemCreateManyInvoiceInput = {
    id?: string
    companyId: string
    chargeTypeId?: string | null
    description: string
    category: string
    quantity?: number
    unitPrice: number
    amount: number
    isTaxable?: boolean
    taxRate?: number | null
    taxAmount?: number
    displayOrder?: number
    createdAt?: Date | string
  }

  export type PaymentCreateManyInvoiceInput = {
    id?: string
    companyId: string
    amount: number
    paymentDate?: Date | string
    paymentMethod: string
    transactionRef?: string | null
    receiptNumber?: string | null
    notes?: string | null
    createdBy?: string | null
    createdAt?: Date | string
  }

  export type InvoiceLineItemUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    chargeTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    quantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: FloatFieldUpdateOperationsInput | number
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutInvoiceLineItemsNestedInput
  }

  export type InvoiceLineItemUncheckedUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    chargeTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    quantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: FloatFieldUpdateOperationsInput | number
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceLineItemUncheckedUpdateManyWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    chargeTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    quantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    isTaxable?: BoolFieldUpdateOperationsInput | boolean
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: FloatFieldUpdateOperationsInput | number
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    paymentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    paymentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateManyWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    paymentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionRef?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldValueCreateManyCustomFieldInput = {
    id?: string
    entityType: string
    entityId: string
    fieldValue: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldValueUpdateWithoutCustomFieldInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    fieldValue?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldValueUncheckedUpdateWithoutCustomFieldInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    fieldValue?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldValueUncheckedUpdateManyWithoutCustomFieldInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    fieldValue?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionCreateManyPermissionInput = {
    id?: string
    role: string
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RolePermissionUpdateWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutRolePermissionsNestedInput
  }

  export type RolePermissionUncheckedUpdateWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionUncheckedUpdateManyWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobAssignmentCreateManyJobInput = {
    id?: string
    userId: string
    role: string
    checkInAt?: Date | string | null
    checkOutAt?: Date | string | null
    hourlyRate?: number | null
    hoursWorked?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    companyId: string
  }

  export type MaterialIssueCreateManyJobInput = {
    id?: string
    materialId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type MaterialReturnCreateManyJobInput = {
    id?: string
    materialId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type JobCostSnapshotCreateManyJobInput = {
    id?: string
    recordedAt?: Date | string
    materialsCost?: number
    laborCost?: number
    damageLoss?: number
    otherCost?: number
    revenue?: number
    profit?: number
    profitMargin?: number | null
    currency?: string
    notes?: string | null
    companyId: string
  }

  export type MaterialApprovalCreateManyJobInput = {
    id?: string
    approvalType: string
    status?: string
    requestedById?: string | null
    requestedAt?: Date | string
    decisionById?: string | null
    decidedAt?: Date | string | null
    decisionNotes?: string | null
    subjectReturnId?: string | null
    subjectDamageId?: string | null
    companyId: string
  }

  export type JobAssignmentUpdateWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutJobAssignmentsNestedInput
    company?: CompanyUpdateOneRequiredWithoutJobAssignmentNestedInput
  }

  export type JobAssignmentUncheckedUpdateWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type JobAssignmentUncheckedUpdateManyWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    checkInAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOutAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyRate?: NullableFloatFieldUpdateOperationsInput | number | null
    hoursWorked?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialIssueUpdateWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialIssuesNestedInput
    stockBatch?: StockBatchUpdateOneWithoutIssuesNestedInput
    rack?: RackUpdateOneWithoutJobMaterialsNestedInput
    issuedBy?: UserUpdateOneWithoutMaterialIssuesCreatedNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialIssuesNestedInput
    returns?: MaterialReturnUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    returns?: MaterialReturnUncheckedUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateManyWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialReturnUpdateWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialReturnsNestedInput
    issue?: MaterialIssueUpdateOneWithoutReturnsNestedInput
    rack?: RackUpdateOneWithoutMaterialReturnNestedInput
    recordedBy?: UserUpdateOneWithoutMaterialReturnsRecordedNestedInput
    damages?: MaterialDamageUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectReturnNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialReturnsNestedInput
  }

  export type MaterialReturnUncheckedUpdateWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    damages?: MaterialDamageUncheckedUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectReturnNestedInput
  }

  export type MaterialReturnUncheckedUpdateManyWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type JobCostSnapshotUpdateWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materialsCost?: FloatFieldUpdateOperationsInput | number
    laborCost?: FloatFieldUpdateOperationsInput | number
    damageLoss?: FloatFieldUpdateOperationsInput | number
    otherCost?: FloatFieldUpdateOperationsInput | number
    revenue?: FloatFieldUpdateOperationsInput | number
    profit?: FloatFieldUpdateOperationsInput | number
    profitMargin?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutJobCostSnapshotsNestedInput
  }

  export type JobCostSnapshotUncheckedUpdateWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materialsCost?: FloatFieldUpdateOperationsInput | number
    laborCost?: FloatFieldUpdateOperationsInput | number
    damageLoss?: FloatFieldUpdateOperationsInput | number
    otherCost?: FloatFieldUpdateOperationsInput | number
    revenue?: FloatFieldUpdateOperationsInput | number
    profit?: FloatFieldUpdateOperationsInput | number
    profitMargin?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type JobCostSnapshotUncheckedUpdateManyWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materialsCost?: FloatFieldUpdateOperationsInput | number
    laborCost?: FloatFieldUpdateOperationsInput | number
    damageLoss?: FloatFieldUpdateOperationsInput | number
    otherCost?: FloatFieldUpdateOperationsInput | number
    revenue?: FloatFieldUpdateOperationsInput | number
    profit?: FloatFieldUpdateOperationsInput | number
    profitMargin?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialApprovalUpdateWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requestedBy?: UserUpdateOneWithoutApprovalsRequestedNestedInput
    decisionBy?: UserUpdateOneWithoutApprovalsDecidedNestedInput
    subjectReturn?: MaterialReturnUpdateOneWithoutApprovalNestedInput
    subjectDamage?: MaterialDamageUpdateOneWithoutApprovalNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialApprovalsNestedInput
  }

  export type MaterialApprovalUncheckedUpdateWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedById?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisionById?: NullableStringFieldUpdateOperationsInput | string | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialApprovalUncheckedUpdateManyWithoutJobInput = {
    id?: StringFieldUpdateOperationsInput | string
    approvalType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    requestedById?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisionById?: NullableStringFieldUpdateOperationsInput | string | null
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    subjectReturnId?: NullableStringFieldUpdateOperationsInput | string | null
    subjectDamageId?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type StockBatchCreateManyMaterialInput = {
    id?: string
    vendorId?: string | null
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    receivedById?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RackStockLevelCreateManyMaterialInput = {
    id?: string
    rackId: string
    stockBatchId?: string | null
    quantity: number
    lastUpdated?: Date | string
    companyId: string
  }

  export type MaterialIssueCreateManyMaterialInput = {
    id?: string
    jobId: string
    stockBatchId?: string | null
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type MaterialReturnCreateManyMaterialInput = {
    id?: string
    jobId: string
    issueId?: string | null
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type MaterialDamageCreateManyMaterialInput = {
    id?: string
    returnId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
  }

  export type StockBatchUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vendor?: VendorUpdateOneWithoutStockBatchesNestedInput
    receivedBy?: UserUpdateOneWithoutStockBatchesReceivedNestedInput
    company?: CompanyUpdateOneRequiredWithoutStockBatchesNestedInput
    rackAllocations?: RackStockLevelUpdateManyWithoutStockBatchNestedInput
    issues?: MaterialIssueUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    receivedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rackAllocations?: RackStockLevelUncheckedUpdateManyWithoutStockBatchNestedInput
    issues?: MaterialIssueUncheckedUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateManyWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    vendorId?: NullableStringFieldUpdateOperationsInput | string | null
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    receivedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RackStockLevelUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    rack?: RackUpdateOneRequiredWithoutMaterialLevelsNestedInput
    stockBatch?: StockBatchUpdateOneWithoutRackAllocationsNestedInput
    company?: CompanyUpdateOneRequiredWithoutRackLevelsNestedInput
  }

  export type RackStockLevelUncheckedUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackStockLevelUncheckedUpdateManyWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialIssueUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialIssuesNestedInput
    stockBatch?: StockBatchUpdateOneWithoutIssuesNestedInput
    rack?: RackUpdateOneWithoutJobMaterialsNestedInput
    issuedBy?: UserUpdateOneWithoutMaterialIssuesCreatedNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialIssuesNestedInput
    returns?: MaterialReturnUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    returns?: MaterialReturnUncheckedUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateManyWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    stockBatchId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialReturnUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialReturnsNestedInput
    issue?: MaterialIssueUpdateOneWithoutReturnsNestedInput
    rack?: RackUpdateOneWithoutMaterialReturnNestedInput
    recordedBy?: UserUpdateOneWithoutMaterialReturnsRecordedNestedInput
    damages?: MaterialDamageUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectReturnNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialReturnsNestedInput
  }

  export type MaterialReturnUncheckedUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    damages?: MaterialDamageUncheckedUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectReturnNestedInput
  }

  export type MaterialReturnUncheckedUpdateManyWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    issueId?: NullableStringFieldUpdateOperationsInput | string | null
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialDamageUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    return?: MaterialReturnUpdateOneRequiredWithoutDamagesNestedInput
    recordedBy?: UserUpdateOneWithoutDamagesRecordedNestedInput
    approvedBy?: UserUpdateOneWithoutDamagesApprovedNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectDamageNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialDamagesNestedInput
  }

  export type MaterialDamageUncheckedUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectDamageNestedInput
  }

  export type MaterialDamageUncheckedUpdateManyWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    returnId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type StockBatchCreateManyVendorInput = {
    id?: string
    materialId: string
    vendorName?: string | null
    purchaseOrder?: string | null
    purchaseDate?: Date | string
    quantityPurchased: number
    quantityRemaining: number
    unitCost: number
    sellingPrice?: number | null
    receivedById?: string | null
    notes?: string | null
    companyId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StockBatchUpdateWithoutVendorInput = {
    id?: StringFieldUpdateOperationsInput | string
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: PackingMaterialUpdateOneRequiredWithoutStockBatchesNestedInput
    receivedBy?: UserUpdateOneWithoutStockBatchesReceivedNestedInput
    company?: CompanyUpdateOneRequiredWithoutStockBatchesNestedInput
    rackAllocations?: RackStockLevelUpdateManyWithoutStockBatchNestedInput
    issues?: MaterialIssueUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateWithoutVendorInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    receivedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rackAllocations?: RackStockLevelUncheckedUpdateManyWithoutStockBatchNestedInput
    issues?: MaterialIssueUncheckedUpdateManyWithoutStockBatchNestedInput
  }

  export type StockBatchUncheckedUpdateManyWithoutVendorInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    vendorName?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseOrder?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    quantityPurchased?: IntFieldUpdateOperationsInput | number
    quantityRemaining?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    sellingPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    receivedById?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RackStockLevelCreateManyStockBatchInput = {
    id?: string
    materialId: string
    rackId: string
    quantity: number
    lastUpdated?: Date | string
    companyId: string
  }

  export type MaterialIssueCreateManyStockBatchInput = {
    id?: string
    jobId: string
    materialId: string
    quantity: number
    unitCost: number
    totalCost: number
    rackId?: string | null
    issuedById?: string | null
    issuedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type RackStockLevelUpdateWithoutStockBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: PackingMaterialUpdateOneRequiredWithoutRackLevelsNestedInput
    rack?: RackUpdateOneRequiredWithoutMaterialLevelsNestedInput
    company?: CompanyUpdateOneRequiredWithoutRackLevelsNestedInput
  }

  export type RackStockLevelUncheckedUpdateWithoutStockBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type RackStockLevelUncheckedUpdateManyWithoutStockBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    rackId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialIssueUpdateWithoutStockBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialIssuesNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialIssuesNestedInput
    rack?: RackUpdateOneWithoutJobMaterialsNestedInput
    issuedBy?: UserUpdateOneWithoutMaterialIssuesCreatedNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialIssuesNestedInput
    returns?: MaterialReturnUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateWithoutStockBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    returns?: MaterialReturnUncheckedUpdateManyWithoutIssueNestedInput
  }

  export type MaterialIssueUncheckedUpdateManyWithoutStockBatchInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitCost?: FloatFieldUpdateOperationsInput | number
    totalCost?: FloatFieldUpdateOperationsInput | number
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    issuedById?: NullableStringFieldUpdateOperationsInput | string | null
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialReturnCreateManyIssueInput = {
    id?: string
    jobId: string
    materialId: string
    quantityIssued?: number | null
    quantityUsed?: number | null
    quantityGood?: number
    quantityDamaged?: number
    restocked?: boolean
    restockedAt?: Date | string | null
    rackId?: string | null
    recordedById?: string | null
    recordedAt?: Date | string
    notes?: string | null
    companyId: string
  }

  export type MaterialReturnUpdateWithoutIssueInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    job?: MovingJobUpdateOneRequiredWithoutMaterialReturnsNestedInput
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialReturnsNestedInput
    rack?: RackUpdateOneWithoutMaterialReturnNestedInput
    recordedBy?: UserUpdateOneWithoutMaterialReturnsRecordedNestedInput
    damages?: MaterialDamageUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectReturnNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialReturnsNestedInput
  }

  export type MaterialReturnUncheckedUpdateWithoutIssueInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    damages?: MaterialDamageUncheckedUpdateManyWithoutReturnNestedInput
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectReturnNestedInput
  }

  export type MaterialReturnUncheckedUpdateManyWithoutIssueInput = {
    id?: StringFieldUpdateOperationsInput | string
    jobId?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantityIssued?: NullableIntFieldUpdateOperationsInput | number | null
    quantityUsed?: NullableIntFieldUpdateOperationsInput | number | null
    quantityGood?: IntFieldUpdateOperationsInput | number
    quantityDamaged?: IntFieldUpdateOperationsInput | number
    restocked?: BoolFieldUpdateOperationsInput | boolean
    restockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rackId?: NullableStringFieldUpdateOperationsInput | string | null
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type MaterialDamageCreateManyReturnInput = {
    id?: string
    materialId: string
    quantity: number
    reason?: string | null
    photoUrls?: string | null
    status?: string
    recordedById?: string | null
    recordedAt?: Date | string
    approvedById?: string | null
    approvedAt?: Date | string | null
    approvalNotes?: string | null
    rejectionReason?: string | null
    companyId: string
  }

  export type MaterialDamageUpdateWithoutReturnInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    material?: PackingMaterialUpdateOneRequiredWithoutMaterialDamagesNestedInput
    recordedBy?: UserUpdateOneWithoutDamagesRecordedNestedInput
    approvedBy?: UserUpdateOneWithoutDamagesApprovedNestedInput
    approval?: MaterialApprovalUpdateOneWithoutSubjectDamageNestedInput
    company?: CompanyUpdateOneRequiredWithoutMaterialDamagesNestedInput
  }

  export type MaterialDamageUncheckedUpdateWithoutReturnInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
    approval?: MaterialApprovalUncheckedUpdateOneWithoutSubjectDamageNestedInput
  }

  export type MaterialDamageUncheckedUpdateManyWithoutReturnInput = {
    id?: StringFieldUpdateOperationsInput | string
    materialId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    recordedById?: NullableStringFieldUpdateOperationsInput | string | null
    recordedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedById?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type SystemPluginLogCreateManyPluginInput = {
    id?: string
    action: string
    status: string
    message?: string | null
    performedBy?: string | null
    createdAt?: Date | string
    companyId: string
  }

  export type SystemPluginLogUpdateWithoutPluginInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    company?: CompanyUpdateOneRequiredWithoutSystemPluginLogNestedInput
  }

  export type SystemPluginLogUncheckedUpdateWithoutPluginInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }

  export type SystemPluginLogUncheckedUpdateManyWithoutPluginInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyId?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CompanyCountOutputTypeDefaultArgs instead
     */
    export type CompanyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RackCountOutputTypeDefaultArgs instead
     */
    export type RackCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RackCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ShipmentCountOutputTypeDefaultArgs instead
     */
    export type ShipmentCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ShipmentCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BillingSettingsCountOutputTypeDefaultArgs instead
     */
    export type BillingSettingsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BillingSettingsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InvoiceCountOutputTypeDefaultArgs instead
     */
    export type InvoiceCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InvoiceCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomFieldCountOutputTypeDefaultArgs instead
     */
    export type CustomFieldCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomFieldCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PermissionCountOutputTypeDefaultArgs instead
     */
    export type PermissionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PermissionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MovingJobCountOutputTypeDefaultArgs instead
     */
    export type MovingJobCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MovingJobCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PackingMaterialCountOutputTypeDefaultArgs instead
     */
    export type PackingMaterialCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PackingMaterialCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VendorCountOutputTypeDefaultArgs instead
     */
    export type VendorCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VendorCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StockBatchCountOutputTypeDefaultArgs instead
     */
    export type StockBatchCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StockBatchCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MaterialIssueCountOutputTypeDefaultArgs instead
     */
    export type MaterialIssueCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MaterialIssueCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MaterialReturnCountOutputTypeDefaultArgs instead
     */
    export type MaterialReturnCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MaterialReturnCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SystemPluginCountOutputTypeDefaultArgs instead
     */
    export type SystemPluginCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SystemPluginCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompanyDefaultArgs instead
     */
    export type CompanyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RackDefaultArgs instead
     */
    export type RackArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RackDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RackInventoryDefaultArgs instead
     */
    export type RackInventoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RackInventoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RackActivityDefaultArgs instead
     */
    export type RackActivityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RackActivityDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ShipmentDefaultArgs instead
     */
    export type ShipmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ShipmentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ShipmentBoxDefaultArgs instead
     */
    export type ShipmentBoxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ShipmentBoxDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WithdrawalDefaultArgs instead
     */
    export type WithdrawalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WithdrawalDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ExpenseDefaultArgs instead
     */
    export type ExpenseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ExpenseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InvoiceSettingsDefaultArgs instead
     */
    export type InvoiceSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InvoiceSettingsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BillingSettingsDefaultArgs instead
     */
    export type BillingSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BillingSettingsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ChargeTypeDefaultArgs instead
     */
    export type ChargeTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ChargeTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InvoiceDefaultArgs instead
     */
    export type InvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InvoiceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InvoiceLineItemDefaultArgs instead
     */
    export type InvoiceLineItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InvoiceLineItemDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentDefaultArgs instead
     */
    export type PaymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ShipmentChargesDefaultArgs instead
     */
    export type ShipmentChargesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ShipmentChargesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomFieldDefaultArgs instead
     */
    export type CustomFieldArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomFieldDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomFieldValueDefaultArgs instead
     */
    export type CustomFieldValueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomFieldValueDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ShipmentSettingsDefaultArgs instead
     */
    export type ShipmentSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ShipmentSettingsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TemplateSettingsDefaultArgs instead
     */
    export type TemplateSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TemplateSettingsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PermissionDefaultArgs instead
     */
    export type PermissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PermissionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RolePermissionDefaultArgs instead
     */
    export type RolePermissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RolePermissionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MovingJobDefaultArgs instead
     */
    export type MovingJobArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MovingJobDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobAssignmentDefaultArgs instead
     */
    export type JobAssignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobAssignmentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PackingMaterialDefaultArgs instead
     */
    export type PackingMaterialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PackingMaterialDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VendorDefaultArgs instead
     */
    export type VendorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VendorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StockBatchDefaultArgs instead
     */
    export type StockBatchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StockBatchDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RackStockLevelDefaultArgs instead
     */
    export type RackStockLevelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RackStockLevelDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MaterialIssueDefaultArgs instead
     */
    export type MaterialIssueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MaterialIssueDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MaterialReturnDefaultArgs instead
     */
    export type MaterialReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MaterialReturnDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MaterialDamageDefaultArgs instead
     */
    export type MaterialDamageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MaterialDamageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MaterialApprovalDefaultArgs instead
     */
    export type MaterialApprovalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MaterialApprovalDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JobCostSnapshotDefaultArgs instead
     */
    export type JobCostSnapshotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JobCostSnapshotDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SystemPluginDefaultArgs instead
     */
    export type SystemPluginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SystemPluginDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SystemPluginLogDefaultArgs instead
     */
    export type SystemPluginLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SystemPluginLogDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}