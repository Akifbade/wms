version: '3.8'

services:
  # ============================================
  # STAGING ENVIRONMENT (Port 8080)
  # ============================================
  
  # Staging Database
  staging-database:
    image: mysql:8.0
    container_name: wms-staging-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: stagingroot
      MYSQL_DATABASE: warehouse_wms_staging
      MYSQL_USER: staging_user
      MYSQL_PASSWORD: stagingpass123
    ports:
      - "3308:3306"
    volumes:
      - staging_mysql_data:/var/lib/mysql
    networks:
      - staging-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Staging Backend
  staging-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wms-staging-backend
    restart: unless-stopped
    environment:
      NODE_ENV: staging
      DATABASE_URL: mysql://staging_user:stagingpass123@staging-database:3306/warehouse_wms_staging
      JWT_SECRET: staging-secret-key-change-me
      PORT: 5001
    ports:
      - "5001:5001"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./backend/prisma:/app/prisma
    depends_on:
      staging-database:
        condition: service_healthy
    networks:
      - staging-network
    command: sh -c "npx prisma generate && npx ts-node src/index.ts"

  # Staging Frontend
  staging-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: wms-staging-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./frontend/staging.nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - staging-backend
    networks:
      - staging-network

networks:
  staging-network:
    name: staging-network
    driver: bridge

volumes:
  staging_mysql_data:
    name: staging_mysql_data
