version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0-alpine
    container_name: qgo-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_DATABASE: ${DB_NAME:-qgo_cargo}
      MYSQL_USER: ${DB_USER:-qgo_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      start_period: 40s
    networks:
      - qgo-network
    restart: unless-stopped

  # Node.js Application (Backend + Frontend)
  app:
    build: .
    container_name: qgo-app
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DATABASE_URL: "mysql://${DB_USER:-qgo_user}:${DB_PASSWORD:-password}@mysql:3306/${DB_NAME:-qgo_cargo}"
      DB_HOST: mysql
      DB_PORT: "3306"
      DB_USER: ${DB_USER:-qgo_user}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: ${DB_NAME:-qgo_cargo}
      API_PORT: 5000
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      JWT_EXPIRY: 7d
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    ports:
      - "3000:3000"
      - "5000:5000"
    volumes:
      - app_data:/app/data
    networks:
      - qgo-network
    restart: unless-stopped

  # Adminer (Optional - for database management)
  adminer:
    image: adminer
    container_name: qgo-adminer
    depends_on:
      - mysql
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - qgo-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  app_data:
    driver: local

networks:
  qgo-network:
    driver: bridge
